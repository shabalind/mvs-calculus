  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
  } in
  struct s4 {
    var p0: [s1]
    var p1: [s1]
  } in
  struct s9 {
    var p0: s4
    var p1: [s0]
  } in
  let f75: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v4: Float = v3 in
    var v2: Float = v4 in
    var v7: Float = v3 in
    var v5: Float = v4 in
    var v9: Float = v4 in
    var v1: Float = v0 in
    var v8: Float = v9 in
    let v12: Float = v5 + v5 in
    let v13: [Float] = [v7, v5, v9, v8] in
    var v21: [Float] = v13 in
    v21[1] = v2 in
    v3 = v1 in
    v21[2] = v7 in
    v21[3] = v12 in
    var v15: Float = v5 in
    let v17: Float = v13[1] in
    var v23: [Float] = v13 in
    var v42: [Float] = v21 in
    v23[0] = v17 in
    let v32: Float = v13[0] in
    v23[3] = v15 in
    var v29: Float = v15 in
    let v50: Float = v13[0] in
    var v51: [Float] = v42 in
    let v35: [Float] = [v32, v50, v1, v5, v4, v1] in
    var v48: [Float] = v51 in
    var v56: [Float] = v35 in
    v42[3] = v1 in
    let v86: Float = v56[1] in
    v51[2] = v86 in
    v51 = v23 in
    let v59: Float = v48[0] in
    v42[3] = v29 in
    v59
  } in
  let f26: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v3: Float = v0 in
    let v5: Float = f75(v6) in
    let v8: Float = f75(v0) in
    let v1: Float = f75(v3) in
    let v4: Float = f75(v1) in
    var v7: Float = v6 in
    var v2: Float = v8 in
    var v9: Float = v2 in
    let v25: Float = f75(v5) in
    var v14: Float = v8 in
    let v15: Float = f75(v5) in
    let v11: Float = f75(v3) in
    let v21: Float = f75(v5) in
    var v13: Float = v21 in
    let v10: Float = f75(v8) in
    let v19: Float = f75(v9) in
    let v23: Float = f75(v0) in
    let v26: Float = f75(v11) in
    let v31: Float = f75(v26) in
    var v27: Float = v25 in
    let v33: [Float] = [v10, v19, v14, v31, v6, v5, v26] in
    var v40: [Float] = v33 in
    let v55: Float = v27 - v4 in
    let v38: Float = v33[6] in
    var v22: [Float] = v40 in
    v22[4] = v55 in
    var v56: [Float] = v22 in
    let v103: Float = v56[2] in
    v40[1] = v15 in
    let v91: Float = v22[4] in
    var v36: [Float] = v40 in
    var v57: Float = v23 in
    v22[2] = v55 in
    let v69: Float = f75(v11) in
    var v35: [Float] = v56 in
    let v45: Float = v36[5] in
    var v34: Float = v91 in
    v56[0] = v3 in
    let v47: [Float] = [v0, v57, v25] in
    v40[1] = v7 in
    var v68: [Float] = v47 in
    let v42: Float = f75(v69) in
    v68[2] = v31 in
    v68[0] = v13 in
    let v54: Float = v68[0] in
    v40[0] = v54 in
    v36[1] = v34 in
    let v134: Float = v45 / v103 in
    let v141: Float = f75(v15) in
    v36[1] = v141 in
    v40 = v35 in
    let v79: Float = f75(v42) in
    let v210: Float = f75(v134) in
    v68[0] = v23 in
    v68[2] = v79 in
    v36 = v35 in
    v36[6] = v38 in
    v210
  } in
  let noinline_f0: (s9, Float) -> Float = (v0: s9, v1: Float) -> Float {
    let v6: Float = f26(v1) in
    let v113: Float = f75(v6) in
    v113
  } in
  fun loop(i: Int, v0: s9, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9(s4([s1([s0([[0.0]], [[1.0], [2.0], [3.0]]), s0([[4.0]], [[5.0], [6.0], [7.0]]), s0([[8.0]], [[9.0], [10.0], [11.0]])], [[s0([[12.0]], [[13.0], [14.0], [15.0]])], [s0([[16.0]], [[17.0], [18.0], [19.0]])]]), s1([s0([[20.0]], [[21.0], [22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0], [27.0]]), s0([[28.0]], [[29.0], [30.0], [31.0]])], [[s0([[32.0]], [[33.0], [34.0], [35.0]])], [s0([[36.0]], [[37.0], [38.0], [39.0]])]])], [s1([s0([[40.0]], [[41.0], [42.0], [43.0]]), s0([[44.0]], [[45.0], [46.0], [47.0]]), s0([[48.0]], [[49.0], [50.0], [51.0]])], [[s0([[52.0]], [[53.0], [54.0], [55.0]])], [s0([[56.0]], [[57.0], [58.0], [59.0]])]]), s1([s0([[60.0]], [[61.0], [62.0], [63.0]]), s0([[64.0]], [[65.0], [66.0], [67.0]]), s0([[68.0]], [[69.0], [70.0], [71.0]])], [[s0([[72.0]], [[73.0], [74.0], [75.0]])], [s0([[76.0]], [[77.0], [78.0], [79.0]])]])]), [s0([[80.0]], [[81.0], [82.0], [83.0]]), s0([[84.0]], [[85.0], [86.0], [87.0]])]) in
    let v1: Float = 88.0 in
    let initialResult: Float = 88.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()