  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s4 {
    var p0: s1
    var p1: s0
  } in
  struct s6 {
    var p0: [Float]
    var p1: [s1]
  } in
  let f93: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v7: Float = v1 in
    var v3: Float = v7 in
    v1 = v7 in
    var v10: Float = v0 in
    var v4: Float = v10 in
    var v12: Float = v4 in
    var v9: Float = v3 in
    var v11: Float = v12 in
    let v28: [Float] = [v9, v11] in
    var v32: [Float] = v28 in
    v32[1] = v9 in
    let v73: Float = v32[0] in
    v73
  } in
  let f90: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    var v2: s0 = v7 in
    let v1: [[Float]] = v0.p0 in
    v2.p0 = v1 in
    let v21: [[Float]] = v7.p1 in
    v2.p1 = v21 in
    v2
  } in
  let f88: (s4) -> s4 = (v0: s4) -> s4 {
    var v5: s4 = v0 in
    let v3: s0 = v5.p1 in
    let v7: s0 = v5.p1 in
    let v17: s0 = f90(v3) in
    let v6: s0 = f90(v7) in
    v5.p1 = v3 in
    let v19: s1 = v5.p0 in
    let v10: s0 = f90(v6) in
    let v14: s0 = f90(v6) in
    v5.p1 = v17 in
    let v12: s4 = s4(v19, v6) in
    let v21: s0 = f90(v14) in
    let v13: s1 = v12.p0 in
    v5.p0 = v19 in
    let v18: s4 = s4(v13, v10) in
    v5.p1 = v21 in
    var v41: s4 = v18 in
    v5 = v41 in
    v18
  } in
  let f79: (s6) -> s6 = (v0: s6) -> s6 {
    let v7: [s1] = v0.p1 in
    let v4: [[s1]] = [v7, v7] in
    let v2: [s1] = v4[0] in
    let v5: s1 = v7[1] in
    var v11: s1 = v5 in
    var v6: s6 = v0 in
    let v3: s1 = v7[1] in
    v6.p1 = v2 in
    let v9: [s1] = v6.p1 in
    let v8: [s1] = v4[1] in
    var v12: [s1] = v8 in
    var v10: [[s1]] = v4 in
    v6.p1 = v8 in
    let v1: [s1] = v10[0] in
    v6.p1 = v8 in
    v6.p1 = v1 in
    let v30: s1 = v1[1] in
    let v20: [[s0]] = v11.p0 in
    let v36: [[s0]] = v5.p0 in
    v6.p1 = v1 in
    var v22: [[s0]] = v20 in
    var v17: s1 = v30 in
    v12[0] = v5 in
    let v18: s0 = v5.p1 in
    var v19: s1 = v17 in
    let v23: [s0] = v22[0] in
    let v24: [s6] = [v6, v0, v6, v0, v6, v0] in
    v17.p1 = v18 in
    v11.p1 = v18 in
    let v33: s0 = v23[0] in
    var v21: s6 = v0 in
    var v40: [[s0]] = v20 in
    let v16: s0 = f90(v33) in
    let v28: s6 = v24[0] in
    var v44: [s0] = v23 in
    v11 = v17 in
    v6 = v28 in
    let v73: s0 = f90(v33) in
    v44[0] = v18 in
    v19.p0 = v36 in
    let v35: s4 = s4(v11, v18) in
    let v34: s0 = f90(v73) in
    v40[0] = v44 in
    let v25: [s0] = v36[0] in
    let v47: s0 = f90(v33) in
    v40[0] = v25 in
    let v43: s0 = f90(v16) in
    let v50: s0 = f90(v47) in
    v21.p1 = v9 in
    let v61: s4 = f88(v35) in
    var v75: [s1] = v12 in
    let v31: s0 = f90(v43) in
    var v38: [s0] = v44 in
    let v55: s0 = v23[0] in
    var v37: [s0] = v23 in
    v75[0] = v3 in
    let v48: [[Float]] = v50.p0 in
    let v81: [s1] = v21.p1 in
    let v66: [Float] = v6.p0 in
    let v98: s0 = v25[0] in
    v12[0] = v19 in
    v10[0] = v75 in
    v38[0] = v34 in
    let v63: s1 = s1(v40, v18) in
    v22[0] = v38 in
    let v58: s0 = f90(v47) in
    v75[1] = v63 in
    let v49: s0 = f90(v58) in
    v75[1] = v3 in
    let v149: [Float] = v48[0] in
    v10[0] = v81 in
    v38[0] = v31 in
    let v46: [s1] = v4[1] in
    let v68: s0 = v19.p1 in
    v21.p1 = v2 in
    v17.p0 = v20 in
    v38[0] = v49 in
    v37[0] = v55 in
    v12 = v46 in
    v21.p1 = v2 in
    v75[1] = v63 in
    v19.p1 = v98 in
    let v207: s4 = f88(v61) in
    v21.p1 = v1 in
    let v106: s6 = s6(v149, v81) in
    v21.p1 = v81 in
    v37[0] = v68 in
    v6.p1 = v8 in
    v21.p0 = v66 in
    let v93: s1 = v207.p0 in
    v22[0] = v37 in
    v75[0] = v93 in
    v106
  } in
  let f70: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v3: [s1] = v0 in
    let v1: s1 = v0[0] in
    v3[1] = v1 in
    v3
  } in
  let f42: (s6) -> s6 = (v0: s6) -> s6 {
    let v2: [s1] = v0.p1 in
    let v3: [Float] = v0.p0 in
    let v7: s1 = v2[0] in
    var v4: s1 = v7 in
    var v1: s1 = v4 in
    var v12: s6 = v0 in
    var v5: [s1] = v2 in
    let v6: [s1] = v0.p1 in
    let v11: Float = v3[0] in
    let v31: [s1] = f70(v2) in
    var v15: [Float] = v3 in
    let v18: s1 = v6[0] in
    v5[0] = v1 in
    var v29: [Float] = v3 in
    v12.p0 = v15 in
    let v17: s6 = f79(v12) in
    v12.p1 = v5 in
    let v22: s6 = s6(v29, v2) in
    let v44: [Float] = v17.p0 in
    v15[0] = v11 in
    let v23: s0 = v4.p1 in
    let v30: [s1] = f70(v31) in
    let v34: [[Float]] = v23.p1 in
    var v52: s0 = v23 in
    v5[1] = v18 in
    v52.p1 = v34 in
    v29 = v44 in
    v12.p1 = v30 in
    v1.p1 = v52 in
    v52.p1 = v34 in
    v52.p1 = v34 in
    v22
  } in
  let f41: (s1) -> s1 = (v0: s1) -> s1 {
    v0
  } in
  let f35: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: s1 = f41(v0) in
    let v8: s1 = f41(v2) in
    let v9: s0 = v8.p1 in
    var v1: s0 = v9 in
    var v5: s0 = v1 in
    let v11: s4 = s4(v0, v5) in
    let v15: [[Float]] = v9.p1 in
    var v13: s4 = v11 in
    let v12: s1 = v13.p0 in
    var v17: [[Float]] = v15 in
    var v25: [[Float]] = v15 in
    let v36: [Float] = v17[0] in
    let v14: s1 = f41(v0) in
    v25[1] = v36 in
    let v20: [Float] = v25[2] in
    let v50: s0 = f90(v5) in
    v1.p1 = v15 in
    v1 = v9 in
    var v86: [[Float]] = v17 in
    v5.p1 = v17 in
    v86[0] = v20 in
    let v76: [[Float]] = v50.p0 in
    var v112: [[Float]] = v76 in
    v13.p0 = v14 in
    let v152: s1 = f41(v12) in
    let v97: s0 = s0(v76, v86) in
    v86[1] = v36 in
    v1.p0 = v112 in
    let v72: s1 = f41(v152) in
    let v343: s1 = f41(v72) in
    v13.p1 = v97 in
    v13.p0 = v2 in
    v343
  } in
  let f24: (s6) -> s6 = (v0: s6) -> s6 {
    let v6: [s6] = [v0, v0, v0, v0, v0, v0, v0] in
    let v5: [s1] = v0.p1 in
    let v7: s6 = v6[4] in
    let v2: s1 = v5[1] in
    let v8: s1 = f41(v2) in
    var v15: [s1] = v5 in
    let v18: s6 = f42(v7) in
    let v36: s1 = f41(v8) in
    v15[0] = v36 in
    let v60: [Float] = v18.p0 in
    let v37: s6 = f42(v18) in
    var v68: s6 = v37 in
    v68.p1 = v15 in
    v15[0] = v2 in
    v68.p0 = v60 in
    v68
  } in
  let noinline_f0: ([[s6]], [s6], Float) -> Float = (v0: [[s6]], v1: [s6], v2: Float) -> Float {
    let v9: s6 = v1[0] in
    let v3: s6 = f79(v9) in
    let v4: s6 = f79(v3) in
    let v13: [Float] = v9.p0 in
    var v35: s6 = v3 in
    v35.p0 = v13 in
    let v42: [s1] = v35.p1 in
    v35.p0 = v13 in
    let v53: s6 = f24(v4) in
    let v45: s1 = v42[0] in
    let v33: [s1] = v53.p1 in
    let v29: s6 = f79(v35) in
    let v51: Float = v13[0] in
    let v24: s6 = f79(v29) in
    var v40: [s1] = v33 in
    let v52: Float = f93(v51) in
    let v32: s1 = f35(v45) in
    let v46: Float = v13[0] in
    v35.p0 = v13 in
    let v59: [s1] = v9.p1 in
    var v49: [Float] = v13 in
    v49[0] = v46 in
    v49[0] = v52 in
    v35.p1 = v40 in
    var v123: s1 = v45 in
    v35.p0 = v49 in
    let v100: [[s0]] = v32.p0 in
    let v79: [Float] = v24.p0 in
    var v73: [[s0]] = v100 in
    v35.p0 = v13 in
    v123.p0 = v73 in
    let v194: s0 = v123.p1 in
    v35.p1 = v59 in
    let v216: s0 = f90(v194) in
    let v121: Float = v79[0] in
    v40[0] = v123 in
    let v291: s0 = f90(v216) in
    v123.p1 = v291 in
    v121
  } in
  fun loop(i: Int, v0: [[s6]], v1: [s6], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s6]] = [[s6([0.0], [s1([[s0([[1.0]], [[2.0], [3.0], [4.0]])]], s0([[5.0]], [[6.0], [7.0], [8.0]])), s1([[s0([[9.0]], [[10.0], [11.0], [12.0]])]], s0([[13.0]], [[14.0], [15.0], [16.0]]))])], [s6([17.0], [s1([[s0([[18.0]], [[19.0], [20.0], [21.0]])]], s0([[22.0]], [[23.0], [24.0], [25.0]])), s1([[s0([[26.0]], [[27.0], [28.0], [29.0]])]], s0([[30.0]], [[31.0], [32.0], [33.0]]))])]] in
    let v1: [s6] = [s6([34.0], [s1([[s0([[35.0]], [[36.0], [37.0], [38.0]])]], s0([[39.0]], [[40.0], [41.0], [42.0]])), s1([[s0([[43.0]], [[44.0], [45.0], [46.0]])]], s0([[47.0]], [[48.0], [49.0], [50.0]]))])] in
    let v2: Float = 51.0 in
    let initialResult: Float = 51.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()