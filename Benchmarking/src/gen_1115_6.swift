  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
    var p2: [[Double]]
  }
  struct s1 {
    var p0: s0
    var p1: [[s0]]
    var p2: [s0]
    var p3: [s0]
    var p4: [s0]
    var p5: s0
    var p6: [s0]
  }
  struct s3 {
    var p0: [[s1]]
    var p1: [[s1]]
  }
  struct s4 {
    var p0: s0
    var p1: s1
  }
  @inline(never)
  func f0(_ v0: [[s3]], _ v1: s4, _ v2: s3, _ v3: Double) -> Double {
    let v4: s1 = v1.p1
    var v6: s1 = v4
    let v11: [s0] = v6.p4
    v6.p4 = v11
    var v21: [s0] = v11
    var v44: [s0] = v11
    let v29: s0 = v44[0]
    let v38: s0 = v21[1]
    let v92: s0 = v44[0]
    var v69: [s0] = v21
    v6.p3 = v11
    let v91: s0 = v69[1]
    let v75: [[Double]] = v38.p1
    var v120: [[Double]] = v75
    let v107: [Double] = v120[1]
    v69[0] = v92
    v21[0] = v91
    v69[0] = v29
    let v263: Double = v107[0]
    return v263
  }
  func benchmark() {
    let v0: [[s3]] = [[s3(p0: [[s1(p0: s0(p0: [[0.0]], p1: [[1.0], [2.0]], p2: [[3.0]]), p1: [[s0(p0: [[4.0]], p1: [[5.0], [6.0]], p2: [[7.0]])]], p2: [s0(p0: [[8.0]], p1: [[9.0], [10.0]], p2: [[11.0]])], p3: [s0(p0: [[12.0]], p1: [[13.0], [14.0]], p2: [[15.0]]), s0(p0: [[16.0]], p1: [[17.0], [18.0]], p2: [[19.0]])], p4: [s0(p0: [[20.0]], p1: [[21.0], [22.0]], p2: [[23.0]]), s0(p0: [[24.0]], p1: [[25.0], [26.0]], p2: [[27.0]])], p5: s0(p0: [[28.0]], p1: [[29.0], [30.0]], p2: [[31.0]]), p6: [s0(p0: [[32.0]], p1: [[33.0], [34.0]], p2: [[35.0]]), s0(p0: [[36.0]], p1: [[37.0], [38.0]], p2: [[39.0]]), s0(p0: [[40.0]], p1: [[41.0], [42.0]], p2: [[43.0]])])]], p1: [[s1(p0: s0(p0: [[44.0]], p1: [[45.0], [46.0]], p2: [[47.0]]), p1: [[s0(p0: [[48.0]], p1: [[49.0], [50.0]], p2: [[51.0]])]], p2: [s0(p0: [[52.0]], p1: [[53.0], [54.0]], p2: [[55.0]])], p3: [s0(p0: [[56.0]], p1: [[57.0], [58.0]], p2: [[59.0]]), s0(p0: [[60.0]], p1: [[61.0], [62.0]], p2: [[63.0]])], p4: [s0(p0: [[64.0]], p1: [[65.0], [66.0]], p2: [[67.0]]), s0(p0: [[68.0]], p1: [[69.0], [70.0]], p2: [[71.0]])], p5: s0(p0: [[72.0]], p1: [[73.0], [74.0]], p2: [[75.0]]), p6: [s0(p0: [[76.0]], p1: [[77.0], [78.0]], p2: [[79.0]]), s0(p0: [[80.0]], p1: [[81.0], [82.0]], p2: [[83.0]]), s0(p0: [[84.0]], p1: [[85.0], [86.0]], p2: [[87.0]])])], [s1(p0: s0(p0: [[88.0]], p1: [[89.0], [90.0]], p2: [[91.0]]), p1: [[s0(p0: [[92.0]], p1: [[93.0], [94.0]], p2: [[95.0]])]], p2: [s0(p0: [[96.0]], p1: [[97.0], [98.0]], p2: [[99.0]])], p3: [s0(p0: [[100.0]], p1: [[101.0], [102.0]], p2: [[103.0]]), s0(p0: [[104.0]], p1: [[105.0], [106.0]], p2: [[107.0]])], p4: [s0(p0: [[108.0]], p1: [[109.0], [110.0]], p2: [[111.0]]), s0(p0: [[112.0]], p1: [[113.0], [114.0]], p2: [[115.0]])], p5: s0(p0: [[116.0]], p1: [[117.0], [118.0]], p2: [[119.0]]), p6: [s0(p0: [[120.0]], p1: [[121.0], [122.0]], p2: [[123.0]]), s0(p0: [[124.0]], p1: [[125.0], [126.0]], p2: [[127.0]]), s0(p0: [[128.0]], p1: [[129.0], [130.0]], p2: [[131.0]])])]])], [s3(p0: [[s1(p0: s0(p0: [[132.0]], p1: [[133.0], [134.0]], p2: [[135.0]]), p1: [[s0(p0: [[136.0]], p1: [[137.0], [138.0]], p2: [[139.0]])]], p2: [s0(p0: [[140.0]], p1: [[141.0], [142.0]], p2: [[143.0]])], p3: [s0(p0: [[144.0]], p1: [[145.0], [146.0]], p2: [[147.0]]), s0(p0: [[148.0]], p1: [[149.0], [150.0]], p2: [[151.0]])], p4: [s0(p0: [[152.0]], p1: [[153.0], [154.0]], p2: [[155.0]]), s0(p0: [[156.0]], p1: [[157.0], [158.0]], p2: [[159.0]])], p5: s0(p0: [[160.0]], p1: [[161.0], [162.0]], p2: [[163.0]]), p6: [s0(p0: [[164.0]], p1: [[165.0], [166.0]], p2: [[167.0]]), s0(p0: [[168.0]], p1: [[169.0], [170.0]], p2: [[171.0]]), s0(p0: [[172.0]], p1: [[173.0], [174.0]], p2: [[175.0]])])]], p1: [[s1(p0: s0(p0: [[176.0]], p1: [[177.0], [178.0]], p2: [[179.0]]), p1: [[s0(p0: [[180.0]], p1: [[181.0], [182.0]], p2: [[183.0]])]], p2: [s0(p0: [[184.0]], p1: [[185.0], [186.0]], p2: [[187.0]])], p3: [s0(p0: [[188.0]], p1: [[189.0], [190.0]], p2: [[191.0]]), s0(p0: [[192.0]], p1: [[193.0], [194.0]], p2: [[195.0]])], p4: [s0(p0: [[196.0]], p1: [[197.0], [198.0]], p2: [[199.0]]), s0(p0: [[200.0]], p1: [[201.0], [202.0]], p2: [[203.0]])], p5: s0(p0: [[204.0]], p1: [[205.0], [206.0]], p2: [[207.0]]), p6: [s0(p0: [[208.0]], p1: [[209.0], [210.0]], p2: [[211.0]]), s0(p0: [[212.0]], p1: [[213.0], [214.0]], p2: [[215.0]]), s0(p0: [[216.0]], p1: [[217.0], [218.0]], p2: [[219.0]])])], [s1(p0: s0(p0: [[220.0]], p1: [[221.0], [222.0]], p2: [[223.0]]), p1: [[s0(p0: [[224.0]], p1: [[225.0], [226.0]], p2: [[227.0]])]], p2: [s0(p0: [[228.0]], p1: [[229.0], [230.0]], p2: [[231.0]])], p3: [s0(p0: [[232.0]], p1: [[233.0], [234.0]], p2: [[235.0]]), s0(p0: [[236.0]], p1: [[237.0], [238.0]], p2: [[239.0]])], p4: [s0(p0: [[240.0]], p1: [[241.0], [242.0]], p2: [[243.0]]), s0(p0: [[244.0]], p1: [[245.0], [246.0]], p2: [[247.0]])], p5: s0(p0: [[248.0]], p1: [[249.0], [250.0]], p2: [[251.0]]), p6: [s0(p0: [[252.0]], p1: [[253.0], [254.0]], p2: [[255.0]]), s0(p0: [[256.0]], p1: [[257.0], [258.0]], p2: [[259.0]]), s0(p0: [[260.0]], p1: [[261.0], [262.0]], p2: [[263.0]])])]])]]
    let v1: s4 = s4(p0: s0(p0: [[264.0]], p1: [[265.0], [266.0]], p2: [[267.0]]), p1: s1(p0: s0(p0: [[268.0]], p1: [[269.0], [270.0]], p2: [[271.0]]), p1: [[s0(p0: [[272.0]], p1: [[273.0], [274.0]], p2: [[275.0]])]], p2: [s0(p0: [[276.0]], p1: [[277.0], [278.0]], p2: [[279.0]])], p3: [s0(p0: [[280.0]], p1: [[281.0], [282.0]], p2: [[283.0]]), s0(p0: [[284.0]], p1: [[285.0], [286.0]], p2: [[287.0]])], p4: [s0(p0: [[288.0]], p1: [[289.0], [290.0]], p2: [[291.0]]), s0(p0: [[292.0]], p1: [[293.0], [294.0]], p2: [[295.0]])], p5: s0(p0: [[296.0]], p1: [[297.0], [298.0]], p2: [[299.0]]), p6: [s0(p0: [[300.0]], p1: [[301.0], [302.0]], p2: [[303.0]]), s0(p0: [[304.0]], p1: [[305.0], [306.0]], p2: [[307.0]]), s0(p0: [[308.0]], p1: [[309.0], [310.0]], p2: [[311.0]])]))
    let v2: s3 = s3(p0: [[s1(p0: s0(p0: [[312.0]], p1: [[313.0], [314.0]], p2: [[315.0]]), p1: [[s0(p0: [[316.0]], p1: [[317.0], [318.0]], p2: [[319.0]])]], p2: [s0(p0: [[320.0]], p1: [[321.0], [322.0]], p2: [[323.0]])], p3: [s0(p0: [[324.0]], p1: [[325.0], [326.0]], p2: [[327.0]]), s0(p0: [[328.0]], p1: [[329.0], [330.0]], p2: [[331.0]])], p4: [s0(p0: [[332.0]], p1: [[333.0], [334.0]], p2: [[335.0]]), s0(p0: [[336.0]], p1: [[337.0], [338.0]], p2: [[339.0]])], p5: s0(p0: [[340.0]], p1: [[341.0], [342.0]], p2: [[343.0]]), p6: [s0(p0: [[344.0]], p1: [[345.0], [346.0]], p2: [[347.0]]), s0(p0: [[348.0]], p1: [[349.0], [350.0]], p2: [[351.0]]), s0(p0: [[352.0]], p1: [[353.0], [354.0]], p2: [[355.0]])])]], p1: [[s1(p0: s0(p0: [[356.0]], p1: [[357.0], [358.0]], p2: [[359.0]]), p1: [[s0(p0: [[360.0]], p1: [[361.0], [362.0]], p2: [[363.0]])]], p2: [s0(p0: [[364.0]], p1: [[365.0], [366.0]], p2: [[367.0]])], p3: [s0(p0: [[368.0]], p1: [[369.0], [370.0]], p2: [[371.0]]), s0(p0: [[372.0]], p1: [[373.0], [374.0]], p2: [[375.0]])], p4: [s0(p0: [[376.0]], p1: [[377.0], [378.0]], p2: [[379.0]]), s0(p0: [[380.0]], p1: [[381.0], [382.0]], p2: [[383.0]])], p5: s0(p0: [[384.0]], p1: [[385.0], [386.0]], p2: [[387.0]]), p6: [s0(p0: [[388.0]], p1: [[389.0], [390.0]], p2: [[391.0]]), s0(p0: [[392.0]], p1: [[393.0], [394.0]], p2: [[395.0]]), s0(p0: [[396.0]], p1: [[397.0], [398.0]], p2: [[399.0]])])], [s1(p0: s0(p0: [[400.0]], p1: [[401.0], [402.0]], p2: [[403.0]]), p1: [[s0(p0: [[404.0]], p1: [[405.0], [406.0]], p2: [[407.0]])]], p2: [s0(p0: [[408.0]], p1: [[409.0], [410.0]], p2: [[411.0]])], p3: [s0(p0: [[412.0]], p1: [[413.0], [414.0]], p2: [[415.0]]), s0(p0: [[416.0]], p1: [[417.0], [418.0]], p2: [[419.0]])], p4: [s0(p0: [[420.0]], p1: [[421.0], [422.0]], p2: [[423.0]]), s0(p0: [[424.0]], p1: [[425.0], [426.0]], p2: [[427.0]])], p5: s0(p0: [[428.0]], p1: [[429.0], [430.0]], p2: [[431.0]]), p6: [s0(p0: [[432.0]], p1: [[433.0], [434.0]], p2: [[435.0]]), s0(p0: [[436.0]], p1: [[437.0], [438.0]], p2: [[439.0]]), s0(p0: [[440.0]], p1: [[441.0], [442.0]], p2: [[443.0]])])]])
    let v3: Double = 444.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 444.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
