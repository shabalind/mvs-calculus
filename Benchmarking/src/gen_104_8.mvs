  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
    var p2: [[s0]]
    var p3: s0
    var p4: [s0]
  } in
  struct s6 {
    var p0: [s1]
    var p1: s1
  } in
  struct s9 {
    var p0: s6
    var p1: s0
  } in
  let f35: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    var v1: Float = v0 in
    let v6: Float = v2 - v0 in
    var v8: Float = v0 in
    var v5: Float = v6 in
    var v13: Float = v1 in
    let v7: [Float] = [v13, v0, v5] in
    var v10: [Float] = v7 in
    var v22: Float = v0 in
    v10[0] = v5 in
    var v14: [Float] = v10 in
    v10[0] = v0 in
    v10[1] = v13 in
    v14[2] = v2 in
    v10[0] = v8 in
    v14 = v7 in
    v10[2] = v22 in
    v10[1] = v5 in
    var v17: [Float] = v7 in
    let v31: Float = v14[1] in
    let v36: Float = v17[2] in
    var v58: [Float] = v7 in
    v2 = v0 in
    let v23: Float = v58[1] in
    let v26: Float = v5 * v23 in
    v13 = v36 in
    v58[1] = v31 in
    v26
  } in
  let noinline_f0: (s9, Float) -> Float = (v0: s9, v1: Float) -> Float {
    var v7: s9 = v0 in
    let v5: [s9] = [v7, v7, v0, v7, v0, v0, v7] in
    let v9: s9 = v5[1] in
    let v3: s0 = v7.p1 in
    let v8: [[Float]] = v3.p0 in
    let v14: Float = f35(v1) in
    let v10: [[s9]] = [v5] in
    let v21: Float = f35(v14) in
    let v13: [s9] = v10[0] in
    let v11: s6 = v7.p0 in
    var v17: [s9] = v5 in
    v7.p1 = v3 in
    v17 = v13 in
    v17[0] = v9 in
    let v16: s9 = v17[0] in
    let v26: s6 = v16.p0 in
    let v25: Float = f35(v21) in
    v7.p0 = v26 in
    let v35: [Float] = v8[1] in
    let v42: Float = v35[0] in
    let v24: s9 = v5[2] in
    let v18: Float = f35(v42) in
    let v49: s1 = v11.p1 in
    let v33: s9 = v5[1] in
    var v82: [s9] = v5 in
    let v44: s9 = v13[6] in
    let v57: Float = v25 * v18 in
    let v40: s9 = v82[1] in
    let v47: s0 = v40.p1 in
    let v43: Float = f35(v57) in
    v17[6] = v24 in
    var v38: s9 = v44 in
    let v70: s6 = v44.p0 in
    v38.p0 = v11 in
    v7.p0 = v70 in
    v82[5] = v33 in
    v17[3] = v38 in
    var v131: s1 = v49 in
    var v91: s9 = v7 in
    v82[4] = v91 in
    let v125: s0 = v49.p3 in
    v91.p1 = v47 in
    v38.p1 = v125 in
    let v176: [s0] = v131.p0 in
    v91.p0 = v11 in
    v17[5] = v91 in
    let v207: s0 = v176[0] in
    v7.p1 = v207 in
    let v150: Float = f35(v43) in
    v131.p4 = v176 in
    v150
  } in
  fun loop(i: Int, v0: s9, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9(s6([s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])], s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), [[s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]], s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), [s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])]), s1([s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]]), s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])], s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]]), [[s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]])]], s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), [s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]]), s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])]), s1([s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]]), s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]])], s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]]), [[s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]])]], s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]]), [s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]])])], s1([s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]]), s0([[132.0], [133.0], [134.0]], [[135.0], [136.0], [137.0]])], s0([[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]]), [[s0([[144.0], [145.0], [146.0]], [[147.0], [148.0], [149.0]])]], s0([[150.0], [151.0], [152.0]], [[153.0], [154.0], [155.0]]), [s0([[156.0], [157.0], [158.0]], [[159.0], [160.0], [161.0]]), s0([[162.0], [163.0], [164.0]], [[165.0], [166.0], [167.0]])])), s0([[168.0], [169.0], [170.0]], [[171.0], [172.0], [173.0]])) in
    let v1: Float = 174.0 in
    let initialResult: Float = 174.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()