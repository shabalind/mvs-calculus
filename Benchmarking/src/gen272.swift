  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
    var p2: [[Double]]
    var p3: [[Double]]
    var p4: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  }
  struct s2 {
    var p0: s1
    var p1: s0
  }
  struct s4 {
    var p0: [s2]
    var p1: s1
  }
  @inline(never)
  func f0(_ v0: s2, _ v1: [s2], _ v2: [[s4]], _ v3: [s1], _ v4: s2, _ v5: Double) -> Double {
    let v7: s1 = v4.p0
    let v6: [s0] = v7.p0
    let v8: s0 = v6[1]
    var v13: s0 = v8
    let v10: [[Double]] = v8.p0
    let v12: [[Double]] = v13.p4
    v13.p0 = v10
    v13.p4 = v12
    let v19: [[Double]] = v13.p2
    let v35: [Double] = v12[0]
    var v57: [[Double]] = v19
    let v31: [[Double]] = v8.p3
    var v32: [[Double]] = v57
    let v42: [[Double]] = v13.p0
    v13.p4 = v32
    v57 = v42
    let v214: Double = v35[0]
    v13.p3 = v31
    v13.p4 = v57
    return v214
  }
  func benchmark() {
    let v0: s2 = s2(p0: s1(p0: [s0(p0: [[0.0]], p1: [[1.0], [2.0]], p2: [[3.0]], p3: [[4.0], [5.0]], p4: [[6.0]]), s0(p0: [[7.0]], p1: [[8.0], [9.0]], p2: [[10.0]], p3: [[11.0], [12.0]], p4: [[13.0]])], p1: [s0(p0: [[14.0]], p1: [[15.0], [16.0]], p2: [[17.0]], p3: [[18.0], [19.0]], p4: [[20.0]]), s0(p0: [[21.0]], p1: [[22.0], [23.0]], p2: [[24.0]], p3: [[25.0], [26.0]], p4: [[27.0]])]), p1: s0(p0: [[28.0]], p1: [[29.0], [30.0]], p2: [[31.0]], p3: [[32.0], [33.0]], p4: [[34.0]]))
    let v1: [s2] = [s2(p0: s1(p0: [s0(p0: [[35.0]], p1: [[36.0], [37.0]], p2: [[38.0]], p3: [[39.0], [40.0]], p4: [[41.0]]), s0(p0: [[42.0]], p1: [[43.0], [44.0]], p2: [[45.0]], p3: [[46.0], [47.0]], p4: [[48.0]])], p1: [s0(p0: [[49.0]], p1: [[50.0], [51.0]], p2: [[52.0]], p3: [[53.0], [54.0]], p4: [[55.0]]), s0(p0: [[56.0]], p1: [[57.0], [58.0]], p2: [[59.0]], p3: [[60.0], [61.0]], p4: [[62.0]])]), p1: s0(p0: [[63.0]], p1: [[64.0], [65.0]], p2: [[66.0]], p3: [[67.0], [68.0]], p4: [[69.0]])), s2(p0: s1(p0: [s0(p0: [[70.0]], p1: [[71.0], [72.0]], p2: [[73.0]], p3: [[74.0], [75.0]], p4: [[76.0]]), s0(p0: [[77.0]], p1: [[78.0], [79.0]], p2: [[80.0]], p3: [[81.0], [82.0]], p4: [[83.0]])], p1: [s0(p0: [[84.0]], p1: [[85.0], [86.0]], p2: [[87.0]], p3: [[88.0], [89.0]], p4: [[90.0]]), s0(p0: [[91.0]], p1: [[92.0], [93.0]], p2: [[94.0]], p3: [[95.0], [96.0]], p4: [[97.0]])]), p1: s0(p0: [[98.0]], p1: [[99.0], [100.0]], p2: [[101.0]], p3: [[102.0], [103.0]], p4: [[104.0]])), s2(p0: s1(p0: [s0(p0: [[105.0]], p1: [[106.0], [107.0]], p2: [[108.0]], p3: [[109.0], [110.0]], p4: [[111.0]]), s0(p0: [[112.0]], p1: [[113.0], [114.0]], p2: [[115.0]], p3: [[116.0], [117.0]], p4: [[118.0]])], p1: [s0(p0: [[119.0]], p1: [[120.0], [121.0]], p2: [[122.0]], p3: [[123.0], [124.0]], p4: [[125.0]]), s0(p0: [[126.0]], p1: [[127.0], [128.0]], p2: [[129.0]], p3: [[130.0], [131.0]], p4: [[132.0]])]), p1: s0(p0: [[133.0]], p1: [[134.0], [135.0]], p2: [[136.0]], p3: [[137.0], [138.0]], p4: [[139.0]]))]
    let v2: [[s4]] = [[s4(p0: [s2(p0: s1(p0: [s0(p0: [[140.0]], p1: [[141.0], [142.0]], p2: [[143.0]], p3: [[144.0], [145.0]], p4: [[146.0]]), s0(p0: [[147.0]], p1: [[148.0], [149.0]], p2: [[150.0]], p3: [[151.0], [152.0]], p4: [[153.0]])], p1: [s0(p0: [[154.0]], p1: [[155.0], [156.0]], p2: [[157.0]], p3: [[158.0], [159.0]], p4: [[160.0]]), s0(p0: [[161.0]], p1: [[162.0], [163.0]], p2: [[164.0]], p3: [[165.0], [166.0]], p4: [[167.0]])]), p1: s0(p0: [[168.0]], p1: [[169.0], [170.0]], p2: [[171.0]], p3: [[172.0], [173.0]], p4: [[174.0]])), s2(p0: s1(p0: [s0(p0: [[175.0]], p1: [[176.0], [177.0]], p2: [[178.0]], p3: [[179.0], [180.0]], p4: [[181.0]]), s0(p0: [[182.0]], p1: [[183.0], [184.0]], p2: [[185.0]], p3: [[186.0], [187.0]], p4: [[188.0]])], p1: [s0(p0: [[189.0]], p1: [[190.0], [191.0]], p2: [[192.0]], p3: [[193.0], [194.0]], p4: [[195.0]]), s0(p0: [[196.0]], p1: [[197.0], [198.0]], p2: [[199.0]], p3: [[200.0], [201.0]], p4: [[202.0]])]), p1: s0(p0: [[203.0]], p1: [[204.0], [205.0]], p2: [[206.0]], p3: [[207.0], [208.0]], p4: [[209.0]]))], p1: s1(p0: [s0(p0: [[210.0]], p1: [[211.0], [212.0]], p2: [[213.0]], p3: [[214.0], [215.0]], p4: [[216.0]]), s0(p0: [[217.0]], p1: [[218.0], [219.0]], p2: [[220.0]], p3: [[221.0], [222.0]], p4: [[223.0]])], p1: [s0(p0: [[224.0]], p1: [[225.0], [226.0]], p2: [[227.0]], p3: [[228.0], [229.0]], p4: [[230.0]]), s0(p0: [[231.0]], p1: [[232.0], [233.0]], p2: [[234.0]], p3: [[235.0], [236.0]], p4: [[237.0]])]))], [s4(p0: [s2(p0: s1(p0: [s0(p0: [[238.0]], p1: [[239.0], [240.0]], p2: [[241.0]], p3: [[242.0], [243.0]], p4: [[244.0]]), s0(p0: [[245.0]], p1: [[246.0], [247.0]], p2: [[248.0]], p3: [[249.0], [250.0]], p4: [[251.0]])], p1: [s0(p0: [[252.0]], p1: [[253.0], [254.0]], p2: [[255.0]], p3: [[256.0], [257.0]], p4: [[258.0]]), s0(p0: [[259.0]], p1: [[260.0], [261.0]], p2: [[262.0]], p3: [[263.0], [264.0]], p4: [[265.0]])]), p1: s0(p0: [[266.0]], p1: [[267.0], [268.0]], p2: [[269.0]], p3: [[270.0], [271.0]], p4: [[272.0]])), s2(p0: s1(p0: [s0(p0: [[273.0]], p1: [[274.0], [275.0]], p2: [[276.0]], p3: [[277.0], [278.0]], p4: [[279.0]]), s0(p0: [[280.0]], p1: [[281.0], [282.0]], p2: [[283.0]], p3: [[284.0], [285.0]], p4: [[286.0]])], p1: [s0(p0: [[287.0]], p1: [[288.0], [289.0]], p2: [[290.0]], p3: [[291.0], [292.0]], p4: [[293.0]]), s0(p0: [[294.0]], p1: [[295.0], [296.0]], p2: [[297.0]], p3: [[298.0], [299.0]], p4: [[300.0]])]), p1: s0(p0: [[301.0]], p1: [[302.0], [303.0]], p2: [[304.0]], p3: [[305.0], [306.0]], p4: [[307.0]]))], p1: s1(p0: [s0(p0: [[308.0]], p1: [[309.0], [310.0]], p2: [[311.0]], p3: [[312.0], [313.0]], p4: [[314.0]]), s0(p0: [[315.0]], p1: [[316.0], [317.0]], p2: [[318.0]], p3: [[319.0], [320.0]], p4: [[321.0]])], p1: [s0(p0: [[322.0]], p1: [[323.0], [324.0]], p2: [[325.0]], p3: [[326.0], [327.0]], p4: [[328.0]]), s0(p0: [[329.0]], p1: [[330.0], [331.0]], p2: [[332.0]], p3: [[333.0], [334.0]], p4: [[335.0]])]))]]
    let v3: [s1] = [s1(p0: [s0(p0: [[336.0]], p1: [[337.0], [338.0]], p2: [[339.0]], p3: [[340.0], [341.0]], p4: [[342.0]]), s0(p0: [[343.0]], p1: [[344.0], [345.0]], p2: [[346.0]], p3: [[347.0], [348.0]], p4: [[349.0]])], p1: [s0(p0: [[350.0]], p1: [[351.0], [352.0]], p2: [[353.0]], p3: [[354.0], [355.0]], p4: [[356.0]]), s0(p0: [[357.0]], p1: [[358.0], [359.0]], p2: [[360.0]], p3: [[361.0], [362.0]], p4: [[363.0]])]), s1(p0: [s0(p0: [[364.0]], p1: [[365.0], [366.0]], p2: [[367.0]], p3: [[368.0], [369.0]], p4: [[370.0]]), s0(p0: [[371.0]], p1: [[372.0], [373.0]], p2: [[374.0]], p3: [[375.0], [376.0]], p4: [[377.0]])], p1: [s0(p0: [[378.0]], p1: [[379.0], [380.0]], p2: [[381.0]], p3: [[382.0], [383.0]], p4: [[384.0]]), s0(p0: [[385.0]], p1: [[386.0], [387.0]], p2: [[388.0]], p3: [[389.0], [390.0]], p4: [[391.0]])])]
    let v4: s2 = s2(p0: s1(p0: [s0(p0: [[392.0]], p1: [[393.0], [394.0]], p2: [[395.0]], p3: [[396.0], [397.0]], p4: [[398.0]]), s0(p0: [[399.0]], p1: [[400.0], [401.0]], p2: [[402.0]], p3: [[403.0], [404.0]], p4: [[405.0]])], p1: [s0(p0: [[406.0]], p1: [[407.0], [408.0]], p2: [[409.0]], p3: [[410.0], [411.0]], p4: [[412.0]]), s0(p0: [[413.0]], p1: [[414.0], [415.0]], p2: [[416.0]], p3: [[417.0], [418.0]], p4: [[419.0]])]), p1: s0(p0: [[420.0]], p1: [[421.0], [422.0]], p2: [[423.0]], p3: [[424.0], [425.0]], p4: [[426.0]]))
    let v5: Double = 427.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 427.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3, v4, v5)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
