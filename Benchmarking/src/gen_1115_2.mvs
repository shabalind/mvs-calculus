  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
    var p2: [s0]
  } in
  let f40: (s0) -> s0 = (v0: s0) -> s0 {
    var v1: s0 = v0 in
    var v3: s0 = v0 in
    let v8: [s0] = [v3, v3] in
    let v6: [Float] = v1.p0 in
    let v4: Float = v6[0] in
    var v5: [s0] = v8 in
    v5[0] = v1 in
    let v7: s0 = v8[0] in
    v5[1] = v1 in
    v3.p0 = v6 in
    v1.p0 = v6 in
    var v2: Float = v4 in
    let v9: [[Float]] = v3.p1 in
    var v15: [Float] = v6 in
    v3.p1 = v9 in
    v15[0] = v2 in
    let v12: [[Float]] = v1.p1 in
    let v13: Float = v15[1] in
    let v14: [Float] = v0.p0 in
    let v10: [Float] = v3.p0 in
    let v17: [Float] = v9[0] in
    let v22: Float = v17[0] in
    v5[0] = v3 in
    let v35: [Float] = v1.p0 in
    v1.p1 = v12 in
    v3.p0 = v15 in
    v1.p0 = v10 in
    v1.p1 = v12 in
    v15[0] = v22 in
    v3.p0 = v35 in
    v15[0] = v13 in
    let v25: [[Float]] = v3.p1 in
    v1.p0 = v15 in
    let v33: s0 = v5[1] in
    v3.p0 = v14 in
    let v26: [[Float]] = v0.p1 in
    var v36: [[Float]] = v25 in
    let v30: [Float] = v3.p0 in
    var v42: [[Float]] = v26 in
    v3.p0 = v14 in
    v3.p1 = v9 in
    v5[1] = v3 in
    v1.p1 = v12 in
    v3.p1 = v36 in
    v5[1] = v7 in
    let v43: [Float] = v25[1] in
    v36[1] = v43 in
    v1.p1 = v42 in
    v1.p0 = v30 in
    v3.p0 = v10 in
    v5[1] = v7 in
    v33
  } in
  let f36: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [s0] = [v0, v0] in
    let v3: [[Float]] = v0.p1 in
    let v7: s0 = f40(v0) in
    let v9: [Float] = v3[2] in
    let v8: s0 = f40(v7) in
    let v5: s0 = f40(v0) in
    var v12: [[Float]] = v3 in
    var v18: [[Float]] = v12 in
    var v10: [s0] = v4 in
    let v14: [Float] = v8.p0 in
    let v17: s0 = s0(v14, v18) in
    let v28: s0 = v10[1] in
    let v15: s0 = f40(v28) in
    let v23: s0 = f40(v15) in
    var v22: [Float] = v9 in
    let v36: [Float] = v17.p0 in
    let v37: Float = v36[0] in
    v22[0] = v37 in
    var v66: [Float] = v9 in
    let v40: s0 = f40(v17) in
    let v48: [[Float]] = v23.p1 in
    v18 = v3 in
    let v67: s0 = f40(v5) in
    v66 = v22 in
    let v89: [Float] = v48[2] in
    let v86: Float = v66[0] in
    v22[0] = v86 in
    var v306: s0 = v40 in
    v12[1] = v66 in
    v12[0] = v89 in
    v10[0] = v67 in
    v306
  } in
  let f35: (s0) -> s0 = (v0: s0) -> s0 {
    var v8: s0 = v0 in
    let v7: [Float] = v0.p0 in
    let v1: s0 = f36(v8) in
    let v4: [Float] = v1.p0 in
    v8 = v0 in
    let v2: Float = v4[0] in
    let v3: [[Float]] = v1.p1 in
    let v6: s0 = f36(v1) in
    var v11: Float = v2 in
    var v9: [[Float]] = v3 in
    let v5: [Float] = v9[0] in
    let v12: s0 = f40(v6) in
    let v16: [[Float]] = v12.p1 in
    let v10: [[Float]] = v12.p1 in
    v9[2] = v5 in
    v8.p1 = v10 in
    var v18: [Float] = v7 in
    v18[1] = v11 in
    let v26: s0 = f36(v12) in
    let v32: [[Float]] = v26.p1 in
    let v40: Float = v7[0] in
    var v34: s0 = v0 in
    let v36: s0 = f40(v6) in
    v8.p1 = v32 in
    v8.p1 = v10 in
    v34.p1 = v3 in
    let v51: [Float] = v34.p0 in
    let v45: [Float] = v0.p0 in
    v34.p0 = v18 in
    let v73: [[Float]] = v36.p1 in
    var v67: [[Float]] = v32 in
    let v60: s0 = s0(v45, v67) in
    let v78: s0 = f36(v6) in
    let v49: [Float] = v26.p0 in
    let v58: [Float] = v36.p0 in
    var v130: [[Float]] = v67 in
    let v115: [[Float]] = v26.p1 in
    v8.p0 = v58 in
    let v120: s0 = f40(v60) in
    let v107: [Float] = v73[1] in
    var v85: s0 = v78 in
    let v259: Float = v11 / v40 in
    v34.p1 = v130 in
    v34.p0 = v49 in
    var v122: [Float] = v107 in
    v11 = v259 in
    v85.p0 = v45 in
    v34.p1 = v115 in
    let v63: [Float] = v120.p0 in
    let v198: [Float] = v16[2] in
    v85.p0 = v51 in
    var v125: [Float] = v63 in
    v85.p1 = v9 in
    v8.p0 = v125 in
    v9[2] = v122 in
    v67[1] = v198 in
    v85
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    let v2: [s0] = v0.p0 in
    let v5: s0 = v2[0] in
    let v8: s0 = f35(v5) in
    let v11: [Float] = v8.p0 in
    let v12: s0 = f40(v5) in
    let v7: [Float] = [v1, v1] in
    let v14: [Float] = v12.p0 in
    let v10: [s0] = v0.p2 in
    var v36: [Float] = v11 in
    v36 = v7 in
    let v18: s0 = v10[0] in
    let v17: Float = v36[1] in
    v36[1] = v17 in
    let v26: [Float] = v18.p0 in
    let v41: Float = v26[0] in
    v36[1] = v41 in
    let v38: Float = v17 - v17 in
    let v70: Float = v38 + v1 in
    v36[1] = v41 in
    v36 = v14 in
    v70
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([0.0, 1.0], [[2.0], [3.0], [4.0]]), s0([5.0, 6.0], [[7.0], [8.0], [9.0]])], [s0([10.0, 11.0], [[12.0], [13.0], [14.0]]), s0([15.0, 16.0], [[17.0], [18.0], [19.0]]), s0([20.0, 21.0], [[22.0], [23.0], [24.0]])], [s0([25.0, 26.0], [[27.0], [28.0], [29.0]])]) in
    let v1: Float = 30.0 in
    let initialResult: Float = 30.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()