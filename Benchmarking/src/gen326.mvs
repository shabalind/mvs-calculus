  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
    var p2: s0
    var p3: s0
    var p4: [s0]
    var p5: s0
    var p6: s0
    var p7: s0
  } in
  struct s2 {
    var p0: s1
  } in
  let noinline_f0: ([[s1]], Float) -> Float = (v0: [[s1]], v1: Float) -> Float {
    var v2: [[s1]] = v0 in
    let v7: [s1] = v2[0] in
    v2[0] = v7 in
    v2[0] = v7 in
    v2[0] = v7 in
    let v11: [s1] = v2[1] in
    let v6: s1 = v7[0] in
    let v4: s2 = s2(v6) in
    let v3: s1 = v11[0] in
    let v9: [s1] = v0[1] in
    let v18: [s1] = v2[0] in
    let v21: [s1] = v2[0] in
    v2 = v0 in
    var v14: s2 = v4 in
    let v20: s1 = v21[0] in
    let v30: s0 = v3.p7 in
    v14.p0 = v20 in
    var v17: [s1] = v9 in
    v14.p0 = v3 in
    let v22: [[Float]] = v30.p0 in
    v2[0] = v17 in
    v2[1] = v18 in
    let v36: s1 = v17[0] in
    var v48: s2 = v14 in
    let v35: s2 = s2(v36) in
    let v40: s1 = v4.p0 in
    let v61: s1 = v48.p0 in
    let v31: [Float] = v22[1] in
    v17[0] = v61 in
    v17[0] = v40 in
    let v68: s1 = v4.p0 in
    v48 = v35 in
    v14.p0 = v68 in
    let v60: Float = v31[0] in
    v60
  } in
  fun loop(i: Int, v0: [[s1]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s1]] = [[s1([s0([[0.0], [1.0], [2.0]], [[3.0]])], [s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]])], s0([[12.0], [13.0], [14.0]], [[15.0]]), s0([[16.0], [17.0], [18.0]], [[19.0]]), [s0([[20.0], [21.0], [22.0]], [[23.0]])], s0([[24.0], [25.0], [26.0]], [[27.0]]), s0([[28.0], [29.0], [30.0]], [[31.0]]), s0([[32.0], [33.0], [34.0]], [[35.0]]))], [s1([s0([[36.0], [37.0], [38.0]], [[39.0]])], [s0([[40.0], [41.0], [42.0]], [[43.0]]), s0([[44.0], [45.0], [46.0]], [[47.0]])], s0([[48.0], [49.0], [50.0]], [[51.0]]), s0([[52.0], [53.0], [54.0]], [[55.0]]), [s0([[56.0], [57.0], [58.0]], [[59.0]])], s0([[60.0], [61.0], [62.0]], [[63.0]]), s0([[64.0], [65.0], [66.0]], [[67.0]]), s0([[68.0], [69.0], [70.0]], [[71.0]]))]] in
    let v1: Float = 72.0 in
    let initialResult: Float = 72.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()