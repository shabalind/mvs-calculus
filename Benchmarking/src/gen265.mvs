  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: s0
    var p1: s1
    var p2: [s0]
    var p3: [s0]
  } in
  let f12: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v1: [s0] = v0 in
    var v8: [s0] = v0 in
    let v5: s0 = v8[0] in
    let v4: [[Float]] = v5.p0 in
    let v9: [[Float]] = v5.p0 in
    let v2: [Float] = v4[1] in
    let v6: [[Float]] = v5.p1 in
    var v11: [[Float]] = v6 in
    let v13: [[Float]] = v5.p1 in
    let v17: s0 = s0(v4, v6) in
    var v20: s0 = v5 in
    var v12: [s0] = v1 in
    v20.p0 = v9 in
    v20.p1 = v11 in
    let v14: [[Float]] = v17.p0 in
    v12[0] = v20 in
    var v22: s0 = v17 in
    var v15: [[Float]] = v13 in
    v22.p0 = v4 in
    let v35: s0 = s0(v9, v11) in
    let v26: [[s0]] = [v8] in
    var v16: [Float] = v2 in
    var v18: [s0] = v12 in
    v15[0] = v2 in
    v22.p1 = v13 in
    let v34: [Float] = v9[2] in
    v20.p1 = v13 in
    let v19: [[Float]] = v17.p0 in
    let v21: [[Float]] = v22.p0 in
    var v68: [[Float]] = v11 in
    v12[1] = v17 in
    let v48: [s0] = v26[0] in
    v22.p0 = v9 in
    let v45: [[Float]] = v5.p1 in
    v8[0] = v22 in
    let v32: [Float] = v14[0] in
    v8 = v18 in
    v15[0] = v34 in
    v8 = v18 in
    v22.p1 = v13 in
    v22.p1 = v13 in
    v22.p0 = v21 in
    let v50: [[Float]] = v20.p1 in
    v22.p1 = v50 in
    v8[0] = v5 in
    var v78: [[Float]] = v9 in
    v68[0] = v16 in
    v20.p0 = v19 in
    v22.p0 = v78 in
    let v167: [Float] = v4[0] in
    v22.p1 = v45 in
    let v65: s0 = v48[0] in
    v12[0] = v65 in
    v68[0] = v32 in
    var v140: s0 = v35 in
    v78[1] = v167 in
    v22.p1 = v68 in
    let v97: [[Float]] = v140.p0 in
    v140.p1 = v15 in
    v20.p1 = v13 in
    v1[0] = v65 in
    v8[1] = v35 in
    v12[1] = v35 in
    v140.p1 = v13 in
    let v162: [[Float]] = v17.p1 in
    v140.p1 = v162 in
    v20.p0 = v97 in
    v18
  } in
  let f6: (s2) -> s2 = (v0: s2) -> s2 {
    var v5: s2 = v0 in
    var v2: s2 = v5 in
    let v4: [s0] = v2.p2 in
    var v3: s2 = v5 in
    let v9: s0 = v4[1] in
    let v6: [[Float]] = v9.p1 in
    var v7: s0 = v9 in
    let v8: s0 = v4[2] in
    v5.p2 = v4 in
    var v15: [s0] = v4 in
    v5.p0 = v9 in
    v2.p2 = v15 in
    var v19: [[Float]] = v6 in
    v3.p0 = v9 in
    v15[0] = v8 in
    v15[1] = v9 in
    var v32: [[Float]] = v19 in
    let v36: [[Float]] = v7.p1 in
    v7.p1 = v36 in
    v3.p0 = v7 in
    v7.p1 = v32 in
    v3
  } in
  let f3: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: [s0] = v0.p0 in
    var v3: s1 = v0 in
    let v6: [[s0]] = v3.p1 in
    let v7: [s0] = v6[0] in
    v3.p1 = v6 in
    v3.p1 = v6 in
    var v19: s1 = v3 in
    let v13: [[s0]] = v0.p1 in
    v19.p1 = v6 in
    v3.p1 = v6 in
    v3.p1 = v13 in
    var v24: [s0] = v4 in
    let v28: [s0] = v19.p0 in
    let v30: [[s0]] = v0.p1 in
    let v40: [s0] = v3.p0 in
    let v44: s0 = v4[0] in
    v3.p0 = v40 in
    let v60: [s0] = v30[1] in
    var v74: [s0] = v7 in
    v19.p0 = v60 in
    let v48: [[s0]] = v0.p1 in
    v19.p0 = v28 in
    v19.p0 = v60 in
    v24[0] = v44 in
    v24[0] = v44 in
    v3.p1 = v48 in
    v3.p0 = v28 in
    v3.p1 = v13 in
    v19.p0 = v24 in
    var v121: s1 = v19 in
    v3.p0 = v24 in
    v121.p0 = v74 in
    v121
  } in
  let noinline_f0: (s1, s2, Float) -> Float = (v0: s1, v1: s2, v2: Float) -> Float {
    let v6: s1 = f3(v0) in
    var v4: s1 = v6 in
    var v8: s2 = v1 in
    let v3: [s0] = v6.p0 in
    v8.p1 = v4 in
    let v11: s2 = f6(v8) in
    let v17: s2 = f6(v11) in
    let v15: s0 = v8.p0 in
    let v5: s0 = v3[0] in
    let v34: [[Float]] = v15.p0 in
    let v39: s2 = f6(v17) in
    let v14: [Float] = v34[2] in
    var v24: [s0] = v3 in
    let v19: s1 = f3(v4) in
    v4.p0 = v24 in
    v24[0] = v5 in
    let v23: Float = v14[0] in
    var v25: Float = v23 in
    v8.p1 = v19 in
    let v22: [s0] = v8.p3 in
    let v30: [s0] = f12(v22) in
    let v64: [s0] = f12(v22) in
    let v28: [s0] = v0.p0 in
    v8.p3 = v30 in
    v24[0] = v5 in
    let v67: s0 = v64[0] in
    v24[0] = v67 in
    let v41: s0 = v39.p0 in
    let v57: s0 = v28[0] in
    v8.p0 = v41 in
    v8.p0 = v57 in
    v25
  } in
  fun loop(i: Int, v0: s1, v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0]])], [[s0([[4.0], [5.0], [6.0]], [[7.0]])], [s0([[8.0], [9.0], [10.0]], [[11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0]])]]) in
    let v1: s2 = s2(s0([[16.0], [17.0], [18.0]], [[19.0]]), s1([s0([[20.0], [21.0], [22.0]], [[23.0]])], [[s0([[24.0], [25.0], [26.0]], [[27.0]])], [s0([[28.0], [29.0], [30.0]], [[31.0]])], [s0([[32.0], [33.0], [34.0]], [[35.0]])]]), [s0([[36.0], [37.0], [38.0]], [[39.0]]), s0([[40.0], [41.0], [42.0]], [[43.0]]), s0([[44.0], [45.0], [46.0]], [[47.0]])], [s0([[48.0], [49.0], [50.0]], [[51.0]]), s0([[52.0], [53.0], [54.0]], [[55.0]])]) in
    let v2: Float = 56.0 in
    let initialResult: Float = 56.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()