  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  struct s3 {
    var p0: [s1]
    var p1: s0
  } in
  let f37: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    var v6: [Float] = v0 in
    let v4: Float = v6[0] in
    v6[0] = v4 in
    var v1: Float = v4 in
    v6[0] = v1 in
    var v3: Float = v1 in
    let v8: [Float] = [v4, v3, v1, v4, v4, v3, v4] in
    var v7: [Float] = v0 in
    let v12: Float = v8[4] in
    let v5: Float = v0[0] in
    v6[0] = v12 in
    var v9: Float = v12 in
    v7[0] = v1 in
    v6[0] = v9 in
    let v53: [[Float]] = [v0, v0, v7, v7, v6, v7, v6] in
    let v67: [Float] = v53[3] in
    let v34: Float = v8[4] in
    let v68: [Float] = v53[5] in
    let v72: Float = v68[0] in
    var v52: [Float] = v67 in
    v7[0] = v34 in
    v6[0] = v5 in
    v52[0] = v72 in
    v52
  } in
  let f32: (s2, s0) -> s2 = (v0: s2, v1: s0) -> s2 {
    let v7: s0 = v0.p0 in
    var v3: s2 = v0 in
    v3.p1 = v7 in
    let v4: [s2] = [v0, v3, v3] in
    v3.p1 = v7 in
    v3.p1 = v1 in
    let v8: s0 = v3.p1 in
    let v2: s2 = v4[0] in
    let v13: [s2] = [v2] in
    var v22: [s2] = v13 in
    v3.p1 = v8 in
    let v23: s0 = v0.p1 in
    v3.p0 = v7 in
    v3.p1 = v23 in
    let v45: s2 = v22[0] in
    var v89: [s2] = v13 in
    let v53: s2 = v89[0] in
    v89[0] = v2 in
    v89[0] = v45 in
    v89[0] = v3 in
    v22 = v13 in
    v22 = v89 in
    v53
  } in
  let f28: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    var v3: s0 = v6 in
    var v5: s0 = v3 in
    let v7: [[Float]] = v3.p0 in
    var v8: [[Float]] = v7 in
    let v1: [[Float]] = v0.p0 in
    let v12: [Float] = v7[1] in
    var v2: [Float] = v12 in
    let v18: [[Float]] = v6.p1 in
    let v9: [Float] = v8[0] in
    let v21: [Float] = f37(v2) in
    v8[1] = v9 in
    let v25: [Float] = v18[0] in
    v3.p1 = v18 in
    v8[0] = v21 in
    var v10: [Float] = v25 in
    let v20: s2 = s2(v5, v6) in
    let v19: s2 = f32(v20, v6) in
    v5.p0 = v1 in
    var v22: [[Float]] = v1 in
    v22[0] = v21 in
    let v55: [[Float]] = v5.p1 in
    var v44: s2 = v20 in
    v3.p1 = v18 in
    v22 = v8 in
    v3.p0 = v1 in
    let v62: [Float] = v55[2] in
    v8[0] = v62 in
    v8[0] = v10 in
    let v69: Float = v62[0] in
    let v80: s2 = f32(v19, v3) in
    var v72: s2 = v44 in
    let v42: s0 = v72.p0 in
    v8[0] = v25 in
    v3.p0 = v22 in
    let v52: s2 = f32(v80, v42) in
    v44.p1 = v0 in
    v6.p0 = v8 in
    let v81: s2 = f32(v52, v3) in
    v2[0] = v69 in
    let v154: s0 = v81.p0 in
    v8[1] = v62 in
    v154
  } in
  let f15: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    let v6: [[Float]] = v0.p1 in
    v2.p1 = v6 in
    v2
  } in
  let f8: (s0) -> s0 = (v0: s0) -> s0 {
    var v1: s0 = v0 in
    var v7: s0 = v1 in
    let v8: s0 = f15(v7) in
    let v2: [[Float]] = v0.p1 in
    let v5: [[Float]] = v7.p1 in
    let v9: [[Float]] = v1.p1 in
    let v10: [Float] = v5[2] in
    let v4: [[Float]] = v7.p0 in
    v7.p0 = v4 in
    let v3: [Float] = v9[0] in
    var v6: [[Float]] = v4 in
    let v23: s0 = f28(v0) in
    let v24: [Float] = v2[2] in
    let v16: [Float] = f37(v3) in
    let v17: s0 = f15(v0) in
    v6[1] = v16 in
    let v15: s0 = f28(v1) in
    let v43: Float = v16[0] in
    v7.p1 = v9 in
    let v18: [Float] = f37(v3) in
    let v22: [Float] = v9[0] in
    let v29: [[Float]] = v8.p0 in
    let v27: [Float] = f37(v10) in
    let v45: [Float] = f37(v18) in
    let v26: s0 = f15(v15) in
    let v50: [[Float]] = v17.p1 in
    let v25: [[Float]] = v26.p0 in
    let v66: Float = v43 - v43 in
    let v30: Float = v27[0] in
    let v48: [[Float]] = v17.p1 in
    var v41: Float = v30 in
    let v58: Float = v24[0] in
    var v34: [Float] = v22 in
    let v67: [[Float]] = v15.p1 in
    v34[0] = v30 in
    let v83: [Float] = f37(v10) in
    let v51: [[Float]] = v23.p0 in
    v1.p1 = v50 in
    v6[0] = v34 in
    let v126: Float = v58 * v66 in
    v34[0] = v126 in
    v34[0] = v41 in
    v1.p0 = v51 in
    let v76: Float = v10[0] in
    var v131: [[Float]] = v48 in
    let v138: s0 = s0(v25, v131) in
    v131[2] = v45 in
    v34[0] = v76 in
    v7.p0 = v6 in
    v131[2] = v83 in
    v7.p1 = v2 in
    v7.p0 = v29 in
    let v120: s0 = f28(v138) in
    v7.p1 = v67 in
    v120
  } in
  let noinline_f0: ([s2], s3, Float) -> Float = (v0: [s2], v1: s3, v2: Float) -> Float {
    let v4: s0 = v1.p1 in
    let v9: Float = v2 + v2 in
    let v15: [[Float]] = v4.p0 in
    let v12: Float = v9 + v2 in
    var v13: s0 = v4 in
    v13.p0 = v15 in
    let v10: s0 = f15(v13) in
    let v27: s0 = f8(v10) in
    var v21: Float = v12 in
    v13.p0 = v15 in
    let v42: [[Float]] = v27.p0 in
    let v55: [Float] = v42[1] in
    v13 = v4 in
    let v53: Float = v55[0] in
    let v50: Float = v21 * v53 in
    v13.p0 = v42 in
    v50
  } in
  fun loop(i: Int, v0: [s2], v1: s3, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])), s2(s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]]))] in
    let v1: s3 = s3([s1(s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]]), [s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]])]), s1(s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]]), [s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]])])], s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]])) in
    let v2: Float = 45.0 in
    let initialResult: Float = 45.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()