  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  let f33: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    var v5: s0 = v0 in
    let v3: [Float] = v4[0] in
    let v8: [[Float]] = v5.p1 in
    v5.p1 = v4 in
    let v1: [Float] = v5.p0 in
    let v9: [Float] = v5.p0 in
    v5.p0 = v1 in
    let v11: [Float] = v0.p0 in
    let v12: [Float] = v5.p0 in
    let v20: [[Float]] = v0.p1 in
    let v30: [[Float]] = v0.p1 in
    v5.p1 = v30 in
    let v21: Float = v12[1] in
    v5 = v0 in
    let v48: Float = v3[0] in
    v5.p0 = v9 in
    let v23: [[Float]] = v0.p1 in
    v5.p0 = v11 in
    v5.p1 = v23 in
    let v22: s0 = s0(v12, v8) in
    let v25: [[Float]] = v0.p1 in
    var v26: [[Float]] = v8 in
    let v34: [Float] = v22.p0 in
    v26 = v8 in
    v26[1] = v3 in
    v5.p0 = v9 in
    let v27: [[[Float]]] = [v23, v8, v25, v8, v25, v26, v23] in
    var v32: [Float] = v1 in
    let v24: [Float] = v0.p0 in
    v5.p1 = v8 in
    let v15: [Float] = v5.p0 in
    v5.p0 = v32 in
    v32[0] = v21 in
    let v49: [Float] = v5.p0 in
    v5.p0 = v15 in
    let v56: [[Float]] = v0.p1 in
    v32[1] = v48 in
    let v35: s0 = s0(v49, v8) in
    var v71: [[Float]] = v4 in
    let v28: s0 = s0(v12, v20) in
    let v42: [Float] = v5.p0 in
    v5.p1 = v56 in
    v5.p1 = v23 in
    let v33: [[Float]] = v28.p1 in
    let v47: Float = v24[1] in
    v32 = v1 in
    v5.p0 = v1 in
    let v94: [Float] = v28.p0 in
    let v37: [Float] = v5.p0 in
    var v64: s0 = v22 in
    v64.p1 = v20 in
    v5.p0 = v24 in
    v5.p0 = v11 in
    let v110: [Float] = v35.p0 in
    let v96: [[Float]] = v0.p1 in
    v32[0] = v47 in
    v64.p0 = v15 in
    v64.p0 = v34 in
    let v92: [[Float]] = v64.p1 in
    let v79: s0 = s0(v110, v96) in
    let v52: [[Float]] = v27[5] in
    v5.p1 = v92 in
    let v66: [[Float]] = v79.p1 in
    v5.p1 = v26 in
    v5.p1 = v8 in
    v5.p1 = v33 in
    v5.p1 = v52 in
    v5.p0 = v42 in
    v64.p1 = v71 in
    v5.p0 = v94 in
    let v89: s0 = s0(v24, v66) in
    v64.p0 = v37 in
    v5.p0 = v1 in
    v89
  } in
  let f8: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v5: [s0] = [v0, v0, v6, v6, v6, v0] in
    var v4: [s0] = v5 in
    let v7: s0 = v4[5] in
    let v1: [[Float]] = v7.p1 in
    let v2: [Float] = v0.p0 in
    let v13: s0 = v5[5] in
    let v12: s0 = f33(v13) in
    var v23: [s0] = v4 in
    v23[3] = v6 in
    let v17: Float = v2[0] in
    let v21: s0 = f33(v7) in
    v4[0] = v21 in
    let v14: [Float] = v7.p0 in
    v6.p1 = v1 in
    var v41: [Float] = v2 in
    let v20: s0 = f33(v0) in
    v6.p0 = v41 in
    v41[1] = v17 in
    let v37: s0 = f33(v13) in
    v6.p0 = v41 in
    let v87: s0 = v23[3] in
    v23[3] = v20 in
    let v78: [[Float]] = v87.p1 in
    var v93: s0 = v37 in
    let v197: [[Float]] = v12.p1 in
    v93.p1 = v78 in
    v6.p0 = v14 in
    v6.p1 = v197 in
    v93
  } in
  let f4: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v6: s0 = f8(v0) in
    let v9: [s0] = [v6, v6, v0] in
    let v11: s0 = v9[1] in
    let v25: s0 = f33(v11) in
    let v14: [Float] = v25.p0 in
    var v30: [Float] = v14 in
    var v56: Float = v1 in
    v30[0] = v56 in
    let v80: Float = v30[1] in
    v80
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v2: s0 = f33(v0) in
    var v8: s0 = v2 in
    let v3: [Float] = v2.p0 in
    let v6: [Float] = v2.p0 in
    let v10: [Float] = v2.p0 in
    let v11: s0 = f8(v8) in
    let v12: Float = v10[1] in
    let v29: [[Float]] = v11.p1 in
    let v15: [Float] = v29[1] in
    let v25: [Float] = v2.p0 in
    var v27: [Float] = v3 in
    let v18: s0 = f33(v8) in
    let v17: Float = v15[0] in
    v8.p0 = v10 in
    let v79: [Float] = v0.p0 in
    let v34: s0 = f33(v18) in
    let v16: s0 = f33(v34) in
    let v61: s0 = f8(v18) in
    v27[1] = v17 in
    let v51: Float = v25[1] in
    var v35: [Float] = v10 in
    v8.p0 = v3 in
    v8.p0 = v35 in
    let v31: [s0] = [v8, v16, v16, v8, v61, v2] in
    let v73: s0 = v31[5] in
    v27[0] = v12 in
    v8.p0 = v27 in
    v8.p0 = v6 in
    v8.p0 = v79 in
    let v59: s0 = f8(v73) in
    let v93: Float = f4(v59, v1) in
    v35[1] = v51 in
    v27[1] = v93 in
    v8.p0 = v25 in
    v8.p0 = v3 in
    v93
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([0.0, 1.0], [[2.0], [3.0]]) in
    let v1: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()