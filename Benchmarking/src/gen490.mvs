  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [Float]
    var p4: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  let f79: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v3: [[Float]] = v0.p4 in
    let v8: [[Float]] = v5.p1 in
    let v4: s1 = s1(v0, v5) in
    let v6: s1 = s1(v5, v5) in
    v5.p1 = v8 in
    let v11: [[Float]] = v0.p2 in
    let v1: [Float] = v11[0] in
    let v7: [[Float]] = [v1, v1, v1, v1] in
    let v9: [[Float]] = v0.p1 in
    var v15: [Float] = v1 in
    let v10: [[Float]] = v0.p4 in
    v5.p4 = v10 in
    v15 = v1 in
    let v17: [[Float]] = v5.p1 in
    let v2: s0 = v4.p1 in
    var v14: [[Float]] = v3 in
    v5.p4 = v17 in
    v14[0] = v1 in
    let v20: [[Float]] = v5.p4 in
    let v25: s0 = v4.p0 in
    let v23: [Float] = v9[0] in
    var v12: [Float] = v1 in
    let v24: s1 = s1(v5, v2) in
    var v18: s1 = v24 in
    v14[0] = v12 in
    let v16: [Float] = v17[0] in
    let v13: Float = v16[0] in
    let v30: [Float] = v7[3] in
    v15[0] = v13 in
    v14 = v10 in
    v14[0] = v12 in
    let v26: Float = v30[0] in
    var v60: [[Float]] = v20 in
    let v35: s0 = v18.p1 in
    let v27: s0 = v24.p0 in
    let v32: [[Float]] = v35.p4 in
    v60[0] = v23 in
    v18.p0 = v27 in
    let v56: Float = v15[0] in
    var v28: [[Float]] = v3 in
    let v48: [Float] = v11[0] in
    v60[0] = v12 in
    v5.p1 = v60 in
    let v72: [[Float]] = v25.p0 in
    var v79: Float = v26 in
    v79 = v26 in
    let v74: [Float] = v25.p3 in
    v5.p3 = v74 in
    let v84: Float = v15[0] in
    var v54: Float = v13 in
    var v57: [Float] = v23 in
    v5.p1 = v28 in
    var v73: Float = v84 in
    v14[0] = v57 in
    var v98: [Float] = v74 in
    let v85: Float = v74[0] in
    v12[0] = v79 in
    v14[0] = v23 in
    let v43: s0 = s0(v11, v32, v72, v98, v20) in
    var v137: [Float] = v74 in
    let v40: [[Float]] = v43.p2 in
    v28[0] = v57 in
    v57[0] = v56 in
    v137[0] = v85 in
    let v81: s0 = v6.p1 in
    v137[0] = v73 in
    v98[1] = v54 in
    v18.p0 = v81 in
    let v179: s0 = s0(v40, v14, v40, v137, v9) in
    v28[0] = v48 in
    v137[0] = v56 in
    v5.p0 = v11 in
    v98[0] = v73 in
    v15[0] = v56 in
    v57[0] = v54 in
    v179
  } in
  let f73: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v3: [s0] = v0 in
    var v1: [s0] = v3 in
    let v6: s0 = v1[1] in
    var v8: s0 = v6 in
    let v4: s0 = f79(v6) in
    let v2: [[Float]] = v8.p0 in
    let v10: s0 = f79(v4) in
    let v18: s0 = f79(v4) in
    var v9: [[Float]] = v2 in
    var v13: [s0] = v0 in
    let v12: [[Float]] = v10.p1 in
    let v20: [[Float]] = v6.p0 in
    let v35: s0 = f79(v10) in
    v8.p2 = v20 in
    v1[2] = v35 in
    v13[2] = v18 in
    let v44: s0 = f79(v6) in
    v8.p1 = v12 in
    v8.p1 = v12 in
    let v16: [Float] = v12[0] in
    v8 = v6 in
    var v29: [[Float]] = v2 in
    var v39: s0 = v8 in
    let v31: [[Float]] = v10.p2 in
    v29[0] = v16 in
    v3 = v13 in
    let v51: s0 = f79(v44) in
    v39.p0 = v20 in
    var v24: s0 = v39 in
    let v37: s0 = f79(v24) in
    let v47: [[Float]] = v51.p1 in
    v24.p4 = v47 in
    v39.p2 = v9 in
    v39.p1 = v47 in
    v24.p1 = v12 in
    let v59: s0 = f79(v37) in
    v39.p0 = v29 in
    v3[1] = v59 in
    v39.p0 = v31 in
    v13
  } in
  let noinline_f0: ([s2], Float) -> Float = (v0: [s2], v1: Float) -> Float {
    let v7: s2 = v0[1] in
    let v2: [s0] = v7.p0 in
    let v4: [s0] = f73(v2) in
    let v6: s0 = v4[1] in
    let v3: s1 = s1(v6, v6) in
    let v14: s0 = v3.p0 in
    let v33: [[Float]] = v14.p0 in
    let v9: [Float] = v33[1] in
    var v23: [Float] = v9 in
    let v12: Float = v23[0] in
    v12
  } in
  fun loop(i: Int, v0: [s2], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([s0([[0.0], [1.0], [2.0]], [[3.0]], [[4.0], [5.0], [6.0]], [7.0, 8.0], [[9.0]]), s0([[10.0], [11.0], [12.0]], [[13.0]], [[14.0], [15.0], [16.0]], [17.0, 18.0], [[19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0]], [[24.0], [25.0], [26.0]], [27.0, 28.0], [[29.0]])], s0([[30.0], [31.0], [32.0]], [[33.0]], [[34.0], [35.0], [36.0]], [37.0, 38.0], [[39.0]])), s2([s0([[40.0], [41.0], [42.0]], [[43.0]], [[44.0], [45.0], [46.0]], [47.0, 48.0], [[49.0]]), s0([[50.0], [51.0], [52.0]], [[53.0]], [[54.0], [55.0], [56.0]], [57.0, 58.0], [[59.0]]), s0([[60.0], [61.0], [62.0]], [[63.0]], [[64.0], [65.0], [66.0]], [67.0, 68.0], [[69.0]])], s0([[70.0], [71.0], [72.0]], [[73.0]], [[74.0], [75.0], [76.0]], [77.0, 78.0], [[79.0]])), s2([s0([[80.0], [81.0], [82.0]], [[83.0]], [[84.0], [85.0], [86.0]], [87.0, 88.0], [[89.0]]), s0([[90.0], [91.0], [92.0]], [[93.0]], [[94.0], [95.0], [96.0]], [97.0, 98.0], [[99.0]]), s0([[100.0], [101.0], [102.0]], [[103.0]], [[104.0], [105.0], [106.0]], [107.0, 108.0], [[109.0]])], s0([[110.0], [111.0], [112.0]], [[113.0]], [[114.0], [115.0], [116.0]], [117.0, 118.0], [[119.0]]))] in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()