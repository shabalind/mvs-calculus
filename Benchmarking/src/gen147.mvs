  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s1
    var p2: s1
  } in
  let f46: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    var v2: s0 = v3 in
    let v11: [[Float]] = v0.p1 in
    var v6: s0 = v2 in
    let v5: [[Float]] = v3.p1 in
    let v10: [[Float]] = v3.p1 in
    v3.p1 = v11 in
    let v15: [[Float]] = v6.p1 in
    let v9: [[Float]] = v0.p0 in
    let v27: [[Float]] = v0.p0 in
    v3.p0 = v27 in
    let v28: [Float] = v9[0] in
    v2.p0 = v9 in
    let v12: [[Float]] = v6.p0 in
    v3.p1 = v15 in
    v6.p0 = v9 in
    var v16: [[Float]] = v12 in
    v6.p1 = v15 in
    let v20: [Float] = v16[0] in
    v16[0] = v28 in
    let v34: [[Float]] = v2.p1 in
    v16[0] = v20 in
    let v19: [[Float]] = v3.p0 in
    v6.p1 = v5 in
    let v21: s0 = s0(v19, v10) in
    v2.p0 = v16 in
    v6.p1 = v34 in
    v6 = v2 in
    v3.p0 = v16 in
    v21
  } in
  let f30: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s1 = s1(v0, v0) in
    let v5: s0 = f46(v0) in
    var v6: s1 = v1 in
    let v3: s0 = f46(v0) in
    var v7: s1 = v6 in
    v7.p1 = v5 in
    var v4: s1 = v6 in
    var v2: s1 = v6 in
    let v15: s0 = v7.p1 in
    v2 = v4 in
    let v21: s0 = v2.p0 in
    v6.p1 = v15 in
    v6 = v2 in
    v7.p0 = v21 in
    let v63: s0 = v6.p0 in
    let v18: s0 = f46(v63) in
    let v40: s2 = s2(v2, v4, v1) in
    v2.p1 = v18 in
    let v39: s1 = v40.p0 in
    let v214: s0 = v6.p1 in
    v6.p1 = v214 in
    v6.p0 = v214 in
    v4.p0 = v3 in
    let v122: s0 = v39.p1 in
    v122
  } in
  let noinline_f0: ([s0], Float) -> Float = (v0: [s0], v1: Float) -> Float {
    let v6: s0 = v0[1] in
    let v4: s0 = f30(v6) in
    let v5: [[Float]] = v4.p0 in
    let v23: [Float] = v5[0] in
    let v54: Float = v23[0] in
    var v27: Float = v54 in
    let v55: Float = v54 + v27 in
    v55
  } in
  fun loop(i: Int, v0: [s0], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0]], [[1.0], [2.0]]), s0([[3.0]], [[4.0], [5.0]])] in
    let v1: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()