  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
  } in
  let f80: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: s0 = v0.p1 in
    let v1: [[Float]] = v5.p0 in
    var v7: s0 = v5 in
    var v4: s1 = v0 in
    var v12: [[Float]] = v1 in
    let v9: [[Float]] = v7.p0 in
    var v2: [[Float]] = v9 in
    let v11: [[Float]] = v7.p0 in
    v7.p0 = v12 in
    var v16: s1 = v0 in
    let v18: [Float] = v11[0] in
    v12[0] = v18 in
    let v20: s0 = v4.p0 in
    var v29: s1 = v4 in
    let v19: [Float] = v12[0] in
    var v13: s1 = v0 in
    var v22: s0 = v20 in
    let v36: s0 = v13.p0 in
    let v23: s0 = v29.p1 in
    let v24: s0 = v29.p1 in
    let v14: [[Float]] = v36.p1 in
    let v31: [[Float]] = v24.p1 in
    v12[0] = v19 in
    var v68: [[Float]] = v31 in
    let v25: [Float] = v14[1] in
    let v30: s0 = s0(v2, v68) in
    let v28: Float = v18[0] in
    v13.p0 = v22 in
    let v57: [Float] = v14[0] in
    var v37: [Float] = v57 in
    let v59: [Float] = v1[0] in
    v37[0] = v28 in
    let v38: s0 = v16.p0 in
    v68[1] = v37 in
    v29.p0 = v38 in
    v13.p0 = v36 in
    let v51: s0 = v4.p1 in
    v7.p1 = v31 in
    let v77: s0 = v4.p1 in
    v4.p0 = v77 in
    v68[1] = v59 in
    v4.p0 = v23 in
    v2[0] = v25 in
    let v97: s1 = s1(v30, v51) in
    v97
  } in
  let f79: (s2) -> s2 = (v0: s2) -> s2 {
    let v1: s0 = v0.p0 in
    let v9: s0 = v0.p0 in
    var v12: s0 = v1 in
    var v10: s2 = v0 in
    var v17: s2 = v10 in
    let v15: [[Float]] = v9.p1 in
    v10.p0 = v12 in
    v10 = v17 in
    let v16: [s2] = [v10, v17] in
    let v23: s2 = v16[0] in
    let v33: s2 = v16[0] in
    var v45: s0 = v12 in
    let v27: s1 = s1(v9, v45) in
    let v84: s1 = f80(v27) in
    let v115: s1 = f80(v27) in
    let v39: s0 = v84.p0 in
    v12.p1 = v15 in
    let v46: s0 = v115.p1 in
    let v165: [[Float]] = v46.p0 in
    let v107: s0 = v23.p0 in
    v10.p0 = v39 in
    v12.p0 = v165 in
    v17.p0 = v107 in
    v33
  } in
  let f73: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    let v4: [[Float]] = v7.p0 in
    let v6: [s0] = [v7, v0] in
    var v5: s0 = v0 in
    let v2: [[Float]] = v5.p1 in
    v7 = v0 in
    let v1: [[Float]] = v7.p0 in
    var v14: [[Float]] = v2 in
    let v13: [Float] = v1[0] in
    v14 = v2 in
    v7.p1 = v14 in
    var v11: s0 = v7 in
    let v18: [Float] = v1[0] in
    v14[0] = v18 in
    let v8: [[Float]] = v11.p1 in
    v11.p1 = v8 in
    let v12: [Float] = v14[0] in
    let v9: [[Float]] = v11.p1 in
    v14[2] = v12 in
    v5.p1 = v9 in
    let v19: [[Float]] = v7.p1 in
    let v15: [[Float]] = v11.p0 in
    v7.p1 = v19 in
    let v20: [Float] = v2[2] in
    var v17: [[Float]] = v4 in
    v5.p1 = v2 in
    var v10: [[Float]] = v17 in
    v7.p0 = v10 in
    var v33: [[Float]] = v9 in
    let v26: [[Float]] = v5.p1 in
    let v23: [[Float]] = v5.p1 in
    let v24: s0 = v6[0] in
    v10[0] = v13 in
    v11.p0 = v15 in
    v17[0] = v20 in
    v11.p0 = v4 in
    let v42: [Float] = v33[0] in
    let v34: s0 = v6[0] in
    v10[0] = v13 in
    v11.p0 = v10 in
    v17[0] = v20 in
    v33 = v19 in
    v5 = v24 in
    v11.p1 = v23 in
    let v54: [Float] = v9[0] in
    v5.p1 = v8 in
    var v102: s0 = v24 in
    let v116: [[Float]] = v0.p1 in
    let v57: [[Float]] = v34.p0 in
    v14[0] = v42 in
    v7.p1 = v2 in
    let v47: [[Float]] = v5.p1 in
    var v44: s0 = v102 in
    v14[0] = v54 in
    var v101: [[Float]] = v26 in
    v7.p1 = v101 in
    v10[0] = v42 in
    v44.p1 = v116 in
    v102.p1 = v9 in
    v102.p0 = v15 in
    v7.p1 = v47 in
    v44.p0 = v57 in
    v44
  } in
  let f54: (s2, [s1]) -> s2 = (v0: s2, v1: [s1]) -> s2 {
    let v11: s0 = v0.p0 in
    var v18: s2 = v0 in
    var v28: s0 = v11 in
    v18.p0 = v28 in
    v18
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v3: s2 = f79(v0) in
    let v7: [[s1]] = v0.p1 in
    let v9: [s1] = v7[0] in
    let v12: s0 = v0.p0 in
    var v14: s0 = v12 in
    let v11: s2 = f54(v3, v9) in
    let v17: s0 = f73(v14) in
    v14 = v12 in
    let v32: [[Float]] = v17.p0 in
    let v29: [Float] = v32[0] in
    let v36: [[Float]] = v14.p1 in
    let v53: Float = v29[0] in
    var v52: s0 = v12 in
    let v45: [[Float]] = v17.p1 in
    v14.p1 = v45 in
    v52.p1 = v36 in
    let v69: s0 = v11.p0 in
    v14 = v52 in
    v52.p1 = v36 in
    let v61: [[Float]] = v69.p1 in
    v52.p1 = v61 in
    v52.p1 = v61 in
    v53
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0]], [[1.0], [2.0], [3.0]]), [[s1(s0([[4.0]], [[5.0], [6.0], [7.0]]), s0([[8.0]], [[9.0], [10.0], [11.0]]))]]) in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()