  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<double> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<double> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  s0 f7(const s0 &v0) {
    const std::vector<double> v4 = v0.p0;
    const std::vector<std::vector<double>> v3 = v0.p1;
    const std::vector<double> v7 = v0.p0;
    const std::vector<double> v11 = v3[0];
    const std::vector<std::vector<double>> v1 = v0.p1;
    s0 v8 = v0;
    std::vector<std::vector<double>> v6 = v3;
    std::vector<std::vector<double>> v13 = v6;
    v6[0] = v4;
    v6[0] = v7;
    const std::vector<std::vector<double>> v5 = v0.p1;
    v8.p1 = v13;
    const std::vector<double> v15 = v6[1];
    v8.p1 = v3;
    v8.p1 = v6;
    v8.p1 = v5;
    const std::vector<double> v10 = v5[0];
    const std::vector<double> v9 = v0.p0;
    const std::vector<double> v12 = v3[0];
    std::vector<std::vector<double>> v27 = v13;
    v6 = v1;
    v8.p0 = v10;
    std::vector<std::vector<double>> v40 = v1;
    const std::vector<double> v30 = v40[1];
    v27[1] = v4;
    v13[1] = v4;
    const std::vector<double> v36 = v27[0];
    s0 v43 = v8;
    const std::vector<std::vector<double>> v53 { v15, v36, v10 };
    v43.p0 = v12;
    const std::vector<double> v46 = v53[2];
    const std::vector<std::vector<double>> v69 = v43.p1;
    v43.p0 = v11;
    std::vector<std::vector<double>> v71 = v53;
    const std::vector<double> v76 = v5[1];
    v40[0] = v46;
    const std::vector<double> v72 = v71[1];
    v8.p0 = v76;
    const std::vector<std::vector<double>> v94 = v8.p1;
    v27[1] = v9;
    v43.p1 = v3;
    const s0 v211(v72, v94);
    v13 = v69;
    v8.p0 = v30;
    return v211;
  }
  s0 f5(const s0 &v0) {
    s0 v6 = v0;
    const std::vector<std::vector<double>> v7 = v0.p1;
    const std::vector<double> v2 = v6.p0;
    const std::vector<double> v5 = v7[1];
    v6.p1 = v7;
    const double v8 = v5[0];
    double v4 = v8;
    const s0 v1(v2, v7);
    const s0 v3 = f7(v6);
    const std::vector<double> v11 = v7[1];
    v6.p0 = v5;
    const s0 v12 = f7(v3);
    s0 v10 = v6;
    const std::vector<double> v13 = v12.p0;
    const double v17 = v5[0];
    s0 v20 = v0;
    std::vector<double> v24 = v11;
    std::vector<double> v18 = v11;
    v24[0] = v4;
    const double v21 = v24[0];
    std::vector<std::vector<double>> v15 = v7;
    const std::vector<std::vector<double>> v33 = v12.p1;
    v6.p0 = v2;
    const std::vector<std::vector<double>> v30 = v1.p1;
    v6.p1 = v30;
    const double v27 = v18[0];
    s0 v32 = v12;
    v6 = v10;
    double v62 = v27;
    v18[0] = v17;
    v24[0] = v21;
    const std::vector<std::vector<double>> v38 = v12.p1;
    v20.p1 = v33;
    const std::vector<s0> v41 { v32, v0, v0, v3, v20, v20 };
    v6.p1 = v38;
    std::vector<s0> v74 = v41;
    v20.p0 = v13;
    const std::vector<double> v34 = v7[1];
    std::vector<s0> v64 = v74;
    const s0 v45 = f7(v1);
    const s0 v135 = f7(v0);
    v32.p1 = v15;
    v18[0] = v8;
    v20.p0 = v34;
    const s0 v170 = v64[5];
    v6.p0 = v24;
    v20.p0 = v24;
    v6.p1 = v7;
    v4 = v62;
    const s0 v60 = f7(v170);
    v74[3] = v45;
    v74[2] = v6;
    v10 = v135;
    return v60;
  }
  s0 f4(const s0 &v0, const s0 &v1) {
    const s0 v5 = f5(v1);
    const s0 v7 = f7(v5);
    const std::vector<double> v3 = v0.p0;
    const std::vector<double> v8 = v1.p0;
    s0 v9 = v7;
    std::vector<double> v2 = v8;
    const double v6 = v8[0];
    const double v10 = v6 / v6;
    const double v18 = v2[0];
    const s0 v13 = f7(v1);
    const s0 v19 = f5(v1);
    const s0 v26 = f5(v13);
    const std::vector<std::vector<double>> v12 = v13.p1;
    const s0 v14 = f5(v26);
    double v34 = v6;
    const std::vector<double> v46 = v14.p0;
    const std::vector<double> v22 = v26.p0;
    v2[0] = v34;
    v2[0] = v18;
    const s0 v32 = f7(v9);
    const s0 v25 = f5(v1);
    double v15 = v10;
    v9.p1 = v12;
    const double v51 = v3[0];
    v9.p0 = v2;
    const s0 v71 = f5(v7);
    v2[0] = v51;
    const std::vector<std::vector<double>> v64 = v25.p1;
    v9.p0 = v46;
    std::vector<double> v35 = v22;
    s0 v85 = v71;
    v35[0] = v15;
    double v58 = v10;
    const std::vector<s0> v54 { v85, v14, v71, v9, v71, v32, v19 };
    v9.p0 = v22;
    v35[0] = v58;
    v2[0] = v34;
    v85.p0 = v35;
    v85.p1 = v64;
    const s0 v241 = v54[1];
    return v241;
  }
  __attribute__((noinline))
  double f0(const s0 &v0, const double &v1) {
    const s0 v2 = f5(v0);
    double v6 = v1;
    s0 v8 = v0;
    const std::vector<std::vector<double>> v9 = v2.p1;
    const s0 v4 = f4(v0, v2);
    v8.p1 = v9;
    const std::vector<std::vector<double>> v5 = v8.p1;
    const s0 v3 = f7(v0);
    v8.p1 = v9;
    v8.p1 = v5;
    const std::vector<double> v7 = v9[0];
    const s0 v15 = f5(v2);
    const std::vector<double> v11 = v15.p0;
    double v14 = v1;
    v14 = v6;
    const std::vector<std::vector<double>> v18 = v15.p1;
    v8.p0 = v11;
    const std::vector<double> v21 = v5[0];
    const double v19 = v21[0];
    const std::vector<double> v25 = v3.p0;
    v8.p0 = v25;
    std::vector<double> v30 = v25;
    const std::vector<double> v24 = v18[0];
    const double v27 = v19 / v14;
    double v46 = v19;
    v8.p1 = v5;
    double v54 = v19;
    const double v91 = v7[0];
    const std::vector<double> v29 = v9[1];
    v8.p0 = v29;
    double v40 = v46;
    const double v32 = v29[0];
    v30[0] = v54;
    const std::vector<double> v77 { v91, v54, v32, v40, v27 };
    v8.p1 = v18;
    v30[0] = v91;
    const std::vector<double> v114 = v3.p0;
    const std::vector<std::vector<double>> v135 = v4.p1;
    std::vector<double> v102 = v77;
    v8.p0 = v114;
    v8.p0 = v30;
    v8.p1 = v135;
    v8.p0 = v24;
    const double v188 = v102[2];
    return v188;
  }
  int main() {
    s0 v0({ { 0.0 }, { { 1.0 }, { 2.0 } } });
    double v1(3.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
