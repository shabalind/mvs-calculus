  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
  } in
  struct s5 {
    var p0: [s1]
    var p1: s0
  } in
  let f49: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v3: [s0] = [v0, v0, v5, v5, v5, v5] in
    var v1: s0 = v0 in
    let v10: s0 = v3[3] in
    let v12: [Float] = v10.p0 in
    var v24: [s0] = v3 in
    v5 = v1 in
    v24[4] = v10 in
    v24[0] = v0 in
    v1.p0 = v12 in
    let v21: s0 = v24[3] in
    v21
  } in
  let f44: (s1) -> s1 = (v0: s1) -> s1 {
    let v1: [s0] = v0.p0 in
    var v2: s1 = v0 in
    var v6: s1 = v0 in
    v6.p0 = v1 in
    v6 = v2 in
    v6.p0 = v1 in
    v6
  } in
  let f40: ([[Float]], s1) -> s1 = (v0: [[Float]], v1: s1) -> s1 {
    let v7: [s0] = v1.p0 in
    let v3: s1 = f44(v1) in
    let v5: [s0] = v3.p0 in
    let v6: s0 = v5[0] in
    let v13: s0 = f49(v6) in
    let v9: s0 = v5[1] in
    let v12: s1 = f44(v1) in
    var v23: [s0] = v7 in
    let v17: s0 = f49(v6) in
    let v50: [Float] = v9.p0 in
    var v77: s0 = v17 in
    let v22: s0 = s0(v50, v0) in
    let v30: s0 = f49(v22) in
    v23[0] = v6 in
    var v63: s1 = v12 in
    v23[0] = v77 in
    v23[0] = v30 in
    var v61: [s0] = v23 in
    v61[0] = v77 in
    v61[1] = v13 in
    v23[0] = v9 in
    v63.p0 = v61 in
    var v84: s1 = v63 in
    v84
  } in
  let f29: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    var v1: s0 = v0 in
    var v2: s0 = v0 in
    let v7: s0 = f49(v2) in
    var v5: s0 = v7 in
    let v13: [Float] = v5.p0 in
    let v4: [[Float]] = v1.p1 in
    v2.p0 = v13 in
    let v10: s0 = f49(v3) in
    let v18: [Float] = v1.p0 in
    v5.p1 = v4 in
    let v20: [[Float]] = v10.p1 in
    let v142: s0 = s0(v13, v4) in
    v1.p0 = v18 in
    v2.p1 = v20 in
    v142
  } in
  let f24: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s0 = f29(v0) in
    var v2: s0 = v0 in
    let v9: s0 = f49(v0) in
    let v7: s0 = f29(v9) in
    let v5: s0 = f29(v1) in
    let v4: [[Float]] = v7.p1 in
    let v8: s0 = f29(v7) in
    let v3: [s0] = [v5, v2] in
    v2.p1 = v4 in
    let v12: [[Float]] = v5.p1 in
    let v11: [Float] = v1.p0 in
    let v10: [Float] = v12[0] in
    let v17: [Float] = v9.p0 in
    v2.p1 = v4 in
    let v23: s0 = f49(v7) in
    let v13: Float = v11[0] in
    let v21: [[Float]] = [v10, v10] in
    var v25: Float = v13 in
    v2.p0 = v17 in
    let v50: [Float] = v8.p0 in
    var v22: [Float] = v50 in
    v22[0] = v13 in
    v2.p1 = v12 in
    let v18: [Float] = v21[1] in
    v22[2] = v25 in
    let v36: s1 = s1(v3) in
    let v16: Float = v18[0] in
    v2.p0 = v22 in
    let v54: s1 = f40(v4, v36) in
    let v29: [s0] = v54.p0 in
    v2.p0 = v50 in
    var v87: Float = v25 in
    let v65: Float = v10[0] in
    v22[2] = v65 in
    let v64: s0 = v29[0] in
    let v77: Float = v11[1] in
    v22[2] = v16 in
    let v47: Float = v50[0] in
    v22[2] = v87 in
    v22[2] = v77 in
    v22[2] = v77 in
    let v99: [s0] = [v8, v0, v0, v64, v5, v8] in
    var v96: [s0] = v99 in
    v22[2] = v77 in
    v25 = v47 in
    v2 = v23 in
    let v164: s0 = v96[3] in
    v164
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    var v5: s0 = v0 in
    var v1: s0 = v5 in
    let v2: s0 = f49(v1) in
    let v3: s0 = f49(v5) in
    let v8: s0 = f49(v3) in
    let v6: [s0] = [v4, v3, v2, v8] in
    let v11: [Float] = v1.p0 in
    let v10: [Float] = v8.p0 in
    let v9: s0 = f29(v4) in
    let v13: s0 = f29(v5) in
    v4.p0 = v10 in
    let v15: s0 = f49(v2) in
    var v19: [s0] = v6 in
    let v14: [Float] = v2.p0 in
    v19[2] = v13 in
    v19[1] = v0 in
    var v18: s0 = v15 in
    v4.p0 = v11 in
    let v23: [[Float]] = v13.p1 in
    var v28: [Float] = v10 in
    v19 = v6 in
    var v30: [[Float]] = v23 in
    v19[1] = v18 in
    v19[3] = v0 in
    let v31: Float = v28[2] in
    let v38: Float = v31 - v31 in
    var v53: [Float] = v11 in
    let v86: [Float] = v9.p0 in
    v1.p0 = v86 in
    var v72: [[Float]] = v30 in
    let v32: [Float] = v30[1] in
    var v87: [Float] = v32 in
    v18.p0 = v10 in
    v87[0] = v31 in
    v5.p1 = v72 in
    v28[0] = v31 in
    v1.p0 = v10 in
    v87[0] = v31 in
    v5.p0 = v14 in
    let v83: s0 = v19[3] in
    v53[2] = v38 in
    v72[0] = v87 in
    v1.p0 = v53 in
    v72[1] = v32 in
    v72[0] = v32 in
    v18.p0 = v28 in
    v87[0] = v31 in
    v83
  } in
  let noinline_f0: ([s5], Float) -> Float = (v0: [s5], v1: Float) -> Float {
    let v2: s5 = v0[0] in
    let v7: s0 = v2.p1 in
    let v9: s0 = f29(v7) in
    let v8: s0 = f24(v7) in
    let v10: s0 = f4(v8) in
    let v13: [Float] = v7.p0 in
    var v5: s0 = v7 in
    v5.p0 = v13 in
    v5.p0 = v13 in
    let v17: [Float] = v10.p0 in
    let v28: [[Float]] = v5.p1 in
    let v23: [[Float]] = v9.p1 in
    let v34: [Float] = v28[1] in
    v5.p1 = v23 in
    let v49: Float = v17[1] in
    var v26: [Float] = v34 in
    let v61: Float = v26[0] in
    let v85: [[Float]] = v8.p1 in
    v5.p1 = v85 in
    let v66: Float = v34[0] in
    let v54: Float = v61 * v49 in
    v26[0] = v66 in
    v26[0] = v61 in
    var v123: Float = v54 in
    let v258: Float = v54 * v123 in
    v258
  } in
  fun loop(i: Int, v0: [s5], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5([s1([s0([0.0, 1.0, 2.0], [[3.0], [4.0]]), s0([5.0, 6.0, 7.0], [[8.0], [9.0]])]), s1([s0([10.0, 11.0, 12.0], [[13.0], [14.0]]), s0([15.0, 16.0, 17.0], [[18.0], [19.0]])])], s0([20.0, 21.0, 22.0], [[23.0], [24.0]]))] in
    let v1: Float = 25.0 in
    let initialResult: Float = 25.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()