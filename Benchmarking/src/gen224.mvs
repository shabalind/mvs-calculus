  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  let f41: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p0 in
    let v7: [Float] = v5[0] in
    let v9: [[Float]] = v0.p1 in
    let v1: [[Float]] = v0.p0 in
    let v12: [Float] = v5[0] in
    let v16: [[Float]] = v0.p0 in
    let v10: [Float] = v1[0] in
    let v13: [[Float]] = v0.p1 in
    var v17: [[Float]] = v1 in
    let v21: [[Float]] = v0.p0 in
    var v15: s0 = v0 in
    let v32: [[Float]] = v15.p1 in
    v15.p0 = v5 in
    v15.p1 = v13 in
    v17[0] = v12 in
    v15.p1 = v32 in
    let v23: [[Float]] = v0.p0 in
    v17[0] = v10 in
    let v45: [[Float]] = v0.p1 in
    let v30: [Float] = v45[0] in
    var v28: [[Float]] = v13 in
    v15.p0 = v21 in
    v17[0] = v30 in
    v15.p0 = v21 in
    v15.p0 = v17 in
    let v38: s1 = s1(v15, v15) in
    let v84: s0 = v38.p0 in
    var v68: s0 = v0 in
    let v47: [Float] = v5[0] in
    var v76: s0 = v15 in
    v28[0] = v47 in
    v76.p0 = v17 in
    v17[0] = v30 in
    v17[0] = v7 in
    let v67: [Float] = v23[0] in
    let v35: [Float] = v13[0] in
    v15.p0 = v16 in
    let v46: s1 = s1(v68, v76) in
    v15 = v76 in
    let v112: s0 = v46.p1 in
    v28[0] = v67 in
    v76.p1 = v9 in
    v68.p0 = v5 in
    var v78: s1 = v38 in
    v76.p1 = v28 in
    v76 = v112 in
    v17[0] = v35 in
    v78.p1 = v84 in
    let v136: s0 = v78.p0 in
    v136
  } in
  let f35: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [s0] = [v0, v0, v0] in
    let v5: s0 = v3[0] in
    let v8: s1 = s1(v5, v5) in
    let v11: s0 = v8.p0 in
    let v28: s0 = f41(v11) in
    v28
  } in
  let f27: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    var v3: s1 = v1 in
    v3
  } in
  let f12: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    let v4: s1 = v0[2] in
    let v7: s0 = v4.p0 in
    let v3: s0 = f41(v7) in
    let v2: s1 = v0[1] in
    var v6: s1 = v2 in
    var v11: s1 = v4 in
    var v5: [s1] = v0 in
    let v9: s0 = f41(v3) in
    let v18: s0 = v6.p1 in
    let v1: s1 = v5[2] in
    v11.p0 = v9 in
    v5[1] = v2 in
    let v22: s0 = v4.p1 in
    v5[0] = v6 in
    let v14: s1 = f27(v4, v6) in
    var v29: s0 = v3 in
    v5[1] = v1 in
    let v23: s1 = s1(v7, v22) in
    let v25: s1 = f27(v2, v23) in
    v5[0] = v25 in
    var v30: s1 = v2 in
    v5[0] = v14 in
    v11.p0 = v9 in
    v5[2] = v1 in
    v30.p0 = v29 in
    let v77: s0 = v11.p0 in
    v5[2] = v30 in
    var v41: [s1] = v0 in
    let v73: s1 = v5[2] in
    v6.p0 = v18 in
    v41[1] = v6 in
    v6.p0 = v77 in
    let v64: [[s1]] = [v5, v41, v0, v5, v0, v0] in
    let v72: s1 = v0[0] in
    v6.p1 = v22 in
    v5[2] = v73 in
    v41[0] = v72 in
    v41[2] = v25 in
    let v85: [s1] = v64[1] in
    v85
  } in
  let f10: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    var v8: s0 = v7 in
    let v4: s0 = f35(v8) in
    let v3: s0 = f35(v8) in
    var v5: s0 = v7 in
    let v2: [[Float]] = v0.p1 in
    let v13: [[[Float]]] = [v2, v2, v2, v2] in
    let v1: [[Float]] = v7.p1 in
    v8.p1 = v1 in
    var v9: [[[Float]]] = v13 in
    let v21: s0 = f41(v5) in
    v7.p1 = v2 in
    let v20: [[Float]] = v7.p1 in
    let v17: [[Float]] = v21.p0 in
    v9[2] = v1 in
    let v23: [[Float]] = v7.p0 in
    let v25: [[Float]] = v7.p0 in
    v9[0] = v2 in
    let v58: [[Float]] = v4.p1 in
    var v28: [[[Float]]] = v9 in
    v7 = v21 in
    v28[3] = v2 in
    v28[1] = v20 in
    let v19: [[Float]] = v28[1] in
    let v37: s0 = f41(v3) in
    let v27: s0 = f35(v21) in
    v28[0] = v2 in
    v8 = v3 in
    let v29: [[Float]] = v37.p0 in
    var v42: s0 = v27 in
    v8.p1 = v19 in
    v28[3] = v19 in
    let v84: s0 = f35(v42) in
    v8.p0 = v29 in
    v9[3] = v58 in
    let v39: [[Float]] = v84.p0 in
    let v81: s0 = f35(v37) in
    v5 = v4 in
    let v69: [[Float]] = v3.p0 in
    v8.p0 = v29 in
    v28[0] = v19 in
    let v66: [[Float]] = v81.p1 in
    let v82: [[[Float]]] = [v39, v25, v69, v23, v17] in
    let v77: [[Float]] = v82[1] in
    let v93: s0 = s0(v77, v66) in
    v93
  } in
  let noinline_f0: ([s1], Float) -> Float = (v0: [s1], v1: Float) -> Float {
    let v5: [s1] = f12(v0) in
    let v6: [s1] = f12(v0) in
    let v3: s1 = v0[0] in
    let v7: s1 = v0[1] in
    var v4: s1 = v7 in
    v4 = v7 in
    let v8: s1 = v0[0] in
    var v12: [s1] = v5 in
    v12[1] = v7 in
    let v19: s1 = v0[1] in
    let v11: s0 = v8.p0 in
    let v22: s0 = v4.p1 in
    let v13: s0 = f35(v22) in
    let v17: s1 = v12[2] in
    var v43: s0 = v13 in
    v4.p1 = v11 in
    let v31: s0 = f10(v22) in
    let v55: [[Float]] = v43.p0 in
    v4.p0 = v31 in
    let v54: s0 = f41(v22) in
    let v28: [[Float]] = v43.p1 in
    var v51: [[Float]] = v28 in
    let v91: [Float] = v55[0] in
    let v47: s0 = v17.p0 in
    var v96: [Float] = v91 in
    let v143: s1 = v6[1] in
    v43.p1 = v51 in
    v4.p0 = v13 in
    let v66: s1 = f27(v143, v19) in
    let v140: [[Float]] = v54.p0 in
    let v132: [[Float]] = v47.p1 in
    let v120: [Float] = v140[0] in
    let v112: [Float] = v140[0] in
    v51[1] = v112 in
    let v173: s0 = v66.p0 in
    v51[0] = v120 in
    let v105: Float = v96[0] in
    v4.p1 = v173 in
    v12[2] = v3 in
    v4.p0 = v54 in
    v43.p1 = v132 in
    let v165: [[Float]] = v173.p0 in
    v43.p0 = v165 in
    v4.p1 = v173 in
    v105
  } in
  fun loop(i: Int, v0: [s1], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s1] = [s1(s0([[0.0]], [[1.0], [2.0]]), s0([[3.0]], [[4.0], [5.0]])), s1(s0([[6.0]], [[7.0], [8.0]]), s0([[9.0]], [[10.0], [11.0]])), s1(s0([[12.0]], [[13.0], [14.0]]), s0([[15.0]], [[16.0], [17.0]]))] in
    let v1: Float = 18.0 in
    let initialResult: Float = 18.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()