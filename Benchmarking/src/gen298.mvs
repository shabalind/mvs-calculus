  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  let f37: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v3: [s0] = v0 in
    var v6: [s0] = v3 in
    let v1: s0 = v6[1] in
    let v4: s0 = v6[2] in
    var v8: [s0] = v0 in
    var v13: s0 = v4 in
    var v10: s0 = v1 in
    v8[2] = v4 in
    let v7: [[Float]] = v4.p0 in
    let v5: s0 = s0(v7) in
    v10.p0 = v7 in
    v13.p0 = v7 in
    let v20: [[Float]] = v13.p0 in
    v3[0] = v1 in
    v8[1] = v5 in
    v3[0] = v10 in
    var v15: s0 = v10 in
    let v12: [[Float]] = v15.p0 in
    let v24: [[Float]] = v10.p0 in
    let v21: s0 = s0(v7) in
    v13.p0 = v12 in
    let v26: s0 = v0[2] in
    let v27: [[Float]] = v10.p0 in
    var v25: [s0] = v8 in
    v13.p0 = v20 in
    v15.p0 = v24 in
    v8[1] = v26 in
    let v37: s0 = v25[0] in
    let v55: [[Float]] = v21.p0 in
    let v100: s1 = s1(v15, v25) in
    v8[1] = v5 in
    v6[1] = v13 in
    var v49: s0 = v4 in
    v15.p0 = v12 in
    let v48: [[Float]] = v26.p0 in
    var v38: s1 = v100 in
    v15.p0 = v48 in
    v15.p0 = v27 in
    v13.p0 = v55 in
    v38.p0 = v49 in
    v38.p1 = v25 in
    v8[1] = v37 in
    let v116: [s0] = v38.p1 in
    v116
  } in
  let f35: (s1) -> s1 = (v0: s1) -> s1 {
    var v6: s1 = v0 in
    var v2: s1 = v6 in
    let v7: s0 = v6.p0 in
    var v1: s0 = v7 in
    v6.p0 = v7 in
    var v4: s0 = v1 in
    var v5: s0 = v1 in
    let v9: [s0] = v0.p1 in
    var v3: s0 = v7 in
    let v11: [s0] = f37(v9) in
    var v10: s0 = v7 in
    let v8: [s0] = f37(v11) in
    let v14: [[Float]] = v5.p0 in
    v3 = v4 in
    let v21: [s0] = v0.p1 in
    var v17: s1 = v0 in
    v4.p0 = v14 in
    var v20: s1 = v17 in
    let v61: s0 = s0(v14) in
    let v37: [[Float]] = v5.p0 in
    let v36: [s1] = [v6, v17, v20, v20, v6] in
    let v62: [Float] = v14[2] in
    var v16: [[Float]] = v14 in
    v17 = v2 in
    v16[0] = v62 in
    v1.p0 = v16 in
    let v24: [[Float]] = v10.p0 in
    let v23: [Float] = v16[1] in
    v20.p1 = v9 in
    var v48: [[Float]] = v24 in
    v48[0] = v62 in
    let v27: [Float] = v48[2] in
    v10.p0 = v37 in
    let v54: [s0] = f37(v8) in
    v5.p0 = v14 in
    var v25: [[Float]] = v14 in
    let v43: s1 = v36[2] in
    v16[1] = v27 in
    let v47: [s0] = f37(v21) in
    let v45: [[Float]] = v5.p0 in
    v2 = v43 in
    v10.p0 = v14 in
    v16 = v48 in
    v2.p1 = v47 in
    v5.p0 = v45 in
    let v51: [[Float]] = v61.p0 in
    var v46: [[Float]] = v37 in
    v1.p0 = v51 in
    var v215: [s1] = v36 in
    v20.p1 = v9 in
    v2.p0 = v10 in
    v46[0] = v23 in
    var v76: [[Float]] = v46 in
    v4.p0 = v14 in
    v46 = v25 in
    v10.p0 = v76 in
    let v156: s1 = v36[0] in
    v17.p1 = v54 in
    v215[3] = v156 in
    let v104: s1 = v215[3] in
    v25[1] = v62 in
    v16[1] = v23 in
    v20.p0 = v3 in
    v104
  } in
  let f32: (s1) -> s1 = (v0: s1) -> s1 {
    var v4: s1 = v0 in
    let v8: s1 = f35(v0) in
    let v7: s0 = v4.p0 in
    var v9: s0 = v7 in
    let v3: s0 = v4.p0 in
    let v1: s1 = f35(v4) in
    var v5: s0 = v7 in
    v4.p0 = v9 in
    v4.p0 = v7 in
    v4.p0 = v7 in
    var v6: s1 = v1 in
    v4.p0 = v3 in
    let v18: s0 = v4.p0 in
    let v13: [[Float]] = v3.p0 in
    let v12: [Float] = v13[1] in
    var v16: [Float] = v12 in
    var v14: [Float] = v16 in
    let v11: [Float] = v13[2] in
    let v27: [[Float]] = v9.p0 in
    var v30: [[Float]] = v27 in
    v5.p0 = v27 in
    var v17: s0 = v5 in
    var v24: s1 = v4 in
    v30[1] = v14 in
    let v20: s1 = f35(v8) in
    var v19: [Float] = v12 in
    let v23: Float = v11[0] in
    let v22: s0 = s0(v13) in
    v17.p0 = v13 in
    let v32: [Float] = v13[0] in
    let v43: [Float] = v13[2] in
    let v49: Float = v19[0] in
    let v37: [[Float]] = v22.p0 in
    let v50: [[Float]] = v18.p0 in
    let v56: [s0] = v20.p1 in
    let v35: [[Float]] = v9.p0 in
    let v118: [s0] = f37(v56) in
    let v39: s1 = f35(v24) in
    v16[0] = v23 in
    v30[1] = v14 in
    v5.p0 = v30 in
    v9.p0 = v37 in
    let v59: s0 = v56[0] in
    v19[0] = v23 in
    let v61: [s0] = f37(v56) in
    let v70: s0 = v6.p0 in
    v6.p1 = v61 in
    let v76: [s0] = [v17, v22] in
    v4.p0 = v70 in
    let v40: [[Float]] = v59.p0 in
    v14[0] = v49 in
    let v82: [s0] = f37(v61) in
    v4.p0 = v7 in
    let v134: [s0] = f37(v56) in
    let v71: s0 = v118[0] in
    let v160: s1 = f35(v39) in
    v9.p0 = v35 in
    v30[2] = v43 in
    v9.p0 = v40 in
    v24.p0 = v9 in
    v6.p1 = v82 in
    let v123: Float = v11[0] in
    let v72: Float = v32[0] in
    v30[1] = v32 in
    let v92: s0 = v76[1] in
    v14[0] = v72 in
    let v162: s0 = v134[0] in
    v30[1] = v16 in
    let v129: Float = v19[0] in
    v6.p1 = v134 in
    v19[0] = v72 in
    let v154: [s0] = f37(v118) in
    v14[0] = v72 in
    v17.p0 = v50 in
    v14[0] = v129 in
    let v125: [[Float]] = v71.p0 in
    v24.p1 = v118 in
    v24.p1 = v134 in
    v24.p0 = v92 in
    v14[0] = v123 in
    v24.p0 = v162 in
    v17.p0 = v125 in
    v6.p1 = v154 in
    v160
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    var v5: s1 = v0 in
    let v6: [s0] = v5.p1 in
    let v2: [s0] = v0.p1 in
    let v11: [s0] = f37(v6) in
    let v3: s1 = f32(v5) in
    let v4: s0 = v11[0] in
    let v8: [[Float]] = v4.p0 in
    let v13: s0 = v2[0] in
    var v14: [[Float]] = v8 in
    let v34: [Float] = v14[2] in
    let v12: s0 = v2[0] in
    v5 = v3 in
    v14[0] = v34 in
    let v41: [[Float]] = v13.p0 in
    let v17: [s0] = v3.p1 in
    let v24: [Float] = v41[2] in
    v14[1] = v34 in
    let v20: s0 = v11[0] in
    v5.p0 = v20 in
    let v30: s0 = v17[0] in
    v5.p0 = v30 in
    var v26: Float = v1 in
    var v82: [s0] = v17 in
    v14[1] = v24 in
    v14[0] = v24 in
    v5.p0 = v12 in
    let v98: Float = v34[0] in
    v5.p1 = v2 in
    v5.p1 = v82 in
    var v97: Float = v26 in
    let v206: Float = v97 / v98 in
    v206
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0], [2.0]]), [s0([[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]]), s0([[9.0], [10.0], [11.0]])]) in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()