  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: [[s1]]
    var p1: s2
    var p2: [s2]
  } in
  struct s8 {
    var p0: s3
    var p1: s1
  } in
  let f26: (s2) -> s2 = (v0: s2) -> s2 {
    v0
  } in
  let f17: (s3) -> s3 = (v0: s3) -> s3 {
    let v6: s2 = v0.p1 in
    let v5: s2 = f26(v6) in
    let v7: [[s1]] = v0.p0 in
    let v2: [s2] = [v5, v5, v5] in
    let v14: s3 = s3(v7, v5, v2) in
    v14
  } in
  let f10: (s3) -> s3 = (v0: s3) -> s3 {
    let v1: s3 = f17(v0) in
    let v7: s3 = f17(v1) in
    let v5: [[s1]] = v7.p0 in
    let v8: [s1] = v5[0] in
    let v10: s3 = f17(v7) in
    let v13: s2 = v0.p1 in
    let v2: [s2] = v0.p2 in
    let v23: s2 = f26(v13) in
    let v21: [s2] = [v23, v13, v13, v23] in
    var v14: [s2] = v2 in
    let v37: s2 = v21[2] in
    var v24: [s2] = v2 in
    var v27: s3 = v10 in
    let v31: s2 = f26(v37) in
    let v40: s2 = f26(v31) in
    v27.p2 = v2 in
    v27.p2 = v14 in
    let v25: s2 = f26(v37) in
    let v32: [[s1]] = v1.p0 in
    var v26: s3 = v27 in
    v14 = v24 in
    v27.p1 = v25 in
    v27.p1 = v13 in
    let v61: s2 = f26(v40) in
    v26.p1 = v25 in
    var v117: [[s1]] = v5 in
    v26.p0 = v32 in
    v27.p0 = v117 in
    let v112: s2 = v24[0] in
    v26.p1 = v23 in
    v26.p1 = v61 in
    v27.p0 = v32 in
    v27.p1 = v112 in
    var v127: [s1] = v8 in
    v117[1] = v127 in
    v127 = v8 in
    v27.p1 = v61 in
    v26
  } in
  let noinline_f0: (s8, Float) -> Float = (v0: s8, v1: Float) -> Float {
    var v4: s8 = v0 in
    let v3: s3 = v0.p0 in
    let v8: s1 = v4.p1 in
    let v6: s3 = f10(v3) in
    v4.p0 = v6 in
    var v7: s1 = v8 in
    let v13: [s0] = v8.p0 in
    v4.p1 = v7 in
    let v16: s0 = v13[0] in
    v7.p1 = v16 in
    var v44: s0 = v16 in
    var v25: s0 = v44 in
    let v28: s0 = v13[0] in
    let v42: s0 = v13[0] in
    let v76: [[Float]] = v42.p1 in
    v4.p1 = v7 in
    var v43: s0 = v28 in
    v7.p0 = v13 in
    let v66: [[Float]] = v43.p0 in
    let v61: [Float] = v66[0] in
    let v105: [[Float]] = v25.p1 in
    v44.p1 = v105 in
    v25.p1 = v76 in
    var v122: [[Float]] = v66 in
    v25.p0 = v122 in
    v7.p1 = v44 in
    let v203: Float = v61[0] in
    v203
  } in
  fun loop(i: Int, v0: s8, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s8 = s8(s3([[s1([s0([[0.0]], [[1.0], [2.0], [3.0]])], s0([[4.0]], [[5.0], [6.0], [7.0]]))], [s1([s0([[8.0]], [[9.0], [10.0], [11.0]])], s0([[12.0]], [[13.0], [14.0], [15.0]]))]], s2(s0([[16.0]], [[17.0], [18.0], [19.0]]), [s0([[20.0]], [[21.0], [22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0], [27.0]])]), [s2(s0([[28.0]], [[29.0], [30.0], [31.0]]), [s0([[32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0]], [[37.0], [38.0], [39.0]])]), s2(s0([[40.0]], [[41.0], [42.0], [43.0]]), [s0([[44.0]], [[45.0], [46.0], [47.0]]), s0([[48.0]], [[49.0], [50.0], [51.0]])]), s2(s0([[52.0]], [[53.0], [54.0], [55.0]]), [s0([[56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0]], [[61.0], [62.0], [63.0]])])]), s1([s0([[64.0]], [[65.0], [66.0], [67.0]])], s0([[68.0]], [[69.0], [70.0], [71.0]]))) in
    let v1: Float = 72.0 in
    let initialResult: Float = 72.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()