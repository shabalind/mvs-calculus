  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s0
  } in
  struct s3 {
    var p0: [s2]
    var p1: [s2]
  } in
  struct s6 {
    var p0: s3
    var p1: s2
  } in
  let f71: (s2) -> s2 = (v0: s2) -> s2 {
    var v6: s2 = v0 in
    let v5: [s2] = [v0] in
    let v4: [s1] = v0.p0 in
    let v3: [s1] = v6.p0 in
    let v9: s3 = s3(v5, v5) in
    let v1: s1 = v4[0] in
    let v2: [s2] = v9.p0 in
    let v11: s0 = v1.p0 in
    let v19: s2 = s2(v4, v11) in
    var v8: s0 = v11 in
    var v23: s2 = v6 in
    var v25: s3 = v9 in
    v23.p0 = v3 in
    let v16: [s1] = v23.p0 in
    let v10: [[Float]] = v11.p1 in
    v8.p1 = v10 in
    let v21: [s2] = v25.p1 in
    v23.p0 = v3 in
    v6.p1 = v8 in
    var v41: [s2] = v21 in
    v25.p0 = v41 in
    v6 = v23 in
    v41[0] = v6 in
    v23.p0 = v3 in
    let v48: s2 = v2[0] in
    v41[0] = v19 in
    v25.p1 = v2 in
    v41[0] = v0 in
    v41[0] = v23 in
    v25.p1 = v41 in
    v41[0] = v48 in
    var v30: s2 = v6 in
    v30.p1 = v11 in
    v41[0] = v23 in
    v41[0] = v30 in
    v41[0] = v6 in
    v30.p0 = v16 in
    let v93: s2 = v41[0] in
    v93
  } in
  let f56: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v7: [s1] = v0 in
    var v3: [s1] = v7 in
    var v4: [s1] = v0 in
    var v1: [s1] = v3 in
    let v5: s1 = v7[0] in
    var v2: s1 = v5 in
    var v9: s1 = v5 in
    let v8: s0 = v5.p0 in
    let v6: s1 = v7[0] in
    let v15: s1 = v4[0] in
    var v10: s1 = v6 in
    let v13: [[Float]] = v8.p1 in
    let v14: s0 = v6.p0 in
    let v12: s1 = v0[0] in
    let v19: [s0] = [v8, v8] in
    let v31: s0 = v19[1] in
    var v27: [s0] = v19 in
    let v25: s0 = v12.p0 in
    v9.p0 = v25 in
    let v16: s0 = v2.p0 in
    var v28: [s1] = v4 in
    let v21: s0 = v15.p0 in
    v9.p1 = v21 in
    var v35: s1 = v2 in
    let v23: s0 = v27[1] in
    let v46: s1 = v28[0] in
    var v32: s1 = v12 in
    v9.p0 = v25 in
    let v33: [[Float]] = v31.p1 in
    var v30: [s0] = v27 in
    let v52: s0 = s0(v33, v33) in
    v28[0] = v2 in
    v10.p1 = v23 in
    var v76: [s1] = v1 in
    let v51: s0 = v30[0] in
    let v54: s0 = v10.p1 in
    v7[0] = v10 in
    var v37: [s0] = v27 in
    var v26: s1 = v35 in
    v76[0] = v46 in
    let v122: s0 = v9.p1 in
    let v60: [[Float]] = v16.p1 in
    v28[0] = v32 in
    var v65: s0 = v54 in
    v35.p1 = v31 in
    v10.p1 = v65 in
    let v100: s0 = v5.p0 in
    v2.p0 = v25 in
    var v49: s1 = v9 in
    let v58: s1 = v3[0] in
    var v73: [s0] = v27 in
    var v41: [s1] = v3 in
    v30 = v73 in
    let v90: s2 = s2(v4, v100) in
    var v75: [s0] = v37 in
    let v113: s2 = f71(v90) in
    v30[0] = v16 in
    v41[0] = v49 in
    let v96: s2 = f71(v113) in
    v7[0] = v49 in
    v3[0] = v58 in
    let v173: s0 = v26.p0 in
    v1[0] = v46 in
    v41 = v4 in
    v3[0] = v10 in
    let v253: s2 = f71(v96) in
    v32.p1 = v14 in
    v2.p0 = v14 in
    let v69: [[Float]] = v173.p0 in
    let v125: s0 = s0(v13, v69) in
    v32.p0 = v122 in
    v41 = v76 in
    v1[0] = v35 in
    v26.p1 = v54 in
    v65.p0 = v60 in
    v3[0] = v12 in
    v30 = v75 in
    v32.p1 = v125 in
    v10.p1 = v51 in
    let v206: s0 = v253.p1 in
    let v189: s0 = v75[1] in
    var v163: s0 = v31 in
    v37[1] = v52 in
    v10.p1 = v163 in
    v26.p1 = v189 in
    v10.p0 = v122 in
    v26.p0 = v206 in
    v75 = v73 in
    v41
  } in
  let f44: (s2) -> s2 = (v0: s2) -> s2 {
    let v1: s0 = v0.p1 in
    let v7: [[Float]] = v1.p1 in
    let v3: [[Float]] = v1.p1 in
    var v8: [[Float]] = v3 in
    let v2: [Float] = v3[0] in
    let v6: [Float] = v8[0] in
    let v10: [Float] = v7[0] in
    v8[0] = v10 in
    let v9: [s1] = v0.p0 in
    v8[0] = v6 in
    let v17: s2 = f71(v0) in
    let v25: s2 = f71(v17) in
    var v13: [s1] = v9 in
    var v19: s2 = v0 in
    v19.p0 = v9 in
    v8[0] = v6 in
    let v16: [s1] = v17.p0 in
    let v20: [Float] = v3[0] in
    v8[0] = v6 in
    v8[0] = v2 in
    let v45: [s1] = f56(v16) in
    v8[0] = v20 in
    let v32: s1 = v45[0] in
    v19.p0 = v9 in
    v19.p0 = v9 in
    let v42: [s1] = v25.p0 in
    let v59: s0 = v32.p0 in
    var v56: s0 = v59 in
    v56.p1 = v8 in
    v19.p0 = v42 in
    v56.p0 = v8 in
    v19.p0 = v13 in
    v19.p1 = v1 in
    var v140: [Float] = v2 in
    var v86: s2 = v19 in
    v86.p1 = v56 in
    v8[0] = v140 in
    v56.p0 = v3 in
    v86
  } in
  let f27: (s6) -> s6 = (v0: s6) -> s6 {
    var v4: s6 = v0 in
    let v6: s3 = v0.p0 in
    let v3: [s6] = [v4, v4, v4, v0, v0] in
    let v5: s6 = v3[3] in
    let v1: [s2] = v6.p1 in
    let v2: s2 = v1[0] in
    var v9: s3 = v6 in
    let v12: s2 = f44(v2) in
    let v37: s2 = f71(v2) in
    var v20: [s2] = v1 in
    v9.p1 = v20 in
    let v14: s2 = v20[0] in
    let v26: s2 = f44(v2) in
    let v28: s2 = f44(v26) in
    let v73: s2 = v20[0] in
    v20[0] = v14 in
    v4.p1 = v73 in
    let v32: s2 = v20[0] in
    let v23: s2 = f44(v28) in
    var v25: s6 = v5 in
    v20[0] = v37 in
    var v18: [s2] = v1 in
    let v41: s2 = f71(v32) in
    v9.p1 = v18 in
    v18[0] = v41 in
    v4.p1 = v23 in
    v20[0] = v14 in
    var v48: [s6] = v3 in
    v18[0] = v14 in
    v18[0] = v12 in
    var v49: [s2] = v1 in
    v9.p0 = v49 in
    v20[0] = v23 in
    v20[0] = v23 in
    v9.p1 = v49 in
    let v129: s6 = v48[1] in
    let v130: s2 = v18[0] in
    v20[0] = v130 in
    v48[0] = v25 in
    v25.p0 = v9 in
    v129
  } in
  let f16: (s6, s0) -> s6 = (v0: s6, v1: s0) -> s6 {
    var v3: s6 = v0 in
    let v4: s6 = f27(v3) in
    let v8: s2 = v4.p1 in
    v3.p1 = v8 in
    let v2: s2 = v4.p1 in
    let v5: s2 = v3.p1 in
    v3.p1 = v8 in
    v3.p1 = v5 in
    v3.p1 = v2 in
    v3.p1 = v2 in
    v3
  } in
  let f11: (s6, Float, s2) -> Float = (v0: s6, v1: Float, v2: s2) -> Float {
    let v6: s0 = v2.p1 in
    var v4: s0 = v6 in
    var v8: Float = v1 in
    let v12: Float = v8 / v8 in
    var v26: Float = v12 in
    let v61: Float = v26 * v1 in
    let v36: [[Float]] = v4.p0 in
    let v47: [Float] = v36[0] in
    let v95: [[Float]] = v6.p0 in
    let v109: Float = v47[0] in
    v4.p1 = v95 in
    let v78: Float = v109 * v61 in
    v78
  } in
  let noinline_f0: ([s6], Float) -> Float = (v0: [s6], v1: Float) -> Float {
    let v6: s6 = v0[0] in
    let v5: s6 = v0[0] in
    let v7: s2 = v6.p1 in
    let v3: s2 = f71(v7) in
    let v10: s3 = v6.p0 in
    var v19: s3 = v10 in
    let v4: [s2] = v19.p1 in
    let v16: [s2] = v10.p0 in
    var v23: [s6] = v0 in
    let v12: s3 = s3(v4, v16) in
    var v15: [s2] = v16 in
    let v18: s2 = v15[0] in
    let v27: s2 = v6.p1 in
    var v46: Float = v1 in
    let v24: s3 = s3(v4, v4) in
    let v33: s2 = f71(v27) in
    v23[0] = v5 in
    let v34: [s2] = v10.p0 in
    var v58: s6 = v5 in
    v15[0] = v7 in
    let v60: s6 = s6(v24, v33) in
    let v42: s0 = v3.p1 in
    var v44: s0 = v42 in
    var v41: [s6] = v23 in
    v58.p0 = v19 in
    v19 = v12 in
    v19.p1 = v16 in
    v19.p1 = v34 in
    let v89: s6 = v41[0] in
    v23[0] = v58 in
    let v80: s6 = f16(v89, v44) in
    let v76: Float = f11(v80, v46, v27) in
    let v109: Float = f11(v60, v76, v18) in
    let v98: [[Float]] = v44.p0 in
    v44.p0 = v98 in
    v109
  } in
  fun loop(i: Int, v0: [s6], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s6] = [s6(s3([s2([s1(s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]]))], s0([[4.0]], [[5.0]]))], [s2([s1(s0([[6.0]], [[7.0]]), s0([[8.0]], [[9.0]]))], s0([[10.0]], [[11.0]]))]), s2([s1(s0([[12.0]], [[13.0]]), s0([[14.0]], [[15.0]]))], s0([[16.0]], [[17.0]]))), s6(s3([s2([s1(s0([[18.0]], [[19.0]]), s0([[20.0]], [[21.0]]))], s0([[22.0]], [[23.0]]))], [s2([s1(s0([[24.0]], [[25.0]]), s0([[26.0]], [[27.0]]))], s0([[28.0]], [[29.0]]))]), s2([s1(s0([[30.0]], [[31.0]]), s0([[32.0]], [[33.0]]))], s0([[34.0]], [[35.0]])))] in
    let v1: Float = 36.0 in
    let initialResult: Float = 36.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()