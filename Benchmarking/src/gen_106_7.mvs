  struct s0 {
    var p0: [[Float]]
    var p1: Float
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  let noinline_f0: (s2, [s2], s2, s1, s0, s2, Float) -> Float = (v0: s2, v1: [s2], v2: s2, v3: s1, v4: s0, v5: s2, v6: Float) -> Float {
    let v7: [Float] = [v6, v6] in
    var v16: Float = v6 in
    var v12: [Float] = v7 in
    var v21: Float = v6 in
    var v37: Float = v16 in
    v12[0] = v6 in
    let v53: Float = v12[1] in
    v12[1] = v37 in
    let v26: Float = v12[1] in
    let v34: Float = v7[0] in
    v12[0] = v21 in
    v21 = v34 in
    v12[0] = v53 in
    v12[1] = v21 in
    v12[1] = v16 in
    let v58: Float = v7[0] in
    v12[1] = v26 in
    v12[0] = v26 in
    var v39: Float = v16 in
    v12[0] = v34 in
    let v61: Float = v12[0] in
    let v155: [Float] = [v39, v58, v58, v61, v58, v39, v53] in
    v12[1] = v26 in
    var v97: [Float] = v155 in
    v12[1] = v61 in
    v21 = v61 in
    v12[0] = v34 in
    let v355: Float = v97[4] in
    v355
  } in
  fun loop(i: Int, v0: s2, v1: [s2], v2: s2, v3: s1, v4: s0, v5: s2, v6: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5, v6) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, v6, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0], [1.0], [2.0]], 3.0), [s0([[4.0], [5.0], [6.0]], 7.0), s0([[8.0], [9.0], [10.0]], 11.0)]) in
    let v1: [s2] = [s2(s0([[12.0], [13.0], [14.0]], 15.0), [s0([[16.0], [17.0], [18.0]], 19.0), s0([[20.0], [21.0], [22.0]], 23.0)]), s2(s0([[24.0], [25.0], [26.0]], 27.0), [s0([[28.0], [29.0], [30.0]], 31.0), s0([[32.0], [33.0], [34.0]], 35.0)]), s2(s0([[36.0], [37.0], [38.0]], 39.0), [s0([[40.0], [41.0], [42.0]], 43.0), s0([[44.0], [45.0], [46.0]], 47.0)])] in
    let v2: s2 = s2(s0([[48.0], [49.0], [50.0]], 51.0), [s0([[52.0], [53.0], [54.0]], 55.0), s0([[56.0], [57.0], [58.0]], 59.0)]) in
    let v3: s1 = s1(s0([[60.0], [61.0], [62.0]], 63.0), s0([[64.0], [65.0], [66.0]], 67.0)) in
    let v4: s0 = s0([[68.0], [69.0], [70.0]], 71.0) in
    let v5: s2 = s2(s0([[72.0], [73.0], [74.0]], 75.0), [s0([[76.0], [77.0], [78.0]], 79.0), s0([[80.0], [81.0], [82.0]], 83.0)]) in
    let v6: Float = 84.0 in
    let initialResult: Float = 84.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, v6, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()