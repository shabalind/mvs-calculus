  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  let f92: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [s0] = [v0, v0, v0, v0] in
    let v7: s0 = v1[1] in
    let v6: s0 = v1[0] in
    let v4: s0 = v1[3] in
    let v9: s0 = v1[3] in
    let v14: [Float] = v9.p0 in
    let v13: Float = v14[1] in
    var v18: Float = v13 in
    var v25: [s0] = v1 in
    let v22: s0 = v25[2] in
    v25[1] = v4 in
    let v35: [Float] = v4.p0 in
    v25[2] = v22 in
    v25[3] = v6 in
    let v34: s0 = v1[2] in
    let v36: s0 = v25[3] in
    var v98: [Float] = v35 in
    v25[2] = v34 in
    let v83: [[Float]] = v6.p1 in
    var v57: s0 = v0 in
    let v84: [Float] = v57.p0 in
    let v55: [Float] = v7.p0 in
    var v71: s0 = v6 in
    let v117: s0 = v1[1] in
    let v86: [Float] = v22.p0 in
    v25[3] = v71 in
    v71.p0 = v55 in
    var v67: [Float] = v35 in
    v67[1] = v18 in
    v71.p0 = v84 in
    var v113: s0 = v36 in
    v57.p0 = v67 in
    v113.p0 = v86 in
    v57.p0 = v98 in
    v57 = v117 in
    v71.p1 = v83 in
    v113
  } in
  let noinline_f0: (s0, s0, Float) -> Float = (v0: s0, v1: s0, v2: Float) -> Float {
    var v6: s0 = v1 in
    let v3: [[Float]] = v1.p1 in
    let v5: s0 = f92(v6) in
    let v16: [Float] = v1.p0 in
    let v12: [Float] = v3[2] in
    v6.p0 = v16 in
    let v35: [Float] = v3[0] in
    var v29: [[Float]] = v3 in
    let v30: [Float] = v3[1] in
    let v23: [[Float]] = v5.p1 in
    var v47: [[Float]] = v29 in
    v47[2] = v12 in
    v47[1] = v35 in
    v6.p1 = v47 in
    v6.p1 = v3 in
    let v70: [Float] = v23[0] in
    v29[1] = v30 in
    v6.p1 = v23 in
    let v87: [Float] = v29[1] in
    let v51: Float = v70[0] in
    v47[2] = v87 in
    v29[0] = v35 in
    v47[0] = v87 in
    v51
  } in
  fun loop(i: Int, v0: s0, v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([0.0, 1.0], [[2.0], [3.0], [4.0]]) in
    let v1: s0 = s0([5.0, 6.0], [[7.0], [8.0], [9.0]]) in
    let v2: Float = 10.0 in
    let initialResult: Float = 10.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()