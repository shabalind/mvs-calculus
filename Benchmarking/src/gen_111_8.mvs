  let f2: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    var v3: [[Float]] = v0 in
    let v6: [Float] = v0[2] in
    v3[1] = v6 in
    let v2: [Float] = v3[0] in
    v3[1] = v2 in
    v3[1] = v6 in
    v3 = v0 in
    v3 = v0 in
    v3[1] = v2 in
    let v4: Float = v2[0] in
    let v11: [Float] = v3[2] in
    let v9: Float = v11[0] in
    var v15: [[Float]] = v3 in
    var v13: [[Float]] = v15 in
    let v16: [Float] = v15[0] in
    var v27: Float = v9 in
    v13 = v3 in
    v13[2] = v11 in
    v13[0] = v16 in
    let v32: [Float] = [v4] in
    let v19: [Float] = v0[2] in
    var v57: [Float] = v11 in
    v15[2] = v57 in
    v13 = v0 in
    v15[2] = v32 in
    let v23: [Float] = v15[0] in
    v57[0] = v27 in
    v13[2] = v23 in
    v13[0] = v19 in
    v13
  } in
  let noinline_f0: ([[Float]], [[Float]], [[Float]], Float) -> Float = (v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float) -> Float {
    var v7: [[Float]] = v0 in
    let v4: [Float] = v2[0] in
    v7[2] = v4 in
    let v5: [Float] = v2[0] in
    let v22: Float = v5[0] in
    let v35: Float = v22 * v22 in
    let v29: [Float] = v0[0] in
    let v71: [[Float]] = f2(v7) in
    v7[1] = v29 in
    let v30: [Float] = v71[0] in
    let v37: Float = v30[0] in
    v7[1] = v29 in
    let v66: [Float] = [v35, v35, v37, v37] in
    var v78: [Float] = v66 in
    let v91: Float = v78[1] in
    v91
  } in
  fun loop(i: Int, v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0], [1.0], [2.0]] in
    let v1: [[Float]] = [[3.0], [4.0], [5.0]] in
    let v2: [[Float]] = [[6.0], [7.0]] in
    let v3: Float = 8.0 in
    let initialResult: Float = 8.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()