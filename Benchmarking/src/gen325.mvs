  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f18: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p1 in
    let v5: [[Float]] = v0.p0 in
    let v15: [[Float]] = v0.p1 in
    let v18: [[Float]] = v0.p1 in
    let v23: [[Float]] = v0.p1 in
    var v26: s0 = v0 in
    v26.p1 = v23 in
    let v29: [[Float]] = v0.p1 in
    let v36: [[Float]] = v0.p0 in
    let v49: [[Float]] = v0.p0 in
    v26.p1 = v5 in
    var v41: s0 = v26 in
    var v22: [[Float]] = v15 in
    v41.p0 = v18 in
    let v40: [Float] = v7[0] in
    v41.p0 = v23 in
    let v52: [[Float]] = v41.p1 in
    var v38: s0 = v0 in
    v41.p1 = v36 in
    v26.p1 = v22 in
    let v48: [[Float]] = v0.p0 in
    let v63: [s0] = [v38, v41, v26, v0, v38, v26, v41] in
    v26.p1 = v48 in
    let v119: [[Float]] = v41.p0 in
    let v66: s0 = v63[1] in
    v26.p0 = v119 in
    var v126: [[Float]] = v52 in
    v26.p0 = v29 in
    v38.p0 = v5 in
    v38.p0 = v126 in
    v22[1] = v40 in
    v41.p0 = v49 in
    v66
  } in
  let f14: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    var v7: s0 = v0 in
    let v2: s0 = f18(v7) in
    let v13: s0 = f18(v7) in
    var v5: s0 = v2 in
    let v6: [[Float]] = v1.p0 in
    v5.p1 = v6 in
    v5.p1 = v6 in
    v5.p0 = v6 in
    let v36: [[Float]] = v13.p1 in
    v5.p1 = v36 in
    let v40: s0 = f18(v5) in
    v40
  } in
  let f5: ([s0], s0) -> s0 = (v0: [s0], v1: s0) -> s0 {
    let v5: [[Float]] = v1.p0 in
    let v8: [[[Float]]] = [v5, v5, v5, v5] in
    let v4: s0 = v0[0] in
    let v7: s0 = f18(v1) in
    let v2: [[Float]] = v4.p0 in
    let v3: [[Float]] = v8[3] in
    let v11: s0 = f14(v1, v4) in
    let v10: s0 = s0(v3, v2) in
    var v20: [s0] = v0 in
    v20[1] = v1 in
    let v38: s0 = v20[0] in
    v20[1] = v7 in
    let v73: s0 = f14(v10, v38) in
    let v92: s0 = f18(v73) in
    let v45: s0 = f14(v11, v92) in
    v45
  } in
  let f3: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: s0 = f18(v0) in
    let v2: s0 = f14(v0, v5) in
    var v6: s0 = v5 in
    var v4: s0 = v6 in
    let v8: [s0] = [v2, v5] in
    let v10: s0 = v8[0] in
    var v12: s0 = v10 in
    let v3: s0 = v8[0] in
    let v9: [s0] = [v6, v6, v2, v3] in
    let v7: s0 = v8[0] in
    var v13: s0 = v10 in
    var v21: [s0] = v9 in
    var v14: [s0] = v8 in
    var v27: [s0] = v8 in
    let v22: [[Float]] = v0.p0 in
    let v11: s0 = v27[0] in
    let v18: s0 = f14(v6, v6) in
    let v20: s0 = f5(v27, v11) in
    let v19: s0 = f5(v14, v18) in
    let v17: [[Float]] = v4.p1 in
    v27[1] = v12 in
    let v26: [[Float]] = v0.p0 in
    let v16: s0 = f14(v4, v5) in
    v27[1] = v16 in
    let v50: [[Float]] = v7.p0 in
    let v71: s0 = v21[2] in
    v14[1] = v16 in
    let v46: s0 = f5(v14, v20) in
    v27[1] = v5 in
    v4.p1 = v26 in
    let v30: s0 = f14(v12, v71) in
    v21[3] = v4 in
    let v54: s0 = f14(v10, v20) in
    let v58: s0 = f18(v30) in
    v14[0] = v2 in
    let v51: [[Float]] = v58.p1 in
    v4.p0 = v22 in
    v4.p0 = v50 in
    v6.p1 = v51 in
    let v44: [[Float]] = v46.p1 in
    v12.p1 = v51 in
    v13.p0 = v17 in
    let v105: [[Float]] = v19.p0 in
    v6 = v18 in
    var v92: [[Float]] = v44 in
    v12.p1 = v92 in
    v21[3] = v13 in
    let v108: s0 = f14(v54, v30) in
    v6.p1 = v105 in
    v108
  } in
  let noinline_f0: (s0, s0, Float) -> Float = (v0: s0, v1: s0, v2: Float) -> Float {
    let v5: s0 = f14(v1, v0) in
    let v7: [[Float]] = v5.p0 in
    let v4: [[Float]] = v1.p0 in
    let v15: s0 = f3(v5) in
    var v12: s0 = v1 in
    let v14: [[Float]] = v1.p0 in
    let v19: [[Float]] = v15.p1 in
    let v18: s0 = f3(v12) in
    let v23: [[Float]] = v18.p0 in
    let v17: [Float] = v23[0] in
    v12.p0 = v14 in
    v12.p1 = v19 in
    v12.p0 = v7 in
    let v91: Float = v17[0] in
    v12.p0 = v4 in
    v91
  } in
  fun loop(i: Int, v0: s0, v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0], [3.0]]) in
    let v1: s0 = s0([[4.0], [5.0]], [[6.0], [7.0]]) in
    let v2: Float = 8.0 in
    let initialResult: Float = 8.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()