  let f52: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v2: Float = v0 in
    var v4: Float = v1 in
    var v8: Float = v0 in
    var v5: Float = v1 in
    var v3: Float = v8 in
    var v14: Float = v2 in
    var v12: Float = v5 in
    var v10: Float = v5 in
    var v9: Float = v14 in
    var v24: Float = v5 in
    let v6: Float = v2 + v3 in
    var v18: Float = v2 in
    let v15: Float = v8 / v6 in
    var v11: Float = v4 in
    let v35: Float = v18 * v4 in
    var v17: Float = v24 in
    var v20: Float = v5 in
    var v28: Float = v14 in
    v10 = v20 in
    var v25: Float = v12 in
    var v23: Float = v28 in
    var v21: Float = v6 in
    let v55: [Float] = [v35, v17, v21, v28, v8, v10, v15] in
    let v49: Float = v55[0] in
    v23 = v49 in
    let v67: [Float] = [v25, v11, v10] in
    let v44: [[Float]] = [v67, v67, v67, v67, v67, v67, v67] in
    var v57: [Float] = v67 in
    v57[0] = v23 in
    var v58: [[Float]] = v44 in
    v58[0] = v57 in
    let v304: [Float] = v58[6] in
    v57[2] = v9 in
    let v147: Float = v304[0] in
    v147
  } in
  let f34: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    v6 = v0 in
    let v1: Float = f52(v6) in
    let v5: Float = f52(v1) in
    var v7: Float = v5 in
    var v2: Float = v1 in
    let v10: Float = f52(v2) in
    let v16: [Float] = [v5, v1, v2, v0, v7, v10] in
    var v30: [Float] = v16 in
    let v23: Float = v30[4] in
    v30[4] = v0 in
    let v51: Float = f52(v23) in
    v51
  } in
  let noinline_f0: ([[Float]], [Float], Float) -> Float = (v0: [[Float]], v1: [Float], v2: Float) -> Float {
    var v3: [Float] = v1 in
    let v6: Float = v1[0] in
    v3[0] = v2 in
    var v20: [Float] = v3 in
    v20[0] = v6 in
    var v9: Float = v6 in
    var v24: Float = v2 in
    v20[0] = v6 in
    v3[0] = v24 in
    var v17: Float = v9 in
    v3[0] = v2 in
    v20[0] = v24 in
    v20[0] = v2 in
    v20[0] = v17 in
    var v10: [Float] = v20 in
    let v29: Float = v10[0] in
    v10[0] = v6 in
    let v14: Float = v3[0] in
    v20[0] = v14 in
    v20[0] = v2 in
    v20[0] = v24 in
    var v99: Float = v2 in
    let v230: Float = f34(v24) in
    v3[0] = v17 in
    v3[0] = v9 in
    v20[0] = v230 in
    let v128: Float = v29 + v99 in
    v128
  } in
  fun loop(i: Int, v0: [[Float]], v1: [Float], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0], [1.0], [2.0]] in
    let v1: [Float] = [3.0] in
    let v2: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()