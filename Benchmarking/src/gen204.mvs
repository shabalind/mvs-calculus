  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
    var p2: s0
    var p3: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: [s1]
  } in
  struct s5 {
    var p0: [s3]
    var p1: [s3]
  } in
  struct s7 {
    var p0: s1
    var p1: s3
  } in
  let f53: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v1: [[Float]] = v0.p1 in
    let v5: [[Float]] = v6.p0 in
    var v4: [[Float]] = v5 in
    let v3: [Float] = v4[1] in
    let v2: [[Float]] = v0.p1 in
    v4[1] = v3 in
    var v7: s0 = v6 in
    var v11: [[Float]] = v4 in
    v4[0] = v3 in
    let v15: [[Float]] = v6.p1 in
    v6.p0 = v5 in
    v7.p0 = v15 in
    v11[0] = v3 in
    let v31: [[Float]] = v0.p1 in
    v7.p1 = v2 in
    let v9: Float = v3[0] in
    let v12: [[Float]] = v0.p0 in
    v7.p0 = v1 in
    let v21: [[Float]] = v6.p0 in
    v7.p0 = v4 in
    var v22: s0 = v6 in
    let v20: [Float] = v31[2] in
    v7.p1 = v11 in
    v6.p1 = v4 in
    var v16: s0 = v6 in
    let v27: [[Float]] = v7.p1 in
    let v18: [Float] = v1[2] in
    v16.p0 = v4 in
    let v43: [s0] = [v22, v22, v22, v6, v7] in
    let v25: Float = v20[0] in
    let v24: [[Float]] = v6.p1 in
    let v33: [[Float]] = v0.p0 in
    var v30: s0 = v6 in
    let v28: [[Float]] = v7.p1 in
    let v32: Float = v18[0] in
    let v41: s0 = v43[4] in
    v22.p0 = v1 in
    let v39: [Float] = v33[1] in
    v22.p0 = v28 in
    let v44: [[Float]] = v30.p1 in
    v4[2] = v3 in
    v22.p0 = v44 in
    let v36: [[Float]] = v16.p1 in
    var v65: s0 = v7 in
    var v117: s0 = v0 in
    let v47: [[[Float]]] = [v36, v21] in
    let v45: [[Float]] = v117.p0 in
    v7.p1 = v27 in
    v7.p0 = v33 in
    v16.p1 = v45 in
    var v52: [Float] = v3 in
    var v56: s0 = v41 in
    v22.p1 = v45 in
    let v53: s0 = v43[1] in
    v22.p0 = v12 in
    v52[0] = v9 in
    var v107: [[[Float]]] = v47 in
    let v87: [[Float]] = v117.p1 in
    v30.p1 = v87 in
    v22.p1 = v11 in
    v52[0] = v32 in
    v7 = v56 in
    let v108: [[Float]] = v117.p1 in
    let v112: [[Float]] = v107[0] in
    v11[0] = v39 in
    let v198: [[Float]] = v53.p1 in
    var v114: [s0] = v43 in
    v117.p1 = v24 in
    var v80: [s0] = v114 in
    v6.p1 = v31 in
    v52[0] = v32 in
    v65 = v41 in
    v80[3] = v65 in
    let v149: [[Float]] = v22.p0 in
    let v83: [[Float]] = v16.p0 in
    v6.p1 = v83 in
    v56.p0 = v12 in
    v6.p1 = v198 in
    var v254: [s0] = v80 in
    v11[2] = v52 in
    v6.p0 = v112 in
    v52[0] = v25 in
    v65.p1 = v108 in
    let v154: s0 = v254[1] in
    v16.p0 = v149 in
    v154
  } in
  let f24: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v3: [[Float]] = v0.p0 in
    let v7: s0 = f53(v4) in
    let v1: [Float] = v3[0] in
    let v5: [[Float]] = v7.p0 in
    var v6: [[Float]] = v3 in
    let v2: [[Float]] = v4.p0 in
    let v21: Float = v1[0] in
    v4.p0 = v2 in
    let v11: s0 = s0(v6, v6) in
    var v9: [Float] = v1 in
    v4.p1 = v3 in
    v6[1] = v9 in
    let v18: [[Float]] = v11.p1 in
    let v14: [Float] = v5[0] in
    v9[0] = v21 in
    var v22: [[Float]] = v18 in
    v6[1] = v14 in
    v4.p1 = v22 in
    v11
  } in
  let f18: (s1) -> s1 = (v0: s1) -> s1 {
    var v5: s1 = v0 in
    v5
  } in
  let noinline_f0: (s1, [s7], s5, Float) -> Float = (v0: s1, v1: [s7], v2: s5, v3: Float) -> Float {
    var v5: s1 = v0 in
    let v6: s1 = f18(v5) in
    let v8: s0 = v6.p2 in
    v5.p0 = v8 in
    let v7: s0 = f53(v8) in
    let v18: s1 = f18(v6) in
    var v9: s1 = v6 in
    let v14: s0 = f24(v8) in
    let v11: [s0] = v18.p3 in
    let v13: [s0] = v0.p3 in
    let v24: [[Float]] = v8.p0 in
    v9.p0 = v8 in
    let v16: [Float] = v24[2] in
    let v12: [s0] = v9.p3 in
    let v20: [s0] = v18.p1 in
    v5.p2 = v7 in
    let v15: Float = v16[0] in
    let v40: s0 = v12[2] in
    let v25: s0 = v12[2] in
    let v30: s0 = f24(v40) in
    v9.p2 = v40 in
    v5.p1 = v20 in
    v9.p2 = v25 in
    v5.p3 = v11 in
    let v95: s0 = f24(v8) in
    let v36: [Float] = v24[0] in
    let v56: s0 = v20[1] in
    var v41: [s0] = v20 in
    v5.p3 = v12 in
    var v55: s0 = v30 in
    v5.p1 = v41 in
    let v106: [[Float]] = v56.p0 in
    v55.p1 = v106 in
    let v74: s0 = f24(v25) in
    v5.p3 = v11 in
    v9.p3 = v13 in
    let v82: Float = v36[0] in
    v41[1] = v74 in
    v41[0] = v7 in
    v55 = v95 in
    let v75: [s0] = v9.p3 in
    v41[1] = v55 in
    v55.p1 = v106 in
    v9.p0 = v74 in
    var v107: Float = v82 in
    var v246: [s0] = v20 in
    let v94: Float = v15 - v107 in
    v5.p1 = v246 in
    v246[1] = v14 in
    v5.p3 = v75 in
    v94
  } in
  fun loop(i: Int, v0: s1, v1: [s7], v2: s5, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), [s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]]), [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])]) in
    let v1: [s7] = [s7(s1(s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]]), [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]]), s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]])], s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]]), [s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]]), s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])]), s3(s2(s1(s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]]), [s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]]), s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]])], s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]]), [s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]]), s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]])]), [s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]]), s0([[132.0], [133.0], [134.0]], [[135.0], [136.0], [137.0]])]), [s1(s0([[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]]), [s0([[144.0], [145.0], [146.0]], [[147.0], [148.0], [149.0]]), s0([[150.0], [151.0], [152.0]], [[153.0], [154.0], [155.0]])], s0([[156.0], [157.0], [158.0]], [[159.0], [160.0], [161.0]]), [s0([[162.0], [163.0], [164.0]], [[165.0], [166.0], [167.0]]), s0([[168.0], [169.0], [170.0]], [[171.0], [172.0], [173.0]]), s0([[174.0], [175.0], [176.0]], [[177.0], [178.0], [179.0]])])]))] in
    let v2: s5 = s5([s3(s2(s1(s0([[180.0], [181.0], [182.0]], [[183.0], [184.0], [185.0]]), [s0([[186.0], [187.0], [188.0]], [[189.0], [190.0], [191.0]]), s0([[192.0], [193.0], [194.0]], [[195.0], [196.0], [197.0]])], s0([[198.0], [199.0], [200.0]], [[201.0], [202.0], [203.0]]), [s0([[204.0], [205.0], [206.0]], [[207.0], [208.0], [209.0]]), s0([[210.0], [211.0], [212.0]], [[213.0], [214.0], [215.0]]), s0([[216.0], [217.0], [218.0]], [[219.0], [220.0], [221.0]])]), [s0([[222.0], [223.0], [224.0]], [[225.0], [226.0], [227.0]]), s0([[228.0], [229.0], [230.0]], [[231.0], [232.0], [233.0]])]), [s1(s0([[234.0], [235.0], [236.0]], [[237.0], [238.0], [239.0]]), [s0([[240.0], [241.0], [242.0]], [[243.0], [244.0], [245.0]]), s0([[246.0], [247.0], [248.0]], [[249.0], [250.0], [251.0]])], s0([[252.0], [253.0], [254.0]], [[255.0], [256.0], [257.0]]), [s0([[258.0], [259.0], [260.0]], [[261.0], [262.0], [263.0]]), s0([[264.0], [265.0], [266.0]], [[267.0], [268.0], [269.0]]), s0([[270.0], [271.0], [272.0]], [[273.0], [274.0], [275.0]])])]), s3(s2(s1(s0([[276.0], [277.0], [278.0]], [[279.0], [280.0], [281.0]]), [s0([[282.0], [283.0], [284.0]], [[285.0], [286.0], [287.0]]), s0([[288.0], [289.0], [290.0]], [[291.0], [292.0], [293.0]])], s0([[294.0], [295.0], [296.0]], [[297.0], [298.0], [299.0]]), [s0([[300.0], [301.0], [302.0]], [[303.0], [304.0], [305.0]]), s0([[306.0], [307.0], [308.0]], [[309.0], [310.0], [311.0]]), s0([[312.0], [313.0], [314.0]], [[315.0], [316.0], [317.0]])]), [s0([[318.0], [319.0], [320.0]], [[321.0], [322.0], [323.0]]), s0([[324.0], [325.0], [326.0]], [[327.0], [328.0], [329.0]])]), [s1(s0([[330.0], [331.0], [332.0]], [[333.0], [334.0], [335.0]]), [s0([[336.0], [337.0], [338.0]], [[339.0], [340.0], [341.0]]), s0([[342.0], [343.0], [344.0]], [[345.0], [346.0], [347.0]])], s0([[348.0], [349.0], [350.0]], [[351.0], [352.0], [353.0]]), [s0([[354.0], [355.0], [356.0]], [[357.0], [358.0], [359.0]]), s0([[360.0], [361.0], [362.0]], [[363.0], [364.0], [365.0]]), s0([[366.0], [367.0], [368.0]], [[369.0], [370.0], [371.0]])])])], [s3(s2(s1(s0([[372.0], [373.0], [374.0]], [[375.0], [376.0], [377.0]]), [s0([[378.0], [379.0], [380.0]], [[381.0], [382.0], [383.0]]), s0([[384.0], [385.0], [386.0]], [[387.0], [388.0], [389.0]])], s0([[390.0], [391.0], [392.0]], [[393.0], [394.0], [395.0]]), [s0([[396.0], [397.0], [398.0]], [[399.0], [400.0], [401.0]]), s0([[402.0], [403.0], [404.0]], [[405.0], [406.0], [407.0]]), s0([[408.0], [409.0], [410.0]], [[411.0], [412.0], [413.0]])]), [s0([[414.0], [415.0], [416.0]], [[417.0], [418.0], [419.0]]), s0([[420.0], [421.0], [422.0]], [[423.0], [424.0], [425.0]])]), [s1(s0([[426.0], [427.0], [428.0]], [[429.0], [430.0], [431.0]]), [s0([[432.0], [433.0], [434.0]], [[435.0], [436.0], [437.0]]), s0([[438.0], [439.0], [440.0]], [[441.0], [442.0], [443.0]])], s0([[444.0], [445.0], [446.0]], [[447.0], [448.0], [449.0]]), [s0([[450.0], [451.0], [452.0]], [[453.0], [454.0], [455.0]]), s0([[456.0], [457.0], [458.0]], [[459.0], [460.0], [461.0]]), s0([[462.0], [463.0], [464.0]], [[465.0], [466.0], [467.0]])])]), s3(s2(s1(s0([[468.0], [469.0], [470.0]], [[471.0], [472.0], [473.0]]), [s0([[474.0], [475.0], [476.0]], [[477.0], [478.0], [479.0]]), s0([[480.0], [481.0], [482.0]], [[483.0], [484.0], [485.0]])], s0([[486.0], [487.0], [488.0]], [[489.0], [490.0], [491.0]]), [s0([[492.0], [493.0], [494.0]], [[495.0], [496.0], [497.0]]), s0([[498.0], [499.0], [500.0]], [[501.0], [502.0], [503.0]]), s0([[504.0], [505.0], [506.0]], [[507.0], [508.0], [509.0]])]), [s0([[510.0], [511.0], [512.0]], [[513.0], [514.0], [515.0]]), s0([[516.0], [517.0], [518.0]], [[519.0], [520.0], [521.0]])]), [s1(s0([[522.0], [523.0], [524.0]], [[525.0], [526.0], [527.0]]), [s0([[528.0], [529.0], [530.0]], [[531.0], [532.0], [533.0]]), s0([[534.0], [535.0], [536.0]], [[537.0], [538.0], [539.0]])], s0([[540.0], [541.0], [542.0]], [[543.0], [544.0], [545.0]]), [s0([[546.0], [547.0], [548.0]], [[549.0], [550.0], [551.0]]), s0([[552.0], [553.0], [554.0]], [[555.0], [556.0], [557.0]]), s0([[558.0], [559.0], [560.0]], [[561.0], [562.0], [563.0]])])])]) in
    let v3: Float = 564.0 in
    let initialResult: Float = 564.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()