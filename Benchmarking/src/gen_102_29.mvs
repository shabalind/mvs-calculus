  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  struct s3 {
    var p0: [s1]
    var p1: [s0]
  } in
  struct s4 {
    var p0: s1
    var p1: s2
  } in
  struct s6 {
    var p0: [[s3]]
    var p1: [Float]
  } in
  let f20: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v3: Float = v0[1] in
    var v7: [Float] = v0 in
    var v5: Float = v3 in
    let v8: Float = v0[0] in
    v7[1] = v5 in
    var v1: Float = v8 in
    var v6: [Float] = v7 in
    var v4: [Float] = v7 in
    var v2: [Float] = v6 in
    let v13: Float = v0[1] in
    var v20: [Float] = v2 in
    var v10: Float = v13 in
    let v11: Float = v6[0] in
    let v9: Float = v20[1] in
    var v15: [Float] = v20 in
    v6 = v20 in
    var v22: Float = v8 in
    var v14: [Float] = v2 in
    var v17: Float = v13 in
    var v12: [Float] = v4 in
    let v19: Float = v7[0] in
    v2[0] = v3 in
    var v18: Float = v19 in
    var v16: [Float] = v7 in
    var v23: [Float] = v7 in
    var v29: Float = v10 in
    let v21: Float = v22 - v1 in
    let v25: Float = v9 * v17 in
    var v24: [Float] = v7 in
    let v26: Float = v4[0] in
    v15[1] = v17 in
    v15 = v6 in
    var v67: Float = v21 in
    let v51: Float = v24[1] in
    var v46: Float = v25 in
    let v50: Float = v23[1] in
    var v33: Float = v50 in
    v15[1] = v46 in
    let v54: Float = v7[1] in
    var v37: [Float] = v14 in
    let v28: Float = v16[1] in
    let v72: Float = v14[1] in
    v7 = v6 in
    v2[0] = v33 in
    let v55: Float = v12[1] in
    var v73: Float = v8 in
    v16[0] = v26 in
    let v70: Float = v7[1] in
    v67 = v72 in
    v6[1] = v51 in
    v15[0] = v72 in
    var v32: [Float] = v2 in
    v15[1] = v22 in
    let v38: Float = v16[0] in
    v6[1] = v54 in
    v23[0] = v10 in
    var v58: [Float] = v12 in
    var v47: Float = v54 in
    v14 = v0 in
    var v63: [Float] = v37 in
    v23[0] = v55 in
    let v79: Float = v2[0] in
    var v99: [Float] = v6 in
    v20[1] = v46 in
    var v36: [Float] = v63 in
    let v140: Float = v2[0] in
    v63[0] = v10 in
    var v93: Float = v72 in
    var v83: [Float] = v36 in
    var v86: [Float] = v36 in
    var v59: Float = v140 in
    v32[1] = v18 in
    let v64: Float = v12[0] in
    var v208: Float = v29 in
    var v53: [Float] = v7 in
    let v118: Float = v15[0] in
    let v113: [[Float]] = [v83, v53, v20, v32, v0, v53, v86] in
    v36[0] = v38 in
    var v115: [[Float]] = v113 in
    let v68: [Float] = v113[0] in
    let v87: [Float] = v115[3] in
    var v61: [Float] = v68 in
    let v119: Float = v53[0] in
    let v66: Float = v32[0] in
    v36[1] = v10 in
    v99[0] = v21 in
    v20[1] = v66 in
    var v60: Float = v208 in
    let v121: [[Float]] = [v15, v58, v6, v61] in
    v61[0] = v11 in
    var v75: [[Float]] = v121 in
    v20[1] = v59 in
    v6[0] = v28 in
    v14[1] = v140 in
    var v108: [[Float]] = v75 in
    let v85: [[Float]] = [v87, v4] in
    v36[1] = v47 in
    let v111: Float = v118 + v93 in
    v36[1] = v73 in
    var v206: [[Float]] = v85 in
    v63[1] = v119 in
    v4[1] = v67 in
    let v116: [Float] = v108[0] in
    let v109: [Float] = v206[0] in
    v83[1] = v79 in
    v58[0] = v70 in
    v61[0] = v111 in
    v23[1] = v64 in
    v12 = v99 in
    v61[0] = v60 in
    v32[1] = v72 in
    v14 = v109 in
    v116
  } in
  let noinline_f0: (s2, s6, [s0], s4, s3, Float) -> Float = (v0: s2, v1: s6, v2: [s0], v3: s4, v4: s3, v5: Float) -> Float {
    let v7: Float = v5 - v5 in
    var v14: s6 = v1 in
    var v31: Float = v7 in
    let v56: [Float] = v14.p1 in
    let v19: [Float] = f20(v56) in
    let v26: Float = v19[1] in
    let v85: Float = v26 - v31 in
    let v261: Float = v31 / v85 in
    v261
  } in
  fun loop(i: Int, v0: s2, v1: s6, v2: [s0], v3: s4, v4: s3, v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0], [1.0], [2.0]]), s0([[3.0], [4.0], [5.0]])) in
    let v1: s6 = s6([[s3([s1(s0([[6.0], [7.0], [8.0]]), s0([[9.0], [10.0], [11.0]]))], [s0([[12.0], [13.0], [14.0]]), s0([[15.0], [16.0], [17.0]])])], [s3([s1(s0([[18.0], [19.0], [20.0]]), s0([[21.0], [22.0], [23.0]]))], [s0([[24.0], [25.0], [26.0]]), s0([[27.0], [28.0], [29.0]])])], [s3([s1(s0([[30.0], [31.0], [32.0]]), s0([[33.0], [34.0], [35.0]]))], [s0([[36.0], [37.0], [38.0]]), s0([[39.0], [40.0], [41.0]])])]], [42.0, 43.0]) in
    let v2: [s0] = [s0([[44.0], [45.0], [46.0]]), s0([[47.0], [48.0], [49.0]])] in
    let v3: s4 = s4(s1(s0([[50.0], [51.0], [52.0]]), s0([[53.0], [54.0], [55.0]])), s2(s0([[56.0], [57.0], [58.0]]), s0([[59.0], [60.0], [61.0]]))) in
    let v4: s3 = s3([s1(s0([[62.0], [63.0], [64.0]]), s0([[65.0], [66.0], [67.0]]))], [s0([[68.0], [69.0], [70.0]]), s0([[71.0], [72.0], [73.0]])]) in
    let v5: Float = 74.0 in
    let initialResult: Float = 74.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()