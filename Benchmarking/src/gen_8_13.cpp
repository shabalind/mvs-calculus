  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<std::vector<double>> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<std::vector<double>> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  struct s1 {
    std::vector<s0> p0;
    std::vector<s0> p1;
    s1(std::vector<s0> v0, std::vector<s0> v1): p0(v0), p1(v1) { }
  };
  struct s2 {
    std::vector<s1> p0;
    double p1;
    s2(std::vector<s1> v0, double v1): p0(v0), p1(v1) { }
  };
  struct s4 {
    s2 p0;
    std::vector<std::vector<s2>> p1;
    s4(s2 v0, std::vector<std::vector<s2>> v1): p0(v0), p1(v1) { }
  };
  struct s6 {
    s0 p0;
    std::vector<s1> p1;
    s6(s0 v0, std::vector<s1> v1): p0(v0), p1(v1) { }
  };
  struct s9 {
    std::vector<std::vector<s0>> p0;
    std::vector<std::vector<s2>> p1;
    s9(std::vector<std::vector<s0>> v0, std::vector<std::vector<s2>> v1): p0(v0), p1(v1) { }
  };
  struct s11 {
    std::vector<s9> p0;
    s4 p1;
    s11(std::vector<s9> v0, s4 v1): p0(v0), p1(v1) { }
  };
  struct s12 {
    std::vector<std::vector<s0>> p0;
    s6 p1;
    s12(std::vector<std::vector<s0>> v0, s6 v1): p0(v0), p1(v1) { }
  };
  s1 f55(const s1 &v0) {
    s1 v6 = v0;
    s1 v21 = v0;
    const std::vector<s0> v24 = v21.p0;
    const std::vector<s0> v54 = v6.p1;
    const std::vector<s0> v41 = v0.p1;
    const std::vector<s0> v13 = v21.p1;
    v6.p0 = v24;
    v21.p1 = v13;
    v21.p1 = v54;
    v21 = v0;
    const std::vector<s0> v124 = v0.p1;
    v6.p1 = v41;
    v21.p1 = v124;
    v21.p1 = v13;
    return v6;
  }
  s2 f31(const s2 &v0) {
    s2 v3 = v0;
    return v3;
  }
  s4 f19(const s4 &v0) {
    s4 v1 = v0;
    const std::vector<std::vector<s2>> v7 = v1.p1;
    std::vector<std::vector<s2>> v3 = v7;
    const std::vector<s4> v6 { v1 };
    std::vector<std::vector<s2>> v2 = v7;
    const s4 v5 = v6[0];
    const s4 v4 = v6[0];
    v2 = v7;
    v1.p1 = v3;
    const s2 v10 = v0.p0;
    const s2 v8 = f31(v10);
    std::vector<std::vector<s2>> v9 = v3;
    v3 = v2;
    const double v14 = v8.p1;
    const s2 v21 = f31(v10);
    const double v27 = v14 / v14;
    const std::vector<s2> v28 = v7[0];
    const s2 v13 = f31(v8);
    s2 v12 = v13;
    s2 v15 = v21;
    const s2 v17 = f31(v21);
    const std::vector<s2> v32 = v7[0];
    const std::vector<s2> v24 { v12, v12, v15, v8, v17, v17 };
    const s2 v19 = v32[0];
    const s2 v25 = f31(v19);
    v15.p1 = v27;
    const s2 v41 = v28[0];
    v1.p1 = v9;
    const s2 v20 = f31(v25);
    const s2 v30 = v5.p0;
    double v37 = v27;
    const std::vector<s2> v72 = v7[0];
    const std::vector<std::vector<s2>> v48 = v0.p1;
    const s2 v81 = f31(v10);
    const s2 v26 = v24[5];
    const double v56 = v81.p1;
    v9[0] = v32;
    const std::vector<s1> v78 = v41.p0;
    v9[0] = v72;
    const double v61 = v21.p1;
    std::vector<s2> v39 = v24;
    const s2 v100 = v39[4];
    const s2 v34 = f31(v26);
    s4 v51 = v4;
    v1.p0 = v41;
    const double v49 = v37 * v56;
    std::vector<s1> v64 = v78;
    v1.p0 = v30;
    v1.p1 = v48;
    const std::vector<std::vector<s2>> v55 = v4.p1;
    std::vector<std::vector<s2>> v95 = v55;
    s2 v42 = v26;
    const std::vector<s1> v53 = v42.p0;
    v12.p1 = v14;
    v15.p1 = v49;
    v37 = v61;
    std::vector<s2> v62 = v39;
    v12.p0 = v64;
    v39 = v62;
    v62[5] = v34;
    v2[0] = v28;
    const s1 v58 = v53[0];
    const double v105 = v20.p1;
    v62 = v24;
    const s1 v149 = f55(v58);
    s4 v122 = v51;
    v12.p1 = v56;
    v51.p1 = v95;
    v64[0] = v149;
    v12.p1 = v105;
    v1.p0 = v42;
    v122.p0 = v26;
    v51.p0 = v100;
    v15.p1 = v37;
    const s2 v229 = f31(v42);
    v122.p0 = v229;
    return v122;
  }
  std::vector<std::vector<s11>> f9(const std::vector<std::vector<s11>> &v0) {
    std::vector<std::vector<s11>> v1 = v0;
    const std::vector<s11> v4 = v0[0];
    const s11 v7 = v4[0];
    std::vector<std::vector<s11>> v9 = v0;
    v9[2] = v4;
    const std::vector<s11> v8 = v9[2];
    v1[0] = v4;
    v9[1] = v8;
    v1[2] = v4;
    std::vector<s11> v20 = v4;
    v9[2] = v20;
    v20[0] = v7;
    const std::vector<s11> v19 = v1[0];
    v9[2] = v8;
    v9[0] = v19;
    const std::vector<s11> v36 = v1[1];
    v9[0] = v36;
    v1[2] = v4;
    std::vector<std::vector<s11>> v73 = v9;
    v9[1] = v8;
    v9[1] = v8;
    v9[2] = v4;
    return v73;
  }
  __attribute__((noinline))
  double f0(const std::vector<std::vector<s11>> &v0, const std::vector<s12> &v1, const double &v2) {
    double v3 = v2;
    std::vector<std::vector<s11>> v6 = v0;
    const std::vector<std::vector<s11>> v4 = f9(v6);
    double v10 = v3;
    const std::vector<std::vector<s11>> v15 = f9(v0);
    const std::vector<s11> v20 = v4[0];
    const std::vector<std::vector<s11>> v18 = f9(v15);
    v6[2] = v20;
    const s11 v17 = v20[0];
    const s4 v62 = v17.p1;
    double v48 = v10;
    const s4 v89 = f19(v62);
    v3 = v2;
    const std::vector<s11> v74 = v18[1];
    const s2 v72 = v89.p0;
    const s2 v66 = f31(v72);
    s2 v120 = v66;
    v120.p1 = v48;
    v6[0] = v74;
    const s2 v139 = f31(v120);
    const double v75 = v139.p1;
    return v75;
  }
  int main() {
    std::vector<std::vector<s11>> v0({ { { { { { { { { { 0.0 }, { 1.0 }, { 2.0 } }, { { 3.0 } } } }, { { { { 4.0 }, { 5.0 }, { 6.0 } }, { { 7.0 } } } }, { { { { 8.0 }, { 9.0 }, { 10.0 } }, { { 11.0 } } } } }, { { { { { { { { { 12.0 }, { 13.0 }, { 14.0 } }, { { 15.0 } } }, { { { 16.0 }, { 17.0 }, { 18.0 } }, { { 19.0 } } } }, { { { { 20.0 }, { 21.0 }, { 22.0 } }, { { 23.0 } } } } } }, 24.0 } } } }, { { { { { { 25.0 }, { 26.0 }, { 27.0 } }, { { 28.0 } } } }, { { { { 29.0 }, { 30.0 }, { 31.0 } }, { { 32.0 } } } }, { { { { 33.0 }, { 34.0 }, { 35.0 } }, { { 36.0 } } } } }, { { { { { { { { { 37.0 }, { 38.0 }, { 39.0 } }, { { 40.0 } } }, { { { 41.0 }, { 42.0 }, { 43.0 } }, { { 44.0 } } } }, { { { { 45.0 }, { 46.0 }, { 47.0 } }, { { 48.0 } } } } } }, 49.0 } } } } }, { { { { { { { { 50.0 }, { 51.0 }, { 52.0 } }, { { 53.0 } } }, { { { 54.0 }, { 55.0 }, { 56.0 } }, { { 57.0 } } } }, { { { { 58.0 }, { 59.0 }, { 60.0 } }, { { 61.0 } } } } } }, 62.0 }, { { { { { { { { { 63.0 }, { 64.0 }, { 65.0 } }, { { 66.0 } } }, { { { 67.0 }, { 68.0 }, { 69.0 } }, { { 70.0 } } } }, { { { { 71.0 }, { 72.0 }, { 73.0 } }, { { 74.0 } } } } } }, 75.0 } } } } } }, { { { { { { { { { 76.0 }, { 77.0 }, { 78.0 } }, { { 79.0 } } } }, { { { { 80.0 }, { 81.0 }, { 82.0 } }, { { 83.0 } } } }, { { { { 84.0 }, { 85.0 }, { 86.0 } }, { { 87.0 } } } } }, { { { { { { { { { 88.0 }, { 89.0 }, { 90.0 } }, { { 91.0 } } }, { { { 92.0 }, { 93.0 }, { 94.0 } }, { { 95.0 } } } }, { { { { 96.0 }, { 97.0 }, { 98.0 } }, { { 99.0 } } } } } }, 100.0 } } } }, { { { { { { 101.0 }, { 102.0 }, { 103.0 } }, { { 104.0 } } } }, { { { { 105.0 }, { 106.0 }, { 107.0 } }, { { 108.0 } } } }, { { { { 109.0 }, { 110.0 }, { 111.0 } }, { { 112.0 } } } } }, { { { { { { { { { 113.0 }, { 114.0 }, { 115.0 } }, { { 116.0 } } }, { { { 117.0 }, { 118.0 }, { 119.0 } }, { { 120.0 } } } }, { { { { 121.0 }, { 122.0 }, { 123.0 } }, { { 124.0 } } } } } }, 125.0 } } } } }, { { { { { { { { 126.0 }, { 127.0 }, { 128.0 } }, { { 129.0 } } }, { { { 130.0 }, { 131.0 }, { 132.0 } }, { { 133.0 } } } }, { { { { 134.0 }, { 135.0 }, { 136.0 } }, { { 137.0 } } } } } }, 138.0 }, { { { { { { { { { 139.0 }, { 140.0 }, { 141.0 } }, { { 142.0 } } }, { { { 143.0 }, { 144.0 }, { 145.0 } }, { { 146.0 } } } }, { { { { 147.0 }, { 148.0 }, { 149.0 } }, { { 150.0 } } } } } }, 151.0 } } } } } }, { { { { { { { { { 152.0 }, { 153.0 }, { 154.0 } }, { { 155.0 } } } }, { { { { 156.0 }, { 157.0 }, { 158.0 } }, { { 159.0 } } } }, { { { { 160.0 }, { 161.0 }, { 162.0 } }, { { 163.0 } } } } }, { { { { { { { { { 164.0 }, { 165.0 }, { 166.0 } }, { { 167.0 } } }, { { { 168.0 }, { 169.0 }, { 170.0 } }, { { 171.0 } } } }, { { { { 172.0 }, { 173.0 }, { 174.0 } }, { { 175.0 } } } } } }, 176.0 } } } }, { { { { { { 177.0 }, { 178.0 }, { 179.0 } }, { { 180.0 } } } }, { { { { 181.0 }, { 182.0 }, { 183.0 } }, { { 184.0 } } } }, { { { { 185.0 }, { 186.0 }, { 187.0 } }, { { 188.0 } } } } }, { { { { { { { { { 189.0 }, { 190.0 }, { 191.0 } }, { { 192.0 } } }, { { { 193.0 }, { 194.0 }, { 195.0 } }, { { 196.0 } } } }, { { { { 197.0 }, { 198.0 }, { 199.0 } }, { { 200.0 } } } } } }, 201.0 } } } } }, { { { { { { { { 202.0 }, { 203.0 }, { 204.0 } }, { { 205.0 } } }, { { { 206.0 }, { 207.0 }, { 208.0 } }, { { 209.0 } } } }, { { { { 210.0 }, { 211.0 }, { 212.0 } }, { { 213.0 } } } } } }, 214.0 }, { { { { { { { { { 215.0 }, { 216.0 }, { 217.0 } }, { { 218.0 } } }, { { { 219.0 }, { 220.0 }, { 221.0 } }, { { 222.0 } } } }, { { { { 223.0 }, { 224.0 }, { 225.0 } }, { { 226.0 } } } } } }, 227.0 } } } } } } });
    std::vector<s12> v1({ { { { { { { 228.0 }, { 229.0 }, { 230.0 } }, { { 231.0 } } } } }, { { { { 232.0 }, { 233.0 }, { 234.0 } }, { { 235.0 } } }, { { { { { { 236.0 }, { 237.0 }, { 238.0 } }, { { 239.0 } } }, { { { 240.0 }, { 241.0 }, { 242.0 } }, { { 243.0 } } } }, { { { { 244.0 }, { 245.0 }, { 246.0 } }, { { 247.0 } } } } }, { { { { { 248.0 }, { 249.0 }, { 250.0 } }, { { 251.0 } } }, { { { 252.0 }, { 253.0 }, { 254.0 } }, { { 255.0 } } } }, { { { { 256.0 }, { 257.0 }, { 258.0 } }, { { 259.0 } } } } } } } }, { { { { { { 260.0 }, { 261.0 }, { 262.0 } }, { { 263.0 } } } } }, { { { { 264.0 }, { 265.0 }, { 266.0 } }, { { 267.0 } } }, { { { { { { 268.0 }, { 269.0 }, { 270.0 } }, { { 271.0 } } }, { { { 272.0 }, { 273.0 }, { 274.0 } }, { { 275.0 } } } }, { { { { 276.0 }, { 277.0 }, { 278.0 } }, { { 279.0 } } } } }, { { { { { 280.0 }, { 281.0 }, { 282.0 } }, { { 283.0 } } }, { { { 284.0 }, { 285.0 }, { 286.0 } }, { { 287.0 } } } }, { { { { 288.0 }, { 289.0 }, { 290.0 } }, { { 291.0 } } } } } } } }, { { { { { { 292.0 }, { 293.0 }, { 294.0 } }, { { 295.0 } } } } }, { { { { 296.0 }, { 297.0 }, { 298.0 } }, { { 299.0 } } }, { { { { { { 300.0 }, { 301.0 }, { 302.0 } }, { { 303.0 } } }, { { { 304.0 }, { 305.0 }, { 306.0 } }, { { 307.0 } } } }, { { { { 308.0 }, { 309.0 }, { 310.0 } }, { { 311.0 } } } } }, { { { { { 312.0 }, { 313.0 }, { 314.0 } }, { { 315.0 } } }, { { { 316.0 }, { 317.0 }, { 318.0 } }, { { 319.0 } } } }, { { { { 320.0 }, { 321.0 }, { 322.0 } }, { { 323.0 } } } } } } } } });
    double v2(324.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1, v2);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
