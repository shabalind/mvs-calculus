  import Dispatch
  struct s0 {
    var p0: Double
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  }
  struct s2 {
    var p0: s1
    var p1: [s1]
    var p2: s1
    var p3: s0
  }
  struct s6 {
    var p0: s1
    var p1: [s2]
  }
  struct s9 {
    var p0: [s6]
    var p1: s6
  }
  struct s10 {
    var p0: [[s9]]
    var p1: [s1]
  }
  struct s11 {
    var p0: [s6]
    var p1: [[s2]]
  }
  @inline(never)
  func f0(_ v0: s11, _ v1: [s10], _ v2: Double) -> Double {
    let v5: s10 = v1[0]
    var v8: s10 = v5
    let v18: [s1] = v8.p1
    let v15: s10 = v1[2]
    let v14: s1 = v18[0]
    var v22: [s1] = v18
    let v20: [s0] = v14.p0
    let v37: s1 = s1(p0: v20, p1: v20)
    var v61: s10 = v15
    let v50: [s0] = v37.p0
    let v48: s0 = v50[0]
    v61.p1 = v18
    let v103: [[Double]] = v48.p1
    v8.p1 = v22
    v8 = v61
    let v168: [Double] = v103[0]
    let v99: Double = v168[0]
    return v99
  }
  func benchmark() {
    let v0: s11 = s11(p0: [s6(p0: s1(p0: [s0(p0: 0.0, p1: [[1.0], [2.0]])], p1: [s0(p0: 3.0, p1: [[4.0], [5.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 6.0, p1: [[7.0], [8.0]])], p1: [s0(p0: 9.0, p1: [[10.0], [11.0]])]), p1: [s1(p0: [s0(p0: 12.0, p1: [[13.0], [14.0]])], p1: [s0(p0: 15.0, p1: [[16.0], [17.0]])])], p2: s1(p0: [s0(p0: 18.0, p1: [[19.0], [20.0]])], p1: [s0(p0: 21.0, p1: [[22.0], [23.0]])]), p3: s0(p0: 24.0, p1: [[25.0], [26.0]])), s2(p0: s1(p0: [s0(p0: 27.0, p1: [[28.0], [29.0]])], p1: [s0(p0: 30.0, p1: [[31.0], [32.0]])]), p1: [s1(p0: [s0(p0: 33.0, p1: [[34.0], [35.0]])], p1: [s0(p0: 36.0, p1: [[37.0], [38.0]])])], p2: s1(p0: [s0(p0: 39.0, p1: [[40.0], [41.0]])], p1: [s0(p0: 42.0, p1: [[43.0], [44.0]])]), p3: s0(p0: 45.0, p1: [[46.0], [47.0]])), s2(p0: s1(p0: [s0(p0: 48.0, p1: [[49.0], [50.0]])], p1: [s0(p0: 51.0, p1: [[52.0], [53.0]])]), p1: [s1(p0: [s0(p0: 54.0, p1: [[55.0], [56.0]])], p1: [s0(p0: 57.0, p1: [[58.0], [59.0]])])], p2: s1(p0: [s0(p0: 60.0, p1: [[61.0], [62.0]])], p1: [s0(p0: 63.0, p1: [[64.0], [65.0]])]), p3: s0(p0: 66.0, p1: [[67.0], [68.0]]))])], p1: [[s2(p0: s1(p0: [s0(p0: 69.0, p1: [[70.0], [71.0]])], p1: [s0(p0: 72.0, p1: [[73.0], [74.0]])]), p1: [s1(p0: [s0(p0: 75.0, p1: [[76.0], [77.0]])], p1: [s0(p0: 78.0, p1: [[79.0], [80.0]])])], p2: s1(p0: [s0(p0: 81.0, p1: [[82.0], [83.0]])], p1: [s0(p0: 84.0, p1: [[85.0], [86.0]])]), p3: s0(p0: 87.0, p1: [[88.0], [89.0]]))]])
    let v1: [s10] = [s10(p0: [[s9(p0: [s6(p0: s1(p0: [s0(p0: 90.0, p1: [[91.0], [92.0]])], p1: [s0(p0: 93.0, p1: [[94.0], [95.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 96.0, p1: [[97.0], [98.0]])], p1: [s0(p0: 99.0, p1: [[100.0], [101.0]])]), p1: [s1(p0: [s0(p0: 102.0, p1: [[103.0], [104.0]])], p1: [s0(p0: 105.0, p1: [[106.0], [107.0]])])], p2: s1(p0: [s0(p0: 108.0, p1: [[109.0], [110.0]])], p1: [s0(p0: 111.0, p1: [[112.0], [113.0]])]), p3: s0(p0: 114.0, p1: [[115.0], [116.0]])), s2(p0: s1(p0: [s0(p0: 117.0, p1: [[118.0], [119.0]])], p1: [s0(p0: 120.0, p1: [[121.0], [122.0]])]), p1: [s1(p0: [s0(p0: 123.0, p1: [[124.0], [125.0]])], p1: [s0(p0: 126.0, p1: [[127.0], [128.0]])])], p2: s1(p0: [s0(p0: 129.0, p1: [[130.0], [131.0]])], p1: [s0(p0: 132.0, p1: [[133.0], [134.0]])]), p3: s0(p0: 135.0, p1: [[136.0], [137.0]])), s2(p0: s1(p0: [s0(p0: 138.0, p1: [[139.0], [140.0]])], p1: [s0(p0: 141.0, p1: [[142.0], [143.0]])]), p1: [s1(p0: [s0(p0: 144.0, p1: [[145.0], [146.0]])], p1: [s0(p0: 147.0, p1: [[148.0], [149.0]])])], p2: s1(p0: [s0(p0: 150.0, p1: [[151.0], [152.0]])], p1: [s0(p0: 153.0, p1: [[154.0], [155.0]])]), p3: s0(p0: 156.0, p1: [[157.0], [158.0]]))]), s6(p0: s1(p0: [s0(p0: 159.0, p1: [[160.0], [161.0]])], p1: [s0(p0: 162.0, p1: [[163.0], [164.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 165.0, p1: [[166.0], [167.0]])], p1: [s0(p0: 168.0, p1: [[169.0], [170.0]])]), p1: [s1(p0: [s0(p0: 171.0, p1: [[172.0], [173.0]])], p1: [s0(p0: 174.0, p1: [[175.0], [176.0]])])], p2: s1(p0: [s0(p0: 177.0, p1: [[178.0], [179.0]])], p1: [s0(p0: 180.0, p1: [[181.0], [182.0]])]), p3: s0(p0: 183.0, p1: [[184.0], [185.0]])), s2(p0: s1(p0: [s0(p0: 186.0, p1: [[187.0], [188.0]])], p1: [s0(p0: 189.0, p1: [[190.0], [191.0]])]), p1: [s1(p0: [s0(p0: 192.0, p1: [[193.0], [194.0]])], p1: [s0(p0: 195.0, p1: [[196.0], [197.0]])])], p2: s1(p0: [s0(p0: 198.0, p1: [[199.0], [200.0]])], p1: [s0(p0: 201.0, p1: [[202.0], [203.0]])]), p3: s0(p0: 204.0, p1: [[205.0], [206.0]])), s2(p0: s1(p0: [s0(p0: 207.0, p1: [[208.0], [209.0]])], p1: [s0(p0: 210.0, p1: [[211.0], [212.0]])]), p1: [s1(p0: [s0(p0: 213.0, p1: [[214.0], [215.0]])], p1: [s0(p0: 216.0, p1: [[217.0], [218.0]])])], p2: s1(p0: [s0(p0: 219.0, p1: [[220.0], [221.0]])], p1: [s0(p0: 222.0, p1: [[223.0], [224.0]])]), p3: s0(p0: 225.0, p1: [[226.0], [227.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 228.0, p1: [[229.0], [230.0]])], p1: [s0(p0: 231.0, p1: [[232.0], [233.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 234.0, p1: [[235.0], [236.0]])], p1: [s0(p0: 237.0, p1: [[238.0], [239.0]])]), p1: [s1(p0: [s0(p0: 240.0, p1: [[241.0], [242.0]])], p1: [s0(p0: 243.0, p1: [[244.0], [245.0]])])], p2: s1(p0: [s0(p0: 246.0, p1: [[247.0], [248.0]])], p1: [s0(p0: 249.0, p1: [[250.0], [251.0]])]), p3: s0(p0: 252.0, p1: [[253.0], [254.0]])), s2(p0: s1(p0: [s0(p0: 255.0, p1: [[256.0], [257.0]])], p1: [s0(p0: 258.0, p1: [[259.0], [260.0]])]), p1: [s1(p0: [s0(p0: 261.0, p1: [[262.0], [263.0]])], p1: [s0(p0: 264.0, p1: [[265.0], [266.0]])])], p2: s1(p0: [s0(p0: 267.0, p1: [[268.0], [269.0]])], p1: [s0(p0: 270.0, p1: [[271.0], [272.0]])]), p3: s0(p0: 273.0, p1: [[274.0], [275.0]])), s2(p0: s1(p0: [s0(p0: 276.0, p1: [[277.0], [278.0]])], p1: [s0(p0: 279.0, p1: [[280.0], [281.0]])]), p1: [s1(p0: [s0(p0: 282.0, p1: [[283.0], [284.0]])], p1: [s0(p0: 285.0, p1: [[286.0], [287.0]])])], p2: s1(p0: [s0(p0: 288.0, p1: [[289.0], [290.0]])], p1: [s0(p0: 291.0, p1: [[292.0], [293.0]])]), p3: s0(p0: 294.0, p1: [[295.0], [296.0]]))]))], [s9(p0: [s6(p0: s1(p0: [s0(p0: 297.0, p1: [[298.0], [299.0]])], p1: [s0(p0: 300.0, p1: [[301.0], [302.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 303.0, p1: [[304.0], [305.0]])], p1: [s0(p0: 306.0, p1: [[307.0], [308.0]])]), p1: [s1(p0: [s0(p0: 309.0, p1: [[310.0], [311.0]])], p1: [s0(p0: 312.0, p1: [[313.0], [314.0]])])], p2: s1(p0: [s0(p0: 315.0, p1: [[316.0], [317.0]])], p1: [s0(p0: 318.0, p1: [[319.0], [320.0]])]), p3: s0(p0: 321.0, p1: [[322.0], [323.0]])), s2(p0: s1(p0: [s0(p0: 324.0, p1: [[325.0], [326.0]])], p1: [s0(p0: 327.0, p1: [[328.0], [329.0]])]), p1: [s1(p0: [s0(p0: 330.0, p1: [[331.0], [332.0]])], p1: [s0(p0: 333.0, p1: [[334.0], [335.0]])])], p2: s1(p0: [s0(p0: 336.0, p1: [[337.0], [338.0]])], p1: [s0(p0: 339.0, p1: [[340.0], [341.0]])]), p3: s0(p0: 342.0, p1: [[343.0], [344.0]])), s2(p0: s1(p0: [s0(p0: 345.0, p1: [[346.0], [347.0]])], p1: [s0(p0: 348.0, p1: [[349.0], [350.0]])]), p1: [s1(p0: [s0(p0: 351.0, p1: [[352.0], [353.0]])], p1: [s0(p0: 354.0, p1: [[355.0], [356.0]])])], p2: s1(p0: [s0(p0: 357.0, p1: [[358.0], [359.0]])], p1: [s0(p0: 360.0, p1: [[361.0], [362.0]])]), p3: s0(p0: 363.0, p1: [[364.0], [365.0]]))]), s6(p0: s1(p0: [s0(p0: 366.0, p1: [[367.0], [368.0]])], p1: [s0(p0: 369.0, p1: [[370.0], [371.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 372.0, p1: [[373.0], [374.0]])], p1: [s0(p0: 375.0, p1: [[376.0], [377.0]])]), p1: [s1(p0: [s0(p0: 378.0, p1: [[379.0], [380.0]])], p1: [s0(p0: 381.0, p1: [[382.0], [383.0]])])], p2: s1(p0: [s0(p0: 384.0, p1: [[385.0], [386.0]])], p1: [s0(p0: 387.0, p1: [[388.0], [389.0]])]), p3: s0(p0: 390.0, p1: [[391.0], [392.0]])), s2(p0: s1(p0: [s0(p0: 393.0, p1: [[394.0], [395.0]])], p1: [s0(p0: 396.0, p1: [[397.0], [398.0]])]), p1: [s1(p0: [s0(p0: 399.0, p1: [[400.0], [401.0]])], p1: [s0(p0: 402.0, p1: [[403.0], [404.0]])])], p2: s1(p0: [s0(p0: 405.0, p1: [[406.0], [407.0]])], p1: [s0(p0: 408.0, p1: [[409.0], [410.0]])]), p3: s0(p0: 411.0, p1: [[412.0], [413.0]])), s2(p0: s1(p0: [s0(p0: 414.0, p1: [[415.0], [416.0]])], p1: [s0(p0: 417.0, p1: [[418.0], [419.0]])]), p1: [s1(p0: [s0(p0: 420.0, p1: [[421.0], [422.0]])], p1: [s0(p0: 423.0, p1: [[424.0], [425.0]])])], p2: s1(p0: [s0(p0: 426.0, p1: [[427.0], [428.0]])], p1: [s0(p0: 429.0, p1: [[430.0], [431.0]])]), p3: s0(p0: 432.0, p1: [[433.0], [434.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 435.0, p1: [[436.0], [437.0]])], p1: [s0(p0: 438.0, p1: [[439.0], [440.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 441.0, p1: [[442.0], [443.0]])], p1: [s0(p0: 444.0, p1: [[445.0], [446.0]])]), p1: [s1(p0: [s0(p0: 447.0, p1: [[448.0], [449.0]])], p1: [s0(p0: 450.0, p1: [[451.0], [452.0]])])], p2: s1(p0: [s0(p0: 453.0, p1: [[454.0], [455.0]])], p1: [s0(p0: 456.0, p1: [[457.0], [458.0]])]), p3: s0(p0: 459.0, p1: [[460.0], [461.0]])), s2(p0: s1(p0: [s0(p0: 462.0, p1: [[463.0], [464.0]])], p1: [s0(p0: 465.0, p1: [[466.0], [467.0]])]), p1: [s1(p0: [s0(p0: 468.0, p1: [[469.0], [470.0]])], p1: [s0(p0: 471.0, p1: [[472.0], [473.0]])])], p2: s1(p0: [s0(p0: 474.0, p1: [[475.0], [476.0]])], p1: [s0(p0: 477.0, p1: [[478.0], [479.0]])]), p3: s0(p0: 480.0, p1: [[481.0], [482.0]])), s2(p0: s1(p0: [s0(p0: 483.0, p1: [[484.0], [485.0]])], p1: [s0(p0: 486.0, p1: [[487.0], [488.0]])]), p1: [s1(p0: [s0(p0: 489.0, p1: [[490.0], [491.0]])], p1: [s0(p0: 492.0, p1: [[493.0], [494.0]])])], p2: s1(p0: [s0(p0: 495.0, p1: [[496.0], [497.0]])], p1: [s0(p0: 498.0, p1: [[499.0], [500.0]])]), p3: s0(p0: 501.0, p1: [[502.0], [503.0]]))]))]], p1: [s1(p0: [s0(p0: 504.0, p1: [[505.0], [506.0]])], p1: [s0(p0: 507.0, p1: [[508.0], [509.0]])])]), s10(p0: [[s9(p0: [s6(p0: s1(p0: [s0(p0: 510.0, p1: [[511.0], [512.0]])], p1: [s0(p0: 513.0, p1: [[514.0], [515.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 516.0, p1: [[517.0], [518.0]])], p1: [s0(p0: 519.0, p1: [[520.0], [521.0]])]), p1: [s1(p0: [s0(p0: 522.0, p1: [[523.0], [524.0]])], p1: [s0(p0: 525.0, p1: [[526.0], [527.0]])])], p2: s1(p0: [s0(p0: 528.0, p1: [[529.0], [530.0]])], p1: [s0(p0: 531.0, p1: [[532.0], [533.0]])]), p3: s0(p0: 534.0, p1: [[535.0], [536.0]])), s2(p0: s1(p0: [s0(p0: 537.0, p1: [[538.0], [539.0]])], p1: [s0(p0: 540.0, p1: [[541.0], [542.0]])]), p1: [s1(p0: [s0(p0: 543.0, p1: [[544.0], [545.0]])], p1: [s0(p0: 546.0, p1: [[547.0], [548.0]])])], p2: s1(p0: [s0(p0: 549.0, p1: [[550.0], [551.0]])], p1: [s0(p0: 552.0, p1: [[553.0], [554.0]])]), p3: s0(p0: 555.0, p1: [[556.0], [557.0]])), s2(p0: s1(p0: [s0(p0: 558.0, p1: [[559.0], [560.0]])], p1: [s0(p0: 561.0, p1: [[562.0], [563.0]])]), p1: [s1(p0: [s0(p0: 564.0, p1: [[565.0], [566.0]])], p1: [s0(p0: 567.0, p1: [[568.0], [569.0]])])], p2: s1(p0: [s0(p0: 570.0, p1: [[571.0], [572.0]])], p1: [s0(p0: 573.0, p1: [[574.0], [575.0]])]), p3: s0(p0: 576.0, p1: [[577.0], [578.0]]))]), s6(p0: s1(p0: [s0(p0: 579.0, p1: [[580.0], [581.0]])], p1: [s0(p0: 582.0, p1: [[583.0], [584.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 585.0, p1: [[586.0], [587.0]])], p1: [s0(p0: 588.0, p1: [[589.0], [590.0]])]), p1: [s1(p0: [s0(p0: 591.0, p1: [[592.0], [593.0]])], p1: [s0(p0: 594.0, p1: [[595.0], [596.0]])])], p2: s1(p0: [s0(p0: 597.0, p1: [[598.0], [599.0]])], p1: [s0(p0: 600.0, p1: [[601.0], [602.0]])]), p3: s0(p0: 603.0, p1: [[604.0], [605.0]])), s2(p0: s1(p0: [s0(p0: 606.0, p1: [[607.0], [608.0]])], p1: [s0(p0: 609.0, p1: [[610.0], [611.0]])]), p1: [s1(p0: [s0(p0: 612.0, p1: [[613.0], [614.0]])], p1: [s0(p0: 615.0, p1: [[616.0], [617.0]])])], p2: s1(p0: [s0(p0: 618.0, p1: [[619.0], [620.0]])], p1: [s0(p0: 621.0, p1: [[622.0], [623.0]])]), p3: s0(p0: 624.0, p1: [[625.0], [626.0]])), s2(p0: s1(p0: [s0(p0: 627.0, p1: [[628.0], [629.0]])], p1: [s0(p0: 630.0, p1: [[631.0], [632.0]])]), p1: [s1(p0: [s0(p0: 633.0, p1: [[634.0], [635.0]])], p1: [s0(p0: 636.0, p1: [[637.0], [638.0]])])], p2: s1(p0: [s0(p0: 639.0, p1: [[640.0], [641.0]])], p1: [s0(p0: 642.0, p1: [[643.0], [644.0]])]), p3: s0(p0: 645.0, p1: [[646.0], [647.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 648.0, p1: [[649.0], [650.0]])], p1: [s0(p0: 651.0, p1: [[652.0], [653.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 654.0, p1: [[655.0], [656.0]])], p1: [s0(p0: 657.0, p1: [[658.0], [659.0]])]), p1: [s1(p0: [s0(p0: 660.0, p1: [[661.0], [662.0]])], p1: [s0(p0: 663.0, p1: [[664.0], [665.0]])])], p2: s1(p0: [s0(p0: 666.0, p1: [[667.0], [668.0]])], p1: [s0(p0: 669.0, p1: [[670.0], [671.0]])]), p3: s0(p0: 672.0, p1: [[673.0], [674.0]])), s2(p0: s1(p0: [s0(p0: 675.0, p1: [[676.0], [677.0]])], p1: [s0(p0: 678.0, p1: [[679.0], [680.0]])]), p1: [s1(p0: [s0(p0: 681.0, p1: [[682.0], [683.0]])], p1: [s0(p0: 684.0, p1: [[685.0], [686.0]])])], p2: s1(p0: [s0(p0: 687.0, p1: [[688.0], [689.0]])], p1: [s0(p0: 690.0, p1: [[691.0], [692.0]])]), p3: s0(p0: 693.0, p1: [[694.0], [695.0]])), s2(p0: s1(p0: [s0(p0: 696.0, p1: [[697.0], [698.0]])], p1: [s0(p0: 699.0, p1: [[700.0], [701.0]])]), p1: [s1(p0: [s0(p0: 702.0, p1: [[703.0], [704.0]])], p1: [s0(p0: 705.0, p1: [[706.0], [707.0]])])], p2: s1(p0: [s0(p0: 708.0, p1: [[709.0], [710.0]])], p1: [s0(p0: 711.0, p1: [[712.0], [713.0]])]), p3: s0(p0: 714.0, p1: [[715.0], [716.0]]))]))], [s9(p0: [s6(p0: s1(p0: [s0(p0: 717.0, p1: [[718.0], [719.0]])], p1: [s0(p0: 720.0, p1: [[721.0], [722.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 723.0, p1: [[724.0], [725.0]])], p1: [s0(p0: 726.0, p1: [[727.0], [728.0]])]), p1: [s1(p0: [s0(p0: 729.0, p1: [[730.0], [731.0]])], p1: [s0(p0: 732.0, p1: [[733.0], [734.0]])])], p2: s1(p0: [s0(p0: 735.0, p1: [[736.0], [737.0]])], p1: [s0(p0: 738.0, p1: [[739.0], [740.0]])]), p3: s0(p0: 741.0, p1: [[742.0], [743.0]])), s2(p0: s1(p0: [s0(p0: 744.0, p1: [[745.0], [746.0]])], p1: [s0(p0: 747.0, p1: [[748.0], [749.0]])]), p1: [s1(p0: [s0(p0: 750.0, p1: [[751.0], [752.0]])], p1: [s0(p0: 753.0, p1: [[754.0], [755.0]])])], p2: s1(p0: [s0(p0: 756.0, p1: [[757.0], [758.0]])], p1: [s0(p0: 759.0, p1: [[760.0], [761.0]])]), p3: s0(p0: 762.0, p1: [[763.0], [764.0]])), s2(p0: s1(p0: [s0(p0: 765.0, p1: [[766.0], [767.0]])], p1: [s0(p0: 768.0, p1: [[769.0], [770.0]])]), p1: [s1(p0: [s0(p0: 771.0, p1: [[772.0], [773.0]])], p1: [s0(p0: 774.0, p1: [[775.0], [776.0]])])], p2: s1(p0: [s0(p0: 777.0, p1: [[778.0], [779.0]])], p1: [s0(p0: 780.0, p1: [[781.0], [782.0]])]), p3: s0(p0: 783.0, p1: [[784.0], [785.0]]))]), s6(p0: s1(p0: [s0(p0: 786.0, p1: [[787.0], [788.0]])], p1: [s0(p0: 789.0, p1: [[790.0], [791.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 792.0, p1: [[793.0], [794.0]])], p1: [s0(p0: 795.0, p1: [[796.0], [797.0]])]), p1: [s1(p0: [s0(p0: 798.0, p1: [[799.0], [800.0]])], p1: [s0(p0: 801.0, p1: [[802.0], [803.0]])])], p2: s1(p0: [s0(p0: 804.0, p1: [[805.0], [806.0]])], p1: [s0(p0: 807.0, p1: [[808.0], [809.0]])]), p3: s0(p0: 810.0, p1: [[811.0], [812.0]])), s2(p0: s1(p0: [s0(p0: 813.0, p1: [[814.0], [815.0]])], p1: [s0(p0: 816.0, p1: [[817.0], [818.0]])]), p1: [s1(p0: [s0(p0: 819.0, p1: [[820.0], [821.0]])], p1: [s0(p0: 822.0, p1: [[823.0], [824.0]])])], p2: s1(p0: [s0(p0: 825.0, p1: [[826.0], [827.0]])], p1: [s0(p0: 828.0, p1: [[829.0], [830.0]])]), p3: s0(p0: 831.0, p1: [[832.0], [833.0]])), s2(p0: s1(p0: [s0(p0: 834.0, p1: [[835.0], [836.0]])], p1: [s0(p0: 837.0, p1: [[838.0], [839.0]])]), p1: [s1(p0: [s0(p0: 840.0, p1: [[841.0], [842.0]])], p1: [s0(p0: 843.0, p1: [[844.0], [845.0]])])], p2: s1(p0: [s0(p0: 846.0, p1: [[847.0], [848.0]])], p1: [s0(p0: 849.0, p1: [[850.0], [851.0]])]), p3: s0(p0: 852.0, p1: [[853.0], [854.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 855.0, p1: [[856.0], [857.0]])], p1: [s0(p0: 858.0, p1: [[859.0], [860.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 861.0, p1: [[862.0], [863.0]])], p1: [s0(p0: 864.0, p1: [[865.0], [866.0]])]), p1: [s1(p0: [s0(p0: 867.0, p1: [[868.0], [869.0]])], p1: [s0(p0: 870.0, p1: [[871.0], [872.0]])])], p2: s1(p0: [s0(p0: 873.0, p1: [[874.0], [875.0]])], p1: [s0(p0: 876.0, p1: [[877.0], [878.0]])]), p3: s0(p0: 879.0, p1: [[880.0], [881.0]])), s2(p0: s1(p0: [s0(p0: 882.0, p1: [[883.0], [884.0]])], p1: [s0(p0: 885.0, p1: [[886.0], [887.0]])]), p1: [s1(p0: [s0(p0: 888.0, p1: [[889.0], [890.0]])], p1: [s0(p0: 891.0, p1: [[892.0], [893.0]])])], p2: s1(p0: [s0(p0: 894.0, p1: [[895.0], [896.0]])], p1: [s0(p0: 897.0, p1: [[898.0], [899.0]])]), p3: s0(p0: 900.0, p1: [[901.0], [902.0]])), s2(p0: s1(p0: [s0(p0: 903.0, p1: [[904.0], [905.0]])], p1: [s0(p0: 906.0, p1: [[907.0], [908.0]])]), p1: [s1(p0: [s0(p0: 909.0, p1: [[910.0], [911.0]])], p1: [s0(p0: 912.0, p1: [[913.0], [914.0]])])], p2: s1(p0: [s0(p0: 915.0, p1: [[916.0], [917.0]])], p1: [s0(p0: 918.0, p1: [[919.0], [920.0]])]), p3: s0(p0: 921.0, p1: [[922.0], [923.0]]))]))]], p1: [s1(p0: [s0(p0: 924.0, p1: [[925.0], [926.0]])], p1: [s0(p0: 927.0, p1: [[928.0], [929.0]])])]), s10(p0: [[s9(p0: [s6(p0: s1(p0: [s0(p0: 930.0, p1: [[931.0], [932.0]])], p1: [s0(p0: 933.0, p1: [[934.0], [935.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 936.0, p1: [[937.0], [938.0]])], p1: [s0(p0: 939.0, p1: [[940.0], [941.0]])]), p1: [s1(p0: [s0(p0: 942.0, p1: [[943.0], [944.0]])], p1: [s0(p0: 945.0, p1: [[946.0], [947.0]])])], p2: s1(p0: [s0(p0: 948.0, p1: [[949.0], [950.0]])], p1: [s0(p0: 951.0, p1: [[952.0], [953.0]])]), p3: s0(p0: 954.0, p1: [[955.0], [956.0]])), s2(p0: s1(p0: [s0(p0: 957.0, p1: [[958.0], [959.0]])], p1: [s0(p0: 960.0, p1: [[961.0], [962.0]])]), p1: [s1(p0: [s0(p0: 963.0, p1: [[964.0], [965.0]])], p1: [s0(p0: 966.0, p1: [[967.0], [968.0]])])], p2: s1(p0: [s0(p0: 969.0, p1: [[970.0], [971.0]])], p1: [s0(p0: 972.0, p1: [[973.0], [974.0]])]), p3: s0(p0: 975.0, p1: [[976.0], [977.0]])), s2(p0: s1(p0: [s0(p0: 978.0, p1: [[979.0], [980.0]])], p1: [s0(p0: 981.0, p1: [[982.0], [983.0]])]), p1: [s1(p0: [s0(p0: 984.0, p1: [[985.0], [986.0]])], p1: [s0(p0: 987.0, p1: [[988.0], [989.0]])])], p2: s1(p0: [s0(p0: 990.0, p1: [[991.0], [992.0]])], p1: [s0(p0: 993.0, p1: [[994.0], [995.0]])]), p3: s0(p0: 996.0, p1: [[997.0], [998.0]]))]), s6(p0: s1(p0: [s0(p0: 999.0, p1: [[1000.0], [1001.0]])], p1: [s0(p0: 1002.0, p1: [[1003.0], [1004.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 1005.0, p1: [[1006.0], [1007.0]])], p1: [s0(p0: 1008.0, p1: [[1009.0], [1010.0]])]), p1: [s1(p0: [s0(p0: 1011.0, p1: [[1012.0], [1013.0]])], p1: [s0(p0: 1014.0, p1: [[1015.0], [1016.0]])])], p2: s1(p0: [s0(p0: 1017.0, p1: [[1018.0], [1019.0]])], p1: [s0(p0: 1020.0, p1: [[1021.0], [1022.0]])]), p3: s0(p0: 1023.0, p1: [[1024.0], [1025.0]])), s2(p0: s1(p0: [s0(p0: 1026.0, p1: [[1027.0], [1028.0]])], p1: [s0(p0: 1029.0, p1: [[1030.0], [1031.0]])]), p1: [s1(p0: [s0(p0: 1032.0, p1: [[1033.0], [1034.0]])], p1: [s0(p0: 1035.0, p1: [[1036.0], [1037.0]])])], p2: s1(p0: [s0(p0: 1038.0, p1: [[1039.0], [1040.0]])], p1: [s0(p0: 1041.0, p1: [[1042.0], [1043.0]])]), p3: s0(p0: 1044.0, p1: [[1045.0], [1046.0]])), s2(p0: s1(p0: [s0(p0: 1047.0, p1: [[1048.0], [1049.0]])], p1: [s0(p0: 1050.0, p1: [[1051.0], [1052.0]])]), p1: [s1(p0: [s0(p0: 1053.0, p1: [[1054.0], [1055.0]])], p1: [s0(p0: 1056.0, p1: [[1057.0], [1058.0]])])], p2: s1(p0: [s0(p0: 1059.0, p1: [[1060.0], [1061.0]])], p1: [s0(p0: 1062.0, p1: [[1063.0], [1064.0]])]), p3: s0(p0: 1065.0, p1: [[1066.0], [1067.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 1068.0, p1: [[1069.0], [1070.0]])], p1: [s0(p0: 1071.0, p1: [[1072.0], [1073.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 1074.0, p1: [[1075.0], [1076.0]])], p1: [s0(p0: 1077.0, p1: [[1078.0], [1079.0]])]), p1: [s1(p0: [s0(p0: 1080.0, p1: [[1081.0], [1082.0]])], p1: [s0(p0: 1083.0, p1: [[1084.0], [1085.0]])])], p2: s1(p0: [s0(p0: 1086.0, p1: [[1087.0], [1088.0]])], p1: [s0(p0: 1089.0, p1: [[1090.0], [1091.0]])]), p3: s0(p0: 1092.0, p1: [[1093.0], [1094.0]])), s2(p0: s1(p0: [s0(p0: 1095.0, p1: [[1096.0], [1097.0]])], p1: [s0(p0: 1098.0, p1: [[1099.0], [1100.0]])]), p1: [s1(p0: [s0(p0: 1101.0, p1: [[1102.0], [1103.0]])], p1: [s0(p0: 1104.0, p1: [[1105.0], [1106.0]])])], p2: s1(p0: [s0(p0: 1107.0, p1: [[1108.0], [1109.0]])], p1: [s0(p0: 1110.0, p1: [[1111.0], [1112.0]])]), p3: s0(p0: 1113.0, p1: [[1114.0], [1115.0]])), s2(p0: s1(p0: [s0(p0: 1116.0, p1: [[1117.0], [1118.0]])], p1: [s0(p0: 1119.0, p1: [[1120.0], [1121.0]])]), p1: [s1(p0: [s0(p0: 1122.0, p1: [[1123.0], [1124.0]])], p1: [s0(p0: 1125.0, p1: [[1126.0], [1127.0]])])], p2: s1(p0: [s0(p0: 1128.0, p1: [[1129.0], [1130.0]])], p1: [s0(p0: 1131.0, p1: [[1132.0], [1133.0]])]), p3: s0(p0: 1134.0, p1: [[1135.0], [1136.0]]))]))], [s9(p0: [s6(p0: s1(p0: [s0(p0: 1137.0, p1: [[1138.0], [1139.0]])], p1: [s0(p0: 1140.0, p1: [[1141.0], [1142.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 1143.0, p1: [[1144.0], [1145.0]])], p1: [s0(p0: 1146.0, p1: [[1147.0], [1148.0]])]), p1: [s1(p0: [s0(p0: 1149.0, p1: [[1150.0], [1151.0]])], p1: [s0(p0: 1152.0, p1: [[1153.0], [1154.0]])])], p2: s1(p0: [s0(p0: 1155.0, p1: [[1156.0], [1157.0]])], p1: [s0(p0: 1158.0, p1: [[1159.0], [1160.0]])]), p3: s0(p0: 1161.0, p1: [[1162.0], [1163.0]])), s2(p0: s1(p0: [s0(p0: 1164.0, p1: [[1165.0], [1166.0]])], p1: [s0(p0: 1167.0, p1: [[1168.0], [1169.0]])]), p1: [s1(p0: [s0(p0: 1170.0, p1: [[1171.0], [1172.0]])], p1: [s0(p0: 1173.0, p1: [[1174.0], [1175.0]])])], p2: s1(p0: [s0(p0: 1176.0, p1: [[1177.0], [1178.0]])], p1: [s0(p0: 1179.0, p1: [[1180.0], [1181.0]])]), p3: s0(p0: 1182.0, p1: [[1183.0], [1184.0]])), s2(p0: s1(p0: [s0(p0: 1185.0, p1: [[1186.0], [1187.0]])], p1: [s0(p0: 1188.0, p1: [[1189.0], [1190.0]])]), p1: [s1(p0: [s0(p0: 1191.0, p1: [[1192.0], [1193.0]])], p1: [s0(p0: 1194.0, p1: [[1195.0], [1196.0]])])], p2: s1(p0: [s0(p0: 1197.0, p1: [[1198.0], [1199.0]])], p1: [s0(p0: 1200.0, p1: [[1201.0], [1202.0]])]), p3: s0(p0: 1203.0, p1: [[1204.0], [1205.0]]))]), s6(p0: s1(p0: [s0(p0: 1206.0, p1: [[1207.0], [1208.0]])], p1: [s0(p0: 1209.0, p1: [[1210.0], [1211.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 1212.0, p1: [[1213.0], [1214.0]])], p1: [s0(p0: 1215.0, p1: [[1216.0], [1217.0]])]), p1: [s1(p0: [s0(p0: 1218.0, p1: [[1219.0], [1220.0]])], p1: [s0(p0: 1221.0, p1: [[1222.0], [1223.0]])])], p2: s1(p0: [s0(p0: 1224.0, p1: [[1225.0], [1226.0]])], p1: [s0(p0: 1227.0, p1: [[1228.0], [1229.0]])]), p3: s0(p0: 1230.0, p1: [[1231.0], [1232.0]])), s2(p0: s1(p0: [s0(p0: 1233.0, p1: [[1234.0], [1235.0]])], p1: [s0(p0: 1236.0, p1: [[1237.0], [1238.0]])]), p1: [s1(p0: [s0(p0: 1239.0, p1: [[1240.0], [1241.0]])], p1: [s0(p0: 1242.0, p1: [[1243.0], [1244.0]])])], p2: s1(p0: [s0(p0: 1245.0, p1: [[1246.0], [1247.0]])], p1: [s0(p0: 1248.0, p1: [[1249.0], [1250.0]])]), p3: s0(p0: 1251.0, p1: [[1252.0], [1253.0]])), s2(p0: s1(p0: [s0(p0: 1254.0, p1: [[1255.0], [1256.0]])], p1: [s0(p0: 1257.0, p1: [[1258.0], [1259.0]])]), p1: [s1(p0: [s0(p0: 1260.0, p1: [[1261.0], [1262.0]])], p1: [s0(p0: 1263.0, p1: [[1264.0], [1265.0]])])], p2: s1(p0: [s0(p0: 1266.0, p1: [[1267.0], [1268.0]])], p1: [s0(p0: 1269.0, p1: [[1270.0], [1271.0]])]), p3: s0(p0: 1272.0, p1: [[1273.0], [1274.0]]))])], p1: s6(p0: s1(p0: [s0(p0: 1275.0, p1: [[1276.0], [1277.0]])], p1: [s0(p0: 1278.0, p1: [[1279.0], [1280.0]])]), p1: [s2(p0: s1(p0: [s0(p0: 1281.0, p1: [[1282.0], [1283.0]])], p1: [s0(p0: 1284.0, p1: [[1285.0], [1286.0]])]), p1: [s1(p0: [s0(p0: 1287.0, p1: [[1288.0], [1289.0]])], p1: [s0(p0: 1290.0, p1: [[1291.0], [1292.0]])])], p2: s1(p0: [s0(p0: 1293.0, p1: [[1294.0], [1295.0]])], p1: [s0(p0: 1296.0, p1: [[1297.0], [1298.0]])]), p3: s0(p0: 1299.0, p1: [[1300.0], [1301.0]])), s2(p0: s1(p0: [s0(p0: 1302.0, p1: [[1303.0], [1304.0]])], p1: [s0(p0: 1305.0, p1: [[1306.0], [1307.0]])]), p1: [s1(p0: [s0(p0: 1308.0, p1: [[1309.0], [1310.0]])], p1: [s0(p0: 1311.0, p1: [[1312.0], [1313.0]])])], p2: s1(p0: [s0(p0: 1314.0, p1: [[1315.0], [1316.0]])], p1: [s0(p0: 1317.0, p1: [[1318.0], [1319.0]])]), p3: s0(p0: 1320.0, p1: [[1321.0], [1322.0]])), s2(p0: s1(p0: [s0(p0: 1323.0, p1: [[1324.0], [1325.0]])], p1: [s0(p0: 1326.0, p1: [[1327.0], [1328.0]])]), p1: [s1(p0: [s0(p0: 1329.0, p1: [[1330.0], [1331.0]])], p1: [s0(p0: 1332.0, p1: [[1333.0], [1334.0]])])], p2: s1(p0: [s0(p0: 1335.0, p1: [[1336.0], [1337.0]])], p1: [s0(p0: 1338.0, p1: [[1339.0], [1340.0]])]), p3: s0(p0: 1341.0, p1: [[1342.0], [1343.0]]))]))]], p1: [s1(p0: [s0(p0: 1344.0, p1: [[1345.0], [1346.0]])], p1: [s0(p0: 1347.0, p1: [[1348.0], [1349.0]])])])]
    let v2: Double = 1350.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1350.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
