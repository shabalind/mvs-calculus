  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  let f7: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [Float] = v0.p0 in
    let v3: [[Float]] = v0.p1 in
    let v7: [Float] = v0.p0 in
    let v11: [Float] = v3[0] in
    let v1: [[Float]] = v0.p1 in
    var v8: s0 = v0 in
    var v6: [[Float]] = v3 in
    var v13: [[Float]] = v6 in
    v6[0] = v4 in
    v6[0] = v7 in
    let v5: [[Float]] = v0.p1 in
    v8.p1 = v13 in
    let v15: [Float] = v6[1] in
    v8.p1 = v3 in
    v8.p1 = v6 in
    v8.p1 = v5 in
    let v10: [Float] = v5[0] in
    let v9: [Float] = v0.p0 in
    let v12: [Float] = v3[0] in
    var v27: [[Float]] = v13 in
    v6 = v1 in
    v8.p0 = v10 in
    var v40: [[Float]] = v1 in
    let v30: [Float] = v40[1] in
    v27[1] = v4 in
    v13[1] = v4 in
    let v36: [Float] = v27[0] in
    var v43: s0 = v8 in
    let v53: [[Float]] = [v15, v36, v10] in
    v43.p0 = v12 in
    let v46: [Float] = v53[2] in
    let v69: [[Float]] = v43.p1 in
    v43.p0 = v11 in
    var v71: [[Float]] = v53 in
    let v76: [Float] = v5[1] in
    v40[0] = v46 in
    let v72: [Float] = v71[1] in
    v8.p0 = v76 in
    let v94: [[Float]] = v8.p1 in
    v27[1] = v9 in
    v43.p1 = v3 in
    let v211: s0 = s0(v72, v94) in
    v13 = v69 in
    v8.p0 = v30 in
    v211
  } in
  let f5: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v7: [[Float]] = v0.p1 in
    let v2: [Float] = v6.p0 in
    let v5: [Float] = v7[1] in
    v6.p1 = v7 in
    let v8: Float = v5[0] in
    var v4: Float = v8 in
    let v1: s0 = s0(v2, v7) in
    let v3: s0 = f7(v6) in
    let v11: [Float] = v7[1] in
    v6.p0 = v5 in
    let v12: s0 = f7(v3) in
    var v10: s0 = v6 in
    let v13: [Float] = v12.p0 in
    let v17: Float = v5[0] in
    var v20: s0 = v0 in
    var v24: [Float] = v11 in
    var v18: [Float] = v11 in
    v24[0] = v4 in
    let v21: Float = v24[0] in
    var v15: [[Float]] = v7 in
    let v33: [[Float]] = v12.p1 in
    v6.p0 = v2 in
    let v30: [[Float]] = v1.p1 in
    v6.p1 = v30 in
    let v27: Float = v18[0] in
    var v32: s0 = v12 in
    v6 = v10 in
    var v62: Float = v27 in
    v18[0] = v17 in
    v24[0] = v21 in
    let v38: [[Float]] = v12.p1 in
    v20.p1 = v33 in
    let v41: [s0] = [v32, v0, v0, v3, v20, v20] in
    v6.p1 = v38 in
    var v74: [s0] = v41 in
    v20.p0 = v13 in
    let v34: [Float] = v7[1] in
    var v64: [s0] = v74 in
    let v45: s0 = f7(v1) in
    let v135: s0 = f7(v0) in
    v32.p1 = v15 in
    v18[0] = v8 in
    v20.p0 = v34 in
    let v170: s0 = v64[5] in
    v6.p0 = v24 in
    v20.p0 = v24 in
    v6.p1 = v7 in
    v4 = v62 in
    let v60: s0 = f7(v170) in
    v74[3] = v45 in
    v74[2] = v6 in
    v10 = v135 in
    v60
  } in
  let f4: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v5: s0 = f5(v1) in
    let v7: s0 = f7(v5) in
    let v3: [Float] = v0.p0 in
    let v8: [Float] = v1.p0 in
    var v9: s0 = v7 in
    var v2: [Float] = v8 in
    let v6: Float = v8[0] in
    let v10: Float = v6 / v6 in
    let v18: Float = v2[0] in
    let v13: s0 = f7(v1) in
    let v19: s0 = f5(v1) in
    let v26: s0 = f5(v13) in
    let v12: [[Float]] = v13.p1 in
    let v14: s0 = f5(v26) in
    var v34: Float = v6 in
    let v46: [Float] = v14.p0 in
    let v22: [Float] = v26.p0 in
    v2[0] = v34 in
    v2[0] = v18 in
    let v32: s0 = f7(v9) in
    let v25: s0 = f5(v1) in
    var v15: Float = v10 in
    v9.p1 = v12 in
    let v51: Float = v3[0] in
    v9.p0 = v2 in
    let v71: s0 = f5(v7) in
    v2[0] = v51 in
    let v64: [[Float]] = v25.p1 in
    v9.p0 = v46 in
    var v35: [Float] = v22 in
    var v85: s0 = v71 in
    v35[0] = v15 in
    var v58: Float = v10 in
    let v54: [s0] = [v85, v14, v71, v9, v71, v32, v19] in
    v9.p0 = v22 in
    v35[0] = v58 in
    v2[0] = v34 in
    v85.p0 = v35 in
    v85.p1 = v64 in
    let v241: s0 = v54[1] in
    v241
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v2: s0 = f5(v0) in
    var v6: Float = v1 in
    var v8: s0 = v0 in
    let v9: [[Float]] = v2.p1 in
    let v4: s0 = f4(v0, v2) in
    v8.p1 = v9 in
    let v5: [[Float]] = v8.p1 in
    let v3: s0 = f7(v0) in
    v8.p1 = v9 in
    v8.p1 = v5 in
    let v7: [Float] = v9[0] in
    let v15: s0 = f5(v2) in
    let v11: [Float] = v15.p0 in
    var v14: Float = v1 in
    v14 = v6 in
    let v18: [[Float]] = v15.p1 in
    v8.p0 = v11 in
    let v21: [Float] = v5[0] in
    let v19: Float = v21[0] in
    let v25: [Float] = v3.p0 in
    v8.p0 = v25 in
    var v30: [Float] = v25 in
    let v24: [Float] = v18[0] in
    let v27: Float = v19 / v14 in
    var v46: Float = v19 in
    v8.p1 = v5 in
    var v54: Float = v19 in
    let v91: Float = v7[0] in
    let v29: [Float] = v9[1] in
    v8.p0 = v29 in
    var v40: Float = v46 in
    let v32: Float = v29[0] in
    v30[0] = v54 in
    let v77: [Float] = [v91, v54, v32, v40, v27] in
    v8.p1 = v18 in
    v30[0] = v91 in
    let v114: [Float] = v3.p0 in
    let v135: [[Float]] = v4.p1 in
    var v102: [Float] = v77 in
    v8.p0 = v114 in
    v8.p0 = v30 in
    v8.p1 = v135 in
    v8.p0 = v24 in
    let v188: Float = v102[2] in
    v188
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([0.0], [[1.0], [2.0]]) in
    let v1: Float = 3.0 in
    let initialResult: Float = 3.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()