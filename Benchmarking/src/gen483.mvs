  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: s1
  } in
  struct s3 {
    var p0: s1
    var p1: [s0]
    var p2: s2
    var p3: s1
  } in
  let f73: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v1: Float = v6 in
    var v4: Float = v1 in
    var v2: Float = v1 in
    var v5: Float = v1 in
    var v10: Float = v6 in
    var v8: Float = v2 in
    var v11: Float = v1 in
    var v27: Float = v4 in
    var v14: Float = v1 in
    let v12: [Float] = [v4] in
    var v18: [Float] = v12 in
    var v46: [Float] = v18 in
    var v21: [Float] = v18 in
    var v25: [Float] = v21 in
    var v32: [Float] = v46 in
    var v40: [Float] = v18 in
    var v23: Float = v2 in
    var v37: Float = v5 in
    let v83: [[Float]] = [v18, v40, v21, v25, v40, v21, v40] in
    v18[0] = v37 in
    let v39: [Float] = v83[0] in
    var v70: [Float] = v40 in
    v32 = v39 in
    v70 = v46 in
    var v45: Float = v2 in
    v40[0] = v14 in
    v18[0] = v6 in
    let v78: [Float] = v83[6] in
    v2 = v10 in
    v70[0] = v11 in
    v32[0] = v23 in
    v70[0] = v45 in
    let v138: Float = v70[0] in
    v40[0] = v138 in
    let v92: [[Float]] = [v78, v32] in
    v18[0] = v11 in
    var v84: [[Float]] = v92 in
    v46[0] = v27 in
    let v96: [Float] = v84[0] in
    let v130: Float = v96[0] in
    v46[0] = v8 in
    v130
  } in
  let f10: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    let v3: Float = f73(v0) in
    var v1: Float = v6 in
    var v9: Float = v6 in
    var v12: Float = v3 in
    let v10: Float = f73(v9) in
    let v4: Float = f73(v10) in
    let v20: Float = f73(v4) in
    let v22: [Float] = [v4, v3, v20, v1, v9] in
    var v26: [Float] = v22 in
    var v18: [Float] = v26 in
    v18[1] = v12 in
    v26[3] = v3 in
    v18 = v26 in
    let v44: Float = v18[1] in
    var v125: Float = v44 in
    v125
  } in
  let noinline_f0: ([s3], Float) -> Float = (v0: [s3], v1: Float) -> Float {
    let v4: s3 = v0[2] in
    let v2: Float = f10(v1) in
    let v7: s2 = v4.p2 in
    let v16: Float = f10(v1) in
    let v20: Float = f10(v2) in
    let v37: Float = v20 + v16 in
    let v24: s0 = v7.p0 in
    let v82: Float = f10(v37) in
    let v39: [[Float]] = v24.p2 in
    let v75: [Float] = v39[1] in
    var v92: [Float] = v75 in
    v92[0] = v82 in
    let v78: Float = v92[0] in
    v78
  } in
  fun loop(i: Int, v0: [s3], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3(s1([s0([[0.0], [1.0]], [[2.0], [3.0]], [[4.0], [5.0]], [[6.0]]), s0([[7.0], [8.0]], [[9.0], [10.0]], [[11.0], [12.0]], [[13.0]])], s0([[14.0], [15.0]], [[16.0], [17.0]], [[18.0], [19.0]], [[20.0]])), [s0([[21.0], [22.0]], [[23.0], [24.0]], [[25.0], [26.0]], [[27.0]]), s0([[28.0], [29.0]], [[30.0], [31.0]], [[32.0], [33.0]], [[34.0]]), s0([[35.0], [36.0]], [[37.0], [38.0]], [[39.0], [40.0]], [[41.0]])], s2(s0([[42.0], [43.0]], [[44.0], [45.0]], [[46.0], [47.0]], [[48.0]]), s1([s0([[49.0], [50.0]], [[51.0], [52.0]], [[53.0], [54.0]], [[55.0]]), s0([[56.0], [57.0]], [[58.0], [59.0]], [[60.0], [61.0]], [[62.0]])], s0([[63.0], [64.0]], [[65.0], [66.0]], [[67.0], [68.0]], [[69.0]]))), s1([s0([[70.0], [71.0]], [[72.0], [73.0]], [[74.0], [75.0]], [[76.0]]), s0([[77.0], [78.0]], [[79.0], [80.0]], [[81.0], [82.0]], [[83.0]])], s0([[84.0], [85.0]], [[86.0], [87.0]], [[88.0], [89.0]], [[90.0]]))), s3(s1([s0([[91.0], [92.0]], [[93.0], [94.0]], [[95.0], [96.0]], [[97.0]]), s0([[98.0], [99.0]], [[100.0], [101.0]], [[102.0], [103.0]], [[104.0]])], s0([[105.0], [106.0]], [[107.0], [108.0]], [[109.0], [110.0]], [[111.0]])), [s0([[112.0], [113.0]], [[114.0], [115.0]], [[116.0], [117.0]], [[118.0]]), s0([[119.0], [120.0]], [[121.0], [122.0]], [[123.0], [124.0]], [[125.0]]), s0([[126.0], [127.0]], [[128.0], [129.0]], [[130.0], [131.0]], [[132.0]])], s2(s0([[133.0], [134.0]], [[135.0], [136.0]], [[137.0], [138.0]], [[139.0]]), s1([s0([[140.0], [141.0]], [[142.0], [143.0]], [[144.0], [145.0]], [[146.0]]), s0([[147.0], [148.0]], [[149.0], [150.0]], [[151.0], [152.0]], [[153.0]])], s0([[154.0], [155.0]], [[156.0], [157.0]], [[158.0], [159.0]], [[160.0]]))), s1([s0([[161.0], [162.0]], [[163.0], [164.0]], [[165.0], [166.0]], [[167.0]]), s0([[168.0], [169.0]], [[170.0], [171.0]], [[172.0], [173.0]], [[174.0]])], s0([[175.0], [176.0]], [[177.0], [178.0]], [[179.0], [180.0]], [[181.0]]))), s3(s1([s0([[182.0], [183.0]], [[184.0], [185.0]], [[186.0], [187.0]], [[188.0]]), s0([[189.0], [190.0]], [[191.0], [192.0]], [[193.0], [194.0]], [[195.0]])], s0([[196.0], [197.0]], [[198.0], [199.0]], [[200.0], [201.0]], [[202.0]])), [s0([[203.0], [204.0]], [[205.0], [206.0]], [[207.0], [208.0]], [[209.0]]), s0([[210.0], [211.0]], [[212.0], [213.0]], [[214.0], [215.0]], [[216.0]]), s0([[217.0], [218.0]], [[219.0], [220.0]], [[221.0], [222.0]], [[223.0]])], s2(s0([[224.0], [225.0]], [[226.0], [227.0]], [[228.0], [229.0]], [[230.0]]), s1([s0([[231.0], [232.0]], [[233.0], [234.0]], [[235.0], [236.0]], [[237.0]]), s0([[238.0], [239.0]], [[240.0], [241.0]], [[242.0], [243.0]], [[244.0]])], s0([[245.0], [246.0]], [[247.0], [248.0]], [[249.0], [250.0]], [[251.0]]))), s1([s0([[252.0], [253.0]], [[254.0], [255.0]], [[256.0], [257.0]], [[258.0]]), s0([[259.0], [260.0]], [[261.0], [262.0]], [[263.0], [264.0]], [[265.0]])], s0([[266.0], [267.0]], [[268.0], [269.0]], [[270.0], [271.0]], [[272.0]])))] in
    let v1: Float = 273.0 in
    let initialResult: Float = 273.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()