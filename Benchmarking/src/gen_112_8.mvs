  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s7 {
    var p0: s1
    var p1: [s0]
  } in
  let f28: (Float) -> Float = (v0: Float) -> Float {
    let v2: Float = v0 / v0 in
    var v3: Float = v0 in
    var v7: Float = v0 in
    var v8: Float = v3 in
    var v6: Float = v0 in
    var v13: Float = v2 in
    var v5: Float = v8 in
    var v1: Float = v13 in
    let v11: Float = v6 - v7 in
    var v19: Float = v1 in
    var v10: Float = v5 in
    var v4: Float = v3 in
    var v9: Float = v4 in
    var v17: Float = v19 in
    var v21: Float = v9 in
    var v14: Float = v4 in
    var v29: Float = v0 in
    var v18: Float = v10 in
    var v30: Float = v13 in
    v14 = v10 in
    var v41: Float = v29 in
    let v23: Float = v1 - v21 in
    var v27: Float = v14 in
    let v48: [Float] = [v14, v18, v30, v10, v6, v11] in
    var v56: Float = v23 in
    let v46: [Float] = [v41, v3] in
    let v40: Float = v48[2] in
    var v57: [Float] = v48 in
    v57[2] = v17 in
    var v55: [Float] = v57 in
    v55[3] = v19 in
    let v72: Float = v40 - v7 in
    v55 = v48 in
    let v32: Float = v46[0] in
    let v26: Float = v55[3] in
    v55[2] = v27 in
    let v122: Float = v56 + v6 in
    v57[5] = v32 in
    let v141: Float = v72 / v26 in
    v14 = v122 in
    v8 = v3 in
    v141
  } in
  let noinline_f0: ([s7], Float) -> Float = (v0: [s7], v1: Float) -> Float {
    let v4: Float = f28(v1) in
    let v3: Float = f28(v1) in
    let v11: Float = v4 + v3 in
    let v30: Float = v11 + v4 in
    v30
  } in
  fun loop(i: Int, v0: [s7], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s7] = [s7(s1(s0([[0.0], [1.0]], [[2.0], [3.0]]), [s0([[4.0], [5.0]], [[6.0], [7.0]])]), [s0([[8.0], [9.0]], [[10.0], [11.0]]), s0([[12.0], [13.0]], [[14.0], [15.0]]), s0([[16.0], [17.0]], [[18.0], [19.0]])])] in
    let v1: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()