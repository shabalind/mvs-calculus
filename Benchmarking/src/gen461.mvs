  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [[s1]]
    var p2: s1
    var p3: [s1]
  } in
  let f80: ([s2]) -> [s2] = (v0: [s2]) -> [s2] {
    let v6: s2 = v0[1] in
    var v20: [s2] = v0 in
    var v16: [s2] = v20 in
    v20[1] = v6 in
    v16
  } in
  let f79: (s2) -> s2 = (v0: s2) -> s2 {
    let v5: [[s1]] = v0.p1 in
    var v4: s2 = v0 in
    let v3: [[s1]] = v0.p1 in
    var v1: s2 = v0 in
    let v7: [s1] = v3[0] in
    var v8: [s1] = v7 in
    v1.p1 = v3 in
    let v6: s1 = v8[0] in
    v4.p2 = v6 in
    v1.p2 = v6 in
    v8[0] = v6 in
    let v30: [s1] = v1.p3 in
    v1.p1 = v5 in
    v1.p3 = v30 in
    let v22: s1 = v30[1] in
    v8[0] = v22 in
    v4
  } in
  let f72: (s2) -> s2 = (v0: s2) -> s2 {
    let v4: [s2] = [v0, v0] in
    let v6: s2 = f79(v0) in
    var v1: [s2] = v4 in
    let v2: [s2] = f80(v1) in
    var v3: s2 = v0 in
    var v7: s2 = v6 in
    v7 = v6 in
    var v9: [s2] = v2 in
    let v8: [[s1]] = v0.p1 in
    let v20: [s2] = f80(v9) in
    let v22: [s1] = v0.p3 in
    var v10: [s1] = v22 in
    let v14: [s2] = f80(v2) in
    let v13: [s1] = v8[0] in
    v1[1] = v3 in
    v9 = v20 in
    let v72: s2 = v14[1] in
    let v57: s1 = v22[1] in
    let v37: s1 = v13[0] in
    let v51: s2 = f79(v0) in
    let v21: s2 = v9[0] in
    v1[1] = v7 in
    v10[0] = v57 in
    v7.p3 = v10 in
    v7.p2 = v37 in
    let v82: [s0] = v72.p0 in
    v3.p3 = v10 in
    v1[1] = v51 in
    v3.p1 = v8 in
    v7.p0 = v82 in
    let v122: s2 = f79(v21) in
    v9[0] = v72 in
    v1[1] = v7 in
    v122
  } in
  let f70: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v2: [[Float]] = v0.p1 in
    let v1: [[Float]] = v4.p0 in
    var v5: [[Float]] = v1 in
    let v8: [[Float]] = v0.p1 in
    v4.p0 = v1 in
    let v7: [Float] = v2[1] in
    let v6: s0 = s0(v8, v5) in
    let v3: [[Float]] = v4.p1 in
    v5[1] = v7 in
    let v29: [[Float]] = v0.p0 in
    var v9: [[Float]] = v2 in
    let v13: [[Float]] = v6.p1 in
    let v16: [Float] = v5[0] in
    let v19: [[Float]] = v0.p0 in
    let v25: [[Float]] = v4.p0 in
    let v15: Float = v7[0] in
    v9[1] = v16 in
    v5[1] = v7 in
    var v21: s0 = v6 in
    v21.p1 = v9 in
    let v14: [[Float]] = v4.p0 in
    let v43: [[Float]] = v6.p1 in
    var v35: s0 = v6 in
    let v22: [[Float]] = v6.p0 in
    let v24: [[[Float]]] = [v29, v25, v1, v29, v1, v8] in
    var v56: [[[Float]]] = v24 in
    let v30: [[Float]] = v56[3] in
    let v18: [[Float]] = v35.p1 in
    let v49: [[[[Float]]]] = [v56, v56, v24, v56] in
    var v45: [Float] = v16 in
    v9[0] = v45 in
    v56[3] = v14 in
    v56[1] = v22 in
    let v46: [[Float]] = v4.p0 in
    v4.p0 = v18 in
    var v44: [[Float]] = v8 in
    v9[1] = v7 in
    v45[0] = v15 in
    v21.p0 = v30 in
    let v41: [[[Float]]] = v49[2] in
    v35.p1 = v18 in
    var v33: [[[Float]]] = v24 in
    var v51: [[[[Float]]]] = v49 in
    v4.p0 = v19 in
    let v40: [[Float]] = v6.p0 in
    let v32: [[Float]] = v35.p0 in
    v33 = v41 in
    let v76: [[[Float]]] = v51[3] in
    v4.p0 = v32 in
    v4.p1 = v46 in
    v4.p0 = v40 in
    v35.p1 = v14 in
    v21.p0 = v18 in
    v35.p1 = v44 in
    v9[0] = v45 in
    v45[0] = v15 in
    let v55: s0 = s0(v25, v3) in
    v4.p1 = v43 in
    v33[4] = v13 in
    let v102: [[Float]] = v0.p1 in
    let v65: [[Float]] = v76[2] in
    var v94: [[[Float]]] = v33 in
    let v143: [[Float]] = v21.p0 in
    let v210: s0 = s0(v143, v65) in
    v4.p1 = v102 in
    v35 = v55 in
    v51[2] = v94 in
    v210
  } in
  let f69: (s1) -> s1 = (v0: s1) -> s1 {
    let v7: [s0] = v0.p1 in
    let v2: s0 = v7[0] in
    let v3: [s0] = [v2, v2, v2, v2, v2] in
    let v5: [s0] = v0.p1 in
    let v12: s0 = v3[1] in
    let v50: s1 = s1(v12, v5) in
    let v142: [s1] = [v50] in
    var v96: [s1] = v142 in
    let v136: s1 = v96[0] in
    v136
  } in
  let f49: (s2, s0, s0) -> s0 = (v0: s2, v1: s0, v2: s0) -> s0 {
    let v3: s0 = f70(v1) in
    let v4: [s0] = v0.p0 in
    var v6: s0 = v2 in
    let v13: [[Float]] = v6.p0 in
    var v7: [s0] = v4 in
    let v11: s0 = v7[0] in
    let v9: [s0] = v0.p0 in
    var v29: s0 = v3 in
    let v14: s0 = v9[0] in
    v7[0] = v6 in
    var v12: [[Float]] = v13 in
    v29.p0 = v12 in
    let v28: [[Float]] = v3.p1 in
    let v36: [[Float]] = v14.p0 in
    let v21: s0 = f70(v11) in
    let v57: [[Float]] = v21.p1 in
    let v19: s0 = v4[0] in
    v29.p1 = v57 in
    var v47: s0 = v29 in
    var v49: [[Float]] = v28 in
    let v30: s0 = v9[0] in
    v29.p1 = v13 in
    var v120: [[Float]] = v49 in
    v29.p0 = v120 in
    let v81: [[Float]] = v30.p1 in
    v29.p1 = v57 in
    v47.p1 = v81 in
    var v53: [[Float]] = v120 in
    v47 = v30 in
    v47.p1 = v36 in
    v7[0] = v19 in
    let v84: [Float] = v120[1] in
    v29.p1 = v53 in
    v29.p0 = v81 in
    let v80: [[Float]] = v1.p1 in
    v29.p1 = v80 in
    v29.p0 = v57 in
    var v104: [Float] = v84 in
    v120[0] = v84 in
    v49[0] = v104 in
    v47
  } in
  let f46: (s2) -> s2 = (v0: s2) -> s2 {
    let v7: [[s1]] = v0.p1 in
    let v5: [s0] = v0.p0 in
    let v2: [s0] = v0.p0 in
    let v8: [s1] = v0.p3 in
    let v4: s1 = v8[0] in
    let v14: s1 = f69(v4) in
    var v10: [s1] = v8 in
    let v11: s2 = f72(v0) in
    let v26: s1 = v10[0] in
    v10[1] = v26 in
    let v30: [s1] = v7[0] in
    let v18: s1 = f69(v26) in
    var v16: s2 = v0 in
    let v17: s2 = f72(v16) in
    v16.p1 = v7 in
    v16.p2 = v18 in
    let v24: s1 = v30[0] in
    let v21: s0 = v14.p0 in
    let v23: [s1] = v17.p3 in
    v10[0] = v4 in
    v16.p2 = v24 in
    let v29: [s0] = v11.p0 in
    let v44: s2 = f79(v17) in
    v10[0] = v24 in
    v16.p0 = v29 in
    var v36: [s0] = v2 in
    let v35: s0 = v5[0] in
    let v34: s0 = f49(v0, v21, v35) in
    v16.p0 = v2 in
    v16.p0 = v36 in
    v16.p3 = v10 in
    v36[0] = v34 in
    let v146: s2 = f72(v44) in
    v16.p3 = v10 in
    v16.p1 = v7 in
    v16.p3 = v23 in
    v146
  } in
  let noinline_f0: (s1, [s2], Float) -> Float = (v0: s1, v1: [s2], v2: Float) -> Float {
    let v5: s0 = v0.p0 in
    var v4: [s2] = v1 in
    let v9: s2 = v1[2] in
    let v7: s2 = f46(v9) in
    let v13: s2 = v4[2] in
    var v11: s0 = v5 in
    let v19: s2 = v1[1] in
    v4[1] = v13 in
    let v15: s1 = v13.p2 in
    let v40: [[Float]] = v11.p0 in
    v11.p1 = v40 in
    let v10: [Float] = v40[1] in
    v11.p1 = v40 in
    let v26: Float = v10[0] in
    v11.p0 = v40 in
    let v29: [[Float]] = v5.p0 in
    v4[0] = v19 in
    v11.p0 = v40 in
    v4[1] = v13 in
    v4[2] = v7 in
    let v30: s0 = v15.p0 in
    let v148: [[Float]] = v30.p1 in
    v11.p1 = v40 in
    v11.p0 = v29 in
    v11.p1 = v148 in
    v11.p0 = v148 in
    v26
  } in
  fun loop(i: Int, v0: s1, v1: [s2], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0]], [[2.0], [3.0]]), [s0([[4.0], [5.0]], [[6.0], [7.0]]), s0([[8.0], [9.0]], [[10.0], [11.0]]), s0([[12.0], [13.0]], [[14.0], [15.0]])]) in
    let v1: [s2] = [s2([s0([[16.0], [17.0]], [[18.0], [19.0]])], [[s1(s0([[20.0], [21.0]], [[22.0], [23.0]]), [s0([[24.0], [25.0]], [[26.0], [27.0]]), s0([[28.0], [29.0]], [[30.0], [31.0]]), s0([[32.0], [33.0]], [[34.0], [35.0]])])]], s1(s0([[36.0], [37.0]], [[38.0], [39.0]]), [s0([[40.0], [41.0]], [[42.0], [43.0]]), s0([[44.0], [45.0]], [[46.0], [47.0]]), s0([[48.0], [49.0]], [[50.0], [51.0]])]), [s1(s0([[52.0], [53.0]], [[54.0], [55.0]]), [s0([[56.0], [57.0]], [[58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0]]), s0([[64.0], [65.0]], [[66.0], [67.0]])]), s1(s0([[68.0], [69.0]], [[70.0], [71.0]]), [s0([[72.0], [73.0]], [[74.0], [75.0]]), s0([[76.0], [77.0]], [[78.0], [79.0]]), s0([[80.0], [81.0]], [[82.0], [83.0]])])]), s2([s0([[84.0], [85.0]], [[86.0], [87.0]])], [[s1(s0([[88.0], [89.0]], [[90.0], [91.0]]), [s0([[92.0], [93.0]], [[94.0], [95.0]]), s0([[96.0], [97.0]], [[98.0], [99.0]]), s0([[100.0], [101.0]], [[102.0], [103.0]])])]], s1(s0([[104.0], [105.0]], [[106.0], [107.0]]), [s0([[108.0], [109.0]], [[110.0], [111.0]]), s0([[112.0], [113.0]], [[114.0], [115.0]]), s0([[116.0], [117.0]], [[118.0], [119.0]])]), [s1(s0([[120.0], [121.0]], [[122.0], [123.0]]), [s0([[124.0], [125.0]], [[126.0], [127.0]]), s0([[128.0], [129.0]], [[130.0], [131.0]]), s0([[132.0], [133.0]], [[134.0], [135.0]])]), s1(s0([[136.0], [137.0]], [[138.0], [139.0]]), [s0([[140.0], [141.0]], [[142.0], [143.0]]), s0([[144.0], [145.0]], [[146.0], [147.0]]), s0([[148.0], [149.0]], [[150.0], [151.0]])])]), s2([s0([[152.0], [153.0]], [[154.0], [155.0]])], [[s1(s0([[156.0], [157.0]], [[158.0], [159.0]]), [s0([[160.0], [161.0]], [[162.0], [163.0]]), s0([[164.0], [165.0]], [[166.0], [167.0]]), s0([[168.0], [169.0]], [[170.0], [171.0]])])]], s1(s0([[172.0], [173.0]], [[174.0], [175.0]]), [s0([[176.0], [177.0]], [[178.0], [179.0]]), s0([[180.0], [181.0]], [[182.0], [183.0]]), s0([[184.0], [185.0]], [[186.0], [187.0]])]), [s1(s0([[188.0], [189.0]], [[190.0], [191.0]]), [s0([[192.0], [193.0]], [[194.0], [195.0]]), s0([[196.0], [197.0]], [[198.0], [199.0]]), s0([[200.0], [201.0]], [[202.0], [203.0]])]), s1(s0([[204.0], [205.0]], [[206.0], [207.0]]), [s0([[208.0], [209.0]], [[210.0], [211.0]]), s0([[212.0], [213.0]], [[214.0], [215.0]]), s0([[216.0], [217.0]], [[218.0], [219.0]])])])] in
    let v2: Float = 220.0 in
    let initialResult: Float = 220.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()