  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: Float
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s1]]
  } in
  struct s4 {
    var p0: s1
    var p1: s1
  } in
  struct s7 {
    var p0: s2
    var p1: s4
  } in
  let f118: (s4) -> s4 = (v0: s4) -> s4 {
    var v3: s4 = v0 in
    let v1: s1 = v3.p0 in
    let v2: Float = v1.p1 in
    var v7: s4 = v0 in
    let v6: [[s0]] = v1.p0 in
    v7.p1 = v1 in
    v3 = v0 in
    var v12: s4 = v7 in
    let v11: s1 = s1(v6, v2) in
    let v10: s1 = v0.p1 in
    let v14: s1 = v12.p1 in
    v7.p0 = v11 in
    v3.p1 = v10 in
    v3.p0 = v14 in
    v7.p0 = v1 in
    v12
  } in
  let f114: (s7, [s1]) -> [s1] = (v0: s7, v1: [s1]) -> [s1] {
    let v8: s4 = v0.p1 in
    var v3: s7 = v0 in
    var v7: [s1] = v1 in
    var v2: s7 = v3 in
    let v6: s1 = v7[1] in
    var v13: s1 = v6 in
    var v11: s7 = v3 in
    let v12: s2 = v3.p0 in
    let v15: [[s1]] = v12.p1 in
    v11 = v2 in
    v11.p1 = v8 in
    let v26: s4 = f118(v8) in
    v11.p0 = v12 in
    let v10: s1 = v1[1] in
    let v18: s1 = v1[1] in
    v2.p0 = v12 in
    let v32: s4 = v2.p1 in
    let v19: [s1] = v15[0] in
    let v28: s4 = v11.p1 in
    let v24: s4 = f118(v28) in
    var v25: s4 = v26 in
    v3.p1 = v25 in
    let v57: s1 = v19[0] in
    let v14: [[s0]] = v57.p0 in
    v7[1] = v18 in
    let v66: s1 = v24.p1 in
    v2.p0 = v12 in
    v2 = v0 in
    var v48: s2 = v12 in
    v7[2] = v13 in
    v11.p0 = v48 in
    let v78: s1 = v32.p0 in
    let v94: s2 = v11.p0 in
    v48.p0 = v7 in
    v13.p0 = v14 in
    v7[2] = v10 in
    v25.p1 = v78 in
    v25.p0 = v6 in
    let v147: [s1] = v94.p0 in
    v13 = v66 in
    v147
  } in
  let f102: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: Float = v0.p1 in
    let v1: [[s0]] = v0.p0 in
    let v3: [[s0]] = v0.p0 in
    let v5: [s0] = v3[0] in
    let v6: [s0] = v1[0] in
    var v4: [[s0]] = v1 in
    let v10: Float = v0.p1 in
    v4 = v1 in
    let v9: [[s0]] = v0.p0 in
    v4[0] = v6 in
    let v11: Float = v0.p1 in
    let v17: s0 = v6[0] in
    let v12: [[s0]] = v0.p0 in
    let v13: [s0] = v3[0] in
    let v19: s1 = s1(v12, v10) in
    let v36: Float = v19.p1 in
    var v28: [s0] = v5 in
    v4[0] = v5 in
    var v47: [s0] = v13 in
    let v27: s1 = s1(v9, v11) in
    var v46: s1 = v0 in
    v4[0] = v28 in
    let v70: [s1] = [v0, v46, v27, v46] in
    v46.p1 = v2 in
    let v52: Float = v19.p1 in
    v46.p1 = v36 in
    var v34: [s0] = v47 in
    v46.p0 = v12 in
    v34[0] = v17 in
    let v74: s0 = v34[0] in
    let v78: [[Float]] = v17.p1 in
    let v87: [[Float]] = v74.p1 in
    let v159: s1 = v70[3] in
    v4 = v9 in
    var v71: s0 = v17 in
    v46.p0 = v4 in
    let v84: [Float] = v87[0] in
    v46.p1 = v52 in
    var v51: [[Float]] = v78 in
    v51[0] = v84 in
    v4[0] = v5 in
    v34 = v6 in
    v71.p1 = v51 in
    v47 = v13 in
    v28[0] = v71 in
    v159
  } in
  let f94: (s2, s4) -> s2 = (v0: s2, v1: s4) -> s2 {
    var v6: s2 = v0 in
    let v11: [[s1]] = v6.p1 in
    let v10: [s1] = v0.p0 in
    v6.p1 = v11 in
    v6.p0 = v10 in
    v6
  } in
  let f92: (s4) -> s4 = (v0: s4) -> s4 {
    let v1: s1 = v0.p0 in
    let v6: s1 = f102(v1) in
    let v2: s4 = f118(v0) in
    var v8: s1 = v1 in
    let v17: Float = v1.p1 in
    let v15: s4 = f118(v2) in
    let v27: [[s0]] = v6.p0 in
    let v43: s4 = f118(v15) in
    let v31: s1 = v43.p1 in
    v8.p0 = v27 in
    v8.p1 = v17 in
    v8.p1 = v17 in
    let v105: s4 = s4(v8, v31) in
    v105
  } in
  let f50: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: Float = v0.p1 in
    var v12: Float = v2 in
    var v5: s1 = v0 in
    let v9: Float = v2 + v2 in
    v5.p1 = v12 in
    v5.p1 = v2 in
    v5.p1 = v9 in
    v5
  } in
  let f35: (s2) -> s2 = (v0: s2) -> s2 {
    let v6: [s1] = v0.p0 in
    let v7: s1 = v6[0] in
    var v4: s2 = v0 in
    let v3: s1 = v6[1] in
    v4.p0 = v6 in
    let v5: [[s1]] = [v6, v6, v6, v6, v6] in
    v4.p0 = v6 in
    let v2: s1 = v6[0] in
    v4.p0 = v6 in
    let v8: s1 = f102(v7) in
    var v1: [[s1]] = v5 in
    let v10: s4 = s4(v2, v2) in
    let v9: s4 = f92(v10) in
    var v13: s4 = v9 in
    v13.p0 = v3 in
    var v12: [[s1]] = v1 in
    let v21: s1 = v6[1] in
    var v20: s2 = v0 in
    let v17: s1 = f50(v8) in
    v13.p0 = v17 in
    let v18: [s1] = v4.p0 in
    let v19: [s1] = v20.p0 in
    let v31: s2 = f94(v20, v13) in
    let v28: s4 = f118(v13) in
    let v32: [s1] = v12[2] in
    let v27: [s1] = v12[0] in
    let v46: s4 = f118(v28) in
    let v25: [s1] = v12[1] in
    v4.p0 = v25 in
    let v47: [[s1]] = v31.p1 in
    let v29: s7 = s7(v31, v28) in
    var v33: s2 = v4 in
    let v70: [s1] = f114(v29, v27) in
    let v58: s1 = f50(v3) in
    var v61: s1 = v58 in
    v1[0] = v18 in
    let v52: s1 = v6[1] in
    v12[0] = v18 in
    v20.p0 = v19 in
    v1[3] = v27 in
    var v67: s2 = v33 in
    v13.p0 = v61 in
    let v81: [s1] = v67.p0 in
    v13.p1 = v21 in
    v12[2] = v27 in
    let v179: [s1] = v31.p0 in
    v20.p0 = v179 in
    v1[0] = v32 in
    v4.p1 = v47 in
    v67.p1 = v47 in
    let v126: s2 = f94(v31, v46) in
    v12[3] = v81 in
    v20.p0 = v70 in
    v13.p0 = v52 in
    v126
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v4: [s1] = v0.p0 in
    let v3: s1 = v4[2] in
    let v10: s1 = f50(v3) in
    let v6: s2 = f35(v0) in
    let v30: [Float] = [v1, v1, v1] in
    let v14: s2 = f35(v6) in
    var v31: s1 = v10 in
    var v28: s2 = v14 in
    let v51: Float = v30[1] in
    let v49: Float = v31.p1 in
    var v48: Float = v49 in
    let v82: [[s1]] = v28.p1 in
    let v180: [s1] = v82[1] in
    let v131: Float = v51 - v48 in
    let v116: s1 = v180[0] in
    let v70: [[s0]] = v116.p0 in
    v31.p0 = v70 in
    v131
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s1([[s0([[0.0], [1.0]], [[2.0]])]], 3.0), s1([[s0([[4.0], [5.0]], [[6.0]])]], 7.0), s1([[s0([[8.0], [9.0]], [[10.0]])]], 11.0)], [[s1([[s0([[12.0], [13.0]], [[14.0]])]], 15.0)], [s1([[s0([[16.0], [17.0]], [[18.0]])]], 19.0)]]) in
    let v1: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()