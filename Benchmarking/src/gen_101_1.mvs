  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f2: ([s0], s0) -> [s0] = (v0: [s0], v1: s0) -> [s0] {
    let v4: s0 = v0[1] in
    let v6: s0 = v0[1] in
    var v2: [s0] = v0 in
    let v8: [[Float]] = v6.p0 in
    v2[1] = v1 in
    var v12: [s0] = v0 in
    var v7: s0 = v6 in
    let v3: [[Float]] = v6.p0 in
    let v5: [[Float]] = v4.p1 in
    let v9: [[Float]] = v7.p0 in
    var v10: [s0] = v12 in
    let v13: [Float] = v5[0] in
    var v25: [[Float]] = v3 in
    let v22: Float = v13[0] in
    var v19: [[Float]] = v9 in
    var v14: [[Float]] = v25 in
    var v11: [[Float]] = v14 in
    let v15: [[Float]] = v7.p1 in
    let v37: [[Float]] = v1.p1 in
    var v51: [[Float]] = v37 in
    let v28: [[Float]] = v4.p1 in
    var v26: [Float] = v13 in
    v7.p0 = v8 in
    v7.p0 = v3 in
    v26[0] = v22 in
    let v17: [Float] = v14[0] in
    v10[1] = v6 in
    let v27: [Float] = v51[0] in
    v7.p0 = v19 in
    var v60: Float = v22 in
    var v29: s0 = v7 in
    let v16: [[Float]] = v7.p1 in
    v10[0] = v29 in
    var v43: [[Float]] = v51 in
    let v42: [[Float]] = v1.p0 in
    v7.p1 = v43 in
    let v24: s0 = v12[0] in
    let v52: Float = v27[0] in
    let v38: Float = v60 + v52 in
    v29.p1 = v37 in
    v7.p1 = v5 in
    v29.p1 = v5 in
    var v47: s0 = v29 in
    let v31: [[Float]] = v7.p0 in
    let v56: [[Float]] = v47.p1 in
    var v36: s0 = v4 in
    let v44: [Float] = v15[0] in
    v29.p1 = v51 in
    v26[0] = v38 in
    let v79: [[[Float]]] = [v5, v16, v51] in
    v47.p0 = v11 in
    var v49: [Float] = v44 in
    var v86: [[[Float]]] = v79 in
    var v54: [[Float]] = v9 in
    v2[0] = v47 in
    v7.p1 = v37 in
    var v129: [[Float]] = v9 in
    let v65: s0 = v12[0] in
    v47.p1 = v37 in
    v19[1] = v17 in
    v26 = v49 in
    let v63: s0 = v10[1] in
    v11[0] = v17 in
    v12[0] = v65 in
    v51[0] = v26 in
    let v150: [[Float]] = v36.p0 in
    var v96: [s0] = v12 in
    v2[0] = v65 in
    let v69: s0 = v10[1] in
    v47 = v63 in
    v2[0] = v69 in
    var v122: [[[Float]]] = v86 in
    let v100: s0 = s0(v31, v56) in
    v96[1] = v100 in
    v47.p0 = v129 in
    let v93: [Float] = v150[2] in
    v86 = v122 in
    let v128: [[s0]] = [v96, v96, v12, v10, v0, v0, v2] in
    let v82: [s0] = v128[5] in
    v19[1] = v93 in
    let v53: [[Float]] = v24.p1 in
    v29.p1 = v53 in
    v7.p0 = v42 in
    let v231: [[s0]] = [v96, v0, v2, v96, v82] in
    v7.p1 = v28 in
    let v178: [[Float]] = v86[0] in
    v47.p1 = v178 in
    let v201: [s0] = v231[4] in
    v12[1] = v69 in
    v47.p0 = v54 in
    v201
  } in
  let f1: (s0, [s0]) -> s0 = (v0: s0, v1: [s0]) -> s0 {
    let v7: [[Float]] = v0.p0 in
    let v6: [[[Float]]] = [v7, v7] in
    let v5: s0 = v1[0] in
    let v8: [[Float]] = v6[0] in
    let v2: [Float] = v8[0] in
    let v4: [[Float]] = v6[1] in
    let v21: [s0] = f2(v1, v0) in
    let v11: [s0] = f2(v21, v0) in
    let v9: [[Float]] = v5.p1 in
    let v13: [[Float]] = v5.p1 in
    let v14: [s0] = f2(v11, v0) in
    let v10: [s0] = f2(v14, v5) in
    var v18: s0 = v5 in
    let v17: [[Float]] = v0.p1 in
    v18.p1 = v9 in
    let v30: [Float] = v13[0] in
    let v31: [s0] = f2(v1, v18) in
    let v25: [s0] = f2(v10, v18) in
    let v16: [[Float]] = v18.p0 in
    let v33: [[Float]] = v18.p0 in
    let v48: s0 = v25[0] in
    let v57: [[Float]] = v5.p1 in
    let v50: [[Float]] = v18.p1 in
    let v56: [[Float]] = v18.p0 in
    let v54: s0 = v11[0] in
    v18.p0 = v4 in
    var v59: [[[Float]]] = v6 in
    v18 = v5 in
    let v71: [[Float]] = v59[1] in
    let v53: [s0] = f2(v31, v5) in
    let v47: [[Float]] = v54.p1 in
    v59 = v6 in
    let v82: s0 = v53[0] in
    v18.p0 = v71 in
    var v74: [[Float]] = v33 in
    v59[1] = v56 in
    v18.p1 = v50 in
    v18.p1 = v57 in
    let v126: s0 = s0(v74, v57) in
    v18.p1 = v50 in
    v18.p0 = v7 in
    v74[2] = v30 in
    v18.p1 = v17 in
    v18.p1 = v17 in
    v18.p0 = v33 in
    v18.p0 = v74 in
    var v105: s0 = v82 in
    let v195: [[Float]] = v126.p0 in
    v105.p0 = v33 in
    let v73: [[Float]] = v0.p0 in
    v105.p0 = v16 in
    v105.p1 = v47 in
    let v76: [s0] = [v18, v0, v105, v5, v48, v48, v5] in
    v18.p0 = v73 in
    v105.p0 = v195 in
    var v107: [s0] = v76 in
    v74[0] = v2 in
    var v251: [s0] = v107 in
    v105.p0 = v4 in
    let v174: s0 = v251[1] in
    v105.p0 = v73 in
    v174
  } in
  let noinline_f0: ([s0], [s0], s0, s0, s0, [s0], s0, [s0], Float) -> Float = (v0: [s0], v1: [s0], v2: s0, v3: s0, v4: s0, v5: [s0], v6: s0, v7: [s0], v8: Float) -> Float {
    let v9: [[Float]] = v3.p0 in
    let v17: s0 = v5[0] in
    let v13: [s0] = f2(v0, v17) in
    let v22: [s0] = f2(v13, v6) in
    let v19: s0 = f1(v17, v22) in
    let v32: Float = v8 / v8 in
    let v35: [[Float]] = v19.p1 in
    let v47: [Float] = v9[2] in
    let v28: [Float] = v35[0] in
    var v51: [Float] = v28 in
    v51[0] = v8 in
    v51[0] = v32 in
    let v134: Float = v51[0] in
    v51 = v47 in
    v134
  } in
  fun loop(i: Int, v0: [s0], v1: [s0], v2: s0, v3: s0, v4: s0, v5: [s0], v6: s0, v7: [s0], v8: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5, v6, v7, v8) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, v6, v7, v8, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0], [1.0], [2.0]], [[3.0]]), s0([[4.0], [5.0], [6.0]], [[7.0]])] in
    let v1: [s0] = [s0([[8.0], [9.0], [10.0]], [[11.0]])] in
    let v2: s0 = s0([[12.0], [13.0], [14.0]], [[15.0]]) in
    let v3: s0 = s0([[16.0], [17.0], [18.0]], [[19.0]]) in
    let v4: s0 = s0([[20.0], [21.0], [22.0]], [[23.0]]) in
    let v5: [s0] = [s0([[24.0], [25.0], [26.0]], [[27.0]]), s0([[28.0], [29.0], [30.0]], [[31.0]]), s0([[32.0], [33.0], [34.0]], [[35.0]])] in
    let v6: s0 = s0([[36.0], [37.0], [38.0]], [[39.0]]) in
    let v7: [s0] = [s0([[40.0], [41.0], [42.0]], [[43.0]])] in
    let v8: Float = 44.0 in
    let initialResult: Float = 44.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, v6, v7, v8, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()