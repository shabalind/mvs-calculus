  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: [s2]
  } in
  struct s4 {
    var p0: s3
    var p1: [s3]
  } in
  struct s5 {
    var p0: s0
    var p1: [s4]
  } in
  let noinline_f0: ([[s2]], [[Float]], s5, Float) -> Float = (v0: [[s2]], v1: [[Float]], v2: s5, v3: Float) -> Float {
    let v10: Float = v3 + v3 in
    let v12: [Float] = v1[0] in
    let v70: [Float] = v1[1] in
    var v69: [Float] = v12 in
    let v57: Float = v3 * v3 in
    v69 = v70 in
    v69[0] = v10 in
    v69[0] = v57 in
    let v100: Float = v69[0] in
    let v170: Float = v70[0] in
    let v265: Float = v100 + v170 in
    v265
  } in
  fun loop(i: Int, v0: [[s2]], v1: [[Float]], v2: s5, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s2]] = [[s2([s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]]), s0([[4.0]], [[5.0]])], [s0([[6.0]], [[7.0]]), s0([[8.0]], [[9.0]]), s0([[10.0]], [[11.0]])])]] in
    let v1: [[Float]] = [[12.0], [13.0], [14.0]] in
    let v2: s5 = s5(s0([[15.0]], [[16.0]]), [s4(s3(s2([s0([[17.0]], [[18.0]]), s0([[19.0]], [[20.0]]), s0([[21.0]], [[22.0]])], [s0([[23.0]], [[24.0]]), s0([[25.0]], [[26.0]]), s0([[27.0]], [[28.0]])]), [s2([s0([[29.0]], [[30.0]]), s0([[31.0]], [[32.0]]), s0([[33.0]], [[34.0]])], [s0([[35.0]], [[36.0]]), s0([[37.0]], [[38.0]]), s0([[39.0]], [[40.0]])]), s2([s0([[41.0]], [[42.0]]), s0([[43.0]], [[44.0]]), s0([[45.0]], [[46.0]])], [s0([[47.0]], [[48.0]]), s0([[49.0]], [[50.0]]), s0([[51.0]], [[52.0]])])]), [s3(s2([s0([[53.0]], [[54.0]]), s0([[55.0]], [[56.0]]), s0([[57.0]], [[58.0]])], [s0([[59.0]], [[60.0]]), s0([[61.0]], [[62.0]]), s0([[63.0]], [[64.0]])]), [s2([s0([[65.0]], [[66.0]]), s0([[67.0]], [[68.0]]), s0([[69.0]], [[70.0]])], [s0([[71.0]], [[72.0]]), s0([[73.0]], [[74.0]]), s0([[75.0]], [[76.0]])]), s2([s0([[77.0]], [[78.0]]), s0([[79.0]], [[80.0]]), s0([[81.0]], [[82.0]])], [s0([[83.0]], [[84.0]]), s0([[85.0]], [[86.0]]), s0([[87.0]], [[88.0]])])]), s3(s2([s0([[89.0]], [[90.0]]), s0([[91.0]], [[92.0]]), s0([[93.0]], [[94.0]])], [s0([[95.0]], [[96.0]]), s0([[97.0]], [[98.0]]), s0([[99.0]], [[100.0]])]), [s2([s0([[101.0]], [[102.0]]), s0([[103.0]], [[104.0]]), s0([[105.0]], [[106.0]])], [s0([[107.0]], [[108.0]]), s0([[109.0]], [[110.0]]), s0([[111.0]], [[112.0]])]), s2([s0([[113.0]], [[114.0]]), s0([[115.0]], [[116.0]]), s0([[117.0]], [[118.0]])], [s0([[119.0]], [[120.0]]), s0([[121.0]], [[122.0]]), s0([[123.0]], [[124.0]])])]), s3(s2([s0([[125.0]], [[126.0]]), s0([[127.0]], [[128.0]]), s0([[129.0]], [[130.0]])], [s0([[131.0]], [[132.0]]), s0([[133.0]], [[134.0]]), s0([[135.0]], [[136.0]])]), [s2([s0([[137.0]], [[138.0]]), s0([[139.0]], [[140.0]]), s0([[141.0]], [[142.0]])], [s0([[143.0]], [[144.0]]), s0([[145.0]], [[146.0]]), s0([[147.0]], [[148.0]])]), s2([s0([[149.0]], [[150.0]]), s0([[151.0]], [[152.0]]), s0([[153.0]], [[154.0]])], [s0([[155.0]], [[156.0]]), s0([[157.0]], [[158.0]]), s0([[159.0]], [[160.0]])])])]), s4(s3(s2([s0([[161.0]], [[162.0]]), s0([[163.0]], [[164.0]]), s0([[165.0]], [[166.0]])], [s0([[167.0]], [[168.0]]), s0([[169.0]], [[170.0]]), s0([[171.0]], [[172.0]])]), [s2([s0([[173.0]], [[174.0]]), s0([[175.0]], [[176.0]]), s0([[177.0]], [[178.0]])], [s0([[179.0]], [[180.0]]), s0([[181.0]], [[182.0]]), s0([[183.0]], [[184.0]])]), s2([s0([[185.0]], [[186.0]]), s0([[187.0]], [[188.0]]), s0([[189.0]], [[190.0]])], [s0([[191.0]], [[192.0]]), s0([[193.0]], [[194.0]]), s0([[195.0]], [[196.0]])])]), [s3(s2([s0([[197.0]], [[198.0]]), s0([[199.0]], [[200.0]]), s0([[201.0]], [[202.0]])], [s0([[203.0]], [[204.0]]), s0([[205.0]], [[206.0]]), s0([[207.0]], [[208.0]])]), [s2([s0([[209.0]], [[210.0]]), s0([[211.0]], [[212.0]]), s0([[213.0]], [[214.0]])], [s0([[215.0]], [[216.0]]), s0([[217.0]], [[218.0]]), s0([[219.0]], [[220.0]])]), s2([s0([[221.0]], [[222.0]]), s0([[223.0]], [[224.0]]), s0([[225.0]], [[226.0]])], [s0([[227.0]], [[228.0]]), s0([[229.0]], [[230.0]]), s0([[231.0]], [[232.0]])])]), s3(s2([s0([[233.0]], [[234.0]]), s0([[235.0]], [[236.0]]), s0([[237.0]], [[238.0]])], [s0([[239.0]], [[240.0]]), s0([[241.0]], [[242.0]]), s0([[243.0]], [[244.0]])]), [s2([s0([[245.0]], [[246.0]]), s0([[247.0]], [[248.0]]), s0([[249.0]], [[250.0]])], [s0([[251.0]], [[252.0]]), s0([[253.0]], [[254.0]]), s0([[255.0]], [[256.0]])]), s2([s0([[257.0]], [[258.0]]), s0([[259.0]], [[260.0]]), s0([[261.0]], [[262.0]])], [s0([[263.0]], [[264.0]]), s0([[265.0]], [[266.0]]), s0([[267.0]], [[268.0]])])]), s3(s2([s0([[269.0]], [[270.0]]), s0([[271.0]], [[272.0]]), s0([[273.0]], [[274.0]])], [s0([[275.0]], [[276.0]]), s0([[277.0]], [[278.0]]), s0([[279.0]], [[280.0]])]), [s2([s0([[281.0]], [[282.0]]), s0([[283.0]], [[284.0]]), s0([[285.0]], [[286.0]])], [s0([[287.0]], [[288.0]]), s0([[289.0]], [[290.0]]), s0([[291.0]], [[292.0]])]), s2([s0([[293.0]], [[294.0]]), s0([[295.0]], [[296.0]]), s0([[297.0]], [[298.0]])], [s0([[299.0]], [[300.0]]), s0([[301.0]], [[302.0]]), s0([[303.0]], [[304.0]])])])])]) in
    let v3: Float = 305.0 in
    let initialResult: Float = 305.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()