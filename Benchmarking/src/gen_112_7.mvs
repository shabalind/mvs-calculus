  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
    var p2: s0
  } in
  struct s2 {
    var p0: [[s1]]
    var p1: [s0]
  } in
  struct s4 {
    var p0: s2
    var p1: s2
  } in
  let f45: (s2) -> s2 = (v0: s2) -> s2 {
    let v5: [s0] = v0.p1 in
    let v7: [[s1]] = v0.p0 in
    let v6: [s0] = v0.p1 in
    let v2: s0 = v6[0] in
    let v8: [s1] = v7[0] in
    var v11: s2 = v0 in
    var v13: [s0] = v5 in
    var v10: s2 = v11 in
    let v17: [[Float]] = v2.p1 in
    v10 = v0 in
    var v15: [s0] = v13 in
    v10.p1 = v6 in
    v10.p1 = v15 in
    var v19: s0 = v2 in
    let v27: s0 = v13[0] in
    var v32: s0 = v27 in
    let v20: s1 = v8[0] in
    let v26: [[Float]] = v27.p0 in
    let v21: [[s1]] = v0.p0 in
    v19.p0 = v26 in
    let v47: [[Float]] = v19.p0 in
    let v60: [[Float]] = v19.p1 in
    var v44: [[Float]] = v60 in
    v19.p1 = v44 in
    v13 = v15 in
    v32.p0 = v47 in
    let v56: s0 = v20.p1 in
    let v63: [[Float]] = v56.p1 in
    let v35: [Float] = v17[2] in
    v44[1] = v35 in
    var v78: s2 = v10 in
    v10.p0 = v21 in
    v19.p0 = v47 in
    v19.p1 = v63 in
    v11.p0 = v7 in
    v15[0] = v32 in
    v32 = v27 in
    v78
  } in
  let f44: (Float, s2) -> Float = (v0: Float, v1: s2) -> Float {
    let v2: s2 = f45(v1) in
    let v3: [[s1]] = v2.p0 in
    let v14: [s1] = v3[2] in
    let v40: s1 = v14[0] in
    let v30: s0 = v40.p2 in
    let v56: [[Float]] = v30.p1 in
    let v60: [Float] = v56[0] in
    var v38: [Float] = v60 in
    let v46: Float = v38[0] in
    v46
  } in
  let f41: (s2, s1, s0, s1) -> s2 = (v0: s2, v1: s1, v2: s0, v3: s1) -> s2 {
    let v7: s2 = f45(v0) in
    let v4: s2 = f45(v7) in
    let v15: s2 = f45(v4) in
    var v14: s2 = v15 in
    var v13: s0 = v2 in
    let v24: [[s1]] = v7.p0 in
    let v40: [s0] = v14.p1 in
    var v37: [s0] = v40 in
    var v49: [s0] = v37 in
    v37[0] = v2 in
    let v44: s2 = f45(v7) in
    var v75: [[s1]] = v24 in
    v14.p0 = v75 in
    let v73: [[s1]] = v44.p0 in
    v49[0] = v13 in
    var v64: [[s1]] = v73 in
    let v94: s2 = s2(v75, v49) in
    let v116: [s1] = v75[2] in
    v64[2] = v116 in
    v14 = v7 in
    v14.p0 = v64 in
    v94
  } in
  let f27: (s2) -> s2 = (v0: s2) -> s2 {
    let v7: s2 = f45(v0) in
    let v1: [s0] = v0.p1 in
    let v6: [[s1]] = v7.p0 in
    let v4: s2 = f45(v7) in
    let v11: s2 = f45(v0) in
    let v14: [[s1]] = v4.p0 in
    let v13: s0 = v1[0] in
    let v15: [s1] = v6[1] in
    let v18: s1 = v15[0] in
    let v20: [[s1]] = v11.p0 in
    let v19: [s1] = v20[0] in
    var v40: s2 = v11 in
    v40.p0 = v6 in
    v40.p0 = v14 in
    let v62: s0 = v1[0] in
    var v71: s1 = v18 in
    let v46: s1 = v19[0] in
    v71.p1 = v62 in
    let v48: s2 = f41(v40, v71, v13, v46) in
    v48
  } in
  let f4: (s4) -> s4 = (v0: s4) -> s4 {
    var v5: s4 = v0 in
    let v1: s2 = v5.p1 in
    v5.p1 = v1 in
    v5.p1 = v1 in
    v5.p1 = v1 in
    let v2: s4 = s4(v1, v1) in
    v5 = v2 in
    var v13: s4 = v0 in
    let v9: s2 = f27(v1) in
    v5.p0 = v1 in
    var v11: s2 = v9 in
    let v19: [s0] = v9.p1 in
    var v16: s2 = v11 in
    let v14: s2 = f27(v16) in
    v5.p0 = v14 in
    let v47: s2 = f27(v16) in
    var v51: s2 = v16 in
    let v28: s2 = f45(v51) in
    let v72: s2 = v13.p1 in
    v13 = v2 in
    let v42: s4 = s4(v51, v47) in
    v16.p1 = v19 in
    v5.p0 = v28 in
    v5.p0 = v72 in
    v5.p1 = v72 in
    v42
  } in
  let noinline_f0: (s4, Float) -> Float = (v0: s4, v1: Float) -> Float {
    let v2: s2 = v0.p0 in
    var v5: s4 = v0 in
    let v11: s2 = f45(v2) in
    var v9: s2 = v2 in
    let v10: [[s1]] = v2.p0 in
    let v17: [s1] = v10[1] in
    let v4: [s0] = v11.p1 in
    v9.p0 = v10 in
    let v12: [s0] = v11.p1 in
    let v21: s2 = f45(v9) in
    let v15: s1 = v17[0] in
    v9.p0 = v10 in
    v9.p1 = v12 in
    let v16: s2 = v5.p1 in
    let v36: s4 = s4(v16, v11) in
    let v31: s2 = s2(v10, v4) in
    let v49: s4 = f4(v36) in
    v9 = v31 in
    let v32: s0 = v15.p1 in
    let v35: s2 = v49.p0 in
    let v52: [[Float]] = v32.p0 in
    v5.p1 = v31 in
    v9.p0 = v10 in
    let v93: [Float] = v52[0] in
    v5.p1 = v2 in
    let v81: Float = v93[0] in
    let v102: Float = f44(v81, v35) in
    v5.p0 = v21 in
    v9 = v31 in
    v102
  } in
  fun loop(i: Int, v0: s4, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4(s2([[s1([s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]), s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])], s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]]), s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]]))], [s1([s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]]), s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]])], s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]]), s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]]))], [s1([s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]]), s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]])], s0([[65.0], [66.0]], [[67.0], [68.0], [69.0]]), s0([[70.0], [71.0]], [[72.0], [73.0], [74.0]]))]], [s0([[75.0], [76.0]], [[77.0], [78.0], [79.0]])]), s2([[s1([s0([[80.0], [81.0]], [[82.0], [83.0], [84.0]]), s0([[85.0], [86.0]], [[87.0], [88.0], [89.0]]), s0([[90.0], [91.0]], [[92.0], [93.0], [94.0]])], s0([[95.0], [96.0]], [[97.0], [98.0], [99.0]]), s0([[100.0], [101.0]], [[102.0], [103.0], [104.0]]))], [s1([s0([[105.0], [106.0]], [[107.0], [108.0], [109.0]]), s0([[110.0], [111.0]], [[112.0], [113.0], [114.0]]), s0([[115.0], [116.0]], [[117.0], [118.0], [119.0]])], s0([[120.0], [121.0]], [[122.0], [123.0], [124.0]]), s0([[125.0], [126.0]], [[127.0], [128.0], [129.0]]))], [s1([s0([[130.0], [131.0]], [[132.0], [133.0], [134.0]]), s0([[135.0], [136.0]], [[137.0], [138.0], [139.0]]), s0([[140.0], [141.0]], [[142.0], [143.0], [144.0]])], s0([[145.0], [146.0]], [[147.0], [148.0], [149.0]]), s0([[150.0], [151.0]], [[152.0], [153.0], [154.0]]))]], [s0([[155.0], [156.0]], [[157.0], [158.0], [159.0]])])) in
    let v1: Float = 160.0 in
    let initialResult: Float = 160.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()