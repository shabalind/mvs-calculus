  let f28: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    var v7: [[Float]] = v0 in
    var v4: [[Float]] = v0 in
    var v5: [[Float]] = v7 in
    let v2: [Float] = v5[0] in
    v5[1] = v2 in
    var v9: [[Float]] = v5 in
    let v10: [Float] = v0[1] in
    v9 = v7 in
    let v8: [Float] = v4[0] in
    var v6: [[Float]] = v9 in
    v4[1] = v8 in
    let v17: [Float] = v5[0] in
    let v15: [Float] = v9[0] in
    v9[0] = v10 in
    let v24: [[Float]] = [v10] in
    let v59: [Float] = v7[0] in
    let v16: [Float] = v7[0] in
    v6[0] = v17 in
    let v25: [Float] = v5[1] in
    var v29: [[Float]] = v24 in
    var v28: [[Float]] = v5 in
    v28[1] = v59 in
    let v45: [Float] = v29[0] in
    var v27: [Float] = v10 in
    v6[0] = v25 in
    let v98: Float = v8[0] in
    var v49: [[Float]] = v0 in
    let v51: [[[Float]]] = [v6, v5, v6, v28, v4, v49] in
    v27[0] = v98 in
    let v70: [[Float]] = v51[5] in
    v4[1] = v15 in
    v5[0] = v16 in
    v49[1] = v45 in
    v49[1] = v27 in
    var v132: [Float] = v15 in
    v49[1] = v132 in
    v70
  } in
  let f26: ([[Float]], [[Float]]) -> [[Float]] = (v0: [[Float]], v1: [[Float]]) -> [[Float]] {
    let v5: [[Float]] = f28(v0) in
    let v3: [Float] = v1[0] in
    let v7: [[Float]] = f28(v5) in
    let v6: [[Float]] = f28(v7) in
    let v4: [Float] = v7[1] in
    var v2: [Float] = v4 in
    let v10: Float = v3[0] in
    var v8: [[Float]] = v7 in
    var v15: Float = v10 in
    v2[0] = v15 in
    let v21: [[Float]] = f28(v7) in
    var v47: [Float] = v2 in
    v8[0] = v47 in
    var v19: [Float] = v3 in
    let v66: [Float] = v6[0] in
    let v36: [Float] = v21[0] in
    v2 = v19 in
    v8[0] = v66 in
    let v56: [Float] = v8[1] in
    var v43: [[Float]] = v1 in
    v8[1] = v36 in
    v43[0] = v2 in
    v43[1] = v56 in
    v43
  } in
  let f23: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v6: [Float] = v0[1] in
    let v4: [Float] = v0[0] in
    let v1: [[Float]] = [v4, v4, v6, v6, v4, v4] in
    var v5: [[Float]] = v1 in
    v5[1] = v4 in
    let v9: [Float] = v1[5] in
    v5[5] = v6 in
    let v10: [[Float]] = f26(v0, v0) in
    let v21: [[Float]] = f26(v10, v10) in
    let v18: [[Float]] = f26(v10, v21) in
    var v15: [[Float]] = v0 in
    var v17: [Float] = v9 in
    let v19: [Float] = v0[1] in
    var v27: [[Float]] = v15 in
    var v14: [[Float]] = v0 in
    var v20: [[Float]] = v14 in
    let v28: [[[Float]]] = [v27, v18, v27, v0, v27] in
    var v34: [[Float]] = v21 in
    let v23: [Float] = v1[4] in
    var v44: [[[Float]]] = v28 in
    let v25: [[Float]] = f28(v34) in
    v44[2] = v21 in
    var v29: [[[Float]]] = v44 in
    var v60: [[Float]] = v5 in
    let v46: [[Float]] = v28[3] in
    let v47: [[Float]] = v29[0] in
    v29[3] = v46 in
    v5[1] = v17 in
    v15 = v47 in
    let v102: [[Float]] = f26(v25, v46) in
    v34[1] = v23 in
    let v87: [Float] = v60[5] in
    v34[1] = v19 in
    let v113: [Float] = v5[5] in
    v60[3] = v113 in
    let v83: [[Float]] = f26(v34, v102) in
    v29[4] = v20 in
    v15[1] = v17 in
    v14[1] = v87 in
    let v179: [[Float]] = f26(v102, v83) in
    v179
  } in
  let f19: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    var v7: [[Float]] = v0 in
    let v1: [[Float]] = f28(v0) in
    let v18: [[Float]] = f28(v1) in
    let v8: [[Float]] = f26(v0, v0) in
    let v24: [[Float]] = f23(v8) in
    let v15: [[Float]] = f28(v7) in
    let v17: [[[Float]]] = [v0, v7, v15, v18, v24, v7] in
    var v100: [[[Float]]] = v17 in
    let v52: [[Float]] = v100[2] in
    let v114: [[Float]] = f28(v52) in
    var v70: [[Float]] = v114 in
    v70
  } in
  let f15: (Float) -> Float = (v0: Float) -> Float {
    let v3: Float = v0 * v0 in
    var v7: Float = v0 in
    let v6: [Float] = [v3] in
    var v5: Float = v0 in
    var v4: [Float] = v6 in
    let v1: Float = v6[0] in
    let v8: Float = v4[0] in
    var v2: [Float] = v6 in
    var v13: Float = v1 in
    let v9: Float = v5 / v13 in
    v2[0] = v9 in
    v2[0] = v8 in
    v2[0] = v8 in
    var v10: Float = v13 in
    v4[0] = v9 in
    let v12: Float = v2[0] in
    let v20: Float = v4[0] in
    v4[0] = v8 in
    var v28: [Float] = v6 in
    var v27: Float = v7 in
    let v36: Float = v2[0] in
    var v19: Float = v12 in
    let v59: Float = v6[0] in
    var v16: [Float] = v28 in
    let v43: Float = v16[0] in
    var v26: Float = v7 in
    var v34: Float = v27 in
    let v15: Float = v16[0] in
    v16[0] = v43 in
    v28[0] = v15 in
    v2[0] = v36 in
    v4[0] = v43 in
    let v45: Float = v36 - v36 in
    let v40: Float = v6[0] in
    v10 = v27 in
    let v42: [[Float]] = [v16, v6] in
    let v31: [[Float]] = f28(v42) in
    let v25: [[Float]] = f19(v42) in
    let v41: [Float] = [v10, v20, v19, v45, v59, v40] in
    let v21: [[Float]] = f19(v31) in
    v16[0] = v9 in
    v2[0] = v20 in
    var v58: Float = v45 in
    let v44: [[Float]] = f26(v21, v25) in
    let v80: [Float] = [v8, v43, v26, v36, v34, v13] in
    let v50: [Float] = v44[1] in
    let v82: Float = v80[3] in
    var v81: [Float] = v41 in
    v7 = v58 in
    let v64: Float = v50[0] in
    v16[0] = v64 in
    var v143: [Float] = v81 in
    v4[0] = v82 in
    let v138: Float = v143[0] in
    v138
  } in
  let noinline_f0: ([[Float]], [[Float]], [[Float]], Float) -> Float = (v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float) -> Float {
    let v5: [Float] = v2[1] in
    var v6: [[Float]] = v1 in
    var v18: [[Float]] = v6 in
    let v8: [Float] = v2[1] in
    v18[0] = v5 in
    var v13: Float = v3 in
    let v7: [Float] = v18[0] in
    let v14: Float = v5[0] in
    let v16: Float = v7[0] in
    v18[0] = v7 in
    let v26: [[Float]] = f23(v2) in
    var v9: Float = v13 in
    v6[0] = v7 in
    let v69: [Float] = [v14, v16, v3, v9, v14, v16] in
    let v28: [Float] = v26[1] in
    v18[0] = v8 in
    v18[0] = v28 in
    let v33: Float = v69[1] in
    v13 = v9 in
    let v100: Float = f15(v33) in
    var v62: [Float] = v69 in
    v18 = v1 in
    let v54: Float = v62[5] in
    var v65: Float = v54 in
    v62[0] = v100 in
    v65
  } in
  fun loop(i: Int, v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0], [1.0]] in
    let v1: [[Float]] = [[2.0]] in
    let v2: [[Float]] = [[3.0], [4.0]] in
    let v3: Float = 5.0 in
    let initialResult: Float = 5.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()