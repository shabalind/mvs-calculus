  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: Float
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  let f51: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p0 in
    var v3: [[Float]] = v4 in
    let v7: [Float] = v3[1] in
    var v9: [[Float]] = v3 in
    v3 = v9 in
    let v14: [s0] = [v0, v0, v0] in
    let v6: [[s0]] = [v14, v14, v14, v14, v14, v14] in
    let v8: [s0] = v6[0] in
    let v10: [[Float]] = v0.p0 in
    let v18: s0 = v8[2] in
    let v16: Float = v18.p2 in
    let v19: [Float] = v10[1] in
    var v34: [Float] = v19 in
    let v35: s0 = s0(v9, v3, v16) in
    v3[1] = v34 in
    v9[1] = v7 in
    v35
  } in
  let f43: (s0, [s0]) -> [s0] = (v0: s0, v1: [s0]) -> [s0] {
    var v7: s0 = v0 in
    let v5: s0 = f51(v7) in
    var v15: [s0] = v1 in
    v7 = v5 in
    var v24: s0 = v7 in
    var v17: [s0] = v15 in
    v17[0] = v24 in
    v15[0] = v7 in
    v17
  } in
  let f33: (Float, s0) -> Float = (v0: Float, v1: s0) -> Float {
    let v6: s0 = f51(v1) in
    var v5: s0 = v6 in
    var v2: Float = v0 in
    v5.p2 = v0 in
    let v8: Float = v1.p2 in
    v5.p2 = v2 in
    v5.p2 = v8 in
    let v13: Float = v5.p2 in
    v2 = v8 in
    v13
  } in
  let f31: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f51(v0) in
    var v5: s0 = v3 in
    let v10: [[Float]] = v0.p0 in
    let v6: [Float] = v10[1] in
    let v4: [[Float]] = v3.p1 in
    var v2: [[Float]] = v4 in
    v5.p1 = v4 in
    let v7: [[Float]] = v0.p1 in
    v5.p1 = v10 in
    let v13: [[Float]] = v5.p1 in
    let v8: s0 = f51(v5) in
    v5.p0 = v13 in
    let v9: [Float] = v13[1] in
    let v12: s0 = f51(v8) in
    let v15: [[Float]] = v3.p0 in
    let v20: s0 = f51(v3) in
    v2[1] = v9 in
    let v18: Float = v20.p2 in
    let v51: Float = f33(v18, v12) in
    let v23: Float = v20.p2 in
    v5.p2 = v23 in
    let v54: s0 = f51(v8) in
    let v40: [[Float]] = v3.p1 in
    v5.p0 = v2 in
    var v36: [[Float]] = v7 in
    v5.p1 = v15 in
    var v31: s0 = v54 in
    v36[1] = v9 in
    v36[1] = v6 in
    v31.p0 = v36 in
    let v37: [[Float]] = v31.p0 in
    let v97: s0 = s0(v36, v37, v51) in
    v5.p0 = v40 in
    v97
  } in
  let f30: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: s0 = f51(v0) in
    let v2: [[Float]] = v0.p0 in
    let v5: s0 = f51(v4) in
    let v7: [s0] = [v5, v5, v0, v0, v4, v5, v5] in
    var v1: [s0] = v7 in
    v1[6] = v0 in
    let v3: s0 = f51(v5) in
    var v6: s0 = v5 in
    let v9: s0 = f51(v6) in
    v1[0] = v5 in
    v1[1] = v0 in
    let v22: Float = v5.p2 in
    let v13: Float = f33(v22, v9) in
    let v24: Float = f33(v22, v3) in
    let v16: s0 = f31(v3) in
    var v51: s0 = v3 in
    var v23: [s0] = v1 in
    let v27: s0 = v23[2] in
    v51.p0 = v2 in
    var v30: [[Float]] = v2 in
    let v39: s0 = v7[5] in
    let v41: [Float] = v30[0] in
    let v68: Float = v41[0] in
    let v28: Float = f33(v68, v51) in
    let v35: Float = v39.p2 in
    let v48: [Float] = [v28, v24, v13, v35, v22, v22, v68] in
    let v38: s0 = f51(v6) in
    let v123: Float = v48[3] in
    let v43: [[Float]] = v51.p1 in
    v30 = v43 in
    v23[2] = v9 in
    var v31: s0 = v0 in
    let v65: s0 = f51(v38) in
    v6.p2 = v123 in
    v23[5] = v16 in
    let v81: [[Float]] = v65.p1 in
    v1[0] = v31 in
    v31.p0 = v81 in
    v6.p1 = v81 in
    v27
  } in
  let f26: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v4: Float = v0.p2 in
    v5.p2 = v4 in
    v5 = v0 in
    let v11: s0 = f51(v5) in
    let v16: s0 = f30(v11) in
    let v17: s0 = f30(v16) in
    v17
  } in
  let f19: ([s0], [s0], s0) -> [s0] = (v0: [s0], v1: [s0], v2: s0) -> [s0] {
    var v10: [s0] = v0 in
    v10
  } in
  let f17: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: s0 = v0.p0 in
    var v3: s0 = v5 in
    let v1: [s0] = v0.p1 in
    var v6: s1 = v0 in
    var v2: s1 = v6 in
    let v7: s0 = f51(v5) in
    let v13: [s0] = f19(v1, v1, v3) in
    let v8: [s0] = v6.p1 in
    v2.p0 = v7 in
    v6.p0 = v7 in
    let v9: s0 = v1[1] in
    v2.p1 = v8 in
    let v18: s0 = v1[0] in
    let v11: [[Float]] = v3.p0 in
    var v40: [[Float]] = v11 in
    let v12: [[Float]] = v18.p1 in
    var v4: [[Float]] = v12 in
    let v31: s0 = f26(v9) in
    let v16: [Float] = v11[1] in
    let v28: [s0] = f19(v8, v13, v31) in
    v6.p1 = v28 in
    let v39: [Float] = v4[0] in
    let v53: [s0] = v2.p1 in
    v40[0] = v16 in
    v40[0] = v39 in
    v4[0] = v16 in
    v6.p1 = v53 in
    let v46: s0 = f31(v7) in
    v3.p1 = v40 in
    let v56: [s0] = f43(v46, v28) in
    v6.p1 = v56 in
    v2
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    let v6: [s0] = v0.p1 in
    let v8: s1 = f17(v0) in
    var v9: s1 = v8 in
    var v4: [s0] = v6 in
    let v18: s0 = v6[1] in
    let v32: s0 = v9.p0 in
    v4[0] = v32 in
    let v14: s0 = v4[0] in
    let v19: [[Float]] = v14.p1 in
    let v26: [Float] = v19[0] in
    v4[0] = v18 in
    let v24: Float = v26[0] in
    v9.p1 = v6 in
    v24
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0]], [[2.0], [3.0]], 4.0), [s0([[5.0], [6.0]], [[7.0], [8.0]], 9.0), s0([[10.0], [11.0]], [[12.0], [13.0]], 14.0)]) in
    let v1: Float = 15.0 in
    let initialResult: Float = 15.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()