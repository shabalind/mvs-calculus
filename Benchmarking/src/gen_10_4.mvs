  let f25: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v5: Float = v0[1] in
    let v6: [[Float]] = [v0, v0] in
    var v7: [[Float]] = v6 in
    v7[0] = v0 in
    var v2: [[Float]] = v7 in
    var v3: Float = v5 in
    let v1: [Float] = v7[1] in
    var v8: [Float] = v0 in
    v2[1] = v1 in
    v2 = v6 in
    v2[0] = v1 in
    let v34: [[Float]] = [v0, v1, v0, v1, v1] in
    let v10: [Float] = v34[3] in
    let v14: [Float] = v34[3] in
    let v12: [Float] = v2[1] in
    var v20: [[Float]] = v6 in
    v20[0] = v8 in
    let v16: [[[Float]]] = [v34, v34, v34, v34, v34] in
    var v24: [Float] = v14 in
    let v23: [[Float]] = v16[2] in
    var v29: [[Float]] = v6 in
    var v25: [Float] = v12 in
    var v26: [Float] = v10 in
    v2[1] = v24 in
    var v33: Float = v3 in
    var v37: [Float] = v1 in
    v37 = v24 in
    let v71: [Float] = v23[2] in
    let v32: Float = v24[2] in
    let v68: [[Float]] = [v12, v37, v25, v1, v0, v71, v71] in
    v20[0] = v26 in
    let v91: Float = v33 + v32 in
    v2 = v29 in
    v24[2] = v33 in
    v8[2] = v91 in
    var v62: [[Float]] = v68 in
    v29 = v20 in
    var v98: [[Float]] = v29 in
    let v83: [Float] = v62[4] in
    v20 = v98 in
    v83
  } in
  let f6: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v4: Float = v6 in
    var v7: Float = v4 in
    var v2: Float = v0 in
    let v1: [Float] = [v0, v7, v4, v0] in
    let v18: [[Float]] = [v1, v1, v1, v1, v1] in
    var v5: [[Float]] = v18 in
    v2 = v6 in
    let v3: [[Float]] = [v1, v1, v1, v1, v1, v1] in
    let v8: [[[Float]]] = [v18, v18, v18, v18, v5, v5, v5] in
    var v11: [[[Float]]] = v8 in
    v5[2] = v1 in
    v5[2] = v1 in
    var v12: [[[Float]]] = v11 in
    var v15: [[Float]] = v5 in
    v15[0] = v1 in
    var v17: [[Float]] = v15 in
    let v19: [[Float]] = [v1, v1, v1, v1, v1, v1, v1] in
    let v21: [Float] = v3[3] in
    let v24: [Float] = v5[4] in
    v11[2] = v18 in
    let v27: [Float] = v18[4] in
    let v10: [[Float]] = v12[0] in
    let v22: [Float] = v19[2] in
    let v29: [Float] = v3[4] in
    v12[2] = v17 in
    var v39: [Float] = v27 in
    var v48: [Float] = v24 in
    let v41: Float = v21[1] in
    var v30: [Float] = v27 in
    var v71: [[Float]] = v3 in
    let v50: Float = v21[0] in
    let v66: [Float] = v71[3] in
    let v49: [Float] = v17[4] in
    v48[3] = v50 in
    let v40: Float = v30[2] in
    var v38: [[Float]] = v19 in
    var v84: [[Float]] = v3 in
    var v56: [[Float]] = v84 in
    let v147: [Float] = v10[1] in
    v71[2] = v147 in
    v12[0] = v5 in
    v15[0] = v48 in
    var v52: [[Float]] = v38 in
    var v59: [[Float]] = v52 in
    let v130: [Float] = v84[0] in
    v56[1] = v48 in
    let v113: Float = v41 * v2 in
    v38[3] = v1 in
    v84[1] = v66 in
    v39[2] = v113 in
    v39[0] = v40 in
    var v105: [[Float]] = v56 in
    let v46: [Float] = v71[1] in
    v15[1] = v22 in
    v52[1] = v29 in
    var v206: [[Float]] = v59 in
    var v184: [[Float]] = v105 in
    v17[1] = v39 in
    v71[3] = v30 in
    let v148: [Float] = v206[5] in
    v56[4] = v46 in
    v105[5] = v130 in
    v17[3] = v148 in
    v71[1] = v66 in
    let v188: Float = v147[2] in
    let v229: [Float] = v105[0] in
    v105 = v184 in
    v38[5] = v1 in
    v17[0] = v229 in
    var v154: [Float] = v49 in
    v48 = v154 in
    v188
  } in
  let noinline_f0: ([Float], Float) -> Float = (v0: [Float], v1: Float) -> Float {
    var v5: Float = v1 in
    let v9: [Float] = f25(v0) in
    let v8: Float = f6(v5) in
    var v3: Float = v8 in
    let v12: Float = v9[2] in
    let v10: Float = f6(v3) in
    var v30: [Float] = v0 in
    let v11: Float = v9[2] in
    var v17: [Float] = v30 in
    let v14: Float = v0[1] in
    let v16: Float = v0[0] in
    let v24: Float = v11 + v12 in
    var v27: [Float] = v17 in
    v27[1] = v10 in
    var v33: Float = v11 in
    let v18: Float = f6(v16) in
    v3 = v33 in
    v30[1] = v11 in
    v30[2] = v18 in
    let v54: Float = v27[2] in
    v27[1] = v24 in
    v27[2] = v5 in
    v30[2] = v14 in
    v30[1] = v3 in
    v54
  } in
  fun loop(i: Int, v0: [Float], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [Float] = [0.0, 1.0, 2.0] in
    let v1: Float = 3.0 in
    let initialResult: Float = 3.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()