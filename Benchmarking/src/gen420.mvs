  struct s0 {
    var p0: [[Float]]
    var p1: Float
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s2
    var p1: s0
  } in
  struct s4 {
    var p0: [[s0]]
    var p1: s3
  } in
  struct s5 {
    var p0: [s3]
  } in
  struct s6 {
    var p0: [s4]
    var p1: s5
  } in
  let f25: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v20: [s0] = v0 in
    let v30: s0 = v20[0] in
    var v72: [s0] = v20 in
    v72[1] = v30 in
    var v188: [s0] = v72 in
    v188
  } in
  let f19: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: Float = v0.p1 in
    let v2: [[Float]] = v0.p0 in
    var v11: s0 = v0 in
    let v14: [[Float]] = v11.p0 in
    v11.p0 = v14 in
    v11.p0 = v2 in
    let v92: s0 = s0(v14, v5) in
    v92
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [s0] = [v0, v0] in
    let v1: Float = v0.p1 in
    let v2: Float = v1 / v1 in
    let v6: s0 = v4[0] in
    let v3: Float = v6.p1 in
    let v7: Float = v1 + v2 in
    let v8: s0 = v4[1] in
    var v9: [s0] = v4 in
    let v10: [[Float]] = v8.p0 in
    let v13: [[Float]] = v6.p0 in
    let v11: [Float] = v10[1] in
    let v14: [s0] = f25(v9) in
    var v5: [Float] = v11 in
    v9 = v14 in
    var v19: s0 = v8 in
    v19.p0 = v13 in
    let v49: Float = v6.p1 in
    let v29: Float = v5[0] in
    let v31: [Float] = v13[0] in
    v19.p1 = v29 in
    v19.p1 = v49 in
    var v16: s0 = v0 in
    v9[1] = v16 in
    let v50: s0 = f19(v0) in
    v9[1] = v50 in
    v16.p0 = v13 in
    let v23: [[Float]] = v8.p0 in
    var v33: [Float] = v31 in
    v19.p1 = v7 in
    v33[0] = v3 in
    let v27: Float = v5[0] in
    let v35: [Float] = v10[0] in
    var v43: [s0] = v4 in
    let v39: [[Float]] = [v11, v11, v33, v33, v33, v5] in
    var v48: [[Float]] = v13 in
    let v46: s0 = s0(v48, v1) in
    var v26: [[Float]] = v23 in
    let v51: [Float] = v39[1] in
    let v80: s0 = s0(v48, v27) in
    let v65: s0 = f19(v80) in
    let v85: Float = v6.p1 in
    let v56: s0 = f19(v19) in
    let v41: [[Float]] = v65.p0 in
    v16.p1 = v29 in
    let v58: s0 = v9[1] in
    var v73: [s0] = v43 in
    v16.p0 = v10 in
    let v70: s0 = v4[0] in
    v73[1] = v58 in
    v5[0] = v2 in
    v33[0] = v85 in
    v9[0] = v46 in
    let v97: Float = v70.p1 in
    v16.p0 = v26 in
    let v83: s0 = f19(v80) in
    v43[0] = v83 in
    let v118: [[Float]] = v56.p0 in
    v16.p1 = v97 in
    v73[0] = v65 in
    v48[0] = v51 in
    let v145: Float = v35[0] in
    v16.p0 = v41 in
    let v91: s0 = f19(v70) in
    v33[0] = v145 in
    v19 = v91 in
    let v194: s0 = v73[1] in
    v16.p0 = v118 in
    v194
  } in
  let noinline_f0: ([[s2]], [s6], [s0], s4, Float) -> Float = (v0: [[s2]], v1: [s6], v2: [s0], v3: s4, v4: Float) -> Float {
    let v7: s6 = v1[0] in
    let v13: s5 = v7.p1 in
    let v24: [s3] = v13.p0 in
    let v32: s3 = v24[0] in
    let v40: s0 = v32.p1 in
    let v49: s0 = f12(v40) in
    let v58: s0 = f12(v49) in
    let v77: Float = v58.p1 in
    v77
  } in
  fun loop(i: Int, v0: [[s2]], v1: [s6], v2: [s0], v3: s4, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s2]] = [[s2([[s0([[0.0], [1.0], [2.0]], 3.0)], [s0([[4.0], [5.0], [6.0]], 7.0)]], [[s1(s0([[8.0], [9.0], [10.0]], 11.0), [[s0([[12.0], [13.0], [14.0]], 15.0)]])]])], [s2([[s0([[16.0], [17.0], [18.0]], 19.0)], [s0([[20.0], [21.0], [22.0]], 23.0)]], [[s1(s0([[24.0], [25.0], [26.0]], 27.0), [[s0([[28.0], [29.0], [30.0]], 31.0)]])]])], [s2([[s0([[32.0], [33.0], [34.0]], 35.0)], [s0([[36.0], [37.0], [38.0]], 39.0)]], [[s1(s0([[40.0], [41.0], [42.0]], 43.0), [[s0([[44.0], [45.0], [46.0]], 47.0)]])]])]] in
    let v1: [s6] = [s6([s4([[s0([[48.0], [49.0], [50.0]], 51.0)]], s3(s2([[s0([[52.0], [53.0], [54.0]], 55.0)], [s0([[56.0], [57.0], [58.0]], 59.0)]], [[s1(s0([[60.0], [61.0], [62.0]], 63.0), [[s0([[64.0], [65.0], [66.0]], 67.0)]])]]), s0([[68.0], [69.0], [70.0]], 71.0))), s4([[s0([[72.0], [73.0], [74.0]], 75.0)]], s3(s2([[s0([[76.0], [77.0], [78.0]], 79.0)], [s0([[80.0], [81.0], [82.0]], 83.0)]], [[s1(s0([[84.0], [85.0], [86.0]], 87.0), [[s0([[88.0], [89.0], [90.0]], 91.0)]])]]), s0([[92.0], [93.0], [94.0]], 95.0))), s4([[s0([[96.0], [97.0], [98.0]], 99.0)]], s3(s2([[s0([[100.0], [101.0], [102.0]], 103.0)], [s0([[104.0], [105.0], [106.0]], 107.0)]], [[s1(s0([[108.0], [109.0], [110.0]], 111.0), [[s0([[112.0], [113.0], [114.0]], 115.0)]])]]), s0([[116.0], [117.0], [118.0]], 119.0)))], s5([s3(s2([[s0([[120.0], [121.0], [122.0]], 123.0)], [s0([[124.0], [125.0], [126.0]], 127.0)]], [[s1(s0([[128.0], [129.0], [130.0]], 131.0), [[s0([[132.0], [133.0], [134.0]], 135.0)]])]]), s0([[136.0], [137.0], [138.0]], 139.0))]))] in
    let v2: [s0] = [s0([[140.0], [141.0], [142.0]], 143.0)] in
    let v3: s4 = s4([[s0([[144.0], [145.0], [146.0]], 147.0)]], s3(s2([[s0([[148.0], [149.0], [150.0]], 151.0)], [s0([[152.0], [153.0], [154.0]], 155.0)]], [[s1(s0([[156.0], [157.0], [158.0]], 159.0), [[s0([[160.0], [161.0], [162.0]], 163.0)]])]]), s0([[164.0], [165.0], [166.0]], 167.0))) in
    let v4: Float = 168.0 in
    let initialResult: Float = 168.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()