  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: [s1]
  } in
  struct s3 {
    var p0: s2
    var p1: [s0]
  } in
  struct s4 {
    var p0: s2
    var p1: s2
  } in
  let f87: (s3, s3, s3) -> s3 = (v0: s3, v1: s3, v2: s3) -> s3 {
    let v7: s2 = v0.p0 in
    var v6: s2 = v7 in
    var v9: s3 = v0 in
    let v4: [s1] = v6.p1 in
    let v3: [[s1]] = [v4, v4, v4, v4, v4] in
    var v13: s2 = v7 in
    v9.p0 = v7 in
    var v8: s3 = v9 in
    var v10: [s1] = v4 in
    let v14: s2 = v2.p0 in
    let v12: [s1] = v3[3] in
    let v29: s1 = v14.p0 in
    v10[2] = v29 in
    var v37: s2 = v13 in
    var v19: s2 = v14 in
    let v26: s1 = v6.p0 in
    v37.p0 = v29 in
    var v35: s3 = v8 in
    let v27: s1 = v10[1] in
    v19.p1 = v12 in
    let v54: [s0] = v8.p1 in
    var v40: s1 = v27 in
    v9 = v2 in
    v13.p1 = v10 in
    v19.p0 = v40 in
    v8.p0 = v37 in
    let v44: [s2] = [v19, v7, v7, v6, v13] in
    let v49: s2 = v35.p0 in
    let v20: s2 = v44[4] in
    v35.p0 = v49 in
    v35.p1 = v54 in
    let v65: [s0] = v26.p1 in
    v19.p0 = v40 in
    let v68: s2 = v35.p0 in
    v13.p0 = v27 in
    v6 = v20 in
    let v55: s1 = v4[2] in
    v8.p0 = v68 in
    v40.p1 = v65 in
    let v96: s2 = v8.p0 in
    v37.p1 = v10 in
    let v117: [s1] = v96.p1 in
    v10 = v117 in
    v40 = v55 in
    v35.p0 = v49 in
    let v75: s1 = v96.p0 in
    v8 = v9 in
    let v118: [s0] = v75.p1 in
    v19.p1 = v4 in
    v40.p1 = v65 in
    v6.p0 = v40 in
    v40.p1 = v118 in
    v8
  } in
  let f86: (s3, s4, s2) -> s4 = (v0: s3, v1: s4, v2: s2) -> s4 {
    var v21: s4 = v1 in
    v21
  } in
  let f85: (s3) -> s3 = (v0: s3) -> s3 {
    let v5: s3 = f87(v0, v0, v0) in
    let v4: s3 = f87(v5, v5, v0) in
    var v2: s3 = v0 in
    var v3: s3 = v0 in
    v2 = v4 in
    let v1: [s0] = v3.p1 in
    let v8: s3 = f87(v5, v0, v5) in
    v3.p1 = v1 in
    let v14: s3 = f87(v2, v3, v5) in
    var v11: s3 = v4 in
    let v17: s3 = f87(v0, v0, v2) in
    let v22: s3 = f87(v0, v14, v0) in
    let v21: s2 = v5.p0 in
    var v16: s2 = v21 in
    let v47: s3 = f87(v8, v11, v4) in
    let v19: s3 = f87(v47, v3, v8) in
    v3 = v47 in
    v2.p1 = v1 in
    v3 = v47 in
    let v24: s3 = f87(v4, v22, v3) in
    let v28: [s0] = v17.p1 in
    var v45: s3 = v4 in
    let v49: s3 = f87(v14, v3, v11) in
    let v40: s3 = f87(v14, v8, v19) in
    let v34: [s0] = v0.p1 in
    let v43: s3 = f87(v40, v24, v11) in
    var v58: s2 = v16 in
    v58 = v21 in
    let v78: s3 = f87(v11, v3, v17) in
    let v57: s3 = f87(v47, v3, v78) in
    v45.p0 = v21 in
    let v32: s3 = f87(v43, v4, v8) in
    let v79: s3 = f87(v57, v47, v43) in
    let v102: s3 = f87(v5, v40, v11) in
    v45.p1 = v34 in
    let v77: s3 = f87(v8, v8, v14) in
    var v170: [s0] = v28 in
    v45.p0 = v58 in
    let v70: s3 = f87(v57, v79, v22) in
    let v111: s3 = f87(v77, v32, v49) in
    let v129: s3 = f87(v43, v77, v102) in
    let v130: s3 = f87(v70, v129, v47) in
    let v122: s3 = f87(v102, v0, v111) in
    var v200: s3 = v47 in
    v200.p1 = v170 in
    let v142: s3 = f87(v45, v122, v200) in
    let v216: s3 = f87(v130, v70, v142) in
    v216
  } in
  let f77: (s3) -> s3 = (v0: s3) -> s3 {
    let v3: s2 = v0.p0 in
    let v1: s3 = f85(v0) in
    var v6: s3 = v1 in
    v6.p0 = v3 in
    let v8: s4 = s4(v3, v3) in
    let v15: s4 = f86(v0, v8, v3) in
    let v49: s2 = v15.p0 in
    v6.p0 = v49 in
    v6
  } in
  let f35: (s3) -> s3 = (v0: s3) -> s3 {
    let v4: s3 = f77(v0) in
    var v5: s3 = v4 in
    var v6: s3 = v5 in
    let v7: s3 = f87(v0, v0, v6) in
    let v1: s3 = f87(v6, v7, v5) in
    v1
  } in
  let noinline_f0: (s3, [[s3]], s1, s2, Float) -> Float = (v0: s3, v1: [[s3]], v2: s1, v3: s2, v4: Float) -> Float {
    let v6: [s3] = v1[0] in
    let v17: s3 = v6[0] in
    let v9: [s3] = v1[0] in
    let v15: s3 = f35(v17) in
    var v34: s3 = v15 in
    v34.p0 = v3 in
    let v21: s3 = v9[0] in
    let v61: [s0] = v34.p1 in
    v34.p0 = v3 in
    var v104: s3 = v21 in
    let v66: s0 = v61[1] in
    let v80: [[Float]] = v66.p0 in
    let v101: [Float] = v80[0] in
    let v109: Float = v101[0] in
    let v127: Float = v4 - v4 in
    let v108: [s0] = v104.p1 in
    v104 = v15 in
    let v135: Float = v109 + v127 in
    v34.p1 = v108 in
    v135
  } in
  fun loop(i: Int, v0: s3, v1: [[s3]], v2: s1, v3: s2, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3(s2(s1([[s0([[0.0]], [[1.0], [2.0]])]], [s0([[3.0]], [[4.0], [5.0]]), s0([[6.0]], [[7.0], [8.0]])]), [s1([[s0([[9.0]], [[10.0], [11.0]])]], [s0([[12.0]], [[13.0], [14.0]]), s0([[15.0]], [[16.0], [17.0]])]), s1([[s0([[18.0]], [[19.0], [20.0]])]], [s0([[21.0]], [[22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0]])]), s1([[s0([[27.0]], [[28.0], [29.0]])]], [s0([[30.0]], [[31.0], [32.0]]), s0([[33.0]], [[34.0], [35.0]])])]), [s0([[36.0]], [[37.0], [38.0]]), s0([[39.0]], [[40.0], [41.0]]), s0([[42.0]], [[43.0], [44.0]])]) in
    let v1: [[s3]] = [[s3(s2(s1([[s0([[45.0]], [[46.0], [47.0]])]], [s0([[48.0]], [[49.0], [50.0]]), s0([[51.0]], [[52.0], [53.0]])]), [s1([[s0([[54.0]], [[55.0], [56.0]])]], [s0([[57.0]], [[58.0], [59.0]]), s0([[60.0]], [[61.0], [62.0]])]), s1([[s0([[63.0]], [[64.0], [65.0]])]], [s0([[66.0]], [[67.0], [68.0]]), s0([[69.0]], [[70.0], [71.0]])]), s1([[s0([[72.0]], [[73.0], [74.0]])]], [s0([[75.0]], [[76.0], [77.0]]), s0([[78.0]], [[79.0], [80.0]])])]), [s0([[81.0]], [[82.0], [83.0]]), s0([[84.0]], [[85.0], [86.0]]), s0([[87.0]], [[88.0], [89.0]])])]] in
    let v2: s1 = s1([[s0([[90.0]], [[91.0], [92.0]])]], [s0([[93.0]], [[94.0], [95.0]]), s0([[96.0]], [[97.0], [98.0]])]) in
    let v3: s2 = s2(s1([[s0([[99.0]], [[100.0], [101.0]])]], [s0([[102.0]], [[103.0], [104.0]]), s0([[105.0]], [[106.0], [107.0]])]), [s1([[s0([[108.0]], [[109.0], [110.0]])]], [s0([[111.0]], [[112.0], [113.0]]), s0([[114.0]], [[115.0], [116.0]])]), s1([[s0([[117.0]], [[118.0], [119.0]])]], [s0([[120.0]], [[121.0], [122.0]]), s0([[123.0]], [[124.0], [125.0]])]), s1([[s0([[126.0]], [[127.0], [128.0]])]], [s0([[129.0]], [[130.0], [131.0]]), s0([[132.0]], [[133.0], [134.0]])])]) in
    let v4: Float = 135.0 in
    let initialResult: Float = 135.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()