  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  }
  struct s2 {
    var p0: [s0]
    var p1: s1
  }
  @inline(never)
  func f0(_ v0: Double, _ v1: [s2], _ v2: s2) -> Double {
    var v4: Double = v0
    v4 = v0
    let v16: [s0] = v2.p0
    let v23: s0 = v16[2]
    let v28: [[Double]] = v23.p0
    var v26: Double = v0
    let v68: Double = v4 - v26
    let v77: [Double] = v28[1]
    let v163: Double = v77[0]
    v26 = v68
    let v122: Double = v163 - v68
    return v122
  }
  func benchmark() {
    let v0: Double = 0.0
    let v1: [s2] = [s2(p0: [s0(p0: [[1.0], [2.0], [3.0]], p1: [[4.0], [5.0]]), s0(p0: [[6.0], [7.0], [8.0]], p1: [[9.0], [10.0]]), s0(p0: [[11.0], [12.0], [13.0]], p1: [[14.0], [15.0]])], p1: s1(p0: [[s0(p0: [[16.0], [17.0], [18.0]], p1: [[19.0], [20.0]])], [s0(p0: [[21.0], [22.0], [23.0]], p1: [[24.0], [25.0]])], [s0(p0: [[26.0], [27.0], [28.0]], p1: [[29.0], [30.0]])]], p1: s0(p0: [[31.0], [32.0], [33.0]], p1: [[34.0], [35.0]]))), s2(p0: [s0(p0: [[36.0], [37.0], [38.0]], p1: [[39.0], [40.0]]), s0(p0: [[41.0], [42.0], [43.0]], p1: [[44.0], [45.0]]), s0(p0: [[46.0], [47.0], [48.0]], p1: [[49.0], [50.0]])], p1: s1(p0: [[s0(p0: [[51.0], [52.0], [53.0]], p1: [[54.0], [55.0]])], [s0(p0: [[56.0], [57.0], [58.0]], p1: [[59.0], [60.0]])], [s0(p0: [[61.0], [62.0], [63.0]], p1: [[64.0], [65.0]])]], p1: s0(p0: [[66.0], [67.0], [68.0]], p1: [[69.0], [70.0]]))), s2(p0: [s0(p0: [[71.0], [72.0], [73.0]], p1: [[74.0], [75.0]]), s0(p0: [[76.0], [77.0], [78.0]], p1: [[79.0], [80.0]]), s0(p0: [[81.0], [82.0], [83.0]], p1: [[84.0], [85.0]])], p1: s1(p0: [[s0(p0: [[86.0], [87.0], [88.0]], p1: [[89.0], [90.0]])], [s0(p0: [[91.0], [92.0], [93.0]], p1: [[94.0], [95.0]])], [s0(p0: [[96.0], [97.0], [98.0]], p1: [[99.0], [100.0]])]], p1: s0(p0: [[101.0], [102.0], [103.0]], p1: [[104.0], [105.0]])))]
    let v2: s2 = s2(p0: [s0(p0: [[106.0], [107.0], [108.0]], p1: [[109.0], [110.0]]), s0(p0: [[111.0], [112.0], [113.0]], p1: [[114.0], [115.0]]), s0(p0: [[116.0], [117.0], [118.0]], p1: [[119.0], [120.0]])], p1: s1(p0: [[s0(p0: [[121.0], [122.0], [123.0]], p1: [[124.0], [125.0]])], [s0(p0: [[126.0], [127.0], [128.0]], p1: [[129.0], [130.0]])], [s0(p0: [[131.0], [132.0], [133.0]], p1: [[134.0], [135.0]])]], p1: s0(p0: [[136.0], [137.0], [138.0]], p1: [[139.0], [140.0]])))
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = StructValue(Name(str='s2', ty=None), [[StructValue(Name(str='s0', ty=None), [[[106.0], [107.0], [108.0]], [[109.0], [110.0]]]), StructValue(Name(str='s0', ty=None), [[[111.0], [112.0], [113.0]], [[114.0], [115.0]]]), StructValue(Name(str='s0', ty=None), [[[116.0], [117.0], [118.0]], [[119.0], [120.0]]])], StructValue(Name(str='s1', ty=None), [[[StructValue(Name(str='s0', ty=None), [[[121.0], [122.0], [123.0]], [[124.0], [125.0]]])], [StructValue(Name(str='s0', ty=None), [[[126.0], [127.0], [128.0]], [[129.0], [130.0]]])], [StructValue(Name(str='s0', ty=None), [[[131.0], [132.0], [133.0]], [[134.0], [135.0]]])]], StructValue(Name(str='s0', ty=None), [[[136.0], [137.0], [138.0]], [[139.0], [140.0]]])])])
    for _ in 1...1000 {
      result = f0(v0, v1, v2)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
