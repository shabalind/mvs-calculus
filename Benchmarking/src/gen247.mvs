  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s0
  } in
  let f22: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v4: [Float] = v0[0] in
    var v1: [Float] = v4 in
    var v8: [Float] = v4 in
    var v7: [[Float]] = v0 in
    var v3: [[Float]] = v7 in
    let v11: [Float] = v3[0] in
    var v2: [Float] = v8 in
    let v12: [[Float]] = [v4, v2, v8] in
    let v19: [Float] = v12[0] in
    var v14: [[Float]] = v3 in
    v14[0] = v11 in
    let v18: Float = v8[0] in
    var v21: [[Float]] = v14 in
    v21[0] = v1 in
    v2 = v11 in
    let v44: [Float] = v7[0] in
    v2[0] = v18 in
    let v26: Float = v19[0] in
    v21[0] = v44 in
    v8[0] = v26 in
    v1[0] = v18 in
    v21
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v7: s1 = v0.p0 in
    var v5: s2 = v0 in
    let v8: s0 = v5.p1 in
    v5.p1 = v8 in
    v5.p1 = v8 in
    v5.p0 = v7 in
    v5.p0 = v7 in
    var v4: s0 = v8 in
    let v3: s0 = v7.p1 in
    v5.p1 = v4 in
    var v2: s0 = v3 in
    let v6: s0 = v0.p1 in
    let v12: [[Float]] = v6.p0 in
    let v16: [Float] = v12[1] in
    let v14: s2 = s2(v7, v2) in
    var v13: [[Float]] = v12 in
    var v11: s2 = v0 in
    v11 = v5 in
    let v26: [[Float]] = v2.p1 in
    v13[1] = v16 in
    v5 = v11 in
    let v35: [[Float]] = f22(v26) in
    let v37: [Float] = v13[1] in
    var v9: s2 = v14 in
    v2 = v8 in
    let v18: [[Float]] = f22(v35) in
    let v50: s1 = v5.p0 in
    let v33: [[Float]] = f22(v35) in
    let v21: [Float] = v26[0] in
    v5 = v0 in
    var v23: s0 = v3 in
    let v25: s0 = v0.p1 in
    let v20: [[s0]] = v50.p0 in
    let v41: [[Float]] = f22(v18) in
    v9.p1 = v23 in
    let v61: [[Float]] = f22(v26) in
    let v36: s0 = v9.p1 in
    v2 = v25 in
    var v84: s1 = v50 in
    let v86: s2 = s2(v84, v25) in
    var v55: [[Float]] = v13 in
    v4.p1 = v41 in
    v4.p0 = v55 in
    v23.p0 = v13 in
    let v66: s0 = v14.p1 in
    v84.p1 = v36 in
    let v71: s1 = s1(v20, v66) in
    let v116: [[Float]] = v23.p0 in
    let v151: [[Float]] = f22(v33) in
    v13[0] = v21 in
    v84.p0 = v20 in
    v9.p0 = v71 in
    v9.p0 = v84 in
    v5 = v86 in
    v23.p1 = v151 in
    let v81: Float = v37[0] in
    let v76: s0 = s0(v116, v61) in
    v9.p1 = v76 in
    v5.p1 = v66 in
    v4.p0 = v116 in
    v81
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s1([[s0([[0.0], [1.0]], [[2.0]])], [s0([[3.0], [4.0]], [[5.0]])]], s0([[6.0], [7.0]], [[8.0]])), s0([[9.0], [10.0]], [[11.0]])) in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()