  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: s1
    var p1: s1
    var p2: s0
  } in
  struct s7 {
    var p0: s2
    var p1: s1
  } in
  let f38: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    let v1: s1 = v0[1] in
    var v4: s1 = v1 in
    let v6: s1 = v0[1] in
    let v8: s1 = v0[1] in
    let v3: s1 = v0[1] in
    let v7: s0 = v3.p1 in
    let v9: [[Float]] = v7.p1 in
    let v21: [[Float]] = v7.p1 in
    let v25: s1 = v0[2] in
    let v18: s0 = v4.p0 in
    var v39: [s1] = v0 in
    v39[2] = v25 in
    let v22: s0 = s0(v9, v21) in
    var v46: [s1] = v0 in
    let v60: s0 = v4.p1 in
    let v29: s1 = v39[2] in
    let v41: s0 = v8.p0 in
    v4.p1 = v18 in
    var v37: [s1] = v0 in
    var v57: [s1] = v37 in
    v4.p1 = v60 in
    v4.p1 = v41 in
    var v47: [s1] = v39 in
    v47[0] = v6 in
    let v76: [s1] = [v8, v6] in
    let v28: s1 = v46[0] in
    v37[1] = v4 in
    let v79: s1 = v76[0] in
    let v73: s1 = v76[0] in
    var v113: [s1] = v76 in
    var v126: [s1] = v113 in
    let v43: s0 = v29.p0 in
    var v72: [s1] = v57 in
    v4.p1 = v7 in
    v72[0] = v8 in
    var v81: [s1] = v72 in
    let v130: s1 = v47[0] in
    v72[1] = v28 in
    let v134: s1 = v126[1] in
    let v127: s1 = v72[0] in
    v4.p1 = v22 in
    v57[2] = v134 in
    v37[0] = v73 in
    v46[0] = v73 in
    v47[1] = v127 in
    v57 = v81 in
    let v218: [[s1]] = [v0, v47, v72, v81, v57, v47] in
    v4.p0 = v43 in
    v37[2] = v79 in
    v37[2] = v130 in
    let v186: [s1] = v218[2] in
    v186
  } in
  let f23: (s1) -> s1 = (v0: s1) -> s1 {
    let v1: s0 = v0.p1 in
    let v8: [[Float]] = v1.p1 in
    let v5: s0 = s0(v8, v8) in
    var v2: s0 = v5 in
    var v9: s0 = v2 in
    var v14: s0 = v1 in
    var v10: s1 = v0 in
    let v11: [[Float]] = v14.p1 in
    v14 = v1 in
    var v19: s1 = v10 in
    var v24: s0 = v14 in
    let v22: s0 = v0.p1 in
    let v36: s0 = v19.p0 in
    var v18: s0 = v36 in
    let v17: [[Float]] = v36.p1 in
    var v27: s1 = v0 in
    var v50: s0 = v24 in
    v14.p0 = v11 in
    let v65: [[Float]] = v22.p0 in
    v9.p0 = v17 in
    v14.p0 = v11 in
    v2.p0 = v65 in
    let v53: s0 = v0.p1 in
    v2.p0 = v17 in
    let v35: [[Float]] = v53.p1 in
    v19 = v10 in
    v18.p0 = v35 in
    v10.p0 = v18 in
    v2.p1 = v35 in
    var v58: [[Float]] = v8 in
    v18.p0 = v35 in
    v50 = v24 in
    v18.p0 = v58 in
    v27.p1 = v50 in
    let v56: s3 = s3(v27, v27, v9) in
    v14.p1 = v11 in
    let v63: s1 = v56.p1 in
    v63
  } in
  let f16: (s2) -> s2 = (v0: s2) -> s2 {
    var v4: s2 = v0 in
    var v6: s2 = v4 in
    let v5: s0 = v4.p1 in
    let v9: [[Float]] = v5.p1 in
    let v3: s0 = s0(v9, v9) in
    v6.p1 = v3 in
    v4.p1 = v3 in
    v6
  } in
  let f1: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    let v4: s1 = s1(v0, v7) in
    let v3: s1 = f23(v4) in
    let v1: s1 = f23(v3) in
    var v2: s0 = v0 in
    let v6: s1 = f23(v1) in
    var v9: s0 = v2 in
    var v10: s0 = v0 in
    let v20: s1 = f23(v3) in
    let v13: s1 = f23(v6) in
    let v5: s1 = f23(v13) in
    let v11: [[Float]] = v0.p1 in
    v9.p0 = v11 in
    v7.p0 = v11 in
    var v18: s1 = v4 in
    let v12: s1 = f23(v1) in
    let v22: s0 = s0(v11, v11) in
    var v27: s0 = v2 in
    let v14: s1 = f23(v18) in
    var v19: [[Float]] = v11 in
    let v16: s1 = f23(v18) in
    v2.p0 = v19 in
    let v33: [Float] = v11[0] in
    var v45: [Float] = v33 in
    let v55: s0 = v20.p0 in
    let v42: [Float] = v11[0] in
    let v34: [[Float]] = v27.p0 in
    let v44: [s1] = [v5, v12, v16] in
    v10 = v22 in
    let v52: Float = v42[0] in
    v9.p1 = v34 in
    let v39: [[Float]] = v10.p1 in
    let v43: [[Float]] = v9.p1 in
    var v62: [[Float]] = v34 in
    var v66: [s1] = v44 in
    let v90: s1 = f23(v14) in
    v19[0] = v33 in
    let v69: [[Float]] = v0.p0 in
    let v51: [s1] = f38(v66) in
    v45[0] = v52 in
    v19[0] = v45 in
    v2.p0 = v69 in
    let v82: [[s1]] = [v66, v51, v66, v66] in
    let v102: [Float] = v11[0] in
    v66[1] = v18 in
    var v54: [[s1]] = v82 in
    v7.p0 = v39 in
    v2.p0 = v19 in
    var v172: [s1] = v51 in
    v66[1] = v90 in
    let v145: s0 = v16.p1 in
    let v97: [s1] = v54[1] in
    var v151: [Float] = v102 in
    v18.p0 = v55 in
    v2.p1 = v69 in
    v66 = v172 in
    v172 = v97 in
    v7.p1 = v62 in
    v18.p0 = v145 in
    v10.p0 = v34 in
    let v118: s1 = v172[2] in
    v45 = v151 in
    let v163: s0 = v118.p0 in
    v2.p1 = v43 in
    v10.p1 = v39 in
    v163
  } in
  let noinline_f0: (s7, Float) -> Float = (v0: s7, v1: Float) -> Float {
    let v6: s2 = v0.p0 in
    let v5: s2 = f16(v6) in
    let v2: s2 = f16(v5) in
    let v3: s2 = f16(v6) in
    let v13: s2 = f16(v5) in
    var v10: s2 = v2 in
    let v18: [s0] = v2.p0 in
    let v20: s2 = f16(v2) in
    let v9: s2 = f16(v10) in
    v10.p0 = v18 in
    var v40: s2 = v20 in
    v10.p0 = v18 in
    let v26: s2 = f16(v13) in
    let v19: s0 = v18[0] in
    var v31: s2 = v26 in
    let v30: s0 = v18[0] in
    let v22: [s0] = v9.p0 in
    let v35: s0 = v22[1] in
    let v44: s0 = f1(v35) in
    let v24: [[Float]] = v19.p0 in
    let v59: s0 = f1(v35) in
    let v28: [[Float]] = v35.p0 in
    let v25: [[Float]] = v30.p1 in
    let v23: [Float] = v25[0] in
    let v56: s0 = f1(v44) in
    v31 = v40 in
    let v37: s0 = f1(v56) in
    v10.p1 = v35 in
    let v53: [[Float]] = v59.p0 in
    let v38: [Float] = v24[0] in
    let v76: [s0] = v6.p0 in
    let v72: s0 = f1(v37) in
    v31.p1 = v72 in
    v10.p0 = v76 in
    let v65: [s0] = v3.p0 in
    let v82: [Float] = v28[0] in
    let v132: [Float] = v53[0] in
    let v79: [[Float]] = v30.p0 in
    let v176: [Float] = v79[0] in
    let v192: [[Float]] = [v38, v23, v23, v176, v38, v132, v82] in
    let v171: s0 = v65[0] in
    v40.p1 = v171 in
    let v174: [s0] = v31.p0 in
    let v156: [Float] = v192[6] in
    let v154: Float = v156[0] in
    v10.p0 = v174 in
    v154
  } in
  fun loop(i: Int, v0: s7, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s7 = s7(s2([s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]])], s0([[4.0]], [[5.0]])), s1(s0([[6.0]], [[7.0]]), s0([[8.0]], [[9.0]]))) in
    let v1: Float = 10.0 in
    let initialResult: Float = 10.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()