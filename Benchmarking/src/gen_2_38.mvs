  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: Float
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s1
  } in
  struct s4 {
    var p0: s0
    var p1: [s1]
  } in
  let f9: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p1 in
    let v7: [[Float]] = v0.p0 in
    var v1: [[Float]] = v6 in
    var v2: [[Float]] = v1 in
    var v5: s0 = v0 in
    let v4: [Float] = v2[1] in
    v2[0] = v4 in
    let v12: [[Float]] = v0.p1 in
    v5.p1 = v12 in
    var v8: s0 = v0 in
    let v16: [Float] = v12[1] in
    var v18: s0 = v5 in
    let v17: [[Float]] = v18.p0 in
    v1[0] = v16 in
    v18.p1 = v6 in
    let v20: [[Float]] = v8.p1 in
    v8.p0 = v17 in
    v18.p1 = v6 in
    v18.p0 = v17 in
    v1[1] = v16 in
    v8.p0 = v7 in
    v8.p1 = v20 in
    v8.p1 = v2 in
    v8
  } in
  let f2: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    let v2: [Float] = v4[0] in
    var v7: [[Float]] = v4 in
    let v5: s0 = f9(v0) in
    v7[1] = v2 in
    let v32: [[Float]] = v5.p0 in
    let v37: s0 = s0(v32, v7) in
    v37
  } in
  let noinline_f0: ([s4], s0, s4, s2, [[s4]], Float) -> Float = (v0: [s4], v1: s0, v2: s4, v3: s2, v4: [[s4]], v5: Float) -> Float {
    let v13: s0 = f2(v1) in
    let v33: [[Float]] = v13.p1 in
    var v54: s2 = v3 in
    let v52: s1 = v54.p1 in
    let v72: Float = v52.p0 in
    let v57: [Float] = v33[0] in
    let v37: Float = v57[0] in
    let v106: Float = v37 * v72 in
    v106
  } in
  fun loop(i: Int, v0: [s4], v1: s0, v2: s4, v3: s2, v4: [[s4]], v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s4] = [s4(s0([[0.0]], [[1.0], [2.0]]), [s1(3.0, s0([[4.0]], [[5.0], [6.0]])), s1(7.0, s0([[8.0]], [[9.0], [10.0]]))]), s4(s0([[11.0]], [[12.0], [13.0]]), [s1(14.0, s0([[15.0]], [[16.0], [17.0]])), s1(18.0, s0([[19.0]], [[20.0], [21.0]]))])] in
    let v1: s0 = s0([[22.0]], [[23.0], [24.0]]) in
    let v2: s4 = s4(s0([[25.0]], [[26.0], [27.0]]), [s1(28.0, s0([[29.0]], [[30.0], [31.0]])), s1(32.0, s0([[33.0]], [[34.0], [35.0]]))]) in
    let v3: s2 = s2([s0([[36.0]], [[37.0], [38.0]]), s0([[39.0]], [[40.0], [41.0]])], s1(42.0, s0([[43.0]], [[44.0], [45.0]]))) in
    let v4: [[s4]] = [[s4(s0([[46.0]], [[47.0], [48.0]]), [s1(49.0, s0([[50.0]], [[51.0], [52.0]])), s1(53.0, s0([[54.0]], [[55.0], [56.0]]))])]] in
    let v5: Float = 57.0 in
    let initialResult: Float = 57.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()