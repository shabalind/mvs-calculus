  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s0
  } in
  let f78: (s0) -> s0 = (v0: s0) -> s0 {
    let v16: s1 = s1(v0, v0) in
    let v59: [s1] = [v16, v16, v16, v16, v16, v16] in
    let v19: s1 = v59[4] in
    let v45: s0 = v16.p1 in
    let v30: s0 = v16.p1 in
    var v33: [s1] = v59 in
    v33[0] = v19 in
    let v73: s1 = v33[2] in
    var v38: [s1] = v59 in
    let v70: s0 = v73.p1 in
    var v119: [s1] = v38 in
    let v86: s1 = v119[4] in
    let v103: s1 = s1(v30, v45) in
    v119[2] = v103 in
    v33[2] = v86 in
    v70
  } in
  let f66: (s1) -> s1 = (v0: s1) -> s1 {
    var v5: s1 = v0 in
    let v2: s0 = v0.p1 in
    let v4: s0 = f78(v2) in
    let v3: s0 = f78(v4) in
    v5.p1 = v3 in
    v5.p1 = v2 in
    v5
  } in
  let f19: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: s0 = f78(v0) in
    let v8: [Float] = v0.p1 in
    let v4: [[Float]] = v0.p0 in
    var v14: s0 = v7 in
    var v20: s0 = v14 in
    let v13: s0 = f78(v7) in
    let v25: s0 = f78(v13) in
    let v19: s1 = s1(v13, v25) in
    v14.p0 = v4 in
    let v36: s1 = f66(v19) in
    let v34: s0 = v36.p1 in
    v14.p1 = v8 in
    v14.p1 = v8 in
    let v55: [[Float]] = v34.p0 in
    v14.p0 = v55 in
    let v40: s0 = f78(v20) in
    v20 = v40 in
    let v107: s0 = f78(v40) in
    v107
  } in
  let noinline_f0: ([[s2]], Float) -> Float = (v0: [[s2]], v1: Float) -> Float {
    let v7: [s2] = v0[2] in
    let v4: s2 = v7[0] in
    let v5: s1 = v4.p0 in
    let v10: s1 = f66(v5) in
    var v17: s1 = v10 in
    var v18: s1 = v10 in
    let v21: s0 = v17.p0 in
    v18.p1 = v21 in
    let v25: s0 = v4.p1 in
    let v12: s1 = f66(v18) in
    v17.p0 = v25 in
    let v20: s0 = v18.p0 in
    v17.p1 = v20 in
    var v33: s1 = v12 in
    let v23: s0 = f19(v20) in
    let v83: s0 = v12.p1 in
    let v41: s0 = v5.p0 in
    v18 = v33 in
    v33.p0 = v25 in
    let v31: s0 = f78(v41) in
    v18.p1 = v31 in
    v18.p0 = v23 in
    let v82: [[Float]] = v83.p0 in
    var v69: s0 = v41 in
    v33.p1 = v23 in
    v18.p0 = v41 in
    var v51: s0 = v25 in
    v17.p0 = v51 in
    let v63: [Float] = v82[0] in
    v18.p1 = v69 in
    let v132: Float = v63[0] in
    v18.p0 = v25 in
    v132
  } in
  fun loop(i: Int, v0: [[s2]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s2]] = [[s2(s1(s0([[0.0]], [1.0, 2.0]), s0([[3.0]], [4.0, 5.0])), s0([[6.0]], [7.0, 8.0]))], [s2(s1(s0([[9.0]], [10.0, 11.0]), s0([[12.0]], [13.0, 14.0])), s0([[15.0]], [16.0, 17.0]))], [s2(s1(s0([[18.0]], [19.0, 20.0]), s0([[21.0]], [22.0, 23.0])), s0([[24.0]], [25.0, 26.0]))]] in
    let v1: Float = 27.0 in
    let initialResult: Float = 27.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()