  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
    var p4: [Float]
  } in
  let f55: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    var v3: [Float] = v0 in
    let v1: Float = v0[0] in
    var v6: Float = v1 in
    let v4: Float = v0[1] in
    let v2: Float = v3[0] in
    v3[0] = v1 in
    let v10: Float = v0[0] in
    v3[0] = v6 in
    var v5: Float = v2 in
    var v9: Float = v2 in
    var v8: [Float] = v0 in
    v3[0] = v1 in
    v8[1] = v1 in
    v8[0] = v4 in
    let v13: Float = v3[0] in
    var v21: [Float] = v0 in
    v21[0] = v4 in
    v3[0] = v4 in
    let v45: Float = v8[1] in
    var v12: [Float] = v3 in
    let v25: Float = v3[0] in
    let v34: Float = v8[1] in
    var v23: Float = v25 in
    v3[1] = v25 in
    v8[1] = v34 in
    let v29: Float = v0[0] in
    v8[1] = v1 in
    v8[1] = v25 in
    v8[0] = v45 in
    v21[1] = v9 in
    var v43: Float = v1 in
    let v24: Float = v0[1] in
    var v50: Float = v1 in
    let v16: Float = v3[1] in
    let v18: Float = v12[1] in
    var v19: [Float] = v8 in
    let v66: [[Float]] = [v3, v19, v12, v3] in
    var v33: Float = v13 in
    let v55: [Float] = v66[2] in
    var v83: [[Float]] = v66 in
    let v57: Float = v43 + v9 in
    let v82: Float = v21[0] in
    let v72: [[Float]] = [v12, v8, v12, v55] in
    let v31: [Float] = v83[0] in
    v43 = v16 in
    var v74: [[Float]] = v83 in
    v12[0] = v82 in
    let v56: [Float] = v74[3] in
    let v54: [Float] = v66[1] in
    var v42: [Float] = v56 in
    v8[1] = v10 in
    v3[1] = v50 in
    let v60: [Float] = v72[0] in
    var v91: [Float] = v42 in
    v12 = v91 in
    var v38: [Float] = v60 in
    var v63: Float = v5 in
    v91[1] = v63 in
    v74[2] = v19 in
    let v51: Float = v31[0] in
    let v69: Float = v31[1] in
    var v76: Float = v51 in
    v12[0] = v33 in
    v8[0] = v24 in
    let v90: Float = v21[1] in
    var v152: [Float] = v38 in
    let v180: [Float] = v66[3] in
    v3[0] = v76 in
    let v103: [Float] = [v18, v57, v45, v24, v6, v69, v63] in
    let v73: Float = v103[3] in
    v74[1] = v180 in
    v8[1] = v90 in
    v8[1] = v69 in
    v152[0] = v9 in
    v38[1] = v1 in
    v74[0] = v54 in
    v21[0] = v29 in
    var v151: [Float] = v152 in
    v151[0] = v82 in
    v19[1] = v73 in
    v38[1] = v23 in
    v151
  } in
  let f53: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v5: Float = v0 in
    var v2: Float = v5 in
    let v6: [Float] = [v0, v0] in
    var v8: [Float] = v6 in
    let v10: Float = v6[1] in
    let v9: [Float] = f55(v8) in
    let v13: Float = v9[1] in
    let v11: Float = v6[1] in
    v8[0] = v2 in
    v8[1] = v0 in
    let v21: [Float] = [v13, v13, v11, v0, v13, v10, v10] in
    var v27: [Float] = v21 in
    v27[6] = v11 in
    var v15: [Float] = v21 in
    v2 = v7 in
    var v25: [Float] = v15 in
    v27 = v25 in
    v7 = v11 in
    let v68: Float = v27[3] in
    v68
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v6: Float = f53(v1) in
    let v3: [Float] = v0.p4 in
    let v11: Float = v3[1] in
    var v4: Float = v11 in
    v4 = v11 in
    let v15: Float = v4 / v6 in
    var v49: Float = v15 in
    v49
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0]], [[3.0]], [[4.0]], [5.0, 6.0]) in
    let v1: Float = 7.0 in
    let initialResult: Float = 7.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()