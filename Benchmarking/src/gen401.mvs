  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  struct s7 {
    var p0: Float
    var p1: [[s2]]
  } in
  let f71: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    var v4: s0 = v5 in
    var v6: s0 = v0 in
    let v3: [[Float]] = v5.p0 in
    let v13: [[Float]] = v5.p1 in
    let v17: [[Float]] = v6.p0 in
    v4.p0 = v3 in
    v5.p0 = v17 in
    v4.p1 = v13 in
    v6.p1 = v13 in
    let v1: [[Float]] = v4.p3 in
    v5.p1 = v13 in
    let v27: [[Float]] = v4.p1 in
    v4.p1 = v27 in
    var v36: s0 = v4 in
    v5.p3 = v1 in
    v36
  } in
  let f68: (s7) -> s7 = (v0: s7) -> s7 {
    var v6: s7 = v0 in
    let v2: Float = v6.p0 in
    let v7: [Float] = [v2, v2] in
    let v3: Float = v7[1] in
    v6.p0 = v3 in
    let v5: Float = v7[1] in
    let v12: [[s2]] = v6.p1 in
    let v8: [[s2]] = v6.p1 in
    v6.p1 = v12 in
    v6.p1 = v12 in
    let v33: Float = v6.p0 in
    var v34: Float = v5 in
    let v19: [s2] = v8[1] in
    var v45: s7 = v0 in
    let v16: s2 = v19[0] in
    v45.p1 = v8 in
    let v55: s0 = v16.p0 in
    v6.p0 = v5 in
    let v52: [[Float]] = v55.p2 in
    v45.p0 = v3 in
    v45.p0 = v2 in
    var v68: [[Float]] = v52 in
    let v60: [Float] = v68[2] in
    let v36: Float = v60[0] in
    var v50: s7 = v0 in
    var v58: s7 = v50 in
    let v107: Float = v36 + v5 in
    v6.p0 = v107 in
    v68[1] = v60 in
    let v88: [[s2]] = v6.p1 in
    var v44: [[Float]] = v68 in
    v58.p1 = v88 in
    let v80: [Float] = v44[2] in
    v68[1] = v80 in
    v6.p0 = v34 in
    v58 = v45 in
    v50.p1 = v88 in
    v58.p0 = v33 in
    v58.p1 = v8 in
    v45.p0 = v33 in
    v58
  } in
  let f59: ([[s2]]) -> [[s2]] = (v0: [[s2]]) -> [[s2]] {
    var v2: [[s2]] = v0 in
    var v5: [[s2]] = v0 in
    v2 = v5 in
    var v1: [[s2]] = v0 in
    let v3: [[[s2]]] = [v1, v2, v0, v5, v1, v0] in
    let v9: [s2] = v2[2] in
    v2[0] = v9 in
    v1[0] = v9 in
    var v37: [s2] = v9 in
    v2[1] = v9 in
    v1[1] = v37 in
    let v65: [[s2]] = v3[2] in
    v65
  } in
  let f50: (s2) -> s2 = (v0: s2) -> s2 {
    var v8: s2 = v0 in
    var v6: s2 = v8 in
    var v5: s2 = v0 in
    let v2: s0 = v5.p1 in
    let v4: [s2] = [v5, v6, v8] in
    let v1: s0 = f71(v2) in
    let v7: s0 = f71(v2) in
    let v9: s0 = v5.p1 in
    let v13: s0 = v0.p0 in
    let v3: s2 = v4[1] in
    let v11: s0 = f71(v1) in
    let v16: s0 = f71(v7) in
    var v29: s2 = v3 in
    v6.p0 = v16 in
    v5.p1 = v13 in
    var v30: s2 = v29 in
    let v28: s0 = f71(v9) in
    v8.p0 = v28 in
    v6.p1 = v13 in
    var v17: s2 = v29 in
    v8.p1 = v28 in
    let v48: s0 = v3.p1 in
    v6.p0 = v2 in
    let v90: s0 = v30.p0 in
    let v52: s0 = f71(v48) in
    let v75: s0 = v3.p0 in
    v29.p1 = v52 in
    v17.p0 = v90 in
    v17.p0 = v11 in
    v8.p0 = v75 in
    v17
  } in
  let f15: (s7) -> s7 = (v0: s7) -> s7 {
    var v2: s7 = v0 in
    var v6: s7 = v0 in
    let v8: s7 = f68(v6) in
    v6 = v8 in
    var v5: s7 = v6 in
    let v1: s7 = f68(v0) in
    let v9: s7 = f68(v1) in
    let v7: [[s2]] = v0.p1 in
    var v3: [[s2]] = v7 in
    let v17: [[s2]] = v2.p1 in
    let v21: [s2] = v7[0] in
    let v15: [s2] = v17[0] in
    let v20: [[s2]] = v0.p1 in
    var v18: s7 = v1 in
    let v12: [[s2]] = f59(v7) in
    v5.p1 = v3 in
    let v19: [[s2]] = f59(v17) in
    let v30: [[s2]] = f59(v20) in
    v5.p1 = v7 in
    let v13: Float = v0.p0 in
    let v16: s2 = v21[0] in
    let v28: Float = v0.p0 in
    let v51: [[s2]] = f59(v3) in
    let v56: [s2] = v12[0] in
    let v37: s7 = f68(v18) in
    let v46: [[s2]] = v37.p1 in
    v2.p0 = v13 in
    let v24: [[[s2]]] = [v51, v3, v12, v51] in
    v6.p1 = v3 in
    v3[0] = v15 in
    v18.p0 = v28 in
    let v32: [s2] = v20[0] in
    v2 = v1 in
    v3 = v19 in
    v3[1] = v32 in
    let v26: s2 = v56[0] in
    let v40: [s2] = v46[1] in
    let v23: [s2] = v30[0] in
    let v31: Float = v5.p0 in
    var v49: [s2] = v23 in
    let v50: Float = v9.p0 in
    v3[0] = v49 in
    v2.p0 = v31 in
    v5.p1 = v51 in
    let v33: s0 = v16.p0 in
    v3[0] = v21 in
    let v59: s2 = v23[0] in
    let v66: [[s2]] = v24[2] in
    v49 = v40 in
    let v42: [[Float]] = v33.p2 in
    let v39: [Float] = v42[1] in
    v2.p1 = v19 in
    let v79: [[s2]] = v24[2] in
    v6.p0 = v50 in
    v6.p1 = v66 in
    v2.p1 = v17 in
    let v116: s2 = f50(v59) in
    v49[0] = v116 in
    v18.p1 = v3 in
    v5.p1 = v79 in
    let v105: Float = v39[0] in
    v5.p1 = v7 in
    let v188: s7 = f68(v18) in
    v6.p1 = v46 in
    v5.p0 = v105 in
    var v113: s7 = v188 in
    v3[1] = v15 in
    v5.p1 = v7 in
    v113.p1 = v3 in
    v49[0] = v26 in
    v18.p1 = v51 in
    v113
  } in
  let noinline_f0: ([s7], Float) -> Float = (v0: [s7], v1: Float) -> Float {
    var v4: [s7] = v0 in
    let v7: s7 = v4[1] in
    var v3: [s7] = v0 in
    let v5: s7 = v3[1] in
    let v6: s7 = f68(v7) in
    v3[0] = v5 in
    let v8: s7 = f68(v6) in
    var v18: Float = v1 in
    var v21: Float = v18 in
    let v39: s7 = v4[1] in
    let v14: s7 = f15(v5) in
    let v30: s7 = v3[2] in
    v18 = v21 in
    let v120: Float = v14.p0 in
    var v94: Float = v1 in
    let v70: Float = v94 / v120 in
    let v86: Float = v70 * v18 in
    v3[0] = v30 in
    v3[2] = v39 in
    v4[1] = v6 in
    v3[1] = v8 in
    v86
  } in
  fun loop(i: Int, v0: [s7], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s7] = [s7(0.0, [[s2(s0([[1.0], [2.0], [3.0]], [[4.0]], [[5.0], [6.0], [7.0]], [[8.0], [9.0]]), s0([[10.0], [11.0], [12.0]], [[13.0]], [[14.0], [15.0], [16.0]], [[17.0], [18.0]]))], [s2(s0([[19.0], [20.0], [21.0]], [[22.0]], [[23.0], [24.0], [25.0]], [[26.0], [27.0]]), s0([[28.0], [29.0], [30.0]], [[31.0]], [[32.0], [33.0], [34.0]], [[35.0], [36.0]]))], [s2(s0([[37.0], [38.0], [39.0]], [[40.0]], [[41.0], [42.0], [43.0]], [[44.0], [45.0]]), s0([[46.0], [47.0], [48.0]], [[49.0]], [[50.0], [51.0], [52.0]], [[53.0], [54.0]]))]]), s7(55.0, [[s2(s0([[56.0], [57.0], [58.0]], [[59.0]], [[60.0], [61.0], [62.0]], [[63.0], [64.0]]), s0([[65.0], [66.0], [67.0]], [[68.0]], [[69.0], [70.0], [71.0]], [[72.0], [73.0]]))], [s2(s0([[74.0], [75.0], [76.0]], [[77.0]], [[78.0], [79.0], [80.0]], [[81.0], [82.0]]), s0([[83.0], [84.0], [85.0]], [[86.0]], [[87.0], [88.0], [89.0]], [[90.0], [91.0]]))], [s2(s0([[92.0], [93.0], [94.0]], [[95.0]], [[96.0], [97.0], [98.0]], [[99.0], [100.0]]), s0([[101.0], [102.0], [103.0]], [[104.0]], [[105.0], [106.0], [107.0]], [[108.0], [109.0]]))]]), s7(110.0, [[s2(s0([[111.0], [112.0], [113.0]], [[114.0]], [[115.0], [116.0], [117.0]], [[118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0]], [[124.0], [125.0], [126.0]], [[127.0], [128.0]]))], [s2(s0([[129.0], [130.0], [131.0]], [[132.0]], [[133.0], [134.0], [135.0]], [[136.0], [137.0]]), s0([[138.0], [139.0], [140.0]], [[141.0]], [[142.0], [143.0], [144.0]], [[145.0], [146.0]]))], [s2(s0([[147.0], [148.0], [149.0]], [[150.0]], [[151.0], [152.0], [153.0]], [[154.0], [155.0]]), s0([[156.0], [157.0], [158.0]], [[159.0]], [[160.0], [161.0], [162.0]], [[163.0], [164.0]]))]])] in
    let v1: Float = 165.0 in
    let initialResult: Float = 165.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()