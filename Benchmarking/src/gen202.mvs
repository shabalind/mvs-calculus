  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [[s1]]
  } in
  struct s4 {
    var p0: [s0]
    var p1: s1
  } in
  struct s5 {
    var p0: s2
    var p1: [s1]
  } in
  struct s7 {
    var p0: [s4]
    var p1: [s0]
    var p2: s0
    var p3: s5
    var p4: [s1]
  } in
  let f82: ([[Float]], s0) -> s0 = (v0: [[Float]], v1: s0) -> s0 {
    let v4: [[Float]] = v1.p1 in
    var v11: s0 = v1 in
    v11.p0 = v0 in
    var v14: s0 = v1 in
    v14.p1 = v4 in
    let v27: [[Float]] = v1.p1 in
    let v26: [[Float]] = v11.p1 in
    v14.p1 = v27 in
    let v31: [[Float]] = v14.p1 in
    v14.p1 = v26 in
    var v35: s0 = v1 in
    var v71: [[Float]] = v26 in
    v11.p0 = v0 in
    var v43: s0 = v35 in
    v14.p1 = v71 in
    let v68: [[Float]] = v14.p0 in
    var v54: [[Float]] = v26 in
    let v56: [s0] = [v14, v11, v35, v35, v35, v43, v35] in
    v43.p1 = v31 in
    var v50: [[Float]] = v68 in
    v43.p1 = v71 in
    var v57: [[Float]] = v54 in
    v14.p0 = v50 in
    v11.p1 = v26 in
    let v133: s0 = v56[0] in
    v14.p1 = v57 in
    v11.p1 = v4 in
    v133
  } in
  let f76: (s0, s7) -> s0 = (v0: s0, v1: s7) -> s0 {
    var v8: s7 = v1 in
    let v24: s0 = v8.p2 in
    let v10: [[Float]] = v0.p0 in
    let v18: s0 = f82(v10, v0) in
    let v40: s0 = f82(v10, v0) in
    let v21: [[Float]] = v18.p0 in
    v8.p2 = v24 in
    let v36: s5 = v8.p3 in
    v8 = v1 in
    v8.p3 = v36 in
    v8.p2 = v40 in
    let v48: [[Float]] = v18.p0 in
    v8.p3 = v36 in
    let v124: [[[Float]]] = [v21, v10, v48, v21, v21, v21] in
    let v91: [[Float]] = v124[0] in
    let v88: s0 = f82(v91, v24) in
    v88
  } in
  let f59: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p0 in
    let v1: [[Float]] = v0.p1 in
    let v3: [Float] = v4[0] in
    let v2: s0 = f82(v4, v0) in
    var v7: [[Float]] = v1 in
    let v6: s0 = f82(v4, v2) in
    let v15: [[Float]] = v6.p0 in
    let v11: [Float] = v1[0] in
    v7[0] = v3 in
    var v16: [[Float]] = v15 in
    let v14: s0 = s0(v16, v7) in
    v16[0] = v3 in
    v7[1] = v11 in
    v14
  } in
  let f48: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v6: s0 = f59(v5) in
    let v4: [[Float]] = v5.p0 in
    let v7: s0 = f59(v6) in
    var v9: s0 = v6 in
    v5.p0 = v4 in
    v9 = v7 in
    var v2: s0 = v7 in
    let v8: [Float] = v4[0] in
    var v10: s0 = v5 in
    let v1: s0 = f82(v4, v5) in
    let v14: [[Float]] = v1.p0 in
    let v11: s0 = f82(v4, v1) in
    let v17: s0 = f59(v5) in
    let v12: [[Float]] = v2.p1 in
    let v21: [Float] = v12[2] in
    let v15: [[Float]] = v11.p1 in
    var v24: s0 = v11 in
    var v30: [[Float]] = v14 in
    let v26: [[Float]] = v9.p0 in
    let v20: s0 = f82(v4, v17) in
    let v25: [[Float]] = v24.p1 in
    let v38: [Float] = v30[0] in
    let v28: s0 = s0(v26, v25) in
    var v33: [[Float]] = v12 in
    v2 = v11 in
    v30[0] = v21 in
    let v49: s0 = f82(v30, v28) in
    v9.p0 = v26 in
    v33[1] = v8 in
    var v48: [[Float]] = v33 in
    v48 = v12 in
    v33[1] = v38 in
    v2.p0 = v14 in
    let v139: [[Float]] = v10.p1 in
    let v56: [[Float]] = v20.p0 in
    let v95: [[[Float]]] = [v30, v4, v56, v26] in
    let v178: [[Float]] = v95[3] in
    v5.p0 = v178 in
    v5.p1 = v48 in
    v5.p1 = v15 in
    v24.p1 = v139 in
    let v98: [[Float]] = v49.p0 in
    var v71: s0 = v24 in
    v71.p0 = v98 in
    v71
  } in
  let f31: (s7) -> s7 = (v0: s7) -> s7 {
    var v2: s7 = v0 in
    v2 = v0 in
    var v7: s7 = v2 in
    let v8: s0 = v7.p2 in
    v2.p2 = v8 in
    v7.p2 = v8 in
    let v3: s0 = f76(v8, v0) in
    v2 = v7 in
    let v9: [[Float]] = v3.p1 in
    v7.p2 = v3 in
    let v13: s0 = v7.p2 in
    v7.p2 = v13 in
    v7.p2 = v8 in
    let v6: s0 = f59(v8) in
    let v11: s0 = f48(v8) in
    var v15: s0 = v3 in
    v7.p2 = v15 in
    let v32: [[Float]] = v6.p0 in
    let v17: s0 = f82(v32, v11) in
    v7.p2 = v17 in
    v15.p1 = v9 in
    v7
  } in
  let noinline_f0: (s7, Float) -> Float = (v0: s7, v1: Float) -> Float {
    let v2: s7 = f31(v0) in
    var v7: Float = v1 in
    let v6: s0 = v2.p2 in
    let v11: [[Float]] = v6.p1 in
    let v3: [Float] = v11[0] in
    var v16: [Float] = v3 in
    v16[0] = v7 in
    let v5: Float = v3[0] in
    v16[0] = v1 in
    v16[0] = v5 in
    var v13: [Float] = v16 in
    v7 = v5 in
    var v50: [Float] = v13 in
    let v23: Float = v50[0] in
    v13[0] = v23 in
    var v53: Float = v7 in
    v13[0] = v23 in
    v50[0] = v5 in
    v13[0] = v5 in
    let v68: Float = v5 * v23 in
    v16[0] = v53 in
    var v95: Float = v68 in
    v13[0] = v95 in
    v95
  } in
  fun loop(i: Int, v0: s7, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s7 = s7([s4([s0([[0.0]], [[1.0], [2.0], [3.0]])], s1([[s0([[4.0]], [[5.0], [6.0], [7.0]])], [s0([[8.0]], [[9.0], [10.0], [11.0]])], [s0([[12.0]], [[13.0], [14.0], [15.0]])]], [[s0([[16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0]], [[21.0], [22.0], [23.0]])], [s0([[24.0]], [[25.0], [26.0], [27.0]])]])), s4([s0([[28.0]], [[29.0], [30.0], [31.0]])], s1([[s0([[32.0]], [[33.0], [34.0], [35.0]])], [s0([[36.0]], [[37.0], [38.0], [39.0]])], [s0([[40.0]], [[41.0], [42.0], [43.0]])]], [[s0([[44.0]], [[45.0], [46.0], [47.0]])], [s0([[48.0]], [[49.0], [50.0], [51.0]])], [s0([[52.0]], [[53.0], [54.0], [55.0]])]]))], [s0([[56.0]], [[57.0], [58.0], [59.0]])], s0([[60.0]], [[61.0], [62.0], [63.0]]), s5(s2([s0([[64.0]], [[65.0], [66.0], [67.0]])], [[s1([[s0([[68.0]], [[69.0], [70.0], [71.0]])], [s0([[72.0]], [[73.0], [74.0], [75.0]])], [s0([[76.0]], [[77.0], [78.0], [79.0]])]], [[s0([[80.0]], [[81.0], [82.0], [83.0]])], [s0([[84.0]], [[85.0], [86.0], [87.0]])], [s0([[88.0]], [[89.0], [90.0], [91.0]])]])]]), [s1([[s0([[92.0]], [[93.0], [94.0], [95.0]])], [s0([[96.0]], [[97.0], [98.0], [99.0]])], [s0([[100.0]], [[101.0], [102.0], [103.0]])]], [[s0([[104.0]], [[105.0], [106.0], [107.0]])], [s0([[108.0]], [[109.0], [110.0], [111.0]])], [s0([[112.0]], [[113.0], [114.0], [115.0]])]])]), [s1([[s0([[116.0]], [[117.0], [118.0], [119.0]])], [s0([[120.0]], [[121.0], [122.0], [123.0]])], [s0([[124.0]], [[125.0], [126.0], [127.0]])]], [[s0([[128.0]], [[129.0], [130.0], [131.0]])], [s0([[132.0]], [[133.0], [134.0], [135.0]])], [s0([[136.0]], [[137.0], [138.0], [139.0]])]])]) in
    let v1: Float = 140.0 in
    let initialResult: Float = 140.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()