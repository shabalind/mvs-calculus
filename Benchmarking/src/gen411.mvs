  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
    var p4: [[Float]]
    var p5: [[Float]]
    var p6: [Float]
  } in
  struct s3 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  let f23: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v6: Float = v0 in
    var v3: Float = v7 in
    var v4: Float = v3 in
    let v2: Float = v3 - v4 in
    let v5: [Float] = [v6] in
    var v10: Float = v6 in
    let v17: Float = v5[0] in
    var v12: [Float] = v5 in
    let v32: Float = v12[0] in
    var v14: [Float] = v5 in
    let v19: Float = v5[0] in
    var v22: [Float] = v14 in
    let v18: Float = v0 * v17 in
    v22 = v12 in
    var v71: [Float] = v12 in
    var v21: [Float] = v5 in
    v21 = v5 in
    v71[0] = v0 in
    let v41: Float = v71[0] in
    let v16: Float = v14[0] in
    let v24: Float = v14[0] in
    let v23: Float = v71[0] in
    var v35: Float = v23 in
    v12[0] = v17 in
    v12[0] = v16 in
    v22[0] = v35 in
    var v28: [Float] = v14 in
    var v53: [Float] = v21 in
    var v47: [Float] = v12 in
    var v30: [Float] = v28 in
    var v50: [Float] = v12 in
    v14[0] = v19 in
    v14[0] = v10 in
    let v51: Float = v30[0] in
    v22[0] = v41 in
    let v59: Float = v71[0] in
    let v78: Float = v71[0] in
    v14 = v50 in
    var v31: [Float] = v47 in
    let v95: Float = v28[0] in
    v22[0] = v24 in
    var v205: [Float] = v28 in
    var v46: [Float] = v50 in
    v50[0] = v59 in
    v14[0] = v32 in
    v14[0] = v51 in
    var v55: Float = v78 in
    let v103: Float = v31[0] in
    v47[0] = v95 in
    let v44: [[Float]] = [v50, v205, v53, v28] in
    let v52: [Float] = v44[0] in
    v46[0] = v18 in
    v30[0] = v103 in
    let v104: Float = v31[0] in
    v22[0] = v4 in
    v28[0] = v24 in
    var v176: [Float] = v52 in
    v50[0] = v2 in
    v21[0] = v104 in
    let v278: Float = v46[0] in
    v46[0] = v41 in
    let v144: Float = v22[0] in
    let v141: Float = v176[0] in
    var v54: Float = v55 in
    v53[0] = v278 in
    let v215: Float = v22[0] in
    v28[0] = v54 in
    v47[0] = v144 in
    v71[0] = v215 in
    v141
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    let v8: Float = f23(v1) in
    let v7: Float = f23(v8) in
    var v11: Float = v8 in
    let v9: [Float] = [v7, v11] in
    let v20: Float = v9[1] in
    let v38: Float = v7 - v20 in
    v38
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([[s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]], [[5.0], [6.0], [7.0]], [[8.0], [9.0], [10.0]], [[11.0], [12.0], [13.0]], [[14.0]], [15.0, 16.0])], [s0([[17.0], [18.0]], [[19.0], [20.0], [21.0]], [[22.0], [23.0], [24.0]], [[25.0], [26.0], [27.0]], [[28.0], [29.0], [30.0]], [[31.0]], [32.0, 33.0])], [s0([[34.0], [35.0]], [[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]], [[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]], [[48.0]], [49.0, 50.0])]], [s0([[51.0], [52.0]], [[53.0], [54.0], [55.0]], [[56.0], [57.0], [58.0]], [[59.0], [60.0], [61.0]], [[62.0], [63.0], [64.0]], [[65.0]], [66.0, 67.0]), s0([[68.0], [69.0]], [[70.0], [71.0], [72.0]], [[73.0], [74.0], [75.0]], [[76.0], [77.0], [78.0]], [[79.0], [80.0], [81.0]], [[82.0]], [83.0, 84.0]), s0([[85.0], [86.0]], [[87.0], [88.0], [89.0]], [[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]], [[96.0], [97.0], [98.0]], [[99.0]], [100.0, 101.0])]) in
    let v1: Float = 102.0 in
    let initialResult: Float = 102.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()