  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s5 {
    var p0: s0
    var p1: s0
  } in
  let f93: (s5, s0) -> s0 = (v0: s5, v1: s0) -> s0 {
    var v5: s5 = v0 in
    v5 = v0 in
    let v6: s0 = v5.p1 in
    let v9: s0 = v0.p0 in
    let v2: [[Float]] = v6.p1 in
    let v14: [[Float]] = v9.p0 in
    var v47: [[Float]] = v2 in
    let v26: s0 = v0.p1 in
    let v30: [Float] = v14[1] in
    var v49: s0 = v26 in
    v49.p1 = v2 in
    v47[0] = v30 in
    v49.p1 = v47 in
    v49
  } in
  let f75: (s5) -> s5 = (v0: s5) -> s5 {
    v0
  } in
  let f66: (s5) -> s5 = (v0: s5) -> s5 {
    var v6: s5 = v0 in
    var v2: s5 = v6 in
    let v1: s0 = v2.p1 in
    let v3: [[Float]] = v1.p1 in
    var v8: [[Float]] = v3 in
    v2.p1 = v1 in
    let v10: s5 = f75(v0) in
    var v16: s0 = v1 in
    let v18: s5 = f75(v10) in
    let v20: [Float] = v8[0] in
    let v27: s0 = v18.p1 in
    v16.p1 = v3 in
    let v30: s5 = s5(v27, v16) in
    let v26: s5 = f75(v30) in
    let v21: [[Float]] = v1.p1 in
    v8[0] = v20 in
    v2.p1 = v1 in
    v16.p1 = v8 in
    let v97: s5 = f75(v26) in
    v16.p1 = v21 in
    let v106: s0 = v6.p1 in
    v6.p0 = v106 in
    v97
  } in
  let f59: (s5) -> s5 = (v0: s5) -> s5 {
    let v5: s5 = f75(v0) in
    var v8: s5 = v0 in
    var v3: s5 = v5 in
    let v6: s0 = v0.p0 in
    let v4: [[Float]] = v6.p0 in
    var v11: s5 = v3 in
    v3.p1 = v6 in
    var v19: s0 = v6 in
    let v17: s5 = f66(v5) in
    let v14: s5 = f75(v0) in
    var v13: s5 = v17 in
    let v20: [[Float]] = v6.p0 in
    let v10: s0 = v11.p1 in
    let v30: s5 = f75(v17) in
    let v16: [Float] = v20[2] in
    v11.p0 = v6 in
    var v18: s0 = v6 in
    let v27: s0 = v14.p1 in
    let v48: s5 = f66(v13) in
    let v26: s0 = f93(v30, v10) in
    v3 = v11 in
    let v28: s0 = v3.p0 in
    let v38: s5 = f66(v13) in
    let v103: [s5] = [v48, v0, v11, v11, v38, v8, v17] in
    let v49: s5 = v103[1] in
    v3.p0 = v18 in
    v8.p0 = v28 in
    v3.p1 = v26 in
    let v102: [[Float]] = v27.p1 in
    var v157: [s5] = v103 in
    var v44: [[Float]] = v102 in
    let v65: [[Float]] = v19.p0 in
    v18.p1 = v44 in
    var v47: [[Float]] = v4 in
    v44[0] = v16 in
    let v54: s0 = v30.p1 in
    let v74: [Float] = v65[2] in
    let v96: s0 = v49.p1 in
    let v124: s5 = v157[3] in
    v11.p0 = v54 in
    v18.p0 = v47 in
    v44[0] = v74 in
    v8.p0 = v96 in
    var v91: s5 = v124 in
    v47[1] = v74 in
    v91
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: s5 = s5(v0, v0) in
    let v2: s5 = f59(v4) in
    let v1: s0 = v2.p0 in
    var v3: s0 = v1 in
    v3
  } in
  let noinline_f0: ([s0], s0, Float) -> Float = (v0: [s0], v1: s0, v2: Float) -> Float {
    let v5: s0 = v0[0] in
    let v6: s0 = f12(v5) in
    let v3: Float = v2 / v2 in
    let v20: [[Float]] = v6.p1 in
    let v35: [Float] = v20[0] in
    let v103: Float = v35[0] in
    var v81: Float = v103 in
    v81 = v3 in
    v81
  } in
  fun loop(i: Int, v0: [s0], v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0], [1.0], [2.0]], [[3.0]]), s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]])] in
    let v1: s0 = s0([[12.0], [13.0], [14.0]], [[15.0]]) in
    let v2: Float = 16.0 in
    let initialResult: Float = 16.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()