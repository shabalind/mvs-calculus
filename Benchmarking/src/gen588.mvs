  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [s1]
  } in
  struct s3 {
    var p0: s2
    var p1: s2
  } in
  struct s4 {
    var p0: [[s1]]
    var p1: s1
  } in
  let f103: (s1) -> s1 = (v0: s1) -> s1 {
    var v7: s1 = v0 in
    let v4: s0 = v0.p0 in
    var v5: s0 = v4 in
    var v2: s0 = v4 in
    var v3: s1 = v7 in
    let v9: [[Float]] = v2.p0 in
    var v6: s0 = v4 in
    let v1: s0 = v3.p0 in
    let v12: [Float] = v9[0] in
    let v8: s0 = v3.p1 in
    let v16: [s1] = [v7, v0, v3, v7, v7, v7, v0] in
    v5.p0 = v9 in
    let v11: s1 = v16[5] in
    var v26: [s1] = v16 in
    let v24: s0 = v7.p1 in
    v26[0] = v11 in
    let v23: [Float] = v9[0] in
    let v17: [[Float]] = v8.p0 in
    v26[5] = v0 in
    let v22: s1 = s1(v5, v4) in
    let v29: [[s1]] = [v26] in
    let v56: s1 = v16[2] in
    let v32: [[Float]] = v4.p0 in
    var v25: [[s1]] = v29 in
    let v42: s0 = v7.p0 in
    v6.p0 = v17 in
    let v34: [[Float]] = v4.p1 in
    v6.p0 = v9 in
    v26[1] = v3 in
    v6.p0 = v17 in
    let v31: [s1] = v25[0] in
    var v50: s1 = v22 in
    var v45: s1 = v0 in
    var v73: [[Float]] = v32 in
    let v60: s1 = s1(v5, v6) in
    v26[3] = v60 in
    v2.p0 = v9 in
    v7 = v11 in
    let v52: [s1] = v25[0] in
    var v92: [s1] = v31 in
    v26[2] = v0 in
    let v41: s0 = v11.p0 in
    let v65: s0 = v50.p0 in
    v7.p0 = v65 in
    v25[0] = v92 in
    v92[2] = v11 in
    v5.p0 = v73 in
    var v113: s1 = v56 in
    var v140: [[Float]] = v34 in
    let v78: [s1] = v29[0] in
    v6.p1 = v140 in
    v92[5] = v113 in
    v45.p1 = v42 in
    let v151: s0 = v45.p0 in
    v50.p0 = v6 in
    v73[0] = v23 in
    v25[0] = v78 in
    v140[2] = v12 in
    v7.p0 = v1 in
    v45.p0 = v4 in
    v50.p1 = v41 in
    v3.p0 = v24 in
    v3.p0 = v151 in
    let v108: s1 = v52[4] in
    v108
  } in
  let f80: (s4) -> s4 = (v0: s4) -> s4 {
    var v2: s4 = v0 in
    let v4: [[s1]] = v0.p0 in
    let v11: s1 = v0.p1 in
    let v37: s1 = f103(v11) in
    v2 = v0 in
    v2.p0 = v4 in
    var v133: s4 = v2 in
    let v121: [[s1]] = v133.p0 in
    let v210: s4 = s4(v121, v37) in
    v210
  } in
  let f73: (s4) -> s4 = (v0: s4) -> s4 {
    var v9: s4 = v0 in
    let v34: [[s1]] = v9.p0 in
    let v48: s4 = f80(v9) in
    v9.p0 = v34 in
    v48
  } in
  let noinline_f0: (s4, [[s3]], Float) -> Float = (v0: s4, v1: [[s3]], v2: Float) -> Float {
    let v16: s4 = f73(v0) in
    let v17: s1 = v16.p1 in
    let v24: s0 = v17.p1 in
    let v54: [[Float]] = v24.p1 in
    let v31: [Float] = v54[1] in
    var v170: [Float] = v31 in
    var v152: [Float] = v170 in
    let v145: Float = v152[0] in
    v145
  } in
  fun loop(i: Int, v0: s4, v1: [[s3]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4([[s1(s0([[0.0]], [[1.0], [2.0], [3.0]]), s0([[4.0]], [[5.0], [6.0], [7.0]]))], [s1(s0([[8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0]], [[13.0], [14.0], [15.0]]))]], s1(s0([[16.0]], [[17.0], [18.0], [19.0]]), s0([[20.0]], [[21.0], [22.0], [23.0]]))) in
    let v1: [[s3]] = [[s3(s2(s1(s0([[24.0]], [[25.0], [26.0], [27.0]]), s0([[28.0]], [[29.0], [30.0], [31.0]])), [s1(s0([[32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0]], [[37.0], [38.0], [39.0]])), s1(s0([[40.0]], [[41.0], [42.0], [43.0]]), s0([[44.0]], [[45.0], [46.0], [47.0]])), s1(s0([[48.0]], [[49.0], [50.0], [51.0]]), s0([[52.0]], [[53.0], [54.0], [55.0]]))]), s2(s1(s0([[56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0]], [[61.0], [62.0], [63.0]])), [s1(s0([[64.0]], [[65.0], [66.0], [67.0]]), s0([[68.0]], [[69.0], [70.0], [71.0]])), s1(s0([[72.0]], [[73.0], [74.0], [75.0]]), s0([[76.0]], [[77.0], [78.0], [79.0]])), s1(s0([[80.0]], [[81.0], [82.0], [83.0]]), s0([[84.0]], [[85.0], [86.0], [87.0]]))]))], [s3(s2(s1(s0([[88.0]], [[89.0], [90.0], [91.0]]), s0([[92.0]], [[93.0], [94.0], [95.0]])), [s1(s0([[96.0]], [[97.0], [98.0], [99.0]]), s0([[100.0]], [[101.0], [102.0], [103.0]])), s1(s0([[104.0]], [[105.0], [106.0], [107.0]]), s0([[108.0]], [[109.0], [110.0], [111.0]])), s1(s0([[112.0]], [[113.0], [114.0], [115.0]]), s0([[116.0]], [[117.0], [118.0], [119.0]]))]), s2(s1(s0([[120.0]], [[121.0], [122.0], [123.0]]), s0([[124.0]], [[125.0], [126.0], [127.0]])), [s1(s0([[128.0]], [[129.0], [130.0], [131.0]]), s0([[132.0]], [[133.0], [134.0], [135.0]])), s1(s0([[136.0]], [[137.0], [138.0], [139.0]]), s0([[140.0]], [[141.0], [142.0], [143.0]])), s1(s0([[144.0]], [[145.0], [146.0], [147.0]]), s0([[148.0]], [[149.0], [150.0], [151.0]]))]))]] in
    let v2: Float = 152.0 in
    let initialResult: Float = 152.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()