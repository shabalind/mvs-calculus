  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s4 {
    var p0: s2
    var p1: s1
  } in
  let f101: (s2) -> s2 = (v0: s2) -> s2 {
    var v1: s2 = v0 in
    let v5: [[s0]] = v0.p0 in
    let v6: [s0] = v5[0] in
    var v4: s2 = v0 in
    var v7: s2 = v1 in
    let v10: [s0] = v4.p1 in
    let v2: [s0] = v1.p1 in
    var v8: [s0] = v2 in
    let v14: s0 = v2[1] in
    let v12: [s0] = v7.p1 in
    v8[1] = v14 in
    let v9: [s0] = v4.p1 in
    let v16: s2 = s2(v5, v8) in
    v8[1] = v14 in
    let v21: s0 = v6[0] in
    v8[1] = v14 in
    v8[1] = v21 in
    v7.p0 = v5 in
    v7.p0 = v5 in
    v1.p1 = v12 in
    let v22: [[s0]] = v7.p0 in
    v4.p0 = v22 in
    v7.p1 = v10 in
    let v36: [s0] = v16.p1 in
    let v26: [[s0]] = v0.p0 in
    v4.p0 = v26 in
    v1.p1 = v36 in
    v4.p0 = v5 in
    v4.p0 = v26 in
    v1.p1 = v10 in
    let v77: [[s0]] = v16.p0 in
    var v47: [s0] = v9 in
    let v81: [s0] = v7.p1 in
    let v97: s2 = s2(v22, v81) in
    v4.p1 = v12 in
    v7.p0 = v77 in
    var v98: s2 = v97 in
    var v88: [s0] = v47 in
    let v135: [[s0]] = v1.p0 in
    v98.p0 = v135 in
    v1.p1 = v88 in
    v98
  } in
  let noinline_f0: (s4, Float) -> Float = (v0: s4, v1: Float) -> Float {
    var v3: s4 = v0 in
    let v7: s1 = v3.p1 in
    let v8: s2 = v3.p0 in
    v3.p1 = v7 in
    let v20: s2 = f101(v8) in
    v3.p0 = v20 in
    let v28: [s0] = v20.p1 in
    let v162: s0 = v28[1] in
    let v67: [[Float]] = v162.p1 in
    let v175: [Float] = v67[0] in
    let v177: Float = v175[0] in
    v177
  } in
  fun loop(i: Int, v0: s4, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4(s2([[s0([[0.0], [1.0]], [[2.0]])]], [s0([[3.0], [4.0]], [[5.0]]), s0([[6.0], [7.0]], [[8.0]]), s0([[9.0], [10.0]], [[11.0]])]), s1([s0([[12.0], [13.0]], [[14.0]])], [s0([[15.0], [16.0]], [[17.0]])])) in
    let v1: Float = 18.0 in
    let initialResult: Float = 18.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()