  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s1
  } in
  struct s3 {
    var p0: s2
    var p1: [s2]
  } in
  let noinline_f0: (s3, s1, s1, s0, Float) -> Float = (v0: s3, v1: s1, v2: s1, v3: s0, v4: Float) -> Float {
    var v11: Float = v4 in
    let v7: [[Float]] = v3.p1 in
    let v17: [Float] = v7[0] in
    var v63: Float = v11 in
    var v45: [Float] = v17 in
    var v34: [Float] = v45 in
    var v54: Float = v4 in
    let v58: Float = v34[0] in
    v45[0] = v54 in
    let v91: Float = v17[0] in
    let v67: Float = v63 + v58 in
    v34[0] = v58 in
    let v112: Float = v67 + v67 in
    v45 = v34 in
    v34[0] = v63 in
    v45[0] = v91 in
    v112
  } in
  fun loop(i: Int, v0: s3, v1: s1, v2: s1, v3: s0, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3(s2([s0([[0.0]], [[1.0], [2.0], [3.0]], [[4.0], [5.0], [6.0]])], s1([[s0([[7.0]], [[8.0], [9.0], [10.0]], [[11.0], [12.0], [13.0]])], [s0([[14.0]], [[15.0], [16.0], [17.0]], [[18.0], [19.0], [20.0]])]], s0([[21.0]], [[22.0], [23.0], [24.0]], [[25.0], [26.0], [27.0]]))), [s2([s0([[28.0]], [[29.0], [30.0], [31.0]], [[32.0], [33.0], [34.0]])], s1([[s0([[35.0]], [[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])], [s0([[42.0]], [[43.0], [44.0], [45.0]], [[46.0], [47.0], [48.0]])]], s0([[49.0]], [[50.0], [51.0], [52.0]], [[53.0], [54.0], [55.0]])))]) in
    let v1: s1 = s1([[s0([[56.0]], [[57.0], [58.0], [59.0]], [[60.0], [61.0], [62.0]])], [s0([[63.0]], [[64.0], [65.0], [66.0]], [[67.0], [68.0], [69.0]])]], s0([[70.0]], [[71.0], [72.0], [73.0]], [[74.0], [75.0], [76.0]])) in
    let v2: s1 = s1([[s0([[77.0]], [[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])], [s0([[84.0]], [[85.0], [86.0], [87.0]], [[88.0], [89.0], [90.0]])]], s0([[91.0]], [[92.0], [93.0], [94.0]], [[95.0], [96.0], [97.0]])) in
    let v3: s0 = s0([[98.0]], [[99.0], [100.0], [101.0]], [[102.0], [103.0], [104.0]]) in
    let v4: Float = 105.0 in
    let initialResult: Float = 105.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()