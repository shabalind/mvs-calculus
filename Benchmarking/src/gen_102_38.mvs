  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s1
  } in
  struct s3 {
    var p0: [s2]
    var p1: s2
  } in
  struct s4 {
    var p0: s2
    var p1: [s2]
  } in
  let noinline_f0: ([s3], [s4], Float) -> Float = (v0: [s3], v1: [s4], v2: Float) -> Float {
    let v4: s4 = v1[1] in
    let v5: s2 = v4.p0 in
    let v14: s1 = v5.p1 in
    let v17: s0 = v14.p0 in
    let v11: [[Float]] = v17.p0 in
    let v27: s0 = v14.p1 in
    let v61: [Float] = v11[0] in
    let v57: [Float] = v11[0] in
    let v69: [[Float]] = v27.p0 in
    let v150: [Float] = v69[0] in
    let v77: [[Float]] = [v150, v61, v61, v150, v150, v150, v57] in
    let v80: [Float] = v77[0] in
    let v124: Float = v80[0] in
    v124
  } in
  fun loop(i: Int, v0: [s3], v1: [s4], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3([s2(s1(s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]])), s1(s0([[4.0]], [[5.0]]), s0([[6.0]], [[7.0]]))), s2(s1(s0([[8.0]], [[9.0]]), s0([[10.0]], [[11.0]])), s1(s0([[12.0]], [[13.0]]), s0([[14.0]], [[15.0]])))], s2(s1(s0([[16.0]], [[17.0]]), s0([[18.0]], [[19.0]])), s1(s0([[20.0]], [[21.0]]), s0([[22.0]], [[23.0]]))))] in
    let v1: [s4] = [s4(s2(s1(s0([[24.0]], [[25.0]]), s0([[26.0]], [[27.0]])), s1(s0([[28.0]], [[29.0]]), s0([[30.0]], [[31.0]]))), [s2(s1(s0([[32.0]], [[33.0]]), s0([[34.0]], [[35.0]])), s1(s0([[36.0]], [[37.0]]), s0([[38.0]], [[39.0]]))), s2(s1(s0([[40.0]], [[41.0]]), s0([[42.0]], [[43.0]])), s1(s0([[44.0]], [[45.0]]), s0([[46.0]], [[47.0]])))]), s4(s2(s1(s0([[48.0]], [[49.0]]), s0([[50.0]], [[51.0]])), s1(s0([[52.0]], [[53.0]]), s0([[54.0]], [[55.0]]))), [s2(s1(s0([[56.0]], [[57.0]]), s0([[58.0]], [[59.0]])), s1(s0([[60.0]], [[61.0]]), s0([[62.0]], [[63.0]]))), s2(s1(s0([[64.0]], [[65.0]]), s0([[66.0]], [[67.0]])), s1(s0([[68.0]], [[69.0]]), s0([[70.0]], [[71.0]])))])] in
    let v2: Float = 72.0 in
    let initialResult: Float = 72.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()