  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
    var p2: Float
    var p3: s0
  } in
  struct s3 {
    var p0: [s0]
    var p1: s0
    var p2: [s0]
  } in
  struct s4 {
    var p0: s0
    var p1: [s3]
    var p2: s0
  } in
  struct s5 {
    var p0: s3
    var p1: Float
  } in
  struct s6 {
    var p0: s1
    var p1: s0
  } in
  struct s7 {
    var p0: [[s6]]
    var p1: s5
  } in
  let f87: (s4, s3) -> s4 = (v0: s4, v1: s3) -> s4 {
    let v7: s0 = v1.p1 in
    var v3: s0 = v7 in
    var v6: s0 = v7 in
    let v8: s0 = v1.p1 in
    var v4: s0 = v3 in
    var v17: s0 = v4 in
    let v19: [s3] = v0.p1 in
    var v10: s0 = v6 in
    let v20: [[Float]] = v17.p1 in
    let v22: [[Float]] = v10.p1 in
    let v24: [[Float]] = v10.p0 in
    v4.p1 = v20 in
    let v14: s4 = s4(v8, v19, v17) in
    v17.p0 = v20 in
    var v39: [[Float]] = v24 in
    v4.p1 = v39 in
    v10.p1 = v39 in
    v6.p0 = v20 in
    var v68: [[Float]] = v22 in
    v3.p0 = v20 in
    v10.p0 = v68 in
    var v91: [[Float]] = v20 in
    v4.p1 = v91 in
    v10.p1 = v20 in
    v14
  } in
  let f79: (s3) -> s3 = (v0: s3) -> s3 {
    var v7: s3 = v0 in
    var v3: s3 = v7 in
    let v1: [s0] = v7.p2 in
    v7.p2 = v1 in
    let v4: s0 = v7.p1 in
    let v8: [s0] = [v4, v4] in
    var v2: s0 = v4 in
    let v5: [s0] = v7.p0 in
    let v9: [s0] = v0.p0 in
    let v11: s0 = v9[2] in
    let v18: s0 = v7.p1 in
    var v17: [s0] = v1 in
    let v16: [s0] = v7.p2 in
    v17[1] = v18 in
    let v23: s0 = v3.p1 in
    v3.p1 = v23 in
    let v13: s0 = v8[1] in
    v7.p2 = v17 in
    let v15: s0 = v16[1] in
    var v14: [s0] = v5 in
    let v37: [[Float]] = v18.p1 in
    v17[0] = v18 in
    let v19: s0 = v1[0] in
    let v22: s0 = v9[1] in
    var v38: s3 = v7 in
    let v34: [s0] = [v22, v13, v19, v15] in
    v3.p0 = v14 in
    var v35: [s0] = v34 in
    let v28: [s0] = v3.p2 in
    v35[3] = v23 in
    v17[0] = v2 in
    var v27: [s0] = v5 in
    v7 = v38 in
    let v53: s0 = v28[1] in
    var v43: [s0] = v5 in
    v38.p0 = v5 in
    v17 = v28 in
    v2 = v13 in
    v17[0] = v22 in
    let v69: s0 = v35[1] in
    v3.p2 = v8 in
    let v60: [[Float]] = v11.p0 in
    var v85: [[Float]] = v60 in
    let v51: s0 = v5[2] in
    let v100: [[Float]] = v53.p0 in
    v38.p0 = v5 in
    v3.p0 = v5 in
    v3.p1 = v23 in
    let v46: [Float] = v37[0] in
    v38.p0 = v27 in
    let v92: [[s0]] = [v27, v9, v43, v5, v14] in
    let v161: [[Float]] = v4.p0 in
    v38.p1 = v23 in
    v2.p1 = v100 in
    v2.p0 = v161 in
    let v102: [s0] = v92[2] in
    v3.p2 = v16 in
    v38.p1 = v69 in
    let v120: s0 = v34[0] in
    v38.p2 = v16 in
    v17[0] = v19 in
    let v112: s3 = s3(v102, v51, v16) in
    v43[2] = v120 in
    v38.p0 = v43 in
    v85[2] = v46 in
    v2.p0 = v85 in
    v17[0] = v19 in
    v112
  } in
  let f77: (s4) -> s4 = (v0: s4) -> s4 {
    let v6: [s3] = v0.p1 in
    let v3: s3 = v6[0] in
    let v13: s3 = f79(v3) in
    let v9: s4 = f87(v0, v13) in
    v9
  } in
  let f59: (s0, s3, s4) -> s3 = (v0: s0, v1: s3, v2: s4) -> s3 {
    var v6: s4 = v2 in
    let v3: [[Float]] = v0.p1 in
    var v4: s0 = v0 in
    let v9: s0 = v2.p0 in
    v4.p1 = v3 in
    let v10: s3 = f79(v1) in
    var v12: s4 = v6 in
    let v22: s4 = f77(v12) in
    let v17: [[Float]] = v0.p0 in
    let v14: s0 = v1.p1 in
    let v16: s4 = f87(v22, v10) in
    v12.p2 = v4 in
    v4.p0 = v17 in
    let v27: [s3] = v16.p1 in
    v6.p0 = v9 in
    let v28: s3 = v27[0] in
    v12.p2 = v14 in
    v28
  } in
  let noinline_f0: (s3, [s7], [s4], [s0], Float) -> Float = (v0: s3, v1: [s7], v2: [s4], v3: [s0], v4: Float) -> Float {
    let v6: s4 = v2[1] in
    let v7: s0 = v3[1] in
    let v5: s3 = f79(v0) in
    let v14: s3 = f59(v7, v5, v6) in
    let v8: s5 = s5(v14, v4) in
    let v53: Float = v8.p1 in
    var v34: Float = v53 in
    v34
  } in
  fun loop(i: Int, v0: s3, v1: [s7], v2: [s4], v3: [s0], v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]]), [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]])]) in
    let v1: [s7] = [s7([[s6(s1(s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]]), [[s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])]], 48.0, s0([[49.0], [50.0], [51.0]], [[52.0], [53.0], [54.0]])), s0([[55.0], [56.0], [57.0]], [[58.0], [59.0], [60.0]]))], [s6(s1(s0([[61.0], [62.0], [63.0]], [[64.0], [65.0], [66.0]]), [[s0([[67.0], [68.0], [69.0]], [[70.0], [71.0], [72.0]])]], 73.0, s0([[74.0], [75.0], [76.0]], [[77.0], [78.0], [79.0]])), s0([[80.0], [81.0], [82.0]], [[83.0], [84.0], [85.0]]))]], s5(s3([s0([[86.0], [87.0], [88.0]], [[89.0], [90.0], [91.0]]), s0([[92.0], [93.0], [94.0]], [[95.0], [96.0], [97.0]]), s0([[98.0], [99.0], [100.0]], [[101.0], [102.0], [103.0]])], s0([[104.0], [105.0], [106.0]], [[107.0], [108.0], [109.0]]), [s0([[110.0], [111.0], [112.0]], [[113.0], [114.0], [115.0]]), s0([[116.0], [117.0], [118.0]], [[119.0], [120.0], [121.0]])]), 122.0)), s7([[s6(s1(s0([[123.0], [124.0], [125.0]], [[126.0], [127.0], [128.0]]), [[s0([[129.0], [130.0], [131.0]], [[132.0], [133.0], [134.0]])]], 135.0, s0([[136.0], [137.0], [138.0]], [[139.0], [140.0], [141.0]])), s0([[142.0], [143.0], [144.0]], [[145.0], [146.0], [147.0]]))], [s6(s1(s0([[148.0], [149.0], [150.0]], [[151.0], [152.0], [153.0]]), [[s0([[154.0], [155.0], [156.0]], [[157.0], [158.0], [159.0]])]], 160.0, s0([[161.0], [162.0], [163.0]], [[164.0], [165.0], [166.0]])), s0([[167.0], [168.0], [169.0]], [[170.0], [171.0], [172.0]]))]], s5(s3([s0([[173.0], [174.0], [175.0]], [[176.0], [177.0], [178.0]]), s0([[179.0], [180.0], [181.0]], [[182.0], [183.0], [184.0]]), s0([[185.0], [186.0], [187.0]], [[188.0], [189.0], [190.0]])], s0([[191.0], [192.0], [193.0]], [[194.0], [195.0], [196.0]]), [s0([[197.0], [198.0], [199.0]], [[200.0], [201.0], [202.0]]), s0([[203.0], [204.0], [205.0]], [[206.0], [207.0], [208.0]])]), 209.0)), s7([[s6(s1(s0([[210.0], [211.0], [212.0]], [[213.0], [214.0], [215.0]]), [[s0([[216.0], [217.0], [218.0]], [[219.0], [220.0], [221.0]])]], 222.0, s0([[223.0], [224.0], [225.0]], [[226.0], [227.0], [228.0]])), s0([[229.0], [230.0], [231.0]], [[232.0], [233.0], [234.0]]))], [s6(s1(s0([[235.0], [236.0], [237.0]], [[238.0], [239.0], [240.0]]), [[s0([[241.0], [242.0], [243.0]], [[244.0], [245.0], [246.0]])]], 247.0, s0([[248.0], [249.0], [250.0]], [[251.0], [252.0], [253.0]])), s0([[254.0], [255.0], [256.0]], [[257.0], [258.0], [259.0]]))]], s5(s3([s0([[260.0], [261.0], [262.0]], [[263.0], [264.0], [265.0]]), s0([[266.0], [267.0], [268.0]], [[269.0], [270.0], [271.0]]), s0([[272.0], [273.0], [274.0]], [[275.0], [276.0], [277.0]])], s0([[278.0], [279.0], [280.0]], [[281.0], [282.0], [283.0]]), [s0([[284.0], [285.0], [286.0]], [[287.0], [288.0], [289.0]]), s0([[290.0], [291.0], [292.0]], [[293.0], [294.0], [295.0]])]), 296.0))] in
    let v2: [s4] = [s4(s0([[297.0], [298.0], [299.0]], [[300.0], [301.0], [302.0]]), [s3([s0([[303.0], [304.0], [305.0]], [[306.0], [307.0], [308.0]]), s0([[309.0], [310.0], [311.0]], [[312.0], [313.0], [314.0]]), s0([[315.0], [316.0], [317.0]], [[318.0], [319.0], [320.0]])], s0([[321.0], [322.0], [323.0]], [[324.0], [325.0], [326.0]]), [s0([[327.0], [328.0], [329.0]], [[330.0], [331.0], [332.0]]), s0([[333.0], [334.0], [335.0]], [[336.0], [337.0], [338.0]])])], s0([[339.0], [340.0], [341.0]], [[342.0], [343.0], [344.0]])), s4(s0([[345.0], [346.0], [347.0]], [[348.0], [349.0], [350.0]]), [s3([s0([[351.0], [352.0], [353.0]], [[354.0], [355.0], [356.0]]), s0([[357.0], [358.0], [359.0]], [[360.0], [361.0], [362.0]]), s0([[363.0], [364.0], [365.0]], [[366.0], [367.0], [368.0]])], s0([[369.0], [370.0], [371.0]], [[372.0], [373.0], [374.0]]), [s0([[375.0], [376.0], [377.0]], [[378.0], [379.0], [380.0]]), s0([[381.0], [382.0], [383.0]], [[384.0], [385.0], [386.0]])])], s0([[387.0], [388.0], [389.0]], [[390.0], [391.0], [392.0]]))] in
    let v3: [s0] = [s0([[393.0], [394.0], [395.0]], [[396.0], [397.0], [398.0]]), s0([[399.0], [400.0], [401.0]], [[402.0], [403.0], [404.0]]), s0([[405.0], [406.0], [407.0]], [[408.0], [409.0], [410.0]])] in
    let v4: Float = 411.0 in
    let initialResult: Float = 411.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()