  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [[s1]]
    var p1: s0
  } in
  struct s4 {
    var p0: [[s0]]
    var p1: s2
  } in
  struct s6 {
    var p0: [s1]
    var p1: s4
  } in
  struct s8 {
    var p0: [s0]
    var p1: [[s1]]
  } in
  struct s9 {
    var p0: [[s8]]
    var p1: s6
  } in
  let f55: (s6, s8) -> s6 = (v0: s6, v1: s8) -> s6 {
    let v6: [s1] = v0.p0 in
    let v12: [[s1]] = v1.p1 in
    let v14: s4 = v0.p1 in
    let v25: s2 = v14.p1 in
    let v34: [s1] = v12[0] in
    let v24: s6 = s6(v6, v14) in
    let v32: [[s1]] = v25.p0 in
    let v59: [s1] = v32[0] in
    var v22: s6 = v24 in
    var v67: s6 = v0 in
    v67 = v22 in
    var v40: [s1] = v59 in
    v22.p1 = v14 in
    v40 = v34 in
    v22 = v0 in
    v22.p0 = v40 in
    v67.p1 = v14 in
    v67
  } in
  let f46: ([s8]) -> [s8] = (v0: [s8]) -> [s8] {
    let v3: s8 = v0[0] in
    var v2: [s8] = v0 in
    v2[0] = v3 in
    var v4: [s8] = v0 in
    let v7: s8 = v0[0] in
    v2[0] = v7 in
    let v8: s8 = v4[0] in
    v2[0] = v7 in
    v2[0] = v8 in
    v2[0] = v3 in
    v4[0] = v8 in
    let v74: s8 = v2[0] in
    v4[0] = v74 in
    v2
  } in
  let f21: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v6: [[Float]] = v0.p0 in
    let v9: s1 = s1(v1, v0) in
    var v2: [[Float]] = v6 in
    let v3: s0 = v9.p1 in
    let v13: [[Float]] = v3.p0 in
    let v18: s0 = v9.p0 in
    let v5: [[[Float]]] = [v2, v6, v13, v13] in
    var v11: s1 = v9 in
    let v8: [[Float]] = v0.p0 in
    let v14: [[Float]] = v18.p0 in
    v11.p0 = v1 in
    let v7: [[Float]] = v5[3] in
    let v10: [Float] = v8[1] in
    let v69: s0 = v11.p1 in
    v11.p1 = v69 in
    var v26: s0 = v18 in
    v2[0] = v10 in
    let v31: [[Float]] = v69.p1 in
    v26 = v1 in
    var v34: s1 = v9 in
    v26.p1 = v31 in
    let v57: s0 = v11.p0 in
    let v44: [Float] = v14[1] in
    let v62: s0 = v34.p1 in
    let v40: [[Float]] = v0.p1 in
    v2[0] = v44 in
    v34.p0 = v26 in
    var v43: [[Float]] = v31 in
    var v64: s1 = v9 in
    v11.p1 = v57 in
    v11.p1 = v62 in
    v26.p1 = v40 in
    v43 = v40 in
    v64.p0 = v57 in
    let v80: s0 = s0(v7, v43) in
    v11 = v64 in
    v80
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    let v13: s0 = f21(v0, v0) in
    let v7: [[Float]] = v0.p1 in
    let v1: [Float] = v4[0] in
    let v16: [Float] = v7[0] in
    var v15: [[Float]] = v7 in
    let v8: s1 = s1(v0, v13) in
    let v9: s0 = f21(v0, v13) in
    let v10: s0 = f21(v13, v13) in
    let v20: [Float] = v15[0] in
    v15[0] = v1 in
    let v14: s0 = v8.p1 in
    let v42: s0 = f21(v13, v9) in
    v15[0] = v1 in
    let v35: s0 = v8.p0 in
    var v26: s0 = v9 in
    let v29: [Float] = v7[0] in
    let v25: [Float] = v15[0] in
    var v54: s0 = v14 in
    var v22: s0 = v35 in
    v15[0] = v16 in
    let v73: s0 = f21(v42, v13) in
    let v38: s0 = v8.p0 in
    v15[0] = v29 in
    let v72: [s0] = [v38, v26, v73, v10, v35, v35] in
    v54.p1 = v4 in
    v15[0] = v25 in
    let v61: s0 = f21(v22, v14) in
    v26.p1 = v4 in
    v22.p1 = v4 in
    let v36: [[Float]] = v26.p1 in
    v15[0] = v20 in
    v22 = v54 in
    v54.p1 = v4 in
    v15[0] = v16 in
    let v116: s0 = v72[5] in
    v26.p1 = v15 in
    let v308: s0 = f21(v61, v116) in
    var v80: s0 = v10 in
    v22.p1 = v36 in
    v54 = v80 in
    v308
  } in
  let noinline_f0: (s9, Float) -> Float = (v0: s9, v1: Float) -> Float {
    var v10: s9 = v0 in
    let v3: [[s8]] = v10.p0 in
    let v5: [s8] = v3[0] in
    let v12: s8 = v5[0] in
    let v8: [s0] = v12.p0 in
    var v9: s9 = v10 in
    var v18: [[s8]] = v3 in
    var v15: [[s8]] = v18 in
    var v19: [s0] = v8 in
    let v11: [s8] = f46(v5) in
    v9 = v0 in
    let v33: s0 = v19[0] in
    var v20: s9 = v10 in
    v20.p0 = v15 in
    v15[1] = v5 in
    let v34: s0 = f4(v33) in
    let v28: [s8] = v18[0] in
    let v35: [[Float]] = v34.p0 in
    let v56: [s8] = v15[0] in
    let v30: [[s8]] = v0.p0 in
    v9.p0 = v30 in
    let v26: s0 = f21(v34, v33) in
    let v16: [s8] = f46(v5) in
    v19[0] = v26 in
    v15[1] = v56 in
    let v63: s6 = v9.p1 in
    v10.p0 = v18 in
    v18 = v15 in
    let v103: [Float] = v35[0] in
    v10 = v9 in
    let v49: [s8] = f46(v28) in
    let v73: s6 = v20.p1 in
    let v58: s6 = f55(v73, v12) in
    v18[0] = v28 in
    v18[0] = v16 in
    v9.p1 = v58 in
    v15[0] = v49 in
    v15[0] = v16 in
    v15[1] = v28 in
    v18[0] = v11 in
    v10.p1 = v63 in
    let v231: Float = v103[0] in
    v231
  } in
  fun loop(i: Int, v0: s9, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9([[s8([s0([[0.0], [1.0]], [[2.0]]), s0([[3.0], [4.0]], [[5.0]])], [[s1(s0([[6.0], [7.0]], [[8.0]]), s0([[9.0], [10.0]], [[11.0]]))]])], [s8([s0([[12.0], [13.0]], [[14.0]]), s0([[15.0], [16.0]], [[17.0]])], [[s1(s0([[18.0], [19.0]], [[20.0]]), s0([[21.0], [22.0]], [[23.0]]))]])]], s6([s1(s0([[24.0], [25.0]], [[26.0]]), s0([[27.0], [28.0]], [[29.0]]))], s4([[s0([[30.0], [31.0]], [[32.0]])], [s0([[33.0], [34.0]], [[35.0]])]], s2([[s1(s0([[36.0], [37.0]], [[38.0]]), s0([[39.0], [40.0]], [[41.0]]))], [s1(s0([[42.0], [43.0]], [[44.0]]), s0([[45.0], [46.0]], [[47.0]]))]], s0([[48.0], [49.0]], [[50.0]]))))) in
    let v1: Float = 51.0 in
    let initialResult: Float = 51.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()