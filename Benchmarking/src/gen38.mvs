  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [Float]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: [Float]
  } in
  struct s3 {
    var p0: s1
    var p1: s2
  } in
  let f59: (s3) -> s3 = (v0: s3) -> s3 {
    var v4: s3 = v0 in
    var v6: s3 = v0 in
    let v1: s2 = v6.p1 in
    var v3: s2 = v1 in
    let v7: s1 = v3.p0 in
    v6 = v4 in
    v3.p0 = v7 in
    var v8: s2 = v1 in
    v3.p0 = v7 in
    let v11: [Float] = v1.p1 in
    var v18: s3 = v0 in
    v8.p1 = v11 in
    v6.p0 = v7 in
    v3.p1 = v11 in
    var v15: s2 = v8 in
    let v17: s1 = v15.p0 in
    v3.p0 = v7 in
    v6.p0 = v17 in
    v15.p0 = v17 in
    let v28: [Float] = v8.p1 in
    v18.p0 = v17 in
    v8.p1 = v28 in
    v15.p1 = v11 in
    v8 = v3 in
    let v26: s2 = v0.p1 in
    let v38: s2 = v6.p1 in
    v18.p0 = v7 in
    v18.p0 = v17 in
    let v56: s1 = v1.p0 in
    v4.p1 = v38 in
    v4.p1 = v3 in
    v6.p0 = v17 in
    v3.p0 = v7 in
    v4.p1 = v26 in
    var v145: s3 = v18 in
    v6.p0 = v56 in
    v6.p1 = v3 in
    v145
  } in
  let f48: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v4: [Float] = v0.p2 in
    let v1: Float = v4[0] in
    let v2: [Float] = v0.p2 in
    let v7: Float = v2[0] in
    var v6: [Float] = v4 in
    var v13: [Float] = v6 in
    let v5: [Float] = v0.p2 in
    let v10: [[Float]] = v3.p3 in
    var v11: Float = v1 in
    let v8: Float = v2[2] in
    var v9: [[Float]] = v10 in
    let v17: [[Float]] = v0.p0 in
    let v15: [Float] = v10[0] in
    v3.p3 = v9 in
    let v30: [Float] = v9[0] in
    v13[2] = v1 in
    let v25: [Float] = v10[0] in
    let v14: s0 = s0(v17, v17, v5, v10) in
    v13[2] = v8 in
    var v22: [[Float]] = v17 in
    let v20: Float = v13[2] in
    v3.p2 = v5 in
    v22[0] = v25 in
    let v18: [Float] = v22[0] in
    v6[0] = v20 in
    v3.p3 = v9 in
    var v38: Float = v7 in
    let v21: [[Float]] = v14.p0 in
    v3.p1 = v21 in
    let v12: [Float] = v14.p2 in
    v9[0] = v15 in
    v3.p2 = v12 in
    let v61: [[Float]] = v0.p0 in
    let v36: [[Float]] = v14.p3 in
    v3.p1 = v17 in
    v6[0] = v11 in
    let v55: [[Float]] = v3.p1 in
    v3.p0 = v21 in
    var v42: [Float] = v5 in
    v3.p1 = v17 in
    v13[1] = v38 in
    v6[1] = v8 in
    v3.p3 = v36 in
    let v47: [Float] = v22[0] in
    v22[1] = v47 in
    v22[1] = v47 in
    v42[1] = v20 in
    v22 = v55 in
    let v43: [[Float]] = v3.p3 in
    let v161: s0 = s0(v21, v61, v42, v43) in
    v9[0] = v30 in
    v3.p3 = v10 in
    v22[0] = v15 in
    v9[0] = v18 in
    v161
  } in
  let f40: (s1) -> s1 = (v0: s1) -> s1 {
    v0
  } in
  let f26: (s3) -> s3 = (v0: s3) -> s3 {
    let v3: [s3] = [v0, v0] in
    let v8: s1 = v0.p0 in
    let v4: s3 = f59(v0) in
    var v10: s1 = v8 in
    var v7: s3 = v4 in
    let v1: s3 = f59(v7) in
    v7.p0 = v10 in
    var v5: [s3] = v3 in
    let v9: s3 = v5[1] in
    let v14: [s0] = v10.p1 in
    v10.p1 = v14 in
    v5[0] = v9 in
    let v18: s3 = f59(v9) in
    var v11: s1 = v10 in
    let v17: [s0] = v11.p1 in
    let v35: s3 = f59(v0) in
    let v13: s3 = v5[0] in
    var v28: [s3] = v5 in
    let v53: s0 = v17[1] in
    let v70: s3 = v5[0] in
    v28[1] = v18 in
    let v40: s2 = v1.p1 in
    v28[0] = v7 in
    let v34: s3 = f59(v35) in
    v28[1] = v0 in
    let v77: s3 = v28[1] in
    v10.p0 = v53 in
    let v54: s0 = f48(v53) in
    v11.p0 = v54 in
    v7.p1 = v40 in
    var v56: [s3] = v3 in
    let v81: s3 = f59(v13) in
    v56[1] = v81 in
    let v143: s3 = f59(v77) in
    let v144: s2 = v34.p1 in
    v56[0] = v70 in
    let v227: s3 = v56[0] in
    v28[1] = v227 in
    v7.p1 = v144 in
    v5[1] = v0 in
    v143
  } in
  let f1: (s3) -> s3 = (v0: s3) -> s3 {
    let v8: s3 = f26(v0) in
    let v2: s2 = v0.p1 in
    let v4: s2 = v8.p1 in
    var v5: s2 = v2 in
    let v3: s3 = f26(v8) in
    var v13: s3 = v3 in
    v13.p1 = v2 in
    v13.p1 = v5 in
    v13.p1 = v5 in
    let v16: s1 = v4.p0 in
    var v23: s1 = v16 in
    v5.p0 = v16 in
    var v25: s1 = v23 in
    v5.p0 = v25 in
    let v30: [s0] = v16.p1 in
    v5.p0 = v23 in
    let v39: s1 = f40(v25) in
    let v54: s3 = f26(v13) in
    let v63: s3 = f26(v54) in
    v25.p1 = v30 in
    let v99: s1 = f40(v39) in
    v13.p0 = v99 in
    let v118: s3 = f26(v63) in
    v118
  } in
  let noinline_f0: (s3, [s1], Float) -> Float = (v0: s3, v1: [s1], v2: Float) -> Float {
    let v5: s1 = v1[1] in
    let v12: s1 = v1[0] in
    var v9: s3 = v0 in
    let v4: s1 = v1[0] in
    let v7: s1 = v1[1] in
    v9.p0 = v5 in
    var v16: [s1] = v1 in
    let v11: s1 = v16[0] in
    let v22: s3 = f26(v9) in
    v9.p0 = v7 in
    let v25: [s0] = v7.p1 in
    v16[1] = v12 in
    let v21: s1 = v22.p0 in
    let v28: s1 = v16[1] in
    let v15: s0 = v25[0] in
    v9.p0 = v12 in
    let v19: s0 = f48(v15) in
    let v33: s1 = s1(v15, v25) in
    v16[0] = v21 in
    v9.p0 = v33 in
    let v49: s3 = f1(v9) in
    v9.p0 = v11 in
    v9.p0 = v21 in
    v16[1] = v28 in
    let v44: s2 = v49.p1 in
    var v65: Float = v2 in
    let v54: [[Float]] = v19.p1 in
    let v71: [Float] = v54[0] in
    let v164: [Float] = v44.p1 in
    let v52: Float = v71[0] in
    let v66: Float = v52 - v65 in
    let v92: Float = v164[0] in
    let v220: Float = v92 - v66 in
    v16[0] = v4 in
    v220
  } in
  fun loop(i: Int, v0: s3, v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3(s1(s0([[0.0], [1.0]], [[2.0], [3.0]], [4.0, 5.0, 6.0], [[7.0]]), [s0([[8.0], [9.0]], [[10.0], [11.0]], [12.0, 13.0, 14.0], [[15.0]]), s0([[16.0], [17.0]], [[18.0], [19.0]], [20.0, 21.0, 22.0], [[23.0]]), s0([[24.0], [25.0]], [[26.0], [27.0]], [28.0, 29.0, 30.0], [[31.0]])]), s2(s1(s0([[32.0], [33.0]], [[34.0], [35.0]], [36.0, 37.0, 38.0], [[39.0]]), [s0([[40.0], [41.0]], [[42.0], [43.0]], [44.0, 45.0, 46.0], [[47.0]]), s0([[48.0], [49.0]], [[50.0], [51.0]], [52.0, 53.0, 54.0], [[55.0]]), s0([[56.0], [57.0]], [[58.0], [59.0]], [60.0, 61.0, 62.0], [[63.0]])]), [64.0, 65.0, 66.0])) in
    let v1: [s1] = [s1(s0([[67.0], [68.0]], [[69.0], [70.0]], [71.0, 72.0, 73.0], [[74.0]]), [s0([[75.0], [76.0]], [[77.0], [78.0]], [79.0, 80.0, 81.0], [[82.0]]), s0([[83.0], [84.0]], [[85.0], [86.0]], [87.0, 88.0, 89.0], [[90.0]]), s0([[91.0], [92.0]], [[93.0], [94.0]], [95.0, 96.0, 97.0], [[98.0]])]), s1(s0([[99.0], [100.0]], [[101.0], [102.0]], [103.0, 104.0, 105.0], [[106.0]]), [s0([[107.0], [108.0]], [[109.0], [110.0]], [111.0, 112.0, 113.0], [[114.0]]), s0([[115.0], [116.0]], [[117.0], [118.0]], [119.0, 120.0, 121.0], [[122.0]]), s0([[123.0], [124.0]], [[125.0], [126.0]], [127.0, 128.0, 129.0], [[130.0]])])] in
    let v2: Float = 131.0 in
    let initialResult: Float = 131.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()