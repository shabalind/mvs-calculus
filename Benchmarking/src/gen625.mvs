  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  let f29: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p0 in
    let v3: [[Float]] = v0.p0 in
    let v7: s0 = s0(v1) in
    var v6: s0 = v0 in
    let v2: [[Float]] = v6.p0 in
    var v4: [[Float]] = v1 in
    let v9: [[Float]] = v6.p0 in
    var v8: [[Float]] = v1 in
    v6.p0 = v8 in
    let v12: [Float] = v4[0] in
    v4[0] = v12 in
    let v5: [Float] = v9[0] in
    let v13: Float = v5[0] in
    let v30: [Float] = v1[0] in
    var v11: s0 = v0 in
    let v10: [Float] = v8[0] in
    let v23: [[Float]] = v6.p0 in
    v11.p0 = v4 in
    let v18: Float = v5[0] in
    let v16: [[Float]] = v6.p0 in
    v4[0] = v5 in
    let v17: [[Float]] = v0.p0 in
    v6.p0 = v2 in
    v11.p0 = v1 in
    v6.p0 = v16 in
    let v15: [[Float]] = v7.p0 in
    let v25: Float = v18 / v18 in
    var v21: [[Float]] = v15 in
    var v29: [Float] = v30 in
    let v34: [Float] = v23[0] in
    let v20: [Float] = v16[0] in
    var v24: s0 = v0 in
    var v28: [Float] = v10 in
    v11.p0 = v8 in
    v24.p0 = v17 in
    let v22: [[Float]] = v24.p0 in
    v4 = v9 in
    v4 = v21 in
    var v27: [Float] = v29 in
    var v85: [[Float]] = v17 in
    let v73: Float = v29[0] in
    let v36: [[Float]] = v7.p0 in
    v28[0] = v25 in
    let v42: [Float] = v4[0] in
    let v53: [[Float]] = v6.p0 in
    v24.p0 = v22 in
    let v19: [Float] = v2[0] in
    var v52: [[Float]] = v1 in
    var v64: [[Float]] = v52 in
    v4[0] = v19 in
    let v32: [[Float]] = v24.p0 in
    let v35: Float = v34[0] in
    v11.p0 = v21 in
    v27[0] = v18 in
    let v49: [[Float]] = v7.p0 in
    let v122: Float = v28[0] in
    v11.p0 = v32 in
    v28[0] = v122 in
    let v60: [Float] = v3[0] in
    v64[0] = v34 in
    let v97: Float = v73 - v13 in
    v11.p0 = v21 in
    let v55: [[Float]] = [v60] in
    v6.p0 = v2 in
    v6.p0 = v36 in
    v11.p0 = v49 in
    let v74: [[Float]] = v6.p0 in
    let v71: s1 = s1(v24, v11) in
    var v125: [[Float]] = v2 in
    v6.p0 = v125 in
    let v90: Float = v10[0] in
    let v67: s0 = v71.p0 in
    v125[0] = v42 in
    let v39: s1 = s1(v24, v7) in
    let v46: [[Float]] = v6.p0 in
    v4[0] = v20 in
    v24.p0 = v125 in
    v8[0] = v28 in
    v6.p0 = v85 in
    v29[0] = v18 in
    v85 = v46 in
    v6.p0 = v55 in
    v24.p0 = v4 in
    var v57: s1 = v39 in
    let v66: [[[Float]]] = [v64, v53, v74, v53, v125, v36, v46] in
    v57.p1 = v67 in
    v57.p1 = v11 in
    v24.p0 = v4 in
    let v69: [[Float]] = v66[4] in
    v85[0] = v27 in
    let v151: [Float] = v22[0] in
    v29 = v30 in
    let v96: Float = v90 + v97 in
    v64[0] = v19 in
    let v144: s0 = v57.p0 in
    v52[0] = v151 in
    v28[0] = v18 in
    v6.p0 = v69 in
    v29[0] = v35 in
    v24.p0 = v36 in
    v125[0] = v34 in
    v28[0] = v96 in
    v57.p0 = v67 in
    v29[0] = v13 in
    v144
  } in
  let noinline_f0: ([s0], Float) -> Float = (v0: [s0], v1: Float) -> Float {
    let v9: [Float] = [v1, v1] in
    var v4: [Float] = v9 in
    var v7: [Float] = v4 in
    let v6: s0 = v0[2] in
    v4[1] = v1 in
    let v11: s0 = f29(v6) in
    let v5: Float = v7[0] in
    v4 = v7 in
    let v2: [[Float]] = v11.p0 in
    let v39: [Float] = v2[0] in
    v7[1] = v5 in
    var v18: [Float] = v39 in
    let v57: Float = v18[0] in
    v7[0] = v57 in
    v5
  } in
  fun loop(i: Int, v0: [s0], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0]]), s0([[1.0]]), s0([[2.0]])] in
    let v1: Float = 3.0 in
    let initialResult: Float = 3.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()