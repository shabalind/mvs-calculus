  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f80: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p1 in
    let v5: [[Float]] = v0.p0 in
    var v2: [[Float]] = v5 in
    let v4: s0 = s0(v2, v1) in
    let v9: [[Float]] = v4.p0 in
    v2 = v5 in
    let v11: [Float] = v9[0] in
    v2[0] = v11 in
    v2 = v9 in
    let v22: [[Float]] = v4.p1 in
    let v41: s0 = s0(v9, v22) in
    v41
  } in
  let f73: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: s0 = f80(v0) in
    let v3: [[Float]] = v5.p0 in
    let v4: [[Float]] = v0.p0 in
    let v1: s0 = f80(v0) in
    let v8: [[Float]] = v5.p1 in
    let v7: s0 = f80(v0) in
    var v10: s0 = v1 in
    let v12: [[Float]] = v10.p1 in
    v10.p0 = v4 in
    let v27: [[Float]] = v0.p1 in
    let v16: [[Float]] = v0.p1 in
    v10.p1 = v8 in
    let v26: s0 = f80(v7) in
    v10.p1 = v16 in
    let v44: s0 = f80(v10) in
    let v59: [[Float]] = v44.p0 in
    let v43: s0 = f80(v26) in
    v10.p0 = v59 in
    let v36: [[Float]] = v43.p0 in
    let v39: s0 = f80(v43) in
    let v45: s0 = s0(v36, v16) in
    v10.p1 = v12 in
    v10.p0 = v36 in
    v10.p0 = v3 in
    let v53: [[Float]] = v39.p0 in
    v10.p1 = v16 in
    let v126: s0 = f80(v44) in
    v10.p0 = v53 in
    v10.p1 = v27 in
    v10.p0 = v53 in
    v10.p0 = v53 in
    let v98: s0 = f80(v126) in
    let v65: [[Float]] = v45.p1 in
    v10.p1 = v65 in
    v10.p0 = v59 in
    let v105: s0 = f80(v98) in
    v105
  } in
  let f65: (s0) -> s0 = (v0: s0) -> s0 {
    var v1: s0 = v0 in
    var v3: s0 = v1 in
    let v2: [[Float]] = v1.p1 in
    v3.p1 = v2 in
    v3
  } in
  let f35: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f65(v0) in
    var v5: s0 = v0 in
    var v6: s0 = v5 in
    let v1: s0 = f73(v5) in
    let v2: [[Float]] = v1.p1 in
    let v25: s0 = f80(v3) in
    var v11: s0 = v25 in
    var v22: s0 = v6 in
    var v36: [[Float]] = v2 in
    v5.p1 = v2 in
    v5 = v1 in
    let v17: s0 = f80(v11) in
    v11.p1 = v2 in
    v5.p1 = v36 in
    let v34: [[Float]] = v22.p1 in
    v11.p1 = v34 in
    let v33: [[Float]] = v17.p0 in
    let v37: [[Float]] = v0.p0 in
    var v20: [[Float]] = v33 in
    let v69: s0 = f65(v1) in
    v5.p0 = v33 in
    v6.p0 = v20 in
    v36 = v34 in
    var v48: [[Float]] = v37 in
    v22.p0 = v48 in
    v69
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    var v8: s0 = v0 in
    var v2: s0 = v0 in
    let v4: [[Float]] = v0.p0 in
    let v6: [[Float]] = v8.p1 in
    let v14: s0 = f35(v2) in
    v2.p1 = v6 in
    v8.p0 = v4 in
    let v42: s0 = f73(v14) in
    let v52: [[Float]] = v42.p1 in
    let v44: [Float] = v52[0] in
    let v69: Float = v44[0] in
    var v71: Float = v69 in
    v71
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0]]) in
    let v1: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()