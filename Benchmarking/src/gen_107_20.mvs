  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
  } in
  struct s3 {
    var p0: [s1]
  } in
  struct s5 {
    var p0: [s1]
    var p1: s0
  } in
  struct s6 {
    var p0: [s0]
    var p1: [[s0]]
  } in
  struct s9 {
    var p0: s5
    var p1: [s6]
  } in
  struct s12 {
    var p0: s5
    var p1: [s3]
  } in
  let f112: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    var v4: Float = v0 in
    let v7: Float = v2 + v2 in
    var v8: Float = v7 in
    var v1: Float = v4 in
    var v3: Float = v4 in
    let v10: Float = v2 + v1 in
    var v9: Float = v3 in
    var v15: Float = v7 in
    var v17: Float = v0 in
    var v13: Float = v17 in
    let v14: Float = v9 * v0 in
    var v18: Float = v4 in
    var v20: Float = v18 in
    let v24: [Float] = [v9, v1, v13, v4, v14] in
    var v42: [Float] = v24 in
    var v26: [Float] = v24 in
    v42[3] = v1 in
    v42[1] = v10 in
    var v33: Float = v8 in
    v26[0] = v17 in
    v42[0] = v2 in
    v8 = v15 in
    v42[3] = v9 in
    let v44: [[Float]] = [v42, v24, v42, v26] in
    let v139: [Float] = v44[0] in
    v42[3] = v14 in
    var v48: [[Float]] = v44 in
    var v67: [[Float]] = v48 in
    var v87: [[Float]] = v67 in
    let v45: [Float] = v87[1] in
    v26[4] = v20 in
    var v62: [Float] = v139 in
    v42[0] = v0 in
    let v76: [[Float]] = [v45, v62] in
    let v147: [Float] = v76[0] in
    let v137: Float = v147[0] in
    v42[1] = v33 in
    v137
  } in
  let f20: (Float) -> Float = (v0: Float) -> Float {
    let v7: Float = f112(v0) in
    var v3: Float = v7 in
    let v5: Float = v3 - v7 in
    var v1: Float = v5 in
    let v10: Float = f112(v0) in
    let v6: Float = f112(v5) in
    let v2: Float = f112(v10) in
    var v11: Float = v6 in
    var v9: Float = v2 in
    var v8: Float = v6 in
    let v16: [Float] = [v0, v11, v7] in
    let v12: Float = f112(v2) in
    let v26: Float = f112(v9) in
    let v20: Float = v16[1] in
    var v21: [Float] = v16 in
    var v17: Float = v5 in
    let v19: Float = v21[0] in
    v21[1] = v8 in
    v21[1] = v17 in
    let v51: Float = v19 / v3 in
    v21[1] = v26 in
    v21[0] = v1 in
    let v35: Float = f112(v12) in
    v21[2] = v20 in
    v9 = v35 in
    v51
  } in
  let noinline_f0: ([s9], [[s12]], Float) -> Float = (v0: [s9], v1: [[s12]], v2: Float) -> Float {
    let v7: Float = f112(v2) in
    let v6: Float = f112(v7) in
    let v18: Float = f20(v7) in
    let v20: [Float] = [v18] in
    let v42: Float = v20[0] in
    let v115: Float = v6 - v42 in
    let v189: Float = f112(v115) in
    v189
  } in
  fun loop(i: Int, v0: [s9], v1: [[s12]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s9] = [s9(s5([s1([s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]])]), s1([s0([[4.0]], [[5.0]]), s0([[6.0]], [[7.0]])]), s1([s0([[8.0]], [[9.0]]), s0([[10.0]], [[11.0]])])], s0([[12.0]], [[13.0]])), [s6([s0([[14.0]], [[15.0]]), s0([[16.0]], [[17.0]])], [[s0([[18.0]], [[19.0]])], [s0([[20.0]], [[21.0]])]]), s6([s0([[22.0]], [[23.0]]), s0([[24.0]], [[25.0]])], [[s0([[26.0]], [[27.0]])], [s0([[28.0]], [[29.0]])]]), s6([s0([[30.0]], [[31.0]]), s0([[32.0]], [[33.0]])], [[s0([[34.0]], [[35.0]])], [s0([[36.0]], [[37.0]])]])]), s9(s5([s1([s0([[38.0]], [[39.0]]), s0([[40.0]], [[41.0]])]), s1([s0([[42.0]], [[43.0]]), s0([[44.0]], [[45.0]])]), s1([s0([[46.0]], [[47.0]]), s0([[48.0]], [[49.0]])])], s0([[50.0]], [[51.0]])), [s6([s0([[52.0]], [[53.0]]), s0([[54.0]], [[55.0]])], [[s0([[56.0]], [[57.0]])], [s0([[58.0]], [[59.0]])]]), s6([s0([[60.0]], [[61.0]]), s0([[62.0]], [[63.0]])], [[s0([[64.0]], [[65.0]])], [s0([[66.0]], [[67.0]])]]), s6([s0([[68.0]], [[69.0]]), s0([[70.0]], [[71.0]])], [[s0([[72.0]], [[73.0]])], [s0([[74.0]], [[75.0]])]])]), s9(s5([s1([s0([[76.0]], [[77.0]]), s0([[78.0]], [[79.0]])]), s1([s0([[80.0]], [[81.0]]), s0([[82.0]], [[83.0]])]), s1([s0([[84.0]], [[85.0]]), s0([[86.0]], [[87.0]])])], s0([[88.0]], [[89.0]])), [s6([s0([[90.0]], [[91.0]]), s0([[92.0]], [[93.0]])], [[s0([[94.0]], [[95.0]])], [s0([[96.0]], [[97.0]])]]), s6([s0([[98.0]], [[99.0]]), s0([[100.0]], [[101.0]])], [[s0([[102.0]], [[103.0]])], [s0([[104.0]], [[105.0]])]]), s6([s0([[106.0]], [[107.0]]), s0([[108.0]], [[109.0]])], [[s0([[110.0]], [[111.0]])], [s0([[112.0]], [[113.0]])]])])] in
    let v1: [[s12]] = [[s12(s5([s1([s0([[114.0]], [[115.0]]), s0([[116.0]], [[117.0]])]), s1([s0([[118.0]], [[119.0]]), s0([[120.0]], [[121.0]])]), s1([s0([[122.0]], [[123.0]]), s0([[124.0]], [[125.0]])])], s0([[126.0]], [[127.0]])), [s3([s1([s0([[128.0]], [[129.0]]), s0([[130.0]], [[131.0]])]), s1([s0([[132.0]], [[133.0]]), s0([[134.0]], [[135.0]])]), s1([s0([[136.0]], [[137.0]]), s0([[138.0]], [[139.0]])])])])], [s12(s5([s1([s0([[140.0]], [[141.0]]), s0([[142.0]], [[143.0]])]), s1([s0([[144.0]], [[145.0]]), s0([[146.0]], [[147.0]])]), s1([s0([[148.0]], [[149.0]]), s0([[150.0]], [[151.0]])])], s0([[152.0]], [[153.0]])), [s3([s1([s0([[154.0]], [[155.0]]), s0([[156.0]], [[157.0]])]), s1([s0([[158.0]], [[159.0]]), s0([[160.0]], [[161.0]])]), s1([s0([[162.0]], [[163.0]]), s0([[164.0]], [[165.0]])])])])]] in
    let v2: Float = 166.0 in
    let initialResult: Float = 166.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()