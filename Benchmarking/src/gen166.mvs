  struct s0 {
    var p0: Float
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
    var p2: s0
    var p3: s0
    var p4: [[Float]]
    var p5: [s0]
  } in
  let f52: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: Float = v0.p0 in
    let v7: Float = v0.p0 in
    var v1: s0 = v0 in
    v1.p0 = v5 in
    v1.p0 = v5 in
    var v4: s0 = v1 in
    let v8: [[Float]] = v1.p1 in
    let v3: [Float] = v8[0] in
    var v9: Float = v7 in
    v1 = v0 in
    let v6: [[Float]] = v4.p1 in
    var v16: [Float] = v3 in
    var v21: [[Float]] = v8 in
    var v11: Float = v9 in
    let v19: [Float] = v6[0] in
    let v56: s0 = s0(v11, v8) in
    let v28: Float = v19[0] in
    v21[0] = v16 in
    v1.p1 = v21 in
    v16[0] = v28 in
    v1.p0 = v28 in
    v56
  } in
  let noinline_f0: ([s1], Float) -> Float = (v0: [s1], v1: Float) -> Float {
    let v5: s1 = v0[1] in
    var v7: s1 = v5 in
    let v6: [s0] = v5.p1 in
    v7.p5 = v6 in
    let v2: [s0] = v5.p1 in
    v7.p1 = v2 in
    v7.p5 = v2 in
    v7.p1 = v2 in
    let v4: s0 = v6[1] in
    var v10: s1 = v7 in
    var v46: s1 = v10 in
    let v27: s0 = v2[0] in
    let v26: s0 = v10.p3 in
    let v22: s0 = f52(v26) in
    v10.p2 = v27 in
    v46.p3 = v26 in
    let v25: s1 = v0[1] in
    let v123: [s0] = v46.p1 in
    let v38: s0 = v25.p2 in
    v10.p2 = v22 in
    v10.p3 = v4 in
    v10.p5 = v123 in
    v10.p1 = v123 in
    var v62: s0 = v26 in
    v7.p2 = v38 in
    let v208: Float = v62.p0 in
    v208
  } in
  fun loop(i: Int, v0: [s1], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s1] = [s1([[s0(0.0, [[1.0]])]], [s0(2.0, [[3.0]]), s0(4.0, [[5.0]]), s0(6.0, [[7.0]])], s0(8.0, [[9.0]]), s0(10.0, [[11.0]]), [[12.0], [13.0]], [s0(14.0, [[15.0]]), s0(16.0, [[17.0]]), s0(18.0, [[19.0]])]), s1([[s0(20.0, [[21.0]])]], [s0(22.0, [[23.0]]), s0(24.0, [[25.0]]), s0(26.0, [[27.0]])], s0(28.0, [[29.0]]), s0(30.0, [[31.0]]), [[32.0], [33.0]], [s0(34.0, [[35.0]]), s0(36.0, [[37.0]]), s0(38.0, [[39.0]])])] in
    let v1: Float = 40.0 in
    let initialResult: Float = 40.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()