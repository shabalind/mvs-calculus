  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  let f38: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v3: Float = v0[0] in
    let v7: Float = v0[0] in
    let v2: Float = v0[0] in
    let v6: Float = v0[0] in
    var v1: [Float] = v0 in
    var v4: [Float] = v1 in
    var v11: [Float] = v1 in
    var v14: Float = v7 in
    let v16: Float = v1[0] in
    v4[0] = v6 in
    let v12: Float = v11[0] in
    var v23: [Float] = v1 in
    var v13: [Float] = v11 in
    let v21: Float = v11[0] in
    v23[0] = v3 in
    v4[0] = v12 in
    let v19: Float = v1[0] in
    var v22: [Float] = v1 in
    var v49: [Float] = v1 in
    v22[0] = v3 in
    let v18: Float = v13[0] in
    let v32: Float = v23[0] in
    var v27: [Float] = v4 in
    v23[0] = v19 in
    var v47: Float = v16 in
    var v79: Float = v2 in
    let v51: Float = v1[0] in
    var v30: Float = v18 in
    v22[0] = v32 in
    var v61: [Float] = v13 in
    let v52: [[Float]] = [v27] in
    var v123: [[Float]] = v52 in
    v49[0] = v30 in
    var v40: Float = v51 in
    var v72: [[Float]] = v123 in
    v123[0] = v23 in
    let v77: [Float] = v72[0] in
    let v121: [Float] = v123[0] in
    v49[0] = v30 in
    let v156: [[Float]] = [v77, v22, v49, v4, v121, v61] in
    v27[0] = v47 in
    v61[0] = v14 in
    var v229: [[Float]] = v156 in
    v61[0] = v21 in
    let v111: [Float] = v229[0] in
    v49[0] = v79 in
    v229[1] = v111 in
    v13[0] = v40 in
    v111
  } in
  let noinline_f0: ([s0], Float) -> Float = (v0: [s0], v1: Float) -> Float {
    let v3: [[s0]] = [v0, v0, v0] in
    let v7: [s0] = v3[0] in
    let v8: s0 = v7[1] in
    let v5: [[Float]] = v8.p1 in
    let v17: [Float] = v5[0] in
    var v13: [Float] = v17 in
    let v20: [Float] = v5[0] in
    let v18: [Float] = f38(v13) in
    let v41: [Float] = f38(v20) in
    let v30: [Float] = f38(v41) in
    let v56: [Float] = f38(v30) in
    v13 = v56 in
    let v59: [Float] = f38(v18) in
    let v43: [Float] = f38(v13) in
    let v89: [Float] = f38(v43) in
    let v132: Float = v59[0] in
    let v104: Float = v132 - v1 in
    var v103: Float = v104 in
    v13 = v89 in
    v103
  } in
  fun loop(i: Int, v0: [s0], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]], [[5.0], [6.0], [7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0], [12.0]], [[13.0], [14.0], [15.0]])] in
    let v1: Float = 16.0 in
    let initialResult: Float = 16.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()