  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<std::vector<double>> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<std::vector<double>> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  struct s1 {
    std::vector<s0> p0;
    std::vector<s0> p1;
    s1(std::vector<s0> v0, std::vector<s0> v1): p0(v0), p1(v1) { }
  };
  s0 f38(const s0 &v0) {
    const std::vector<std::vector<double>> v1 = v0.p1;
    const std::vector<std::vector<std::vector<double>>> v2 { v1, v1, v1, v1 };
    std::vector<std::vector<std::vector<double>>> v4 = v2;
    const std::vector<std::vector<double>> v3 = v2[1];
    const std::vector<std::vector<double>> v13 = v0.p0;
    std::vector<std::vector<std::vector<double>>> v9 = v2;
    const std::vector<std::vector<double>> v12 = v0.p0;
    const std::vector<std::vector<double>> v15 = v4[1];
    v4 = v2;
    const s0 v16(v15, v13);
    std::vector<std::vector<std::vector<double>>> v81 = v2;
    const std::vector<std::vector<double>> v19 = v81[3];
    v4[0] = v12;
    const std::vector<std::vector<double>> v35 = v16.p1;
    s0 v27 = v16;
    v4[2] = v19;
    s0 v29 = v27;
    const std::vector<std::vector<double>> v51 = v27.p1;
    const std::vector<std::vector<double>> v36 = v9[0];
    const std::vector<std::vector<double>> v71 = v29.p1;
    const std::vector<std::vector<double>> v46 = v9[3];
    v29.p1 = v3;
    v27.p1 = v51;
    v29.p0 = v46;
    v29.p0 = v71;
    v29.p1 = v35;
    v27.p0 = v36;
    v29.p1 = v46;
    v4[2] = v19;
    return v29;
  }
  std::vector<s0> f1(const std::vector<s0> &v0) {
    std::vector<s0> v2 = v0;
    const s0 v6 = v2[2];
    const std::vector<std::vector<double>> v5 = v6.p0;
    s0 v3 = v6;
    const std::vector<double> v7 = v5[1];
    const std::vector<std::vector<double>> v1 = v3.p1;
    std::vector<std::vector<double>> v8 = v5;
    v3.p1 = v8;
    const s0 v19 = f38(v6);
    const s0 v42 = f38(v19);
    const std::vector<std::vector<double>> v4 = v3.p0;
    const s0 v9 = f38(v6);
    const s0 v13 = f38(v3);
    const std::vector<std::vector<double>> v10 { v7 };
    std::vector<double> v11 = v7;
    v8[1] = v11;
    std::vector<std::vector<double>> v18 = v1;
    std::vector<std::vector<double>> v14 = v10;
    v8[1] = v11;
    std::vector<std::vector<double>> v23 = v14;
    const std::vector<double> v17 = v23[0];
    const s0 v21 = f38(v13);
    const s0 v22 = f38(v6);
    const std::vector<std::vector<double>> v26 = v3.p1;
    v3.p0 = v4;
    v3.p0 = v18;
    const std::vector<std::vector<double>> v43 = v21.p1;
    const std::vector<std::vector<double>> v30 = v21.p0;
    v3.p0 = v30;
    v3.p0 = v4;
    const std::vector<std::vector<double>> v20 = v9.p0;
    std::vector<std::vector<double>> v33 = v14;
    v3.p1 = v20;
    v2[2] = v42;
    v3.p0 = v26;
    v33 = v14;
    v3.p0 = v5;
    const std::vector<std::vector<double>> v44 = v3.p1;
    const std::vector<std::vector<double>> v51 = v3.p1;
    std::vector<s0> v63 = v0;
    v18[0] = v11;
    const std::vector<std::vector<double>> v49 = v3.p0;
    const std::vector<std::vector<double>> v52 = v42.p1;
    const s0 v85 = f38(v22);
    const s0 v73(v51, v49);
    const s0 v104 = f38(v9);
    std::vector<std::vector<double>> v75 = v30;
    const std::vector<std::vector<double>> v94 = v42.p0;
    v3.p0 = v75;
    v63[2] = v73;
    v3.p1 = v51;
    const std::vector<double> v76 = v33[0];
    const s0 v74 = f38(v85);
    v33[0] = v17;
    std::vector<std::vector<double>> v84 = v52;
    const std::vector<std::vector<double>> v45 = v19.p0;
    const std::vector<double> v71 = v26[1];
    v3.p0 = v26;
    v3.p0 = v45;
    const std::vector<std::vector<double>> v193 = v104.p0;
    v3.p1 = v94;
    v3.p0 = v43;
    v3.p0 = v26;
    v3.p1 = v44;
    const std::vector<std::vector<double>> v259 = v42.p1;
    v3.p0 = v193;
    v84[2] = v71;
    const std::vector<double> v120 = v259[2];
    const std::vector<std::vector<double>> v148 = v74.p1;
    v3.p1 = v148;
    v75[1] = v120;
    std::vector<s0> v126 = v63;
    v3.p1 = v84;
    v8[1] = v76;
    return v126;
  }
  __attribute__((noinline))
  double f0(const s1 &v0, const double &v1) {
    s1 v3 = v0;
    s1 v5 = v3;
    const std::vector<s0> v13 = v3.p1;
    const s0 v4 = v13[0];
    const s0 v10 = f38(v4);
    std::vector<s0> v9 = v13;
    v5.p1 = v13;
    const std::vector<s0> v14 = v3.p1;
    const s0 v8 = f38(v4);
    const std::vector<s0> v11 = v0.p0;
    const std::vector<s0> v12 = f1(v11);
    const s0 v15 = v11[2];
    v3.p1 = v9;
    v5.p1 = v13;
    v9[0] = v10;
    const s0 v30 = v14[0];
    s0 v22 = v15;
    std::vector<s0> v45 = v12;
    const std::vector<s0> v39 = v5.p1;
    const std::vector<s0> v41 = v3.p0;
    v3.p0 = v12;
    const s0 v40 = f38(v22);
    const s0 v32 = f38(v40);
    const s0 v33 = v41[2];
    const std::vector<std::vector<double>> v28 = v30.p1;
    const s0 v54 = v45[2];
    const std::vector<double> v42 = v28[0];
    const std::vector<std::vector<double>> v35 = v8.p0;
    v3.p1 = v39;
    v22.p0 = v28;
    v45[0] = v8;
    std::vector<double> v57 = v42;
    v9[0] = v33;
    const s0 v96 = f38(v22);
    v57[0] = v1;
    const std::vector<std::vector<double>> v89 = v54.p1;
    std::vector<std::vector<double>> v77 = v89;
    const std::vector<std::vector<double>> v46 = v32.p1;
    const std::vector<double> v47 = v46[2];
    v3.p0 = v45;
    std::vector<double> v212 = v57;
    const std::vector<double> v59 = v77[2];
    v22.p1 = v35;
    v77[0] = v47;
    v77[2] = v212;
    std::vector<std::vector<double>> v121 = v89;
    v57[0] = v1;
    const double v151 = v59[0];
    v22.p1 = v121;
    v3.p1 = v14;
    v9[0] = v96;
    v77[0] = v47;
    return v151;
  }
  int main() {
    s1 v0({ { { { { 0.0 }, { 1.0 }, { 2.0 } }, { { 3.0 }, { 4.0 }, { 5.0 } } }, { { { 6.0 }, { 7.0 }, { 8.0 } }, { { 9.0 }, { 10.0 }, { 11.0 } } }, { { { 12.0 }, { 13.0 }, { 14.0 } }, { { 15.0 }, { 16.0 }, { 17.0 } } } }, { { { { 18.0 }, { 19.0 }, { 20.0 } }, { { 21.0 }, { 22.0 }, { 23.0 } } } } });
    double v1(24.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
