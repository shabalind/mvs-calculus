  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
    var p4: [[Float]]
  } in
  let f55: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p2 in
    let v6: [[Float]] = v0.p0 in
    let v15: [[Float]] = v0.p4 in
    var v8: s0 = v0 in
    v8.p2 = v15 in
    let v5: [[Float]] = v8.p0 in
    v8.p2 = v5 in
    v8.p4 = v4 in
    let v12: [[Float]] = v8.p3 in
    let v21: [[Float]] = v0.p3 in
    v8.p1 = v12 in
    v8.p2 = v6 in
    v8.p2 = v15 in
    let v24: [[Float]] = v8.p3 in
    var v25: [[Float]] = v21 in
    let v29: [[Float]] = v8.p4 in
    v8.p1 = v25 in
    let v23: [[Float]] = v8.p2 in
    let v38: [[Float]] = v0.p4 in
    let v56: s0 = s0(v4, v12, v23, v24, v29) in
    v8.p2 = v38 in
    let v73: [Float] = v5[2] in
    v25[0] = v73 in
    v56
  } in
  let f52: (s0, [[s0]]) -> s0 = (v0: s0, v1: [[s0]]) -> s0 {
    let v2: [[Float]] = v0.p2 in
    let v3: s0 = f55(v0) in
    let v7: s0 = f55(v3) in
    var v8: s0 = v3 in
    let v16: [[Float]] = v7.p2 in
    let v9: s0 = f55(v7) in
    v8.p0 = v2 in
    var v11: [[Float]] = v2 in
    v8.p0 = v16 in
    let v30: s0 = f55(v8) in
    let v15: [[Float]] = v30.p3 in
    let v18: s0 = f55(v9) in
    var v12: [[Float]] = v15 in
    let v17: [[Float]] = v9.p2 in
    v8.p4 = v16 in
    let v29: [Float] = v16[1] in
    let v19: [[Float]] = v3.p0 in
    v8.p1 = v15 in
    var v20: [[Float]] = v16 in
    let v36: s0 = f55(v18) in
    let v22: [[Float]] = v36.p1 in
    let v67: s0 = f55(v18) in
    let v35: [[Float]] = v30.p2 in
    v8.p2 = v20 in
    var v26: [[Float]] = v12 in
    var v40: [[Float]] = v35 in
    let v38: s0 = f55(v67) in
    v40[1] = v29 in
    v40[1] = v29 in
    let v41: s0 = s0(v19, v22, v40, v26, v17) in
    v8.p0 = v20 in
    var v34: s0 = v41 in
    v8 = v38 in
    v34.p0 = v2 in
    var v91: s0 = v34 in
    let v96: [Float] = v40[0] in
    v11[2] = v96 in
    v91.p0 = v11 in
    v91
  } in
  let f40: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v3: [[Float]] = v0.p3 in
    var v5: s0 = v1 in
    let v2: s0 = f55(v5) in
    v5.p3 = v3 in
    let v7: [[Float]] = v1.p3 in
    let v21: [[[Float]]] = [v3, v7, v3, v7, v3, v7] in
    let v12: [[Float]] = v5.p1 in
    let v10: [[Float]] = v5.p4 in
    let v14: [[Float]] = v5.p4 in
    v5.p3 = v12 in
    let v16: s0 = f55(v2) in
    let v24: [[Float]] = v21[2] in
    v5.p0 = v14 in
    v5.p2 = v10 in
    v5 = v16 in
    v5.p1 = v24 in
    v5.p1 = v7 in
    var v139: s0 = v16 in
    v139
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v2: [s0] = v0[0] in
    let v7: s0 = v2[0] in
    let v6: s0 = f52(v7, v0) in
    let v13: s0 = f40(v7, v6) in
    let v14: [[Float]] = v13.p2 in
    let v19: [Float] = v14[0] in
    var v23: [Float] = v19 in
    let v54: Float = v23[0] in
    v54
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0], [2.0]], [[3.0]], [[4.0], [5.0], [6.0]], [[7.0]], [[8.0], [9.0], [10.0]])]] in
    let v1: Float = 11.0 in
    let initialResult: Float = 11.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()