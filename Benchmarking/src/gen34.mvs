  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s0
  } in
  let f15: (s2) -> s2 = (v0: s2) -> s2 {
    var v4: s2 = v0 in
    let v2: s0 = v0.p1 in
    var v3: s2 = v4 in
    let v7: [[Float]] = v2.p0 in
    let v6: s0 = s0(v7, v7) in
    let v9: [s2] = [v4, v3, v4, v0] in
    let v11: s2 = v9[2] in
    let v1: s0 = v4.p1 in
    var v14: [s2] = v9 in
    var v19: [s2] = v14 in
    var v20: [s2] = v19 in
    var v12: s0 = v6 in
    v4.p1 = v6 in
    let v13: s2 = v14[0] in
    v4.p1 = v12 in
    var v27: s2 = v11 in
    var v21: [[Float]] = v7 in
    v4.p1 = v1 in
    v19[3] = v0 in
    var v22: s2 = v3 in
    let v48: s2 = v19[0] in
    v12.p1 = v21 in
    let v33: s0 = v22.p1 in
    var v26: [s2] = v20 in
    let v23: [[Float]] = v6.p1 in
    let v49: [Float] = v21[0] in
    var v28: s2 = v13 in
    let v44: [s1] = v4.p0 in
    var v29: [s1] = v44 in
    v26[0] = v48 in
    v28.p1 = v33 in
    v26 = v20 in
    v21[0] = v49 in
    let v30: [[Float]] = v2.p1 in
    v12.p0 = v21 in
    let v65: s0 = v27.p1 in
    let v43: s0 = v28.p1 in
    let v90: [[Float]] = v43.p1 in
    let v68: s2 = v26[0] in
    let v45: s2 = v9[1] in
    v26[3] = v68 in
    v22.p0 = v29 in
    v12.p1 = v30 in
    v14[2] = v45 in
    var v75: [[Float]] = v23 in
    v4.p1 = v65 in
    v12.p1 = v75 in
    v12.p0 = v90 in
    v26 = v9 in
    v68
  } in
  let f9: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: [[s0]] = v0.p0 in
    let v1: [s0] = v2[1] in
    let v10: [s0] = v2[1] in
    let v3: s0 = v1[0] in
    var v6: s1 = v0 in
    let v19: s0 = v0.p1 in
    var v24: s1 = v6 in
    v24.p1 = v19 in
    v24.p1 = v19 in
    let v26: s0 = v24.p1 in
    let v18: [s1] = [v0, v24, v6, v6, v24, v0] in
    let v25: [[s0]] = v6.p0 in
    let v40: [[s0]] = v6.p0 in
    var v39: [[s0]] = v25 in
    let v73: s1 = v18[0] in
    v6.p0 = v40 in
    let v43: s1 = v18[2] in
    let v77: s1 = v18[4] in
    var v51: [s1] = v18 in
    v39[0] = v10 in
    v24.p1 = v26 in
    let v48: s0 = v43.p1 in
    let v91: [[s0]] = v24.p0 in
    v24.p1 = v19 in
    v6.p0 = v39 in
    let v41: s1 = v51[3] in
    v6.p1 = v48 in
    v6.p1 = v26 in
    let v74: [[s0]] = v73.p0 in
    v6.p0 = v74 in
    v24.p0 = v2 in
    v6.p1 = v3 in
    v6.p0 = v91 in
    v51[4] = v77 in
    v41
  } in
  let f8: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v3: [s1] = v0 in
    var v8: [s1] = v3 in
    let v7: s1 = v3[0] in
    var v2: [s1] = v8 in
    v3[0] = v7 in
    let v11: s1 = f9(v7) in
    let v15: s1 = v8[0] in
    v8[0] = v11 in
    v8 = v0 in
    v2[0] = v15 in
    v2[0] = v11 in
    v2
  } in
  let f5: (s2) -> s2 = (v0: s2) -> s2 {
    var v1: s2 = v0 in
    let v3: [s1] = v0.p0 in
    let v7: s2 = f15(v0) in
    var v10: s2 = v0 in
    v10 = v1 in
    v1 = v7 in
    v1 = v0 in
    var v29: s2 = v1 in
    let v12: s2 = f15(v10) in
    var v36: s2 = v29 in
    let v33: [s1] = f8(v3) in
    v10.p0 = v3 in
    let v40: s2 = f15(v12) in
    v10.p0 = v33 in
    v1 = v36 in
    v40
  } in
  let noinline_f0: ([s2], s2, Float) -> Float = (v0: [s2], v1: s2, v2: Float) -> Float {
    let v3: s2 = v0[0] in
    let v7: [s1] = v1.p0 in
    var v6: s2 = v3 in
    let v11: s0 = v6.p1 in
    let v5: s2 = f5(v3) in
    v6 = v5 in
    let v18: [[Float]] = v11.p1 in
    var v20: [s1] = v7 in
    let v24: s1 = v20[0] in
    let v14: [Float] = v18[1] in
    let v44: s0 = v24.p1 in
    var v25: [s1] = v7 in
    let v40: s1 = v20[0] in
    v25[0] = v40 in
    let v95: s1 = v20[0] in
    let v84: s1 = f9(v95) in
    v20[0] = v84 in
    v6.p0 = v25 in
    let v122: Float = v14[0] in
    v6.p1 = v44 in
    v122
  } in
  fun loop(i: Int, v0: [s2], v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([s1([[s0([[0.0], [1.0]], [[2.0], [3.0]])], [s0([[4.0], [5.0]], [[6.0], [7.0]])]], s0([[8.0], [9.0]], [[10.0], [11.0]]))], s0([[12.0], [13.0]], [[14.0], [15.0]]))] in
    let v1: s2 = s2([s1([[s0([[16.0], [17.0]], [[18.0], [19.0]])], [s0([[20.0], [21.0]], [[22.0], [23.0]])]], s0([[24.0], [25.0]], [[26.0], [27.0]]))], s0([[28.0], [29.0]], [[30.0], [31.0]])) in
    let v2: Float = 32.0 in
    let initialResult: Float = 32.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()