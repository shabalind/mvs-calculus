  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  struct s7 {
    var p0: s1
    var p1: [s2]
  } in
  struct s8 {
    var p0: s0
    var p1: s2
    var p2: [[s7]]
    var p3: [[s0]]
    var p4: [s7]
  } in
  let f60: (s2) -> s2 = (v0: s2) -> s2 {
    let v4: s0 = v0.p1 in
    var v1: s0 = v4 in
    var v7: s2 = v0 in
    v7.p0 = v1 in
    var v3: s0 = v1 in
    let v6: s0 = v0.p1 in
    var v10: s2 = v7 in
    v10.p0 = v3 in
    let v9: s0 = v10.p0 in
    let v14: s0 = v7.p1 in
    var v17: s2 = v0 in
    v10.p0 = v4 in
    let v2: s0 = v7.p1 in
    let v20: s0 = v10.p1 in
    var v16: s0 = v9 in
    let v23: s0 = v7.p0 in
    let v30: s0 = v17.p0 in
    v7.p0 = v23 in
    let v12: [[Float]] = v3.p1 in
    let v35: s0 = v7.p0 in
    v10.p0 = v30 in
    let v28: [[Float]] = v2.p1 in
    v17.p1 = v6 in
    var v18: s0 = v16 in
    v18.p1 = v12 in
    v10 = v17 in
    let v80: s0 = v17.p0 in
    var v52: s0 = v30 in
    v7.p0 = v35 in
    let v64: s2 = s2(v4, v80) in
    var v31: s2 = v64 in
    v1.p1 = v28 in
    let v44: [[Float]] = v52.p0 in
    v17.p1 = v52 in
    v10.p0 = v23 in
    v3.p0 = v44 in
    v52 = v35 in
    v7.p0 = v16 in
    v10.p0 = v20 in
    v10.p0 = v18 in
    v3 = v16 in
    v7.p1 = v14 in
    let v271: [[Float]] = v52.p0 in
    v16.p0 = v271 in
    v31
  } in
  let f31: (s2) -> s2 = (v0: s2) -> s2 {
    let v1: s2 = f60(v0) in
    let v7: s2 = f60(v0) in
    let v14: s2 = f60(v1) in
    let v18: [s2] = [v1, v7, v14] in
    let v29: s2 = v18[1] in
    v29
  } in
  let f28: (s2) -> s2 = (v0: s2) -> s2 {
    var v5: s2 = v0 in
    var v3: s2 = v5 in
    var v32: s2 = v3 in
    let v73: s2 = f31(v32) in
    v73
  } in
  let f1: (s8) -> s8 = (v0: s8) -> s8 {
    var v2: s8 = v0 in
    let v6: s2 = v0.p1 in
    var v4: s8 = v2 in
    v2.p1 = v6 in
    let v8: s2 = f31(v6) in
    v2.p1 = v8 in
    v4.p1 = v8 in
    var v9: s8 = v4 in
    var v10: s8 = v4 in
    let v16: s2 = f28(v6) in
    var v30: s8 = v4 in
    var v12: s2 = v16 in
    v30 = v0 in
    v30 = v10 in
    let v61: s0 = v6.p1 in
    let v53: [[s7]] = v9.p2 in
    v30.p1 = v12 in
    v30.p2 = v53 in
    v30.p2 = v53 in
    v2.p0 = v61 in
    v30
  } in
  let noinline_f0: (s8, Float) -> Float = (v0: s8, v1: Float) -> Float {
    let v7: s8 = f1(v0) in
    let v6: [s7] = v7.p4 in
    let v11: s7 = v6[1] in
    let v18: [s2] = v11.p1 in
    let v17: s2 = v18[0] in
    var v34: s2 = v17 in
    let v26: s2 = f28(v34) in
    let v43: s0 = v26.p1 in
    let v45: [[Float]] = v43.p0 in
    var v46: [[Float]] = v45 in
    let v56: [Float] = v46[1] in
    v46 = v45 in
    v46[0] = v56 in
    let v96: Float = v56[0] in
    v96
  } in
  fun loop(i: Int, v0: s8, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s8 = s8(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s2(s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]), s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])), [[s7(s1([[s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]])]], [s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])]), [s2(s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]])), s2(s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]]))])]], [[s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]])], [s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]])], [s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]])]], [s7(s1([[s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]])]], [s0([[65.0], [66.0]], [[67.0], [68.0], [69.0]])]), [s2(s0([[70.0], [71.0]], [[72.0], [73.0], [74.0]]), s0([[75.0], [76.0]], [[77.0], [78.0], [79.0]])), s2(s0([[80.0], [81.0]], [[82.0], [83.0], [84.0]]), s0([[85.0], [86.0]], [[87.0], [88.0], [89.0]]))]), s7(s1([[s0([[90.0], [91.0]], [[92.0], [93.0], [94.0]])]], [s0([[95.0], [96.0]], [[97.0], [98.0], [99.0]])]), [s2(s0([[100.0], [101.0]], [[102.0], [103.0], [104.0]]), s0([[105.0], [106.0]], [[107.0], [108.0], [109.0]])), s2(s0([[110.0], [111.0]], [[112.0], [113.0], [114.0]]), s0([[115.0], [116.0]], [[117.0], [118.0], [119.0]]))])]) in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()