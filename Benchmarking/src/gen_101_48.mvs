  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s3 {
    var p0: s1
    var p1: s2
    var p2: [s0]
  } in
  struct s4 {
    var p0: [s3]
    var p1: s1
  } in
  struct s7 {
    var p0: [Float]
    var p1: s2
  } in
  let f110: (Float) -> Float = (v0: Float) -> Float {
    let v6: Float = v0 - v0 in
    var v2: Float = v0 in
    var v8: Float = v2 in
    var v7: Float = v6 in
    v7 = v8 in
    let v14: [Float] = [v7] in
    let v32: [[Float]] = [v14, v14, v14, v14, v14, v14, v14] in
    let v43: [Float] = v32[4] in
    var v36: [Float] = v43 in
    let v35: Float = v36[0] in
    v35
  } in
  let f83: (s7) -> s7 = (v0: s7) -> s7 {
    let v3: s2 = v0.p1 in
    let v1: [s0] = v3.p0 in
    let v4: s0 = v1[1] in
    let v10: [[Float]] = v4.p0 in
    let v36: [Float] = v0.p0 in
    let v35: [Float] = v10[1] in
    let v32: Float = v35[0] in
    var v48: [Float] = v36 in
    v48[1] = v32 in
    let v130: s7 = s7(v48, v3) in
    v130
  } in
  let f80: (s7) -> s7 = (v0: s7) -> s7 {
    let v2: s2 = v0.p1 in
    var v3: s7 = v0 in
    let v5: s7 = f83(v3) in
    let v19: s7 = f83(v3) in
    let v30: [Float] = v5.p0 in
    let v41: s7 = f83(v19) in
    var v57: [Float] = v30 in
    let v25: Float = v57[0] in
    v3.p0 = v57 in
    v57[0] = v25 in
    var v46: [Float] = v30 in
    let v31: [Float] = v41.p0 in
    let v158: [[Float]] = [v30, v31, v46, v31, v57, v31, v30] in
    let v54: [Float] = v158[1] in
    let v173: s7 = s7(v54, v2) in
    var v143: s7 = v173 in
    v143
  } in
  let f70: (s7) -> s7 = (v0: s7) -> s7 {
    let v4: s2 = v0.p1 in
    let v3: s7 = f80(v0) in
    let v5: s7 = f83(v0) in
    let v29: s2 = v5.p1 in
    let v23: s2 = v5.p1 in
    let v16: [s0] = v23.p0 in
    var v25: s7 = v3 in
    let v21: [s0] = v23.p1 in
    let v13: s2 = v0.p1 in
    let v17: s0 = v16[0] in
    v25.p1 = v4 in
    let v26: s2 = s2(v21, v21) in
    var v27: [s0] = v16 in
    let v34: [s0] = v26.p1 in
    v25.p1 = v29 in
    let v61: s2 = v25.p1 in
    let v78: [s0] = v61.p0 in
    let v74: s0 = v34[0] in
    let v43: s2 = s2(v27, v78) in
    v27[0] = v17 in
    v27[1] = v74 in
    var v98: s7 = v3 in
    v25.p1 = v29 in
    let v118: s0 = v34[1] in
    var v82: s0 = v118 in
    v25 = v98 in
    var v107: s7 = v5 in
    v107.p1 = v43 in
    v25.p1 = v13 in
    v27[0] = v82 in
    v25.p1 = v23 in
    let v187: [[Float]] = v17.p0 in
    v82.p0 = v187 in
    v107
  } in
  let noinline_f0: (s4, s7, Float) -> Float = (v0: s4, v1: s7, v2: Float) -> Float {
    let v3: s7 = f70(v1) in
    let v8: [Float] = v3.p0 in
    let v4: Float = v8[0] in
    let v12: Float = v4 / v2 in
    let v18: s2 = v1.p1 in
    var v61: s2 = v18 in
    let v24: [s0] = v61.p0 in
    let v17: s0 = v24[0] in
    var v50: Float = v4 in
    let v73: [[Float]] = v17.p0 in
    let v78: [Float] = v73[2] in
    let v62: Float = v78[0] in
    let v74: Float = v12 - v50 in
    v50 = v62 in
    let v96: Float = v2 - v74 in
    let v271: Float = f110(v96) in
    v271
  } in
  fun loop(i: Int, v0: s4, v1: s7, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4([s3(s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), [s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]), s2([s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]])], [s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]]), s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])]), [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])]), s3(s1(s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]]), [s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]]), s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])]), s2([s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]]), s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]])], [s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]]), s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]])]), [s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]])])], s1(s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]]), [s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]]), s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]])])) in
    let v1: s7 = s7([132.0, 133.0], s2([s0([[134.0], [135.0], [136.0]], [[137.0], [138.0], [139.0]]), s0([[140.0], [141.0], [142.0]], [[143.0], [144.0], [145.0]])], [s0([[146.0], [147.0], [148.0]], [[149.0], [150.0], [151.0]]), s0([[152.0], [153.0], [154.0]], [[155.0], [156.0], [157.0]])])) in
    let v2: Float = 158.0 in
    let initialResult: Float = 158.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()