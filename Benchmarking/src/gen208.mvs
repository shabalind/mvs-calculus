  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s3 {
    var p0: [s0]
    var p1: s1
  } in
  let f84: (s3) -> s3 = (v0: s3) -> s3 {
    var v5: s3 = v0 in
    let v4: s1 = v0.p1 in
    var v8: s1 = v4 in
    var v7: s3 = v5 in
    var v3: s3 = v0 in
    let v9: s0 = v8.p1 in
    v3.p1 = v4 in
    let v11: [[Float]] = v9.p0 in
    var v10: s1 = v4 in
    var v14: s0 = v9 in
    let v13: s0 = v8.p0 in
    let v21: [[Float]] = v14.p1 in
    var v12: s3 = v0 in
    v10.p1 = v9 in
    v8.p0 = v14 in
    v3 = v7 in
    var v19: s3 = v7 in
    v14.p0 = v11 in
    var v24: s1 = v4 in
    v8.p1 = v13 in
    let v36: [[Float]] = v9.p0 in
    var v25: s0 = v9 in
    let v17: s1 = v12.p1 in
    let v56: s1 = s1(v25, v13) in
    let v34: s0 = s0(v11, v21) in
    v25.p0 = v11 in
    var v64: s3 = v12 in
    v64.p1 = v4 in
    v10.p0 = v13 in
    v5.p1 = v56 in
    v14.p0 = v36 in
    v25.p1 = v21 in
    v7 = v3 in
    let v85: [s0] = v12.p0 in
    v19.p1 = v10 in
    v3.p0 = v85 in
    let v118: [s0] = v64.p0 in
    let v97: s1 = v3.p1 in
    v7.p1 = v24 in
    v7.p1 = v97 in
    let v179: s0 = v17.p0 in
    v19 = v0 in
    v8.p0 = v25 in
    v24.p0 = v34 in
    v12.p0 = v118 in
    v24.p0 = v179 in
    v19
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    let v2: s3 = f84(v0) in
    let v26: [s0] = v2.p0 in
    let v19: s0 = v26[1] in
    let v50: [[Float]] = v19.p0 in
    let v78: [Float] = v50[2] in
    let v112: Float = v78[0] in
    v112
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]]), s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])], s1(s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]]))) in
    let v1: Float = 25.0 in
    let initialResult: Float = 25.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()