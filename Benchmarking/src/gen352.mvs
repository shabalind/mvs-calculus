  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s0
  } in
  struct s3 {
    var p0: [[s2]]
    var p1: [[s0]]
  } in
  let f83: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v7: Float = v0 in
    var v3: Float = v0 in
    let v4: [Float] = [v3, v0, v7, v3, v1, v3, v0] in
    let v6: Float = v4[6] in
    let v2: Float = v4[1] in
    let v11: Float = v6 / v2 in
    let v8: Float = v4[0] in
    v3 = v1 in
    let v10: Float = v4[1] in
    var v13: [Float] = v4 in
    var v19: [Float] = v4 in
    v13[4] = v8 in
    v19[1] = v11 in
    v19[6] = v11 in
    let v51: Float = v19[4] in
    let v35: Float = v13[1] in
    v19[6] = v1 in
    var v33: Float = v6 in
    v19[1] = v6 in
    v19[5] = v1 in
    var v62: Float = v10 in
    v19[2] = v62 in
    let v61: [Float] = [v33, v0, v51] in
    var v50: [Float] = v61 in
    var v37: [Float] = v50 in
    v19[6] = v35 in
    var v69: [Float] = v37 in
    let v88: Float = v69[2] in
    v88
  } in
  let f60: (Float) -> Float = (v0: Float) -> Float {
    let v7: Float = f83(v0) in
    let v3: Float = f83(v7) in
    let v1: Float = f83(v0) in
    let v12: Float = f83(v0) in
    let v4: Float = f83(v3) in
    let v8: Float = f83(v7) in
    let v6: Float = f83(v8) in
    let v5: Float = f83(v3) in
    let v19: Float = v12 + v8 in
    var v11: Float = v5 in
    var v22: Float = v1 in
    let v21: Float = f83(v22) in
    var v37: Float = v11 in
    let v61: [Float] = [v37] in
    let v30: Float = v61[0] in
    let v73: Float = f83(v0) in
    let v29: Float = f83(v73) in
    var v79: Float = v4 in
    var v55: [Float] = v61 in
    var v58: [Float] = v55 in
    v58[0] = v37 in
    v58[0] = v6 in
    var v51: [Float] = v58 in
    v58[0] = v29 in
    v58[0] = v19 in
    var v78: [Float] = v51 in
    v78[0] = v21 in
    v58[0] = v79 in
    v78[0] = v73 in
    let v70: [[Float]] = [v61, v78] in
    var v99: [[Float]] = v70 in
    let v173: [Float] = v99[0] in
    let v140: Float = v173[0] in
    v51[0] = v30 in
    v140
  } in
  let noinline_f0: (s3, s3, s0, [s3], [[s0]], Float) -> Float = (v0: s3, v1: s3, v2: s0, v3: [s3], v4: [[s0]], v5: Float) -> Float {
    var v6: s0 = v2 in
    let v13: [[Float]] = v6.p0 in
    var v20: [[Float]] = v13 in
    let v23: [Float] = v20[0] in
    let v24: Float = v23[0] in
    let v27: Float = v23[0] in
    v20[0] = v23 in
    let v80: Float = v5 + v24 in
    let v76: Float = v80 - v27 in
    let v376: Float = f60(v76) in
    v376
  } in
  fun loop(i: Int, v0: s3, v1: s3, v2: s0, v3: [s3], v4: [[s0]], v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([[s2([s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])), s1(s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]), s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]])), s1(s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]]), s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]))], s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]]))]], [[s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])], [s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]])], [s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]])]]) in
    let v1: s3 = s3([[s2([s1(s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]]), s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]])), s1(s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]]), s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]])), s1(s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]]), s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]]))], s0([[80.0], [81.0], [82.0]], [[83.0], [84.0]]))]], [[s0([[85.0], [86.0], [87.0]], [[88.0], [89.0]])], [s0([[90.0], [91.0], [92.0]], [[93.0], [94.0]])], [s0([[95.0], [96.0], [97.0]], [[98.0], [99.0]])]]) in
    let v2: s0 = s0([[100.0], [101.0], [102.0]], [[103.0], [104.0]]) in
    let v3: [s3] = [s3([[s2([s1(s0([[105.0], [106.0], [107.0]], [[108.0], [109.0]]), s0([[110.0], [111.0], [112.0]], [[113.0], [114.0]])), s1(s0([[115.0], [116.0], [117.0]], [[118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0]])), s1(s0([[125.0], [126.0], [127.0]], [[128.0], [129.0]]), s0([[130.0], [131.0], [132.0]], [[133.0], [134.0]]))], s0([[135.0], [136.0], [137.0]], [[138.0], [139.0]]))]], [[s0([[140.0], [141.0], [142.0]], [[143.0], [144.0]])], [s0([[145.0], [146.0], [147.0]], [[148.0], [149.0]])], [s0([[150.0], [151.0], [152.0]], [[153.0], [154.0]])]])] in
    let v4: [[s0]] = [[s0([[155.0], [156.0], [157.0]], [[158.0], [159.0]])], [s0([[160.0], [161.0], [162.0]], [[163.0], [164.0]])], [s0([[165.0], [166.0], [167.0]], [[168.0], [169.0]])]] in
    let v5: Float = 170.0 in
    let initialResult: Float = 170.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()