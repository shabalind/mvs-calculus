  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  let f66: (Float) -> Float = (v0: Float) -> Float {
    var v5: Float = v0 in
    var v6: Float = v0 in
    var v7: Float = v6 in
    var v3: Float = v0 in
    var v9: Float = v0 in
    var v13: Float = v3 in
    var v8: Float = v9 in
    let v15: Float = v7 * v6 in
    var v4: Float = v15 in
    v5 = v4 in
    let v50: [Float] = [v5] in
    var v53: Float = v0 in
    var v23: Float = v13 in
    v13 = v8 in
    let v34: Float = v50[0] in
    let v28: [Float] = [v34, v7, v34, v23] in
    v53 = v5 in
    var v64: [Float] = v28 in
    v6 = v53 in
    let v74: Float = v64[1] in
    let v86: Float = v28[1] in
    v64[3] = v0 in
    let v51: [Float] = [v86, v74] in
    let v26: Float = v51[0] in
    var v56: [Float] = v51 in
    var v90: [Float] = v56 in
    var v92: [Float] = v90 in
    v92[0] = v3 in
    var v93: [Float] = v92 in
    v92[1] = v7 in
    v93 = v51 in
    var v147: Float = v26 in
    v93[0] = v147 in
    let v229: Float = v93[1] in
    v229
  } in
  let f11: (Float) -> Float = (v0: Float) -> Float {
    var v5: Float = v0 in
    var v2: Float = v0 in
    var v6: Float = v2 in
    var v4: Float = v5 in
    let v8: Float = f66(v0) in
    let v1: Float = f66(v8) in
    var v7: Float = v6 in
    let v3: Float = f66(v0) in
    let v10: Float = f66(v3) in
    var v18: Float = v7 in
    let v12: Float = f66(v6) in
    var v22: Float = v12 in
    let v14: [Float] = [v22, v0, v7, v7, v12, v22] in
    var v17: [Float] = v14 in
    var v28: Float = v18 in
    let v29: Float = v17[2] in
    let v42: Float = f66(v28) in
    let v25: Float = f66(v2) in
    v5 = v10 in
    var v30: [Float] = v17 in
    var v21: Float = v8 in
    let v36: Float = v17[5] in
    let v39: Float = v17[2] in
    v30[2] = v29 in
    v17[5] = v42 in
    var v49: Float = v28 in
    let v117: Float = v30[0] in
    let v101: Float = f66(v21) in
    let v40: Float = f66(v25) in
    let v54: Float = f66(v101) in
    let v71: [Float] = [v4, v3, v1, v54, v39, v36, v7] in
    var v64: [Float] = v71 in
    let v152: Float = f66(v54) in
    v64[6] = v117 in
    v17[2] = v22 in
    let v111: Float = v64[2] in
    v30[2] = v152 in
    let v157: Float = v40 / v111 in
    v5 = v49 in
    v157
  } in
  let noinline_f0: (s2, [s2], Float) -> Float = (v0: s2, v1: [s2], v2: Float) -> Float {
    let v3: s0 = v0.p0 in
    let v6: [[Float]] = v3.p0 in
    let v11: Float = f11(v2) in
    let v37: Float = f11(v2) in
    let v18: [Float] = v6[0] in
    var v33: [Float] = v18 in
    let v9: Float = f66(v37) in
    v33[0] = v11 in
    let v26: Float = f11(v9) in
    let v54: Float = f11(v26) in
    let v49: Float = f66(v37) in
    let v32: Float = v9 * v54 in
    let v122: Float = f66(v32) in
    let v86: Float = v33[0] in
    let v127: Float = f66(v49) in
    let v149: Float = v86 * v122 in
    v33[0] = v127 in
    v149
  } in
  fun loop(i: Int, v0: s2, v1: [s2], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0], [1.0]], [[2.0], [3.0]]), s0([[4.0], [5.0]], [[6.0], [7.0]])) in
    let v1: [s2] = [s2(s0([[8.0], [9.0]], [[10.0], [11.0]]), s0([[12.0], [13.0]], [[14.0], [15.0]])), s2(s0([[16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0]], [[22.0], [23.0]])), s2(s0([[24.0], [25.0]], [[26.0], [27.0]]), s0([[28.0], [29.0]], [[30.0], [31.0]]))] in
    let v2: Float = 32.0 in
    let initialResult: Float = 32.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()