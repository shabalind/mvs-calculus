  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  let f33: (Float) -> Float = (v0: Float) -> Float {
    let v1: Float = v0 / v0 in
    var v5: Float = v1 in
    var v4: Float = v1 in
    var v3: Float = v0 in
    v3 = v4 in
    var v10: Float = v1 in
    var v6: Float = v10 in
    v6 = v0 in
    var v8: Float = v5 in
    var v2: Float = v10 in
    var v7: Float = v2 in
    var v9: Float = v5 in
    var v11: Float = v0 in
    var v13: Float = v3 in
    var v18: Float = v13 in
    var v15: Float = v6 in
    var v25: Float = v18 in
    v3 = v9 in
    let v12: [Float] = [v3, v15, v3, v0, v9, v0, v10] in
    let v31: [Float] = [v15, v11, v10] in
    var v24: Float = v25 in
    var v30: [Float] = v31 in
    var v34: [Float] = v30 in
    var v41: [Float] = v12 in
    let v40: Float = v34[2] in
    let v16: [[Float]] = [v12, v41, v41, v12] in
    v41[2] = v40 in
    v34[2] = v18 in
    v10 = v7 in
    v30[1] = v10 in
    v7 = v9 in
    var v26: Float = v2 in
    v34[0] = v6 in
    v30[2] = v6 in
    let v48: Float = v34[1] in
    v34[2] = v0 in
    let v33: Float = v31[1] in
    v30[2] = v33 in
    var v67: [[Float]] = v16 in
    v41[0] = v8 in
    var v49: [[Float]] = v67 in
    var v57: [[Float]] = v49 in
    let v75: [Float] = v57[3] in
    let v32: Float = v75[0] in
    v34[1] = v24 in
    v15 = v26 in
    var v52: Float = v11 in
    v30[1] = v48 in
    v34[2] = v52 in
    var v62: Float = v32 in
    v62
  } in
  let noinline_f0: (s1, s1, Float) -> Float = (v0: s1, v1: s1, v2: Float) -> Float {
    let v7: Float = f33(v2) in
    let v8: [s0] = v1.p0 in
    let v16: Float = v7 / v7 in
    let v18: s0 = v8[0] in
    let v21: [[Float]] = v18.p0 in
    let v38: Float = f33(v2) in
    var v35: Float = v38 in
    v35 = v16 in
    let v96: Float = f33(v7) in
    var v50: Float = v16 in
    let v40: [Float] = v21[1] in
    var v73: [Float] = v40 in
    v73[0] = v35 in
    v73[0] = v50 in
    v73[0] = v96 in
    let v161: Float = v73[0] in
    v161
  } in
  fun loop(i: Int, v0: s1, v1: s1, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]])], s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])) in
    let v1: s1 = s1([s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])) in
    let v2: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()