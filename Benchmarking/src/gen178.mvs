  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s4 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  let f11: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p0 in
    let v7: [[Float]] = v0.p0 in
    let v8: [[Float]] = v0.p0 in
    let v5: [[[Float]]] = [v6, v8, v7, v7, v8, v7, v7] in
    var v1: [[[Float]]] = v5 in
    var v11: [[[Float]]] = v5 in
    let v12: [[Float]] = v11[3] in
    let v25: [[Float]] = v0.p1 in
    let v17: [[Float]] = v0.p0 in
    var v32: s0 = v0 in
    v32.p1 = v17 in
    var v26: [[[Float]]] = v5 in
    v11[6] = v25 in
    var v72: [[[Float]]] = v1 in
    v72[5] = v8 in
    v32.p1 = v8 in
    v32.p1 = v7 in
    let v24: [[Float]] = v32.p1 in
    let v29: [[Float]] = v32.p1 in
    v32.p1 = v17 in
    let v27: [[Float]] = v0.p0 in
    let v34: s0 = s0(v29, v25) in
    v32.p1 = v12 in
    let v68: s0 = s0(v29, v27) in
    v32.p1 = v24 in
    v1[1] = v17 in
    v1 = v26 in
    let v36: [s0] = [v68, v34, v32, v32] in
    let v51: [[Float]] = v0.p1 in
    v1[4] = v8 in
    v32.p1 = v51 in
    let v95: [[Float]] = v26[1] in
    v26[3] = v29 in
    v1[0] = v25 in
    let v54: s0 = v36[1] in
    v11 = v72 in
    v32.p0 = v95 in
    v54
  } in
  let f8: (s4) -> s4 = (v0: s4) -> s4 {
    var v6: s4 = v0 in
    let v7: [[s0]] = v0.p0 in
    v6 = v0 in
    var v5: [[s0]] = v7 in
    v6 = v0 in
    let v4: [s0] = v0.p1 in
    v6.p0 = v5 in
    let v2: [[s0]] = v0.p0 in
    let v1: [s0] = v0.p1 in
    v6.p1 = v4 in
    v5[0] = v1 in
    let v9: [[s0]] = v0.p0 in
    v6.p1 = v1 in
    var v8: s4 = v6 in
    let v13: s0 = v1[0] in
    let v10: s0 = v4[0] in
    var v11: [s0] = v4 in
    let v22: s0 = f11(v10) in
    let v14: s0 = f11(v22) in
    var v24: s4 = v0 in
    v6.p1 = v1 in
    let v19: [[s0]] = v0.p0 in
    var v29: [s0] = v1 in
    var v17: [[s0]] = v2 in
    v17[1] = v11 in
    let v25: [[s0]] = v0.p0 in
    let v31: [[s0]] = v24.p0 in
    let v42: s0 = f11(v13) in
    v6.p0 = v5 in
    let v18: s0 = f11(v42) in
    v29[0] = v14 in
    v24.p1 = v4 in
    let v32: [s0] = v9[0] in
    let v40: [s0] = v19[0] in
    let v34: s0 = f11(v13) in
    let v38: [s0] = v17[1] in
    v24.p1 = v38 in
    v11[0] = v18 in
    let v45: s2 = s2(v32, v11) in
    v24.p0 = v5 in
    let v111: [s0] = v19[1] in
    v24.p0 = v19 in
    var v92: s4 = v8 in
    v6.p0 = v2 in
    let v54: [s4] = [v6] in
    v24.p1 = v111 in
    v92.p1 = v4 in
    v6.p1 = v4 in
    v8.p1 = v38 in
    v92.p0 = v25 in
    var v112: [s4] = v54 in
    v112[0] = v24 in
    v24.p1 = v40 in
    v11[0] = v34 in
    let v129: s4 = v112[0] in
    v92.p0 = v31 in
    var v86: s2 = v45 in
    let v293: [s0] = v2[1] in
    v8.p1 = v29 in
    let v176: [s0] = v86.p0 in
    v17[0] = v293 in
    v5[1] = v29 in
    let v189: [s0] = v92.p1 in
    v17[1] = v176 in
    v6.p1 = v189 in
    v129
  } in
  let noinline_f0: ([s4], Float) -> Float = (v0: [s4], v1: Float) -> Float {
    let v4: s4 = v0[1] in
    let v14: s4 = f8(v4) in
    let v27: [s0] = v14.p1 in
    let v30: s0 = v27[0] in
    let v29: [[Float]] = v30.p1 in
    let v20: s0 = s0(v29, v29) in
    let v28: s0 = f11(v20) in
    let v75: [[Float]] = v28.p1 in
    let v278: [Float] = v75[0] in
    let v139: Float = v278[0] in
    v139
  } in
  fun loop(i: Int, v0: [s4], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s4] = [s4([[s0([[0.0]], [[1.0]])], [s0([[2.0]], [[3.0]])]], [s0([[4.0]], [[5.0]])]), s4([[s0([[6.0]], [[7.0]])], [s0([[8.0]], [[9.0]])]], [s0([[10.0]], [[11.0]])])] in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()