  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  }
  struct s2 {
    var p0: [[s1]]
    var p1: s0
  }
  struct s4 {
    var p0: s2
    var p1: [s0]
  }
  struct s6 {
    var p0: [s1]
    var p1: s4
  }
  @inline(never)
  func f0(_ v0: [s6], _ v1: Double, _ v2: [s6], _ v3: [[s1]]) -> Double {
    var v8: Double = v1
    var v13: Double = v8
    var v21: Double = v1
    let v22: Double = v21 - v13
    v21 = v8
    var v36: Double = v21
    let v79: Double = v36 - v22
    v36 = v1
    var v110: Double = v79
    let v168: Double = v110 / v36
    return v168
  }
  func benchmark() {
    let v0: [s6] = [s6(p0: [s1(p0: [[s0(p0: [[0.0], [1.0], [2.0]], p1: [[3.0], [4.0]])]], p1: [s0(p0: [[5.0], [6.0], [7.0]], p1: [[8.0], [9.0]])])], p1: s4(p0: s2(p0: [[s1(p0: [[s0(p0: [[10.0], [11.0], [12.0]], p1: [[13.0], [14.0]])]], p1: [s0(p0: [[15.0], [16.0], [17.0]], p1: [[18.0], [19.0]])])], [s1(p0: [[s0(p0: [[20.0], [21.0], [22.0]], p1: [[23.0], [24.0]])]], p1: [s0(p0: [[25.0], [26.0], [27.0]], p1: [[28.0], [29.0]])])]], p1: s0(p0: [[30.0], [31.0], [32.0]], p1: [[33.0], [34.0]])), p1: [s0(p0: [[35.0], [36.0], [37.0]], p1: [[38.0], [39.0]])])), s6(p0: [s1(p0: [[s0(p0: [[40.0], [41.0], [42.0]], p1: [[43.0], [44.0]])]], p1: [s0(p0: [[45.0], [46.0], [47.0]], p1: [[48.0], [49.0]])])], p1: s4(p0: s2(p0: [[s1(p0: [[s0(p0: [[50.0], [51.0], [52.0]], p1: [[53.0], [54.0]])]], p1: [s0(p0: [[55.0], [56.0], [57.0]], p1: [[58.0], [59.0]])])], [s1(p0: [[s0(p0: [[60.0], [61.0], [62.0]], p1: [[63.0], [64.0]])]], p1: [s0(p0: [[65.0], [66.0], [67.0]], p1: [[68.0], [69.0]])])]], p1: s0(p0: [[70.0], [71.0], [72.0]], p1: [[73.0], [74.0]])), p1: [s0(p0: [[75.0], [76.0], [77.0]], p1: [[78.0], [79.0]])]))]
    let v1: Double = 80.0
    let v2: [s6] = [s6(p0: [s1(p0: [[s0(p0: [[81.0], [82.0], [83.0]], p1: [[84.0], [85.0]])]], p1: [s0(p0: [[86.0], [87.0], [88.0]], p1: [[89.0], [90.0]])])], p1: s4(p0: s2(p0: [[s1(p0: [[s0(p0: [[91.0], [92.0], [93.0]], p1: [[94.0], [95.0]])]], p1: [s0(p0: [[96.0], [97.0], [98.0]], p1: [[99.0], [100.0]])])], [s1(p0: [[s0(p0: [[101.0], [102.0], [103.0]], p1: [[104.0], [105.0]])]], p1: [s0(p0: [[106.0], [107.0], [108.0]], p1: [[109.0], [110.0]])])]], p1: s0(p0: [[111.0], [112.0], [113.0]], p1: [[114.0], [115.0]])), p1: [s0(p0: [[116.0], [117.0], [118.0]], p1: [[119.0], [120.0]])])), s6(p0: [s1(p0: [[s0(p0: [[121.0], [122.0], [123.0]], p1: [[124.0], [125.0]])]], p1: [s0(p0: [[126.0], [127.0], [128.0]], p1: [[129.0], [130.0]])])], p1: s4(p0: s2(p0: [[s1(p0: [[s0(p0: [[131.0], [132.0], [133.0]], p1: [[134.0], [135.0]])]], p1: [s0(p0: [[136.0], [137.0], [138.0]], p1: [[139.0], [140.0]])])], [s1(p0: [[s0(p0: [[141.0], [142.0], [143.0]], p1: [[144.0], [145.0]])]], p1: [s0(p0: [[146.0], [147.0], [148.0]], p1: [[149.0], [150.0]])])]], p1: s0(p0: [[151.0], [152.0], [153.0]], p1: [[154.0], [155.0]])), p1: [s0(p0: [[156.0], [157.0], [158.0]], p1: [[159.0], [160.0]])])), s6(p0: [s1(p0: [[s0(p0: [[161.0], [162.0], [163.0]], p1: [[164.0], [165.0]])]], p1: [s0(p0: [[166.0], [167.0], [168.0]], p1: [[169.0], [170.0]])])], p1: s4(p0: s2(p0: [[s1(p0: [[s0(p0: [[171.0], [172.0], [173.0]], p1: [[174.0], [175.0]])]], p1: [s0(p0: [[176.0], [177.0], [178.0]], p1: [[179.0], [180.0]])])], [s1(p0: [[s0(p0: [[181.0], [182.0], [183.0]], p1: [[184.0], [185.0]])]], p1: [s0(p0: [[186.0], [187.0], [188.0]], p1: [[189.0], [190.0]])])]], p1: s0(p0: [[191.0], [192.0], [193.0]], p1: [[194.0], [195.0]])), p1: [s0(p0: [[196.0], [197.0], [198.0]], p1: [[199.0], [200.0]])]))]
    let v3: [[s1]] = [[s1(p0: [[s0(p0: [[201.0], [202.0], [203.0]], p1: [[204.0], [205.0]])]], p1: [s0(p0: [[206.0], [207.0], [208.0]], p1: [[209.0], [210.0]])])], [s1(p0: [[s0(p0: [[211.0], [212.0], [213.0]], p1: [[214.0], [215.0]])]], p1: [s0(p0: [[216.0], [217.0], [218.0]], p1: [[219.0], [220.0]])])]]
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = [[StructValue(Name(str='s1', ty=None), [[[StructValue(Name(str='s0', ty=None), [[[201.0], [202.0], [203.0]], [[204.0], [205.0]]])]], [StructValue(Name(str='s0', ty=None), [[[206.0], [207.0], [208.0]], [[209.0], [210.0]]])]])], [StructValue(Name(str='s1', ty=None), [[[StructValue(Name(str='s0', ty=None), [[[211.0], [212.0], [213.0]], [[214.0], [215.0]]])]], [StructValue(Name(str='s0', ty=None), [[[216.0], [217.0], [218.0]], [[219.0], [220.0]]])]])]]
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
