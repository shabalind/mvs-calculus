  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  let f2: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v9: Float = v1 in
    var v8: Float = v1 in
    var v2: Float = v0 in
    var v5: Float = v2 in
    let v19: Float = v1 * v9 in
    var v11: Float = v5 in
    var v32: Float = v19 in
    var v25: Float = v5 in
    let v20: Float = v25 - v25 in
    let v31: [Float] = [v9] in
    var v43: [Float] = v31 in
    v43[0] = v20 in
    v43[0] = v32 in
    v43[0] = v5 in
    v43[0] = v8 in
    v43[0] = v11 in
    var v39: [Float] = v43 in
    let v38: Float = v39[0] in
    v43[0] = v20 in
    var v42: Float = v38 in
    v43[0] = v5 in
    v39[0] = v25 in
    v39[0] = v25 in
    v42
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v3: [[Float]] = v0.p2 in
    let v5: [Float] = v3[1] in
    let v6: Float = v1 + v1 in
    let v2: Float = f2(v6) in
    let v9: [[Float]] = v0.p2 in
    var v7: [Float] = v5 in
    v7[0] = v1 in
    var v11: [Float] = v5 in
    v11[0] = v1 in
    v7[0] = v2 in
    let v20: Float = f2(v2) in
    let v17: [Float] = v9[0] in
    v11[0] = v20 in
    let v47: Float = f2(v6) in
    let v18: Float = v11[0] in
    let v30: Float = f2(v6) in
    let v26: Float = f2(v30) in
    let v52: Float = v17[0] in
    var v40: Float = v47 in
    v7[0] = v52 in
    let v15: Float = v40 * v26 in
    let v35: Float = f2(v18) in
    let v94: Float = f2(v30) in
    let v48: Float = f2(v18) in
    v11[0] = v35 in
    v11 = v7 in
    v7[0] = v15 in
    v11[0] = v94 in
    v48
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]], [[5.0], [6.0]]) in
    let v1: Float = 7.0 in
    let initialResult: Float = 7.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()