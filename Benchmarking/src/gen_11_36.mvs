  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
    var p2: [[s0]]
    var p3: [[s0]]
  } in
  struct s3 {
    var p0: s0
    var p1: s0
  } in
  struct s5 {
    var p0: s1
    var p1: [s3]
  } in
  let f94: (Float) -> Float = (v0: Float) -> Float {
    var v4: Float = v0 in
    var v1: Float = v0 in
    var v6: Float = v1 in
    var v7: Float = v1 in
    v7 = v1 in
    var v9: Float = v7 in
    var v3: Float = v1 in
    var v2: Float = v9 in
    var v5: Float = v4 in
    let v13: [Float] = [v9, v0, v4, v6] in
    let v17: [[Float]] = [v13, v13, v13] in
    v3 = v0 in
    let v10: [Float] = v17[0] in
    let v14: [Float] = v17[0] in
    var v18: [Float] = v14 in
    var v19: [Float] = v10 in
    let v35: Float = v18[2] in
    v19[0] = v3 in
    let v30: Float = v14[0] in
    let v41: [Float] = [v35, v2, v5] in
    v18[3] = v30 in
    let v32: Float = v19[2] in
    v7 = v32 in
    let v92: Float = v41[1] in
    v18[3] = v0 in
    v92
  } in
  let noinline_f0: (s0, s5, Float) -> Float = (v0: s0, v1: s5, v2: Float) -> Float {
    let v4: [[Float]] = v0.p0 in
    let v20: [Float] = v4[0] in
    let v61: Float = v20[0] in
    let v41: Float = v61 / v2 in
    let v76: Float = f94(v61) in
    let v39: Float = v76 - v41 in
    v39
  } in
  fun loop(i: Int, v0: s0, v1: s5, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [1.0, 2.0, 3.0]) in
    let v1: s5 = s5(s1(s0([[4.0]], [5.0, 6.0, 7.0]), [s0([[8.0]], [9.0, 10.0, 11.0]), s0([[12.0]], [13.0, 14.0, 15.0])], [[s0([[16.0]], [17.0, 18.0, 19.0])], [s0([[20.0]], [21.0, 22.0, 23.0])]], [[s0([[24.0]], [25.0, 26.0, 27.0])], [s0([[28.0]], [29.0, 30.0, 31.0])], [s0([[32.0]], [33.0, 34.0, 35.0])]]), [s3(s0([[36.0]], [37.0, 38.0, 39.0]), s0([[40.0]], [41.0, 42.0, 43.0])), s3(s0([[44.0]], [45.0, 46.0, 47.0]), s0([[48.0]], [49.0, 50.0, 51.0]))]) in
    let v2: Float = 52.0 in
    let initialResult: Float = 52.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()