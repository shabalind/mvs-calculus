  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s2 {
    var p0: [[s0]]
  } in
  struct s3 {
    var p0: [s1]
    var p1: s1
  } in
  struct s5 {
    var p0: s0
    var p1: s2
  } in
  struct s8 {
    var p0: [[s5]]
    var p1: s3
  } in
  let noinline_f0: ([s8], [s5], Float) -> Float = (v0: [s8], v1: [s5], v2: Float) -> Float {
    let v3: s5 = v1[2] in
    let v6: s0 = v3.p0 in
    let v8: Float = v2 - v2 in
    let v19: s5 = v1[2] in
    let v24: s0 = v19.p0 in
    var v39: s0 = v6 in
    let v30: [[Float]] = v6.p0 in
    v39.p0 = v30 in
    var v60: s0 = v24 in
    let v31: [[Float]] = v60.p1 in
    v39.p1 = v31 in
    let v66: [Float] = v31[0] in
    let v48: Float = v8 - v8 in
    v60.p0 = v30 in
    let v119: Float = v66[0] in
    let v143: Float = v119 - v48 in
    v60 = v39 in
    v143
  } in
  fun loop(i: Int, v0: [s8], v1: [s5], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s8] = [s8([[s5(s0([[0.0]], [[1.0], [2.0], [3.0]]), s2([[s0([[4.0]], [[5.0], [6.0], [7.0]])]]))]], s3([s1([s0([[8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0]], [[13.0], [14.0], [15.0]]), s0([[16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0]], [[21.0], [22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0], [27.0]])]), s1([s0([[28.0]], [[29.0], [30.0], [31.0]]), s0([[32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0]], [[37.0], [38.0], [39.0]])], [s0([[40.0]], [[41.0], [42.0], [43.0]]), s0([[44.0]], [[45.0], [46.0], [47.0]])])], s1([s0([[48.0]], [[49.0], [50.0], [51.0]]), s0([[52.0]], [[53.0], [54.0], [55.0]]), s0([[56.0]], [[57.0], [58.0], [59.0]])], [s0([[60.0]], [[61.0], [62.0], [63.0]]), s0([[64.0]], [[65.0], [66.0], [67.0]])])))] in
    let v1: [s5] = [s5(s0([[68.0]], [[69.0], [70.0], [71.0]]), s2([[s0([[72.0]], [[73.0], [74.0], [75.0]])]])), s5(s0([[76.0]], [[77.0], [78.0], [79.0]]), s2([[s0([[80.0]], [[81.0], [82.0], [83.0]])]])), s5(s0([[84.0]], [[85.0], [86.0], [87.0]]), s2([[s0([[88.0]], [[89.0], [90.0], [91.0]])]]))] in
    let v2: Float = 92.0 in
    let initialResult: Float = 92.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()