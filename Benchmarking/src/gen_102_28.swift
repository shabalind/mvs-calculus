  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
    var p2: [[Double]]
    var p3: [[Double]]
    var p4: [[Double]]
    var p5: [[Double]]
  }
  struct s1 {
    var p0: s0
    var p1: s0
  }
  struct s2 {
    var p0: [s0]
    var p1: [[s0]]
  }
  struct s3 {
    var p0: [s2]
    var p1: s0
  }
  struct s4 {
    var p0: [s3]
    var p1: [s1]
    var p2: [s0]
    var p3: [s2]
  }
  struct s5 {
    var p0: [s4]
    var p1: s2
    var p2: [[s3]]
  }
  struct s9 {
    var p0: s2
    var p1: [[s5]]
  }
  func f45(_ v0: Double) -> Double {
    var v1: Double = v0
    var v8: Double = v1
    var v4: Double = v8
    return v4
  }
  @inline(never)
  func f0(_ v0: s0, _ v1: [[s9]], _ v2: s5, _ v3: Double) -> Double {
    var v4: Double = v3
    let v10: Double = f45(v4)
    let v9: Double = f45(v10)
    let v70: Double = f45(v9)
    return v70
  }
  func benchmark() {
    let v0: s0 = s0(p0: [[0.0], [1.0], [2.0]], p1: [[3.0]], p2: [[4.0]], p3: [[5.0], [6.0]], p4: [[7.0], [8.0]], p5: [[9.0]])
    let v1: [[s9]] = [[s9(p0: s2(p0: [s0(p0: [[10.0], [11.0], [12.0]], p1: [[13.0]], p2: [[14.0]], p3: [[15.0], [16.0]], p4: [[17.0], [18.0]], p5: [[19.0]]), s0(p0: [[20.0], [21.0], [22.0]], p1: [[23.0]], p2: [[24.0]], p3: [[25.0], [26.0]], p4: [[27.0], [28.0]], p5: [[29.0]]), s0(p0: [[30.0], [31.0], [32.0]], p1: [[33.0]], p2: [[34.0]], p3: [[35.0], [36.0]], p4: [[37.0], [38.0]], p5: [[39.0]])], p1: [[s0(p0: [[40.0], [41.0], [42.0]], p1: [[43.0]], p2: [[44.0]], p3: [[45.0], [46.0]], p4: [[47.0], [48.0]], p5: [[49.0]])], [s0(p0: [[50.0], [51.0], [52.0]], p1: [[53.0]], p2: [[54.0]], p3: [[55.0], [56.0]], p4: [[57.0], [58.0]], p5: [[59.0]])], [s0(p0: [[60.0], [61.0], [62.0]], p1: [[63.0]], p2: [[64.0]], p3: [[65.0], [66.0]], p4: [[67.0], [68.0]], p5: [[69.0]])]]), p1: [[s5(p0: [s4(p0: [s3(p0: [s2(p0: [s0(p0: [[70.0], [71.0], [72.0]], p1: [[73.0]], p2: [[74.0]], p3: [[75.0], [76.0]], p4: [[77.0], [78.0]], p5: [[79.0]]), s0(p0: [[80.0], [81.0], [82.0]], p1: [[83.0]], p2: [[84.0]], p3: [[85.0], [86.0]], p4: [[87.0], [88.0]], p5: [[89.0]]), s0(p0: [[90.0], [91.0], [92.0]], p1: [[93.0]], p2: [[94.0]], p3: [[95.0], [96.0]], p4: [[97.0], [98.0]], p5: [[99.0]])], p1: [[s0(p0: [[100.0], [101.0], [102.0]], p1: [[103.0]], p2: [[104.0]], p3: [[105.0], [106.0]], p4: [[107.0], [108.0]], p5: [[109.0]])], [s0(p0: [[110.0], [111.0], [112.0]], p1: [[113.0]], p2: [[114.0]], p3: [[115.0], [116.0]], p4: [[117.0], [118.0]], p5: [[119.0]])], [s0(p0: [[120.0], [121.0], [122.0]], p1: [[123.0]], p2: [[124.0]], p3: [[125.0], [126.0]], p4: [[127.0], [128.0]], p5: [[129.0]])]])], p1: s0(p0: [[130.0], [131.0], [132.0]], p1: [[133.0]], p2: [[134.0]], p3: [[135.0], [136.0]], p4: [[137.0], [138.0]], p5: [[139.0]])), s3(p0: [s2(p0: [s0(p0: [[140.0], [141.0], [142.0]], p1: [[143.0]], p2: [[144.0]], p3: [[145.0], [146.0]], p4: [[147.0], [148.0]], p5: [[149.0]]), s0(p0: [[150.0], [151.0], [152.0]], p1: [[153.0]], p2: [[154.0]], p3: [[155.0], [156.0]], p4: [[157.0], [158.0]], p5: [[159.0]]), s0(p0: [[160.0], [161.0], [162.0]], p1: [[163.0]], p2: [[164.0]], p3: [[165.0], [166.0]], p4: [[167.0], [168.0]], p5: [[169.0]])], p1: [[s0(p0: [[170.0], [171.0], [172.0]], p1: [[173.0]], p2: [[174.0]], p3: [[175.0], [176.0]], p4: [[177.0], [178.0]], p5: [[179.0]])], [s0(p0: [[180.0], [181.0], [182.0]], p1: [[183.0]], p2: [[184.0]], p3: [[185.0], [186.0]], p4: [[187.0], [188.0]], p5: [[189.0]])], [s0(p0: [[190.0], [191.0], [192.0]], p1: [[193.0]], p2: [[194.0]], p3: [[195.0], [196.0]], p4: [[197.0], [198.0]], p5: [[199.0]])]])], p1: s0(p0: [[200.0], [201.0], [202.0]], p1: [[203.0]], p2: [[204.0]], p3: [[205.0], [206.0]], p4: [[207.0], [208.0]], p5: [[209.0]]))], p1: [s1(p0: s0(p0: [[210.0], [211.0], [212.0]], p1: [[213.0]], p2: [[214.0]], p3: [[215.0], [216.0]], p4: [[217.0], [218.0]], p5: [[219.0]]), p1: s0(p0: [[220.0], [221.0], [222.0]], p1: [[223.0]], p2: [[224.0]], p3: [[225.0], [226.0]], p4: [[227.0], [228.0]], p5: [[229.0]]))], p2: [s0(p0: [[230.0], [231.0], [232.0]], p1: [[233.0]], p2: [[234.0]], p3: [[235.0], [236.0]], p4: [[237.0], [238.0]], p5: [[239.0]]), s0(p0: [[240.0], [241.0], [242.0]], p1: [[243.0]], p2: [[244.0]], p3: [[245.0], [246.0]], p4: [[247.0], [248.0]], p5: [[249.0]]), s0(p0: [[250.0], [251.0], [252.0]], p1: [[253.0]], p2: [[254.0]], p3: [[255.0], [256.0]], p4: [[257.0], [258.0]], p5: [[259.0]])], p3: [s2(p0: [s0(p0: [[260.0], [261.0], [262.0]], p1: [[263.0]], p2: [[264.0]], p3: [[265.0], [266.0]], p4: [[267.0], [268.0]], p5: [[269.0]]), s0(p0: [[270.0], [271.0], [272.0]], p1: [[273.0]], p2: [[274.0]], p3: [[275.0], [276.0]], p4: [[277.0], [278.0]], p5: [[279.0]]), s0(p0: [[280.0], [281.0], [282.0]], p1: [[283.0]], p2: [[284.0]], p3: [[285.0], [286.0]], p4: [[287.0], [288.0]], p5: [[289.0]])], p1: [[s0(p0: [[290.0], [291.0], [292.0]], p1: [[293.0]], p2: [[294.0]], p3: [[295.0], [296.0]], p4: [[297.0], [298.0]], p5: [[299.0]])], [s0(p0: [[300.0], [301.0], [302.0]], p1: [[303.0]], p2: [[304.0]], p3: [[305.0], [306.0]], p4: [[307.0], [308.0]], p5: [[309.0]])], [s0(p0: [[310.0], [311.0], [312.0]], p1: [[313.0]], p2: [[314.0]], p3: [[315.0], [316.0]], p4: [[317.0], [318.0]], p5: [[319.0]])]])])], p1: s2(p0: [s0(p0: [[320.0], [321.0], [322.0]], p1: [[323.0]], p2: [[324.0]], p3: [[325.0], [326.0]], p4: [[327.0], [328.0]], p5: [[329.0]]), s0(p0: [[330.0], [331.0], [332.0]], p1: [[333.0]], p2: [[334.0]], p3: [[335.0], [336.0]], p4: [[337.0], [338.0]], p5: [[339.0]]), s0(p0: [[340.0], [341.0], [342.0]], p1: [[343.0]], p2: [[344.0]], p3: [[345.0], [346.0]], p4: [[347.0], [348.0]], p5: [[349.0]])], p1: [[s0(p0: [[350.0], [351.0], [352.0]], p1: [[353.0]], p2: [[354.0]], p3: [[355.0], [356.0]], p4: [[357.0], [358.0]], p5: [[359.0]])], [s0(p0: [[360.0], [361.0], [362.0]], p1: [[363.0]], p2: [[364.0]], p3: [[365.0], [366.0]], p4: [[367.0], [368.0]], p5: [[369.0]])], [s0(p0: [[370.0], [371.0], [372.0]], p1: [[373.0]], p2: [[374.0]], p3: [[375.0], [376.0]], p4: [[377.0], [378.0]], p5: [[379.0]])]]), p2: [[s3(p0: [s2(p0: [s0(p0: [[380.0], [381.0], [382.0]], p1: [[383.0]], p2: [[384.0]], p3: [[385.0], [386.0]], p4: [[387.0], [388.0]], p5: [[389.0]]), s0(p0: [[390.0], [391.0], [392.0]], p1: [[393.0]], p2: [[394.0]], p3: [[395.0], [396.0]], p4: [[397.0], [398.0]], p5: [[399.0]]), s0(p0: [[400.0], [401.0], [402.0]], p1: [[403.0]], p2: [[404.0]], p3: [[405.0], [406.0]], p4: [[407.0], [408.0]], p5: [[409.0]])], p1: [[s0(p0: [[410.0], [411.0], [412.0]], p1: [[413.0]], p2: [[414.0]], p3: [[415.0], [416.0]], p4: [[417.0], [418.0]], p5: [[419.0]])], [s0(p0: [[420.0], [421.0], [422.0]], p1: [[423.0]], p2: [[424.0]], p3: [[425.0], [426.0]], p4: [[427.0], [428.0]], p5: [[429.0]])], [s0(p0: [[430.0], [431.0], [432.0]], p1: [[433.0]], p2: [[434.0]], p3: [[435.0], [436.0]], p4: [[437.0], [438.0]], p5: [[439.0]])]])], p1: s0(p0: [[440.0], [441.0], [442.0]], p1: [[443.0]], p2: [[444.0]], p3: [[445.0], [446.0]], p4: [[447.0], [448.0]], p5: [[449.0]]))], [s3(p0: [s2(p0: [s0(p0: [[450.0], [451.0], [452.0]], p1: [[453.0]], p2: [[454.0]], p3: [[455.0], [456.0]], p4: [[457.0], [458.0]], p5: [[459.0]]), s0(p0: [[460.0], [461.0], [462.0]], p1: [[463.0]], p2: [[464.0]], p3: [[465.0], [466.0]], p4: [[467.0], [468.0]], p5: [[469.0]]), s0(p0: [[470.0], [471.0], [472.0]], p1: [[473.0]], p2: [[474.0]], p3: [[475.0], [476.0]], p4: [[477.0], [478.0]], p5: [[479.0]])], p1: [[s0(p0: [[480.0], [481.0], [482.0]], p1: [[483.0]], p2: [[484.0]], p3: [[485.0], [486.0]], p4: [[487.0], [488.0]], p5: [[489.0]])], [s0(p0: [[490.0], [491.0], [492.0]], p1: [[493.0]], p2: [[494.0]], p3: [[495.0], [496.0]], p4: [[497.0], [498.0]], p5: [[499.0]])], [s0(p0: [[500.0], [501.0], [502.0]], p1: [[503.0]], p2: [[504.0]], p3: [[505.0], [506.0]], p4: [[507.0], [508.0]], p5: [[509.0]])]])], p1: s0(p0: [[510.0], [511.0], [512.0]], p1: [[513.0]], p2: [[514.0]], p3: [[515.0], [516.0]], p4: [[517.0], [518.0]], p5: [[519.0]]))], [s3(p0: [s2(p0: [s0(p0: [[520.0], [521.0], [522.0]], p1: [[523.0]], p2: [[524.0]], p3: [[525.0], [526.0]], p4: [[527.0], [528.0]], p5: [[529.0]]), s0(p0: [[530.0], [531.0], [532.0]], p1: [[533.0]], p2: [[534.0]], p3: [[535.0], [536.0]], p4: [[537.0], [538.0]], p5: [[539.0]]), s0(p0: [[540.0], [541.0], [542.0]], p1: [[543.0]], p2: [[544.0]], p3: [[545.0], [546.0]], p4: [[547.0], [548.0]], p5: [[549.0]])], p1: [[s0(p0: [[550.0], [551.0], [552.0]], p1: [[553.0]], p2: [[554.0]], p3: [[555.0], [556.0]], p4: [[557.0], [558.0]], p5: [[559.0]])], [s0(p0: [[560.0], [561.0], [562.0]], p1: [[563.0]], p2: [[564.0]], p3: [[565.0], [566.0]], p4: [[567.0], [568.0]], p5: [[569.0]])], [s0(p0: [[570.0], [571.0], [572.0]], p1: [[573.0]], p2: [[574.0]], p3: [[575.0], [576.0]], p4: [[577.0], [578.0]], p5: [[579.0]])]])], p1: s0(p0: [[580.0], [581.0], [582.0]], p1: [[583.0]], p2: [[584.0]], p3: [[585.0], [586.0]], p4: [[587.0], [588.0]], p5: [[589.0]]))]])], [s5(p0: [s4(p0: [s3(p0: [s2(p0: [s0(p0: [[590.0], [591.0], [592.0]], p1: [[593.0]], p2: [[594.0]], p3: [[595.0], [596.0]], p4: [[597.0], [598.0]], p5: [[599.0]]), s0(p0: [[600.0], [601.0], [602.0]], p1: [[603.0]], p2: [[604.0]], p3: [[605.0], [606.0]], p4: [[607.0], [608.0]], p5: [[609.0]]), s0(p0: [[610.0], [611.0], [612.0]], p1: [[613.0]], p2: [[614.0]], p3: [[615.0], [616.0]], p4: [[617.0], [618.0]], p5: [[619.0]])], p1: [[s0(p0: [[620.0], [621.0], [622.0]], p1: [[623.0]], p2: [[624.0]], p3: [[625.0], [626.0]], p4: [[627.0], [628.0]], p5: [[629.0]])], [s0(p0: [[630.0], [631.0], [632.0]], p1: [[633.0]], p2: [[634.0]], p3: [[635.0], [636.0]], p4: [[637.0], [638.0]], p5: [[639.0]])], [s0(p0: [[640.0], [641.0], [642.0]], p1: [[643.0]], p2: [[644.0]], p3: [[645.0], [646.0]], p4: [[647.0], [648.0]], p5: [[649.0]])]])], p1: s0(p0: [[650.0], [651.0], [652.0]], p1: [[653.0]], p2: [[654.0]], p3: [[655.0], [656.0]], p4: [[657.0], [658.0]], p5: [[659.0]])), s3(p0: [s2(p0: [s0(p0: [[660.0], [661.0], [662.0]], p1: [[663.0]], p2: [[664.0]], p3: [[665.0], [666.0]], p4: [[667.0], [668.0]], p5: [[669.0]]), s0(p0: [[670.0], [671.0], [672.0]], p1: [[673.0]], p2: [[674.0]], p3: [[675.0], [676.0]], p4: [[677.0], [678.0]], p5: [[679.0]]), s0(p0: [[680.0], [681.0], [682.0]], p1: [[683.0]], p2: [[684.0]], p3: [[685.0], [686.0]], p4: [[687.0], [688.0]], p5: [[689.0]])], p1: [[s0(p0: [[690.0], [691.0], [692.0]], p1: [[693.0]], p2: [[694.0]], p3: [[695.0], [696.0]], p4: [[697.0], [698.0]], p5: [[699.0]])], [s0(p0: [[700.0], [701.0], [702.0]], p1: [[703.0]], p2: [[704.0]], p3: [[705.0], [706.0]], p4: [[707.0], [708.0]], p5: [[709.0]])], [s0(p0: [[710.0], [711.0], [712.0]], p1: [[713.0]], p2: [[714.0]], p3: [[715.0], [716.0]], p4: [[717.0], [718.0]], p5: [[719.0]])]])], p1: s0(p0: [[720.0], [721.0], [722.0]], p1: [[723.0]], p2: [[724.0]], p3: [[725.0], [726.0]], p4: [[727.0], [728.0]], p5: [[729.0]]))], p1: [s1(p0: s0(p0: [[730.0], [731.0], [732.0]], p1: [[733.0]], p2: [[734.0]], p3: [[735.0], [736.0]], p4: [[737.0], [738.0]], p5: [[739.0]]), p1: s0(p0: [[740.0], [741.0], [742.0]], p1: [[743.0]], p2: [[744.0]], p3: [[745.0], [746.0]], p4: [[747.0], [748.0]], p5: [[749.0]]))], p2: [s0(p0: [[750.0], [751.0], [752.0]], p1: [[753.0]], p2: [[754.0]], p3: [[755.0], [756.0]], p4: [[757.0], [758.0]], p5: [[759.0]]), s0(p0: [[760.0], [761.0], [762.0]], p1: [[763.0]], p2: [[764.0]], p3: [[765.0], [766.0]], p4: [[767.0], [768.0]], p5: [[769.0]]), s0(p0: [[770.0], [771.0], [772.0]], p1: [[773.0]], p2: [[774.0]], p3: [[775.0], [776.0]], p4: [[777.0], [778.0]], p5: [[779.0]])], p3: [s2(p0: [s0(p0: [[780.0], [781.0], [782.0]], p1: [[783.0]], p2: [[784.0]], p3: [[785.0], [786.0]], p4: [[787.0], [788.0]], p5: [[789.0]]), s0(p0: [[790.0], [791.0], [792.0]], p1: [[793.0]], p2: [[794.0]], p3: [[795.0], [796.0]], p4: [[797.0], [798.0]], p5: [[799.0]]), s0(p0: [[800.0], [801.0], [802.0]], p1: [[803.0]], p2: [[804.0]], p3: [[805.0], [806.0]], p4: [[807.0], [808.0]], p5: [[809.0]])], p1: [[s0(p0: [[810.0], [811.0], [812.0]], p1: [[813.0]], p2: [[814.0]], p3: [[815.0], [816.0]], p4: [[817.0], [818.0]], p5: [[819.0]])], [s0(p0: [[820.0], [821.0], [822.0]], p1: [[823.0]], p2: [[824.0]], p3: [[825.0], [826.0]], p4: [[827.0], [828.0]], p5: [[829.0]])], [s0(p0: [[830.0], [831.0], [832.0]], p1: [[833.0]], p2: [[834.0]], p3: [[835.0], [836.0]], p4: [[837.0], [838.0]], p5: [[839.0]])]])])], p1: s2(p0: [s0(p0: [[840.0], [841.0], [842.0]], p1: [[843.0]], p2: [[844.0]], p3: [[845.0], [846.0]], p4: [[847.0], [848.0]], p5: [[849.0]]), s0(p0: [[850.0], [851.0], [852.0]], p1: [[853.0]], p2: [[854.0]], p3: [[855.0], [856.0]], p4: [[857.0], [858.0]], p5: [[859.0]]), s0(p0: [[860.0], [861.0], [862.0]], p1: [[863.0]], p2: [[864.0]], p3: [[865.0], [866.0]], p4: [[867.0], [868.0]], p5: [[869.0]])], p1: [[s0(p0: [[870.0], [871.0], [872.0]], p1: [[873.0]], p2: [[874.0]], p3: [[875.0], [876.0]], p4: [[877.0], [878.0]], p5: [[879.0]])], [s0(p0: [[880.0], [881.0], [882.0]], p1: [[883.0]], p2: [[884.0]], p3: [[885.0], [886.0]], p4: [[887.0], [888.0]], p5: [[889.0]])], [s0(p0: [[890.0], [891.0], [892.0]], p1: [[893.0]], p2: [[894.0]], p3: [[895.0], [896.0]], p4: [[897.0], [898.0]], p5: [[899.0]])]]), p2: [[s3(p0: [s2(p0: [s0(p0: [[900.0], [901.0], [902.0]], p1: [[903.0]], p2: [[904.0]], p3: [[905.0], [906.0]], p4: [[907.0], [908.0]], p5: [[909.0]]), s0(p0: [[910.0], [911.0], [912.0]], p1: [[913.0]], p2: [[914.0]], p3: [[915.0], [916.0]], p4: [[917.0], [918.0]], p5: [[919.0]]), s0(p0: [[920.0], [921.0], [922.0]], p1: [[923.0]], p2: [[924.0]], p3: [[925.0], [926.0]], p4: [[927.0], [928.0]], p5: [[929.0]])], p1: [[s0(p0: [[930.0], [931.0], [932.0]], p1: [[933.0]], p2: [[934.0]], p3: [[935.0], [936.0]], p4: [[937.0], [938.0]], p5: [[939.0]])], [s0(p0: [[940.0], [941.0], [942.0]], p1: [[943.0]], p2: [[944.0]], p3: [[945.0], [946.0]], p4: [[947.0], [948.0]], p5: [[949.0]])], [s0(p0: [[950.0], [951.0], [952.0]], p1: [[953.0]], p2: [[954.0]], p3: [[955.0], [956.0]], p4: [[957.0], [958.0]], p5: [[959.0]])]])], p1: s0(p0: [[960.0], [961.0], [962.0]], p1: [[963.0]], p2: [[964.0]], p3: [[965.0], [966.0]], p4: [[967.0], [968.0]], p5: [[969.0]]))], [s3(p0: [s2(p0: [s0(p0: [[970.0], [971.0], [972.0]], p1: [[973.0]], p2: [[974.0]], p3: [[975.0], [976.0]], p4: [[977.0], [978.0]], p5: [[979.0]]), s0(p0: [[980.0], [981.0], [982.0]], p1: [[983.0]], p2: [[984.0]], p3: [[985.0], [986.0]], p4: [[987.0], [988.0]], p5: [[989.0]]), s0(p0: [[990.0], [991.0], [992.0]], p1: [[993.0]], p2: [[994.0]], p3: [[995.0], [996.0]], p4: [[997.0], [998.0]], p5: [[999.0]])], p1: [[s0(p0: [[1000.0], [1001.0], [1002.0]], p1: [[1003.0]], p2: [[1004.0]], p3: [[1005.0], [1006.0]], p4: [[1007.0], [1008.0]], p5: [[1009.0]])], [s0(p0: [[1010.0], [1011.0], [1012.0]], p1: [[1013.0]], p2: [[1014.0]], p3: [[1015.0], [1016.0]], p4: [[1017.0], [1018.0]], p5: [[1019.0]])], [s0(p0: [[1020.0], [1021.0], [1022.0]], p1: [[1023.0]], p2: [[1024.0]], p3: [[1025.0], [1026.0]], p4: [[1027.0], [1028.0]], p5: [[1029.0]])]])], p1: s0(p0: [[1030.0], [1031.0], [1032.0]], p1: [[1033.0]], p2: [[1034.0]], p3: [[1035.0], [1036.0]], p4: [[1037.0], [1038.0]], p5: [[1039.0]]))], [s3(p0: [s2(p0: [s0(p0: [[1040.0], [1041.0], [1042.0]], p1: [[1043.0]], p2: [[1044.0]], p3: [[1045.0], [1046.0]], p4: [[1047.0], [1048.0]], p5: [[1049.0]]), s0(p0: [[1050.0], [1051.0], [1052.0]], p1: [[1053.0]], p2: [[1054.0]], p3: [[1055.0], [1056.0]], p4: [[1057.0], [1058.0]], p5: [[1059.0]]), s0(p0: [[1060.0], [1061.0], [1062.0]], p1: [[1063.0]], p2: [[1064.0]], p3: [[1065.0], [1066.0]], p4: [[1067.0], [1068.0]], p5: [[1069.0]])], p1: [[s0(p0: [[1070.0], [1071.0], [1072.0]], p1: [[1073.0]], p2: [[1074.0]], p3: [[1075.0], [1076.0]], p4: [[1077.0], [1078.0]], p5: [[1079.0]])], [s0(p0: [[1080.0], [1081.0], [1082.0]], p1: [[1083.0]], p2: [[1084.0]], p3: [[1085.0], [1086.0]], p4: [[1087.0], [1088.0]], p5: [[1089.0]])], [s0(p0: [[1090.0], [1091.0], [1092.0]], p1: [[1093.0]], p2: [[1094.0]], p3: [[1095.0], [1096.0]], p4: [[1097.0], [1098.0]], p5: [[1099.0]])]])], p1: s0(p0: [[1100.0], [1101.0], [1102.0]], p1: [[1103.0]], p2: [[1104.0]], p3: [[1105.0], [1106.0]], p4: [[1107.0], [1108.0]], p5: [[1109.0]]))]])]])]]
    let v2: s5 = s5(p0: [s4(p0: [s3(p0: [s2(p0: [s0(p0: [[1110.0], [1111.0], [1112.0]], p1: [[1113.0]], p2: [[1114.0]], p3: [[1115.0], [1116.0]], p4: [[1117.0], [1118.0]], p5: [[1119.0]]), s0(p0: [[1120.0], [1121.0], [1122.0]], p1: [[1123.0]], p2: [[1124.0]], p3: [[1125.0], [1126.0]], p4: [[1127.0], [1128.0]], p5: [[1129.0]]), s0(p0: [[1130.0], [1131.0], [1132.0]], p1: [[1133.0]], p2: [[1134.0]], p3: [[1135.0], [1136.0]], p4: [[1137.0], [1138.0]], p5: [[1139.0]])], p1: [[s0(p0: [[1140.0], [1141.0], [1142.0]], p1: [[1143.0]], p2: [[1144.0]], p3: [[1145.0], [1146.0]], p4: [[1147.0], [1148.0]], p5: [[1149.0]])], [s0(p0: [[1150.0], [1151.0], [1152.0]], p1: [[1153.0]], p2: [[1154.0]], p3: [[1155.0], [1156.0]], p4: [[1157.0], [1158.0]], p5: [[1159.0]])], [s0(p0: [[1160.0], [1161.0], [1162.0]], p1: [[1163.0]], p2: [[1164.0]], p3: [[1165.0], [1166.0]], p4: [[1167.0], [1168.0]], p5: [[1169.0]])]])], p1: s0(p0: [[1170.0], [1171.0], [1172.0]], p1: [[1173.0]], p2: [[1174.0]], p3: [[1175.0], [1176.0]], p4: [[1177.0], [1178.0]], p5: [[1179.0]])), s3(p0: [s2(p0: [s0(p0: [[1180.0], [1181.0], [1182.0]], p1: [[1183.0]], p2: [[1184.0]], p3: [[1185.0], [1186.0]], p4: [[1187.0], [1188.0]], p5: [[1189.0]]), s0(p0: [[1190.0], [1191.0], [1192.0]], p1: [[1193.0]], p2: [[1194.0]], p3: [[1195.0], [1196.0]], p4: [[1197.0], [1198.0]], p5: [[1199.0]]), s0(p0: [[1200.0], [1201.0], [1202.0]], p1: [[1203.0]], p2: [[1204.0]], p3: [[1205.0], [1206.0]], p4: [[1207.0], [1208.0]], p5: [[1209.0]])], p1: [[s0(p0: [[1210.0], [1211.0], [1212.0]], p1: [[1213.0]], p2: [[1214.0]], p3: [[1215.0], [1216.0]], p4: [[1217.0], [1218.0]], p5: [[1219.0]])], [s0(p0: [[1220.0], [1221.0], [1222.0]], p1: [[1223.0]], p2: [[1224.0]], p3: [[1225.0], [1226.0]], p4: [[1227.0], [1228.0]], p5: [[1229.0]])], [s0(p0: [[1230.0], [1231.0], [1232.0]], p1: [[1233.0]], p2: [[1234.0]], p3: [[1235.0], [1236.0]], p4: [[1237.0], [1238.0]], p5: [[1239.0]])]])], p1: s0(p0: [[1240.0], [1241.0], [1242.0]], p1: [[1243.0]], p2: [[1244.0]], p3: [[1245.0], [1246.0]], p4: [[1247.0], [1248.0]], p5: [[1249.0]]))], p1: [s1(p0: s0(p0: [[1250.0], [1251.0], [1252.0]], p1: [[1253.0]], p2: [[1254.0]], p3: [[1255.0], [1256.0]], p4: [[1257.0], [1258.0]], p5: [[1259.0]]), p1: s0(p0: [[1260.0], [1261.0], [1262.0]], p1: [[1263.0]], p2: [[1264.0]], p3: [[1265.0], [1266.0]], p4: [[1267.0], [1268.0]], p5: [[1269.0]]))], p2: [s0(p0: [[1270.0], [1271.0], [1272.0]], p1: [[1273.0]], p2: [[1274.0]], p3: [[1275.0], [1276.0]], p4: [[1277.0], [1278.0]], p5: [[1279.0]]), s0(p0: [[1280.0], [1281.0], [1282.0]], p1: [[1283.0]], p2: [[1284.0]], p3: [[1285.0], [1286.0]], p4: [[1287.0], [1288.0]], p5: [[1289.0]]), s0(p0: [[1290.0], [1291.0], [1292.0]], p1: [[1293.0]], p2: [[1294.0]], p3: [[1295.0], [1296.0]], p4: [[1297.0], [1298.0]], p5: [[1299.0]])], p3: [s2(p0: [s0(p0: [[1300.0], [1301.0], [1302.0]], p1: [[1303.0]], p2: [[1304.0]], p3: [[1305.0], [1306.0]], p4: [[1307.0], [1308.0]], p5: [[1309.0]]), s0(p0: [[1310.0], [1311.0], [1312.0]], p1: [[1313.0]], p2: [[1314.0]], p3: [[1315.0], [1316.0]], p4: [[1317.0], [1318.0]], p5: [[1319.0]]), s0(p0: [[1320.0], [1321.0], [1322.0]], p1: [[1323.0]], p2: [[1324.0]], p3: [[1325.0], [1326.0]], p4: [[1327.0], [1328.0]], p5: [[1329.0]])], p1: [[s0(p0: [[1330.0], [1331.0], [1332.0]], p1: [[1333.0]], p2: [[1334.0]], p3: [[1335.0], [1336.0]], p4: [[1337.0], [1338.0]], p5: [[1339.0]])], [s0(p0: [[1340.0], [1341.0], [1342.0]], p1: [[1343.0]], p2: [[1344.0]], p3: [[1345.0], [1346.0]], p4: [[1347.0], [1348.0]], p5: [[1349.0]])], [s0(p0: [[1350.0], [1351.0], [1352.0]], p1: [[1353.0]], p2: [[1354.0]], p3: [[1355.0], [1356.0]], p4: [[1357.0], [1358.0]], p5: [[1359.0]])]])])], p1: s2(p0: [s0(p0: [[1360.0], [1361.0], [1362.0]], p1: [[1363.0]], p2: [[1364.0]], p3: [[1365.0], [1366.0]], p4: [[1367.0], [1368.0]], p5: [[1369.0]]), s0(p0: [[1370.0], [1371.0], [1372.0]], p1: [[1373.0]], p2: [[1374.0]], p3: [[1375.0], [1376.0]], p4: [[1377.0], [1378.0]], p5: [[1379.0]]), s0(p0: [[1380.0], [1381.0], [1382.0]], p1: [[1383.0]], p2: [[1384.0]], p3: [[1385.0], [1386.0]], p4: [[1387.0], [1388.0]], p5: [[1389.0]])], p1: [[s0(p0: [[1390.0], [1391.0], [1392.0]], p1: [[1393.0]], p2: [[1394.0]], p3: [[1395.0], [1396.0]], p4: [[1397.0], [1398.0]], p5: [[1399.0]])], [s0(p0: [[1400.0], [1401.0], [1402.0]], p1: [[1403.0]], p2: [[1404.0]], p3: [[1405.0], [1406.0]], p4: [[1407.0], [1408.0]], p5: [[1409.0]])], [s0(p0: [[1410.0], [1411.0], [1412.0]], p1: [[1413.0]], p2: [[1414.0]], p3: [[1415.0], [1416.0]], p4: [[1417.0], [1418.0]], p5: [[1419.0]])]]), p2: [[s3(p0: [s2(p0: [s0(p0: [[1420.0], [1421.0], [1422.0]], p1: [[1423.0]], p2: [[1424.0]], p3: [[1425.0], [1426.0]], p4: [[1427.0], [1428.0]], p5: [[1429.0]]), s0(p0: [[1430.0], [1431.0], [1432.0]], p1: [[1433.0]], p2: [[1434.0]], p3: [[1435.0], [1436.0]], p4: [[1437.0], [1438.0]], p5: [[1439.0]]), s0(p0: [[1440.0], [1441.0], [1442.0]], p1: [[1443.0]], p2: [[1444.0]], p3: [[1445.0], [1446.0]], p4: [[1447.0], [1448.0]], p5: [[1449.0]])], p1: [[s0(p0: [[1450.0], [1451.0], [1452.0]], p1: [[1453.0]], p2: [[1454.0]], p3: [[1455.0], [1456.0]], p4: [[1457.0], [1458.0]], p5: [[1459.0]])], [s0(p0: [[1460.0], [1461.0], [1462.0]], p1: [[1463.0]], p2: [[1464.0]], p3: [[1465.0], [1466.0]], p4: [[1467.0], [1468.0]], p5: [[1469.0]])], [s0(p0: [[1470.0], [1471.0], [1472.0]], p1: [[1473.0]], p2: [[1474.0]], p3: [[1475.0], [1476.0]], p4: [[1477.0], [1478.0]], p5: [[1479.0]])]])], p1: s0(p0: [[1480.0], [1481.0], [1482.0]], p1: [[1483.0]], p2: [[1484.0]], p3: [[1485.0], [1486.0]], p4: [[1487.0], [1488.0]], p5: [[1489.0]]))], [s3(p0: [s2(p0: [s0(p0: [[1490.0], [1491.0], [1492.0]], p1: [[1493.0]], p2: [[1494.0]], p3: [[1495.0], [1496.0]], p4: [[1497.0], [1498.0]], p5: [[1499.0]]), s0(p0: [[1500.0], [1501.0], [1502.0]], p1: [[1503.0]], p2: [[1504.0]], p3: [[1505.0], [1506.0]], p4: [[1507.0], [1508.0]], p5: [[1509.0]]), s0(p0: [[1510.0], [1511.0], [1512.0]], p1: [[1513.0]], p2: [[1514.0]], p3: [[1515.0], [1516.0]], p4: [[1517.0], [1518.0]], p5: [[1519.0]])], p1: [[s0(p0: [[1520.0], [1521.0], [1522.0]], p1: [[1523.0]], p2: [[1524.0]], p3: [[1525.0], [1526.0]], p4: [[1527.0], [1528.0]], p5: [[1529.0]])], [s0(p0: [[1530.0], [1531.0], [1532.0]], p1: [[1533.0]], p2: [[1534.0]], p3: [[1535.0], [1536.0]], p4: [[1537.0], [1538.0]], p5: [[1539.0]])], [s0(p0: [[1540.0], [1541.0], [1542.0]], p1: [[1543.0]], p2: [[1544.0]], p3: [[1545.0], [1546.0]], p4: [[1547.0], [1548.0]], p5: [[1549.0]])]])], p1: s0(p0: [[1550.0], [1551.0], [1552.0]], p1: [[1553.0]], p2: [[1554.0]], p3: [[1555.0], [1556.0]], p4: [[1557.0], [1558.0]], p5: [[1559.0]]))], [s3(p0: [s2(p0: [s0(p0: [[1560.0], [1561.0], [1562.0]], p1: [[1563.0]], p2: [[1564.0]], p3: [[1565.0], [1566.0]], p4: [[1567.0], [1568.0]], p5: [[1569.0]]), s0(p0: [[1570.0], [1571.0], [1572.0]], p1: [[1573.0]], p2: [[1574.0]], p3: [[1575.0], [1576.0]], p4: [[1577.0], [1578.0]], p5: [[1579.0]]), s0(p0: [[1580.0], [1581.0], [1582.0]], p1: [[1583.0]], p2: [[1584.0]], p3: [[1585.0], [1586.0]], p4: [[1587.0], [1588.0]], p5: [[1589.0]])], p1: [[s0(p0: [[1590.0], [1591.0], [1592.0]], p1: [[1593.0]], p2: [[1594.0]], p3: [[1595.0], [1596.0]], p4: [[1597.0], [1598.0]], p5: [[1599.0]])], [s0(p0: [[1600.0], [1601.0], [1602.0]], p1: [[1603.0]], p2: [[1604.0]], p3: [[1605.0], [1606.0]], p4: [[1607.0], [1608.0]], p5: [[1609.0]])], [s0(p0: [[1610.0], [1611.0], [1612.0]], p1: [[1613.0]], p2: [[1614.0]], p3: [[1615.0], [1616.0]], p4: [[1617.0], [1618.0]], p5: [[1619.0]])]])], p1: s0(p0: [[1620.0], [1621.0], [1622.0]], p1: [[1623.0]], p2: [[1624.0]], p3: [[1625.0], [1626.0]], p4: [[1627.0], [1628.0]], p5: [[1629.0]]))]])
    let v3: Double = 1630.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1630.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
