  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: s0
    var p1: s0
  } in
  struct s3 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s4 {
    var p0: [s0]
    var p1: s2
  } in
  struct s5 {
    var p0: s2
    var p1: [[s4]]
  } in
  struct s6 {
    var p0: s4
    var p1: [s2]
  } in
  struct s7 {
    var p0: s6
    var p1: s3
  } in
  struct s9 {
    var p0: s7
    var p1: [[s5]]
  } in
  let f116: (s7) -> s7 = (v0: s7) -> s7 {
    var v6: s7 = v0 in
    let v9: s6 = v6.p0 in
    let v4: s4 = v9.p0 in
    v6.p0 = v9 in
    var v1: s6 = v9 in
    var v8: s7 = v0 in
    v8.p0 = v9 in
    let v2: [s7] = [v8, v6, v0, v0, v0, v6, v8] in
    v6.p0 = v1 in
    var v7: s6 = v9 in
    var v3: s6 = v1 in
    v6.p0 = v3 in
    let v14: s7 = v2[1] in
    let v18: [s2] = v9.p1 in
    let v5: s2 = v18[1] in
    v1.p1 = v18 in
    v3.p1 = v18 in
    let v12: s6 = v14.p0 in
    let v21: [s2] = v7.p1 in
    let v10: s4 = v12.p0 in
    v3.p1 = v18 in
    let v23: s0 = v5.p0 in
    v7.p0 = v4 in
    var v17: s2 = v5 in
    var v33: s4 = v10 in
    var v49: [s2] = v18 in
    v49[0] = v5 in
    v17 = v5 in
    let v22: s2 = v49[2] in
    v49[2] = v22 in
    let v48: [s2] = [v17, v17, v22, v5, v22] in
    let v64: s7 = v2[0] in
    v33.p1 = v22 in
    v17.p0 = v23 in
    let v94: [s0] = v4.p0 in
    v8.p0 = v12 in
    let v140: s2 = v21[1] in
    let v62: s4 = s4(v94, v140) in
    v7.p0 = v62 in
    var v68: [s2] = v21 in
    v7.p0 = v33 in
    v49 = v21 in
    var v81: [s2] = v48 in
    let v167: s2 = v81[0] in
    v49[0] = v167 in
    v1.p1 = v68 in
    var v171: s7 = v64 in
    v3.p1 = v49 in
    v171.p0 = v3 in
    v7.p0 = v4 in
    v171
  } in
  let f107: (s2) -> s2 = (v0: s2) -> s2 {
    let v7: s0 = v0.p1 in
    let v2: s0 = v0.p0 in
    var v3: s0 = v2 in
    var v1: s0 = v3 in
    let v5: s0 = v0.p1 in
    let v11: [Float] = v3.p0 in
    v3 = v5 in
    let v4: s0 = v0.p1 in
    let v8: s0 = v0.p0 in
    v1.p0 = v11 in
    var v15: s0 = v7 in
    let v13: [[Float]] = v15.p1 in
    var v22: s2 = v0 in
    v22.p1 = v1 in
    let v17: [Float] = v13[1] in
    var v16: s2 = v22 in
    let v23: s0 = v0.p0 in
    v22.p0 = v23 in
    let v34: s2 = s2(v1, v3) in
    var v45: [[Float]] = v13 in
    var v36: s2 = v16 in
    v1.p1 = v13 in
    var v39: s2 = v16 in
    var v38: [[Float]] = v45 in
    var v50: s2 = v36 in
    v39.p1 = v4 in
    v45[0] = v17 in
    let v70: s0 = v39.p0 in
    let v56: [[Float]] = v15.p1 in
    let v40: s0 = v34.p0 in
    v39.p1 = v8 in
    var v100: [[Float]] = v13 in
    let v67: [Float] = v38[1] in
    v16.p0 = v40 in
    v15.p1 = v56 in
    v45[1] = v67 in
    v1.p1 = v38 in
    v36.p1 = v70 in
    v50.p1 = v40 in
    var v73: [[Float]] = v100 in
    v38 = v73 in
    v50
  } in
  let f104: (s0, [s0]) -> [s0] = (v0: s0, v1: [s0]) -> [s0] {
    var v52: [s0] = v1 in
    v52
  } in
  let f86: (s9) -> s9 = (v0: s9) -> s9 {
    let v3: s7 = v0.p0 in
    let v1: s7 = f116(v3) in
    var v6: s7 = v3 in
    let v7: s6 = v6.p0 in
    var v8: s9 = v0 in
    v6.p0 = v7 in
    var v11: s9 = v0 in
    var v2: s9 = v11 in
    let v4: [[s5]] = v0.p1 in
    let v16: s3 = v6.p1 in
    let v13: [[s5]] = v0.p1 in
    var v23: [[s5]] = v13 in
    let v10: s7 = f116(v3) in
    v11 = v8 in
    var v20: s3 = v16 in
    let v31: [s0] = v20.p1 in
    var v19: s3 = v16 in
    var v29: [[s5]] = v4 in
    let v37: s7 = f116(v10) in
    var v40: s9 = v0 in
    var v24: s7 = v3 in
    let v25: [s9] = [v40, v11, v0, v8, v0, v8] in
    let v51: [[s0]] = v16.p0 in
    v8.p0 = v24 in
    v6.p1 = v16 in
    v6.p1 = v20 in
    v8.p0 = v1 in
    let v63: [s5] = v29[2] in
    v6.p1 = v19 in
    let v72: s7 = f116(v6) in
    var v50: [s0] = v31 in
    v20.p1 = v50 in
    v20.p0 = v51 in
    let v57: s0 = v50[0] in
    v40.p1 = v4 in
    let v177: s9 = s9(v37, v23) in
    v50[1] = v57 in
    var v98: [[s5]] = v23 in
    let v123: s9 = v25[4] in
    let v96: s9 = s9(v72, v98) in
    v11.p1 = v29 in
    let v162: [s9] = [v177, v2, v177, v2, v96, v40, v123] in
    var v400: [s9] = v162 in
    let v83: s9 = v400[3] in
    v98[2] = v63 in
    v83
  } in
  let f81: (s9) -> s9 = (v0: s9) -> s9 {
    let v4: [[s5]] = v0.p1 in
    let v3: s9 = f86(v0) in
    var v1: s9 = v3 in
    let v2: s7 = v1.p0 in
    var v5: s9 = v3 in
    let v7: s7 = f116(v2) in
    let v16: s7 = v5.p0 in
    v5 = v0 in
    v5 = v0 in
    let v12: s7 = f116(v16) in
    var v27: s9 = v5 in
    v1.p1 = v4 in
    let v19: [[s5]] = v27.p1 in
    let v30: s7 = f116(v16) in
    v27.p1 = v4 in
    v5.p1 = v4 in
    let v48: s9 = s9(v30, v19) in
    v5.p0 = v7 in
    v5.p1 = v19 in
    v5.p1 = v19 in
    v27.p0 = v12 in
    v27.p1 = v4 in
    v1.p1 = v19 in
    v48
  } in
  let f73: (s0, s4) -> s0 = (v0: s0, v1: s4) -> s0 {
    var v5: s4 = v1 in
    v5 = v1 in
    let v2: [s0] = v5.p0 in
    let v8: s0 = v2[0] in
    let v7: [s0] = v1.p0 in
    let v4: s0 = v2[0] in
    var v6: [s0] = v2 in
    let v14: s0 = v2[1] in
    let v12: s2 = v1.p1 in
    let v11: s2 = f107(v12) in
    v5 = v1 in
    let v21: s2 = f107(v11) in
    let v37: s2 = f107(v12) in
    let v22: [s0] = f104(v14, v6) in
    let v51: s2 = f107(v11) in
    let v27: s0 = v2[0] in
    let v24: [s0] = f104(v4, v7) in
    v6[0] = v4 in
    let v16: s2 = f107(v51) in
    let v41: s2 = v1.p1 in
    v5.p0 = v22 in
    let v28: s2 = f107(v21) in
    v6[0] = v8 in
    v6 = v24 in
    var v35: s2 = v41 in
    let v87: [s0] = f104(v14, v22) in
    v5 = v1 in
    let v42: s2 = f107(v21) in
    let v95: s0 = v12.p0 in
    v35.p0 = v27 in
    let v73: s2 = f107(v16) in
    let v54: s2 = s2(v14, v8) in
    let v52: s2 = f107(v37) in
    var v179: s4 = v5 in
    let v68: s2 = v179.p1 in
    v6[2] = v95 in
    let v84: s0 = v35.p0 in
    let v92: s2 = f107(v73) in
    let v106: s2 = f107(v42) in
    let v130: [s2] = [v51, v21, v92, v52, v106, v68] in
    let v120: s2 = v130[5] in
    let v253: s0 = v87[0] in
    v179.p1 = v54 in
    let v211: s0 = v120.p0 in
    v179.p1 = v28 in
    v5.p1 = v21 in
    v6[2] = v84 in
    v35.p0 = v253 in
    v211
  } in
  let noinline_f0: ([s9], [s1], Float) -> Float = (v0: [s9], v1: [s1], v2: Float) -> Float {
    var v3: [s9] = v0 in
    var v11: [s9] = v3 in
    var v7: [s9] = v3 in
    var v4: [s9] = v11 in
    let v18: s9 = v7[1] in
    let v12: s9 = f81(v18) in
    v4[0] = v18 in
    let v10: s9 = f81(v12) in
    v11[0] = v10 in
    let v17: s1 = v1[0] in
    let v14: s9 = v0[0] in
    let v13: [[s0]] = v17.p1 in
    var v28: [[s0]] = v13 in
    let v23: s9 = v4[0] in
    let v21: [[s0]] = v17.p1 in
    let v68: [s0] = v21[0] in
    v11[2] = v14 in
    let v59: s7 = v23.p0 in
    v28[0] = v68 in
    var v42: [s0] = v68 in
    let v94: s6 = v59.p0 in
    let v43: s4 = v94.p0 in
    v28[0] = v42 in
    let v33: [s0] = v28[0] in
    let v35: s0 = v33[0] in
    v42 = v68 in
    v4[2] = v12 in
    v28[0] = v33 in
    let v48: s0 = f73(v35, v43) in
    let v120: [Float] = v48.p0 in
    let v47: Float = v120[0] in
    v47
  } in
  fun loop(i: Int, v0: [s9], v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s9] = [s9(s7(s6(s4([s0([0.0], [[1.0], [2.0], [3.0]]), s0([4.0], [[5.0], [6.0], [7.0]]), s0([8.0], [[9.0], [10.0], [11.0]])], s2(s0([12.0], [[13.0], [14.0], [15.0]]), s0([16.0], [[17.0], [18.0], [19.0]]))), [s2(s0([20.0], [[21.0], [22.0], [23.0]]), s0([24.0], [[25.0], [26.0], [27.0]])), s2(s0([28.0], [[29.0], [30.0], [31.0]]), s0([32.0], [[33.0], [34.0], [35.0]])), s2(s0([36.0], [[37.0], [38.0], [39.0]]), s0([40.0], [[41.0], [42.0], [43.0]]))]), s3([[s0([44.0], [[45.0], [46.0], [47.0]])], [s0([48.0], [[49.0], [50.0], [51.0]])]], [s0([52.0], [[53.0], [54.0], [55.0]]), s0([56.0], [[57.0], [58.0], [59.0]])])), [[s5(s2(s0([60.0], [[61.0], [62.0], [63.0]]), s0([64.0], [[65.0], [66.0], [67.0]])), [[s4([s0([68.0], [[69.0], [70.0], [71.0]]), s0([72.0], [[73.0], [74.0], [75.0]]), s0([76.0], [[77.0], [78.0], [79.0]])], s2(s0([80.0], [[81.0], [82.0], [83.0]]), s0([84.0], [[85.0], [86.0], [87.0]])))]])], [s5(s2(s0([88.0], [[89.0], [90.0], [91.0]]), s0([92.0], [[93.0], [94.0], [95.0]])), [[s4([s0([96.0], [[97.0], [98.0], [99.0]]), s0([100.0], [[101.0], [102.0], [103.0]]), s0([104.0], [[105.0], [106.0], [107.0]])], s2(s0([108.0], [[109.0], [110.0], [111.0]]), s0([112.0], [[113.0], [114.0], [115.0]])))]])], [s5(s2(s0([116.0], [[117.0], [118.0], [119.0]]), s0([120.0], [[121.0], [122.0], [123.0]])), [[s4([s0([124.0], [[125.0], [126.0], [127.0]]), s0([128.0], [[129.0], [130.0], [131.0]]), s0([132.0], [[133.0], [134.0], [135.0]])], s2(s0([136.0], [[137.0], [138.0], [139.0]]), s0([140.0], [[141.0], [142.0], [143.0]])))]])]]), s9(s7(s6(s4([s0([144.0], [[145.0], [146.0], [147.0]]), s0([148.0], [[149.0], [150.0], [151.0]]), s0([152.0], [[153.0], [154.0], [155.0]])], s2(s0([156.0], [[157.0], [158.0], [159.0]]), s0([160.0], [[161.0], [162.0], [163.0]]))), [s2(s0([164.0], [[165.0], [166.0], [167.0]]), s0([168.0], [[169.0], [170.0], [171.0]])), s2(s0([172.0], [[173.0], [174.0], [175.0]]), s0([176.0], [[177.0], [178.0], [179.0]])), s2(s0([180.0], [[181.0], [182.0], [183.0]]), s0([184.0], [[185.0], [186.0], [187.0]]))]), s3([[s0([188.0], [[189.0], [190.0], [191.0]])], [s0([192.0], [[193.0], [194.0], [195.0]])]], [s0([196.0], [[197.0], [198.0], [199.0]]), s0([200.0], [[201.0], [202.0], [203.0]])])), [[s5(s2(s0([204.0], [[205.0], [206.0], [207.0]]), s0([208.0], [[209.0], [210.0], [211.0]])), [[s4([s0([212.0], [[213.0], [214.0], [215.0]]), s0([216.0], [[217.0], [218.0], [219.0]]), s0([220.0], [[221.0], [222.0], [223.0]])], s2(s0([224.0], [[225.0], [226.0], [227.0]]), s0([228.0], [[229.0], [230.0], [231.0]])))]])], [s5(s2(s0([232.0], [[233.0], [234.0], [235.0]]), s0([236.0], [[237.0], [238.0], [239.0]])), [[s4([s0([240.0], [[241.0], [242.0], [243.0]]), s0([244.0], [[245.0], [246.0], [247.0]]), s0([248.0], [[249.0], [250.0], [251.0]])], s2(s0([252.0], [[253.0], [254.0], [255.0]]), s0([256.0], [[257.0], [258.0], [259.0]])))]])], [s5(s2(s0([260.0], [[261.0], [262.0], [263.0]]), s0([264.0], [[265.0], [266.0], [267.0]])), [[s4([s0([268.0], [[269.0], [270.0], [271.0]]), s0([272.0], [[273.0], [274.0], [275.0]]), s0([276.0], [[277.0], [278.0], [279.0]])], s2(s0([280.0], [[281.0], [282.0], [283.0]]), s0([284.0], [[285.0], [286.0], [287.0]])))]])]]), s9(s7(s6(s4([s0([288.0], [[289.0], [290.0], [291.0]]), s0([292.0], [[293.0], [294.0], [295.0]]), s0([296.0], [[297.0], [298.0], [299.0]])], s2(s0([300.0], [[301.0], [302.0], [303.0]]), s0([304.0], [[305.0], [306.0], [307.0]]))), [s2(s0([308.0], [[309.0], [310.0], [311.0]]), s0([312.0], [[313.0], [314.0], [315.0]])), s2(s0([316.0], [[317.0], [318.0], [319.0]]), s0([320.0], [[321.0], [322.0], [323.0]])), s2(s0([324.0], [[325.0], [326.0], [327.0]]), s0([328.0], [[329.0], [330.0], [331.0]]))]), s3([[s0([332.0], [[333.0], [334.0], [335.0]])], [s0([336.0], [[337.0], [338.0], [339.0]])]], [s0([340.0], [[341.0], [342.0], [343.0]]), s0([344.0], [[345.0], [346.0], [347.0]])])), [[s5(s2(s0([348.0], [[349.0], [350.0], [351.0]]), s0([352.0], [[353.0], [354.0], [355.0]])), [[s4([s0([356.0], [[357.0], [358.0], [359.0]]), s0([360.0], [[361.0], [362.0], [363.0]]), s0([364.0], [[365.0], [366.0], [367.0]])], s2(s0([368.0], [[369.0], [370.0], [371.0]]), s0([372.0], [[373.0], [374.0], [375.0]])))]])], [s5(s2(s0([376.0], [[377.0], [378.0], [379.0]]), s0([380.0], [[381.0], [382.0], [383.0]])), [[s4([s0([384.0], [[385.0], [386.0], [387.0]]), s0([388.0], [[389.0], [390.0], [391.0]]), s0([392.0], [[393.0], [394.0], [395.0]])], s2(s0([396.0], [[397.0], [398.0], [399.0]]), s0([400.0], [[401.0], [402.0], [403.0]])))]])], [s5(s2(s0([404.0], [[405.0], [406.0], [407.0]]), s0([408.0], [[409.0], [410.0], [411.0]])), [[s4([s0([412.0], [[413.0], [414.0], [415.0]]), s0([416.0], [[417.0], [418.0], [419.0]]), s0([420.0], [[421.0], [422.0], [423.0]])], s2(s0([424.0], [[425.0], [426.0], [427.0]]), s0([428.0], [[429.0], [430.0], [431.0]])))]])]])] in
    let v1: [s1] = [s1(s0([432.0], [[433.0], [434.0], [435.0]]), [[s0([436.0], [[437.0], [438.0], [439.0]])]])] in
    let v2: Float = 440.0 in
    let initialResult: Float = 440.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()