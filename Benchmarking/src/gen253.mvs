  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f11: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    let v7: [s0] = [v0, v0, v0, v0, v0] in
    let v2: s0 = v7[3] in
    var v11: [s0] = v7 in
    v11[2] = v0 in
    let v1: [[Float]] = v2.p0 in
    let v13: [[Float]] = v0.p0 in
    var v12: s0 = v2 in
    var v21: [s0] = v11 in
    let v17: [[Float]] = v12.p1 in
    v21[0] = v12 in
    let v9: [[Float]] = v0.p1 in
    var v16: [[Float]] = v1 in
    v12.p1 = v17 in
    v12.p0 = v1 in
    let v10: [[Float]] = v12.p1 in
    v12.p0 = v13 in
    let v50: [[Float]] = v2.p0 in
    v12.p1 = v4 in
    var v26: [s0] = v21 in
    v12.p0 = v50 in
    v12.p0 = v16 in
    let v49: s0 = v26[2] in
    let v52: [[Float]] = v12.p0 in
    v12.p0 = v50 in
    var v48: [[Float]] = v10 in
    let v46: s0 = v26[3] in
    let v47: [Float] = v52[1] in
    var v57: s0 = v49 in
    v12.p1 = v4 in
    let v14: s0 = v7[2] in
    v57.p0 = v13 in
    let v67: [[Float]] = v57.p0 in
    let v72: [[Float]] = v46.p0 in
    v12.p1 = v9 in
    v48[0] = v47 in
    var v38: s0 = v46 in
    var v108: [s0] = v21 in
    v57.p0 = v72 in
    v26[4] = v57 in
    v108[3] = v14 in
    v12.p0 = v67 in
    let v175: s0 = v7[3] in
    v12.p1 = v48 in
    var v124: [[Float]] = v9 in
    let v106: s0 = v108[0] in
    v38.p1 = v124 in
    v26[1] = v175 in
    v108[4] = v38 in
    v106
  } in
  let f8: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p0 in
    let v4: [Float] = v1[2] in
    var v2: [[Float]] = v1 in
    let v8: s0 = f11(v0) in
    let v12: [[Float]] = v8.p0 in
    v2[1] = v4 in
    let v15: [[Float]] = v0.p1 in
    let v5: s0 = s0(v2, v15) in
    let v3: s0 = f11(v5) in
    let v11: [[Float]] = v3.p0 in
    let v14: s0 = s0(v12, v15) in
    let v28: s0 = f11(v3) in
    v2 = v11 in
    let v35: s0 = f11(v14) in
    let v31: s0 = f11(v14) in
    let v74: [s0] = [v35, v35, v31, v28] in
    let v63: s0 = v74[2] in
    v63
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v7: [s0] = v0[1] in
    var v6: [s0] = v7 in
    let v3: s0 = v6[0] in
    v6[0] = v3 in
    let v2: s0 = f8(v3) in
    let v8: s0 = f11(v2) in
    let v23: [[Float]] = v8.p1 in
    let v21: [Float] = v23[0] in
    let v44: Float = v21[0] in
    var v124: Float = v44 in
    v124
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0], [2.0]], [[3.0]])], [s0([[4.0], [5.0], [6.0]], [[7.0]])]] in
    let v1: Float = 8.0 in
    let initialResult: Float = 8.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()