  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
    var p2: [[s0]]
  } in
  struct s2 {
    var p0: [s1]
    var p1: [Float]
  } in
  let f68: (s2) -> s2 = (v0: s2) -> s2 {
    let v2: [s1] = v0.p0 in
    let v4: [Float] = v0.p1 in
    let v8: [Float] = v0.p1 in
    let v5: [[Float]] = [v8, v8, v8, v8, v8, v8] in
    var v6: [s1] = v2 in
    let v18: [s1] = v0.p0 in
    let v1: [Float] = v5[2] in
    var v17: s2 = v0 in
    v17.p1 = v8 in
    v17.p1 = v1 in
    var v20: s2 = v17 in
    let v24: [Float] = v20.p1 in
    let v48: [Float] = v17.p1 in
    let v15: [Float] = v20.p1 in
    v20.p1 = v4 in
    let v40: [Float] = v17.p1 in
    v17.p1 = v40 in
    v17.p1 = v24 in
    v20.p0 = v18 in
    let v46: s2 = s2(v6, v15) in
    v17.p1 = v48 in
    let v88: [s1] = v17.p0 in
    let v89: [s1] = v46.p0 in
    v17.p0 = v89 in
    v17.p0 = v88 in
    v20
  } in
  let f62: (s2) -> s2 = (v0: s2) -> s2 {
    let v3: s2 = f68(v0) in
    var v1: s2 = v3 in
    var v4: s2 = v0 in
    let v7: s2 = f68(v1) in
    v4 = v7 in
    let v8: [Float] = v4.p1 in
    var v12: [Float] = v8 in
    v1.p1 = v12 in
    var v19: [Float] = v12 in
    v12 = v8 in
    let v29: Float = v19[0] in
    v4.p1 = v19 in
    let v37: [s1] = v1.p0 in
    let v56: s2 = s2(v37, v8) in
    v12[1] = v29 in
    let v39: s2 = f68(v56) in
    v39
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v4: s2 = f62(v0) in
    let v2: [Float] = v4.p1 in
    var v16: [Float] = v2 in
    let v30: Float = v2[1] in
    v16[0] = v1 in
    v16[0] = v30 in
    v16[1] = v30 in
    let v139: Float = v16[0] in
    v16 = v2 in
    v139
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]), [[s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])], [s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])]])], [25.0, 26.0]) in
    let v1: Float = 27.0 in
    let initialResult: Float = 27.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()