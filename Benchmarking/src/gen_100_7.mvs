  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [Float]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s1]
    var p2: [s0]
    var p3: s0
    var p4: [[s0]]
  } in
  struct s5 {
    var p0: s2
    var p1: [[s1]]
  } in
  struct s6 {
    var p0: s1
    var p1: s5
  } in
  let f52: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [Float] = v0.p3 in
    let v6: Float = v2[1] in
    var v5: Float = v6 in
    var v8: s0 = v0 in
    var v4: [Float] = v2 in
    let v3: Float = v4[2] in
    var v10: Float = v6 in
    v4[1] = v10 in
    v4[1] = v5 in
    var v11: s0 = v0 in
    var v13: s0 = v0 in
    var v12: s0 = v8 in
    var v14: s0 = v8 in
    let v23: Float = v2[2] in
    let v25: [[Float]] = v8.p1 in
    var v17: [[Float]] = v25 in
    let v19: [Float] = v25[1] in
    let v16: [[Float]] = v11.p0 in
    var v42: [Float] = v19 in
    v17[1] = v42 in
    var v20: [[Float]] = v16 in
    var v18: [Float] = v42 in
    v11.p1 = v25 in
    v42[0] = v5 in
    let v22: [[Float]] = v14.p0 in
    let v27: [[[Float]]] = [v17] in
    v4[1] = v3 in
    let v21: [[Float]] = v0.p1 in
    var v58: [[Float]] = v25 in
    v4[1] = v10 in
    v14.p1 = v17 in
    var v31: [Float] = v19 in
    v12.p0 = v20 in
    let v55: [Float] = v13.p3 in
    v20[0] = v42 in
    let v32: [[Float]] = v0.p2 in
    var v127: [[Float]] = v25 in
    v58[0] = v31 in
    let v36: [Float] = v32[1] in
    let v30: [[Float]] = v13.p0 in
    var v98: [Float] = v4 in
    let v40: [[Float]] = v12.p1 in
    let v54: [[Float]] = v13.p2 in
    let v62: [Float] = v22[0] in
    var v57: [[Float]] = v21 in
    v11.p3 = v55 in
    let v79: [[Float]] = v27[0] in
    let v103: [[Float]] = v14.p0 in
    let v100: s0 = s0(v103, v54, v40, v4) in
    let v75: [[Float]] = v13.p0 in
    v11.p0 = v20 in
    let v80: [[Float]] = v0.p2 in
    v8.p3 = v98 in
    let v118: [s0] = [v11, v12, v100, v14, v100] in
    let v119: s0 = v118[0] in
    let v122: [[Float]] = v0.p2 in
    let v68: s0 = v118[4] in
    v13.p2 = v58 in
    v31[0] = v23 in
    let v161: [Float] = v68.p3 in
    v11.p0 = v75 in
    v13.p1 = v122 in
    let v108: [[Float]] = v119.p2 in
    v58[1] = v62 in
    let v84: [[Float]] = v13.p0 in
    let v60: s0 = s0(v20, v127, v79, v161) in
    let v153: [Float] = v57[0] in
    v20[0] = v18 in
    v8.p0 = v20 in
    v14.p2 = v54 in
    v12.p2 = v108 in
    v8.p0 = v30 in
    v58[1] = v36 in
    v14.p1 = v80 in
    v127[0] = v153 in
    v13.p0 = v84 in
    v20[0] = v31 in
    v60
  } in
  let f34: (s0) -> s0 = (v0: s0) -> s0 {
    var v8: s0 = v0 in
    let v6: [[Float]] = v8.p1 in
    v8.p1 = v6 in
    var v1: s0 = v8 in
    let v4: [[Float]] = v0.p2 in
    v1.p1 = v6 in
    v8.p1 = v4 in
    var v7: s0 = v8 in
    let v9: s0 = f52(v1) in
    let v14: s0 = f52(v7) in
    let v13: s0 = f52(v8) in
    let v18: [[Float]] = v7.p1 in
    let v23: [[Float]] = v13.p0 in
    let v34: [[Float]] = v9.p1 in
    let v28: s0 = f52(v14) in
    let v48: [Float] = v28.p3 in
    var v73: [[Float]] = v23 in
    let v36: s0 = s0(v73, v18, v34, v48) in
    v36
  } in
  let f22: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    let v4: s0 = v0[0] in
    let v1: s0 = v0[0] in
    let v7: s0 = v0[0] in
    let v11: s0 = f34(v4) in
    var v10: [s0] = v0 in
    v10[0] = v7 in
    v10[0] = v11 in
    let v29: s0 = f52(v1) in
    var v35: [s0] = v10 in
    v35[0] = v29 in
    v35[0] = v1 in
    v35
  } in
  let noinline_f0: ([s2], s6, [s0], Float) -> Float = (v0: [s2], v1: s6, v2: [s0], v3: Float) -> Float {
    let v6: [s0] = f22(v2) in
    let v5: s0 = v6[0] in
    let v13: s0 = f52(v5) in
    var v15: s0 = v13 in
    var v18: [s0] = v2 in
    v18[0] = v5 in
    v18 = v6 in
    v18[0] = v13 in
    let v41: s0 = v18[0] in
    let v56: s0 = f52(v41) in
    var v85: s0 = v15 in
    let v92: [[Float]] = v85.p0 in
    v15 = v13 in
    var v214: s0 = v56 in
    let v90: s0 = f34(v214) in
    let v89: [[Float]] = v214.p2 in
    let v137: [Float] = v92[0] in
    let v133: Float = v137[0] in
    v214.p2 = v89 in
    let v105: [Float] = v214.p3 in
    let v129: Float = v3 - v133 in
    v15.p3 = v105 in
    v18[0] = v90 in
    v129
  } in
  fun loop(i: Int, v0: [s2], v1: s6, v2: [s0], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([s0([[0.0]], [[1.0], [2.0]], [[3.0], [4.0]], [5.0, 6.0, 7.0]), s0([[8.0]], [[9.0], [10.0]], [[11.0], [12.0]], [13.0, 14.0, 15.0])], [s1([[s0([[16.0]], [[17.0], [18.0]], [[19.0], [20.0]], [21.0, 22.0, 23.0])]], s0([[24.0]], [[25.0], [26.0]], [[27.0], [28.0]], [29.0, 30.0, 31.0]))], [s0([[32.0]], [[33.0], [34.0]], [[35.0], [36.0]], [37.0, 38.0, 39.0])], s0([[40.0]], [[41.0], [42.0]], [[43.0], [44.0]], [45.0, 46.0, 47.0]), [[s0([[48.0]], [[49.0], [50.0]], [[51.0], [52.0]], [53.0, 54.0, 55.0])], [s0([[56.0]], [[57.0], [58.0]], [[59.0], [60.0]], [61.0, 62.0, 63.0])], [s0([[64.0]], [[65.0], [66.0]], [[67.0], [68.0]], [69.0, 70.0, 71.0])]]), s2([s0([[72.0]], [[73.0], [74.0]], [[75.0], [76.0]], [77.0, 78.0, 79.0]), s0([[80.0]], [[81.0], [82.0]], [[83.0], [84.0]], [85.0, 86.0, 87.0])], [s1([[s0([[88.0]], [[89.0], [90.0]], [[91.0], [92.0]], [93.0, 94.0, 95.0])]], s0([[96.0]], [[97.0], [98.0]], [[99.0], [100.0]], [101.0, 102.0, 103.0]))], [s0([[104.0]], [[105.0], [106.0]], [[107.0], [108.0]], [109.0, 110.0, 111.0])], s0([[112.0]], [[113.0], [114.0]], [[115.0], [116.0]], [117.0, 118.0, 119.0]), [[s0([[120.0]], [[121.0], [122.0]], [[123.0], [124.0]], [125.0, 126.0, 127.0])], [s0([[128.0]], [[129.0], [130.0]], [[131.0], [132.0]], [133.0, 134.0, 135.0])], [s0([[136.0]], [[137.0], [138.0]], [[139.0], [140.0]], [141.0, 142.0, 143.0])]])] in
    let v1: s6 = s6(s1([[s0([[144.0]], [[145.0], [146.0]], [[147.0], [148.0]], [149.0, 150.0, 151.0])]], s0([[152.0]], [[153.0], [154.0]], [[155.0], [156.0]], [157.0, 158.0, 159.0])), s5(s2([s0([[160.0]], [[161.0], [162.0]], [[163.0], [164.0]], [165.0, 166.0, 167.0]), s0([[168.0]], [[169.0], [170.0]], [[171.0], [172.0]], [173.0, 174.0, 175.0])], [s1([[s0([[176.0]], [[177.0], [178.0]], [[179.0], [180.0]], [181.0, 182.0, 183.0])]], s0([[184.0]], [[185.0], [186.0]], [[187.0], [188.0]], [189.0, 190.0, 191.0]))], [s0([[192.0]], [[193.0], [194.0]], [[195.0], [196.0]], [197.0, 198.0, 199.0])], s0([[200.0]], [[201.0], [202.0]], [[203.0], [204.0]], [205.0, 206.0, 207.0]), [[s0([[208.0]], [[209.0], [210.0]], [[211.0], [212.0]], [213.0, 214.0, 215.0])], [s0([[216.0]], [[217.0], [218.0]], [[219.0], [220.0]], [221.0, 222.0, 223.0])], [s0([[224.0]], [[225.0], [226.0]], [[227.0], [228.0]], [229.0, 230.0, 231.0])]]), [[s1([[s0([[232.0]], [[233.0], [234.0]], [[235.0], [236.0]], [237.0, 238.0, 239.0])]], s0([[240.0]], [[241.0], [242.0]], [[243.0], [244.0]], [245.0, 246.0, 247.0]))], [s1([[s0([[248.0]], [[249.0], [250.0]], [[251.0], [252.0]], [253.0, 254.0, 255.0])]], s0([[256.0]], [[257.0], [258.0]], [[259.0], [260.0]], [261.0, 262.0, 263.0]))]])) in
    let v2: [s0] = [s0([[264.0]], [[265.0], [266.0]], [[267.0], [268.0]], [269.0, 270.0, 271.0])] in
    let v3: Float = 272.0 in
    let initialResult: Float = 272.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()