  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s0
    var p1: [s2]
  } in
  struct s4 {
    var p0: [[s2]]
    var p1: s2
    var p2: s0
  } in
  struct s5 {
    var p0: s2
    var p1: s4
  } in
  let f117: (s2, s4) -> s4 = (v0: s2, v1: s4) -> s4 {
    let v2: s0 = v0.p0 in
    let v3: [[Float]] = v2.p0 in
    var v13: s4 = v1 in
    let v5: s0 = v13.p2 in
    var v15: s0 = v2 in
    let v14: [[s2]] = v13.p0 in
    v13.p0 = v14 in
    var v26: s4 = v1 in
    let v30: s2 = v26.p1 in
    var v17: s0 = v15 in
    let v35: [s0] = [v15] in
    var v40: [s0] = v35 in
    let v123: [[Float]] = v17.p0 in
    v40[0] = v17 in
    var v25: s0 = v5 in
    var v33: s4 = v1 in
    v13 = v26 in
    let v46: s0 = v40[0] in
    let v52: s1 = s1(v25, v46) in
    v33.p1 = v30 in
    v40[0] = v5 in
    let v101: s0 = v52.p1 in
    v25.p0 = v3 in
    let v76: s0 = v52.p1 in
    v17.p0 = v123 in
    v33.p2 = v76 in
    v15 = v101 in
    v33
  } in
  let f110: ([s2]) -> [s2] = (v0: [s2]) -> [s2] {
    let v5: s2 = v0[0] in
    var v8: [s2] = v0 in
    let v3: [[s1]] = v5.p1 in
    let v6: [s1] = v3[0] in
    let v2: s2 = v0[0] in
    let v11: s2 = v0[0] in
    let v7: s2 = v0[0] in
    v8[0] = v11 in
    v8[0] = v11 in
    let v4: s0 = v7.p0 in
    let v9: [[s1]] = v11.p1 in
    v8[0] = v7 in
    var v15: s2 = v2 in
    v15.p1 = v9 in
    let v10: s1 = s1(v4, v4) in
    let v23: [[s1]] = v5.p1 in
    let v13: s0 = v10.p0 in
    v8[0] = v5 in
    v8[0] = v7 in
    let v24: s2 = s2(v13, v9) in
    v15.p1 = v23 in
    var v27: [s2] = v8 in
    let v35: [s0] = [v4, v13, v13, v13] in
    v8[0] = v2 in
    v27[0] = v15 in
    var v33: [s0] = v35 in
    v27[0] = v5 in
    let v32: s0 = v24.p0 in
    v33[3] = v32 in
    let v21: s1 = v6[0] in
    v33[3] = v4 in
    v27[0] = v24 in
    v8[0] = v15 in
    var v39: [s0] = v35 in
    v8[0] = v2 in
    v8[0] = v2 in
    let v89: s0 = v33[1] in
    v15.p0 = v89 in
    let v31: s0 = v2.p0 in
    v8 = v27 in
    var v83: [s0] = v39 in
    let v78: s0 = v21.p1 in
    let v47: s0 = v5.p0 in
    let v179: s0 = v83[0] in
    v33[0] = v179 in
    v15.p0 = v31 in
    v83[0] = v47 in
    v83 = v39 in
    v33[1] = v179 in
    v39[3] = v78 in
    v27
  } in
  let f102: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v3: Float = v0[0] in
    var v7: Float = v3 in
    let v5: Float = v0[0] in
    let v10: Float = v0[0] in
    let v1: [Float] = [v5, v3, v3] in
    var v2: [Float] = v0 in
    v2[0] = v5 in
    var v8: [Float] = v0 in
    var v11: [Float] = v8 in
    var v6: [Float] = v8 in
    v11[0] = v5 in
    let v9: Float = v1[2] in
    var v14: [Float] = v1 in
    var v13: [Float] = v6 in
    let v24: Float = v14[1] in
    let v17: Float = v14[2] in
    v6[0] = v5 in
    let v28: Float = v1[1] in
    var v15: [Float] = v1 in
    v6[0] = v17 in
    let v25: Float = v0[0] in
    let v18: Float = v11[0] in
    var v34: [Float] = v1 in
    var v35: Float = v25 in
    let v42: Float = v14[2] in
    var v27: Float = v9 in
    let v31: Float = v15[1] in
    let v64: Float = v14[0] in
    var v32: [Float] = v34 in
    let v29: Float = v11[0] in
    let v23: Float = v11[0] in
    v13[0] = v7 in
    v13[0] = v7 in
    var v22: [Float] = v14 in
    let v45: Float = v13[0] in
    v32[1] = v24 in
    let v48: Float = v13[0] in
    v14[1] = v35 in
    v15 = v22 in
    let v53: Float = v32[2] in
    var v63: [Float] = v2 in
    v32[0] = v53 in
    v14[2] = v10 in
    let v26: [[Float]] = [v0, v11, v2, v11, v2, v8] in
    v14[2] = v48 in
    let v41: [Float] = [v27, v45, v27, v23, v45, v18, v5] in
    let v110: Float = v63[0] in
    v22[2] = v25 in
    var v100: Float = v9 in
    v22[0] = v53 in
    v15[2] = v29 in
    v14[0] = v100 in
    v63[0] = v23 in
    let v56: [[[Float]]] = [v26, v26] in
    v11[0] = v42 in
    v11[0] = v23 in
    let v79: [[Float]] = v56[0] in
    let v81: Float = v41[5] in
    var v65: [[Float]] = v79 in
    v11[0] = v81 in
    v22 = v1 in
    let v120: [Float] = v65[1] in
    let v154: Float = v7 * v64 in
    v35 = v31 in
    v65[1] = v13 in
    v2[0] = v28 in
    v34[1] = v154 in
    v7 = v110 in
    v120
  } in
  let f96: ([s4]) -> [s4] = (v0: [s4]) -> [s4] {
    var v6: [s4] = v0 in
    let v1: s4 = v6[0] in
    var v2: s4 = v1 in
    v6[0] = v2 in
    v6 = v0 in
    let v3: s0 = v1.p2 in
    var v5: s0 = v3 in
    v2.p2 = v3 in
    v6[0] = v1 in
    v6[0] = v1 in
    var v11: [s4] = v0 in
    let v8: s1 = s1(v5, v3) in
    v6[0] = v2 in
    v11 = v6 in
    let v10: s4 = v6[0] in
    let v7: s4 = v11[0] in
    let v16: s0 = v8.p0 in
    let v12: [[s2]] = v10.p0 in
    v2.p2 = v16 in
    var v30: [[s2]] = v12 in
    var v9: [[s2]] = v30 in
    var v15: [[s2]] = v30 in
    v2.p2 = v3 in
    let v20: [s2] = v15[1] in
    let v21: [s2] = f110(v20) in
    let v19: [s2] = f110(v20) in
    let v38: s2 = v20[0] in
    var v41: s4 = v10 in
    let v18: s4 = v6[0] in
    let v13: s4 = f117(v38, v10) in
    v30[1] = v20 in
    v41.p1 = v38 in
    let v22: [[Float]] = v3.p0 in
    let v24: [[s2]] = v18.p0 in
    let v28: [s2] = f110(v20) in
    v41.p0 = v24 in
    let v31: s2 = v7.p1 in
    let v35: [s2] = v30[1] in
    var v29: [s2] = v21 in
    let v42: s2 = v19[0] in
    let v58: [s2] = f110(v19) in
    v9[1] = v35 in
    v9[1] = v58 in
    let v44: s4 = f117(v38, v1) in
    let v27: s4 = f117(v42, v13) in
    v30[0] = v58 in
    v29[0] = v31 in
    v5.p0 = v22 in
    v5.p0 = v22 in
    v9[0] = v29 in
    v6[0] = v7 in
    var v92: s4 = v44 in
    var v34: [s4] = v0 in
    var v66: s4 = v7 in
    v11[0] = v13 in
    var v55: s4 = v44 in
    let v32: s5 = s5(v31, v27) in
    let v76: [s2] = f110(v28) in
    v30[0] = v35 in
    var v175: s2 = v38 in
    var v62: [[Float]] = v22 in
    v92.p1 = v175 in
    v30[1] = v76 in
    let v118: s4 = f117(v31, v55) in
    var v72: s5 = v32 in
    v6[0] = v66 in
    let v103: s4 = v72.p1 in
    let v93: s4 = f117(v42, v118) in
    v41.p1 = v38 in
    let v85: [[s2]] = v41.p0 in
    var v109: [s2] = v76 in
    v15[0] = v20 in
    v55.p0 = v85 in
    let v111: s2 = v28[0] in
    let v98: s2 = v109[0] in
    v2.p0 = v15 in
    v72.p0 = v111 in
    v9[0] = v58 in
    v92 = v103 in
    var v147: [s4] = v34 in
    v72.p1 = v92 in
    v147[0] = v93 in
    let v162: s2 = v72.p0 in
    v2.p0 = v9 in
    v5.p0 = v62 in
    v29[0] = v98 in
    v109[0] = v162 in
    v147
  } in
  let f42: (Float, [[s4]]) -> Float = (v0: Float, v1: [[s4]]) -> Float {
    var v5: [[s4]] = v1 in
    let v2: [s4] = v5[0] in
    let v16: s4 = v2[0] in
    let v11: [s4] = f96(v2) in
    let v10: s0 = v16.p2 in
    var v42: s0 = v10 in
    let v32: [[Float]] = v42.p0 in
    let v54: [Float] = v32[0] in
    v5[0] = v2 in
    let v22: [[Float]] = v10.p1 in
    var v65: [[Float]] = v32 in
    v65[0] = v54 in
    v65[0] = v54 in
    let v28: [Float] = f102(v54) in
    v42.p0 = v65 in
    let v49: Float = v54[0] in
    v65[0] = v28 in
    let v101: [Float] = v22[0] in
    var v51: [[Float]] = v22 in
    let v74: [Float] = v51[1] in
    v51 = v22 in
    v5[2] = v11 in
    v51[1] = v101 in
    v65[0] = v74 in
    v51[0] = v54 in
    var v77: Float = v49 in
    v65[0] = v74 in
    var v124: [Float] = v28 in
    v51[0] = v124 in
    v77
  } in
  let noinline_f0: ([s3], [[s4]], Float) -> Float = (v0: [s3], v1: [[s4]], v2: Float) -> Float {
    let v5: Float = f42(v2, v1) in
    var v13: Float = v5 in
    var v19: Float = v13 in
    let v24: Float = v19 / v19 in
    v24
  } in
  fun loop(i: Int, v0: [s3], v1: [[s4]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3(s0([[0.0]], [[1.0], [2.0]]), [s2(s0([[3.0]], [[4.0], [5.0]]), [[s1(s0([[6.0]], [[7.0], [8.0]]), s0([[9.0]], [[10.0], [11.0]]))], [s1(s0([[12.0]], [[13.0], [14.0]]), s0([[15.0]], [[16.0], [17.0]]))]]), s2(s0([[18.0]], [[19.0], [20.0]]), [[s1(s0([[21.0]], [[22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0]]))], [s1(s0([[27.0]], [[28.0], [29.0]]), s0([[30.0]], [[31.0], [32.0]]))]])]), s3(s0([[33.0]], [[34.0], [35.0]]), [s2(s0([[36.0]], [[37.0], [38.0]]), [[s1(s0([[39.0]], [[40.0], [41.0]]), s0([[42.0]], [[43.0], [44.0]]))], [s1(s0([[45.0]], [[46.0], [47.0]]), s0([[48.0]], [[49.0], [50.0]]))]]), s2(s0([[51.0]], [[52.0], [53.0]]), [[s1(s0([[54.0]], [[55.0], [56.0]]), s0([[57.0]], [[58.0], [59.0]]))], [s1(s0([[60.0]], [[61.0], [62.0]]), s0([[63.0]], [[64.0], [65.0]]))]])]), s3(s0([[66.0]], [[67.0], [68.0]]), [s2(s0([[69.0]], [[70.0], [71.0]]), [[s1(s0([[72.0]], [[73.0], [74.0]]), s0([[75.0]], [[76.0], [77.0]]))], [s1(s0([[78.0]], [[79.0], [80.0]]), s0([[81.0]], [[82.0], [83.0]]))]]), s2(s0([[84.0]], [[85.0], [86.0]]), [[s1(s0([[87.0]], [[88.0], [89.0]]), s0([[90.0]], [[91.0], [92.0]]))], [s1(s0([[93.0]], [[94.0], [95.0]]), s0([[96.0]], [[97.0], [98.0]]))]])])] in
    let v1: [[s4]] = [[s4([[s2(s0([[99.0]], [[100.0], [101.0]]), [[s1(s0([[102.0]], [[103.0], [104.0]]), s0([[105.0]], [[106.0], [107.0]]))], [s1(s0([[108.0]], [[109.0], [110.0]]), s0([[111.0]], [[112.0], [113.0]]))]])], [s2(s0([[114.0]], [[115.0], [116.0]]), [[s1(s0([[117.0]], [[118.0], [119.0]]), s0([[120.0]], [[121.0], [122.0]]))], [s1(s0([[123.0]], [[124.0], [125.0]]), s0([[126.0]], [[127.0], [128.0]]))]])]], s2(s0([[129.0]], [[130.0], [131.0]]), [[s1(s0([[132.0]], [[133.0], [134.0]]), s0([[135.0]], [[136.0], [137.0]]))], [s1(s0([[138.0]], [[139.0], [140.0]]), s0([[141.0]], [[142.0], [143.0]]))]]), s0([[144.0]], [[145.0], [146.0]]))], [s4([[s2(s0([[147.0]], [[148.0], [149.0]]), [[s1(s0([[150.0]], [[151.0], [152.0]]), s0([[153.0]], [[154.0], [155.0]]))], [s1(s0([[156.0]], [[157.0], [158.0]]), s0([[159.0]], [[160.0], [161.0]]))]])], [s2(s0([[162.0]], [[163.0], [164.0]]), [[s1(s0([[165.0]], [[166.0], [167.0]]), s0([[168.0]], [[169.0], [170.0]]))], [s1(s0([[171.0]], [[172.0], [173.0]]), s0([[174.0]], [[175.0], [176.0]]))]])]], s2(s0([[177.0]], [[178.0], [179.0]]), [[s1(s0([[180.0]], [[181.0], [182.0]]), s0([[183.0]], [[184.0], [185.0]]))], [s1(s0([[186.0]], [[187.0], [188.0]]), s0([[189.0]], [[190.0], [191.0]]))]]), s0([[192.0]], [[193.0], [194.0]]))], [s4([[s2(s0([[195.0]], [[196.0], [197.0]]), [[s1(s0([[198.0]], [[199.0], [200.0]]), s0([[201.0]], [[202.0], [203.0]]))], [s1(s0([[204.0]], [[205.0], [206.0]]), s0([[207.0]], [[208.0], [209.0]]))]])], [s2(s0([[210.0]], [[211.0], [212.0]]), [[s1(s0([[213.0]], [[214.0], [215.0]]), s0([[216.0]], [[217.0], [218.0]]))], [s1(s0([[219.0]], [[220.0], [221.0]]), s0([[222.0]], [[223.0], [224.0]]))]])]], s2(s0([[225.0]], [[226.0], [227.0]]), [[s1(s0([[228.0]], [[229.0], [230.0]]), s0([[231.0]], [[232.0], [233.0]]))], [s1(s0([[234.0]], [[235.0], [236.0]]), s0([[237.0]], [[238.0], [239.0]]))]]), s0([[240.0]], [[241.0], [242.0]]))]] in
    let v2: Float = 243.0 in
    let initialResult: Float = 243.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()