  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  let f32: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [s0] = [v0, v0, v0, v0, v0] in
    var v7: s0 = v0 in
    var v5: s0 = v7 in
    var v6: s0 = v5 in
    let v2: [[Float]] = v0.p0 in
    let v4: s0 = v1[2] in
    let v13: s0 = v1[3] in
    var v19: [s0] = v1 in
    let v20: [[Float]] = v13.p0 in
    let v11: [[Float]] = v4.p0 in
    let v23: [[Float]] = v13.p1 in
    let v16: s0 = s0(v2, v23) in
    let v28: [[Float]] = v5.p0 in
    let v24: [[[Float]]] = [v28, v11, v20, v2, v28, v28, v11] in
    let v30: [[Float]] = v24[5] in
    let v41: s0 = s0(v20, v23) in
    v6.p0 = v20 in
    let v35: [[Float]] = v6.p1 in
    let v26: s0 = v19[2] in
    let v14: s0 = v19[3] in
    let v40: s0 = v19[1] in
    v19[0] = v13 in
    v19[1] = v4 in
    let v73: [[Float]] = v40.p1 in
    let v47: s0 = v1[0] in
    var v44: s0 = v14 in
    v5.p1 = v73 in
    let v39: [[Float]] = v47.p0 in
    v19[3] = v41 in
    let v54: [[Float]] = v44.p0 in
    let v64: [[Float]] = v16.p0 in
    v5.p0 = v54 in
    v44 = v7 in
    v44.p1 = v35 in
    v5.p1 = v73 in
    let v107: [[Float]] = v26.p1 in
    var v78: [[Float]] = v30 in
    v44.p0 = v39 in
    let v97: [[Float]] = v26.p1 in
    v7.p1 = v23 in
    let v244: s0 = s0(v78, v107) in
    v44.p0 = v64 in
    v6.p1 = v97 in
    v244
  } in
  let noinline_f0: ([[s1]], Float) -> Float = (v0: [[s1]], v1: Float) -> Float {
    let v3: [s1] = v0[1] in
    let v7: [s1] = v0[1] in
    var v2: [s1] = v7 in
    let v4: s1 = v2[0] in
    let v5: s1 = v3[0] in
    var v8: Float = v1 in
    var v11: [s1] = v2 in
    let v9: s1 = v7[0] in
    v11[0] = v9 in
    var v18: s1 = v5 in
    v11[0] = v4 in
    let v23: s1 = v11[0] in
    v2[0] = v4 in
    let v20: s0 = v23.p1 in
    v2[0] = v18 in
    let v42: [[Float]] = v20.p0 in
    let v15: s0 = f32(v20) in
    v11 = v7 in
    v18.p1 = v15 in
    var v63: s1 = v23 in
    let v19: [Float] = v42[2] in
    v63.p1 = v20 in
    let v55: s0 = f32(v20) in
    let v38: s0 = f32(v15) in
    v2[0] = v63 in
    let v77: Float = v19[0] in
    let v33: s0 = v9.p1 in
    var v49: Float = v8 in
    v63.p1 = v33 in
    let v32: [[Float]] = v55.p1 in
    let v36: s0 = f32(v38) in
    v18.p1 = v36 in
    var v29: [[Float]] = v32 in
    var v52: [[Float]] = v32 in
    let v45: [[Float]] = v20.p0 in
    let v93: [[Float]] = v38.p1 in
    var v40: [[Float]] = v45 in
    let v65: s0 = s0(v40, v52) in
    let v46: [Float] = v32[0] in
    let v60: s0 = f32(v20) in
    v63.p1 = v65 in
    let v37: [Float] = v93[0] in
    v52[0] = v37 in
    let v112: s0 = f32(v60) in
    let v98: [Float] = v29[0] in
    let v194: Float = v49 + v77 in
    v63.p1 = v112 in
    v52[0] = v98 in
    v40[0] = v46 in
    v194
  } in
  fun loop(i: Int, v0: [[s1]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s1]] = [[s1([[s0([[0.0], [1.0], [2.0]], [[3.0]])]], s0([[4.0], [5.0], [6.0]], [[7.0]]))], [s1([[s0([[8.0], [9.0], [10.0]], [[11.0]])]], s0([[12.0], [13.0], [14.0]], [[15.0]]))]] in
    let v1: Float = 16.0 in
    let initialResult: Float = 16.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()