  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
    var p2: [[s0]]
  } in
  let noinline_f0: (s1, [[s1]], Float) -> Float = (v0: s1, v1: [[s1]], v2: Float) -> Float {
    var v5: Float = v2 in
    var v8: Float = v2 in
    var v50: Float = v5 in
    let v24: Float = v5 / v50 in
    v8 = v5 in
    v5 = v50 in
    var v51: Float = v8 in
    v51 = v50 in
    let v121: Float = v24 / v50 in
    v5 = v121 in
    let v133: Float = v121 - v51 in
    v133
  } in
  fun loop(i: Int, v0: s1, v1: [[s1]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([[s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]])], [s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])]], s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), [[s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])]]) in
    let v1: [[s1]] = [[s1([[s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]])], [s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]])]], s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), [[s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]])], [s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]])]])], [s1([[s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]])], [s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]])]], s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]]), [[s0([[65.0], [66.0]], [[67.0], [68.0], [69.0]])], [s0([[70.0], [71.0]], [[72.0], [73.0], [74.0]])]])], [s1([[s0([[75.0], [76.0]], [[77.0], [78.0], [79.0]])], [s0([[80.0], [81.0]], [[82.0], [83.0], [84.0]])]], s0([[85.0], [86.0]], [[87.0], [88.0], [89.0]]), [[s0([[90.0], [91.0]], [[92.0], [93.0], [94.0]])], [s0([[95.0], [96.0]], [[97.0], [98.0], [99.0]])]])]] in
    let v2: Float = 100.0 in
    let initialResult: Float = 100.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()