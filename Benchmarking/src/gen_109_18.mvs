  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f11: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p1 in
    let v4: [[[Float]]] = [v5, v5] in
    let v10: [[Float]] = v0.p1 in
    var v17: s0 = v0 in
    v17.p0 = v10 in
    var v24: s0 = v17 in
    let v31: [[Float]] = v17.p0 in
    let v13: [[Float]] = v0.p1 in
    let v26: [[Float]] = v24.p1 in
    v17.p1 = v31 in
    var v37: [[[Float]]] = v4 in
    let v28: [[Float]] = v37[1] in
    v17.p0 = v28 in
    v17.p1 = v13 in
    let v57: [[Float]] = v17.p1 in
    let v61: s0 = s0(v57, v26) in
    v61
  } in
  let f9: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v4: [[Float]] = v1.p1 in
    let v7: [Float] = v4[0] in
    let v8: [[Float]] = v0.p1 in
    var v6: s0 = v1 in
    v6.p0 = v4 in
    let v17: s0 = f11(v0) in
    var v15: s0 = v1 in
    let v20: [Float] = v8[0] in
    var v14: s0 = v17 in
    let v19: s0 = f11(v14) in
    let v16: [[Float]] = v14.p0 in
    var v24: [[Float]] = v8 in
    var v29: s0 = v0 in
    let v38: [[Float]] = v19.p0 in
    let v31: s0 = s0(v38, v16) in
    let v28: [[Float]] = v15.p1 in
    let v25: s0 = s0(v8, v24) in
    v15.p0 = v28 in
    let v50: s0 = f11(v14) in
    v24[0] = v20 in
    v24[0] = v7 in
    let v57: [[Float]] = v31.p1 in
    let v65: s0 = f11(v31) in
    let v94: s0 = f11(v1) in
    let v51: s0 = f11(v15) in
    let v86: [[Float]] = v50.p1 in
    let v67: s0 = f11(v94) in
    let v81: s0 = f11(v29) in
    let v83: [[Float]] = v67.p1 in
    let v90: [[Float]] = v25.p1 in
    let v115: s0 = s0(v83, v90) in
    let v79: s0 = f11(v6) in
    v14.p1 = v57 in
    let v133: [[Float]] = v51.p0 in
    let v134: [s0] = [v115, v65, v115, v81] in
    let v147: [[Float]] = v79.p1 in
    let v173: s0 = v134[1] in
    v14.p0 = v86 in
    v29.p1 = v133 in
    let v178: s0 = f11(v173) in
    v24 = v147 in
    v178
  } in
  let f8: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v5: [[Float]] = v6.p1 in
    let v1: [Float] = v5[0] in
    var v3: [Float] = v1 in
    let v2: s0 = f11(v0) in
    let v4: [Float] = v5[0] in
    var v8: s0 = v2 in
    let v18: s0 = f9(v6, v0) in
    var v7: [[Float]] = v5 in
    v6.p0 = v5 in
    let v10: Float = v3[0] in
    let v13: [[Float]] = v8.p0 in
    v8.p1 = v13 in
    let v9: [[Float]] = v0.p1 in
    var v11: [[Float]] = v7 in
    let v19: s0 = f9(v18, v8) in
    let v12: [[Float]] = v19.p1 in
    let v17: [[Float]] = v18.p1 in
    var v22: [[Float]] = v12 in
    var v28: [[Float]] = v7 in
    v28[0] = v4 in
    let v16: Float = v3[0] in
    v3[0] = v16 in
    let v35: [Float] = v17[0] in
    v7[0] = v3 in
    v3[0] = v10 in
    v28[0] = v35 in
    v22[0] = v4 in
    v8.p1 = v9 in
    let v49: [Float] = v22[0] in
    let v60: s0 = s0(v7, v28) in
    v7[0] = v49 in
    v8.p0 = v11 in
    v6.p0 = v13 in
    v6.p1 = v7 in
    v60
  } in
  let f7: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v6: s0 = f9(v1, v1) in
    let v3: [[Float]] = v0.p0 in
    let v7: s0 = f9(v0, v6) in
    let v2: [[Float]] = v1.p1 in
    let v11: s0 = f8(v1) in
    let v13: s0 = f11(v0) in
    let v12: s0 = s0(v2, v2) in
    let v19: s0 = f9(v12, v13) in
    let v21: s0 = f8(v7) in
    let v38: [[Float]] = v19.p1 in
    let v30: s0 = f9(v7, v11) in
    let v37: [[Float]] = v7.p1 in
    let v80: s0 = f9(v21, v6) in
    var v39: s0 = v30 in
    v39.p0 = v3 in
    let v36: [[Float]] = v80.p0 in
    v39.p0 = v38 in
    v39.p0 = v37 in
    v39.p1 = v36 in
    v39
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v5: [[Float]] = v0.p1 in
    let v6: [[Float]] = v0.p0 in
    let v4: [[Float]] = v0.p0 in
    var v2: s0 = v0 in
    let v8: s0 = f9(v0, v0) in
    let v12: s0 = f8(v0) in
    v2.p0 = v6 in
    v2.p0 = v5 in
    let v10: s0 = f9(v2, v2) in
    v2.p0 = v6 in
    v2 = v12 in
    let v3: [[Float]] = v10.p0 in
    let v18: [Float] = v3[0] in
    let v14: s0 = f11(v8) in
    var v20: s0 = v14 in
    v20.p0 = v3 in
    var v39: s0 = v14 in
    let v44: [[Float]] = v20.p1 in
    let v51: [Float] = v44[0] in
    let v26: [[Float]] = v0.p0 in
    let v61: [[Float]] = v0.p1 in
    let v34: s0 = f9(v12, v20) in
    var v35: [[Float]] = v4 in
    var v23: [[Float]] = v26 in
    let v97: [[Float]] = v2.p0 in
    var v43: s0 = v34 in
    let v53: [[[Float]]] = [v97, v97, v44, v61, v3] in
    var v37: s0 = v12 in
    let v65: [[Float]] = v20.p1 in
    v2.p1 = v65 in
    let v73: s0 = f9(v39, v37) in
    let v47: s0 = f7(v12, v43) in
    let v68: [[Float]] = v73.p0 in
    let v78: [[Float]] = v47.p1 in
    var v104: [[Float]] = v5 in
    v39.p0 = v78 in
    v2.p1 = v61 in
    v20.p1 = v35 in
    v37.p0 = v104 in
    let v127: [[Float]] = v53[1] in
    v104[0] = v18 in
    v2.p1 = v127 in
    v23[0] = v51 in
    v39.p1 = v23 in
    let v108: Float = v51[0] in
    v2.p0 = v68 in
    v108
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0]]) in
    let v1: Float = 2.0 in
    let initialResult: Float = 2.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()