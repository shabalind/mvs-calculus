  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<std::vector<double>> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<std::vector<double>> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  struct s1 {
    std::vector<std::vector<s0>> p0;
    std::vector<std::vector<s0>> p1;
    s1(std::vector<std::vector<s0>> v0, std::vector<std::vector<s0>> v1): p0(v0), p1(v1) { }
  };
  struct s2 {
    std::vector<s0> p0;
    s1 p1;
    s2(std::vector<s0> v0, s1 v1): p0(v0), p1(v1) { }
  };
  struct s3 {
    std::vector<std::vector<s0>> p0;
    std::vector<std::vector<s2>> p1;
    s3(std::vector<std::vector<s0>> v0, std::vector<std::vector<s2>> v1): p0(v0), p1(v1) { }
  };
  struct s4 {
    s3 p0;
    s1 p1;
    s4(s3 v0, s1 v1): p0(v0), p1(v1) { }
  };
  struct s5 {
    std::vector<s1> p0;
    std::vector<s4> p1;
    s5(std::vector<s1> v0, std::vector<s4> v1): p0(v0), p1(v1) { }
  };
  struct s9 {
    std::vector<s5> p0;
    s3 p1;
    s9(std::vector<s5> v0, s3 v1): p0(v0), p1(v1) { }
  };
  s3 f41(const s3 &v0) {
    const std::vector<std::vector<s2>> v3 = v0.p1;
    const std::vector<s2> v6 = v3[0];
    const std::vector<std::vector<s2>> v9 = v0.p1;
    const s2 v2 = v6[0];
    const std::vector<std::vector<s0>> v16 = v0.p0;
    std::vector<std::vector<s0>> v20 = v16;
    std::vector<std::vector<s0>> v23 = v16;
    s3 v19 = v0;
    v19.p1 = v3;
    const std::vector<s0> v17 = v23[1];
    const std::vector<std::vector<s0>> v54 = v0.p0;
    s3 v26 = v19;
    s3 v42 = v26;
    v26.p0 = v54;
    v20[0] = v17;
    v20 = v23;
    s2 v44 = v2;
    const s1 v63 = v2.p1;
    v20[1] = v17;
    v19.p1 = v3;
    const std::vector<s0> v96 = v44.p0;
    std::vector<s0> v45 = v17;
    v42.p0 = v54;
    v20[0] = v45;
    const std::vector<std::vector<s2>> v41 = v0.p1;
    const s0 v47 = v96[0];
    const std::vector<s0> v148 = v54[0];
    v20[0] = v148;
    v45[0] = v47;
    v26.p1 = v9;
    v26.p0 = v23;
    v44.p1 = v63;
    v20[1] = v17;
    v42.p0 = v20;
    v26.p1 = v41;
    return v42;
  }
  __attribute__((noinline))
  double f0(const std::vector<s9> &v0, const double &v1) {
    const s9 v3 = v0[0];
    double v11 = v1;
    double v8 = v1;
    const s3 v9 = v3.p1;
    double v12 = v11;
    const s3 v10 = f41(v9);
    const std::vector<double> v31 { v11, v12, v12, v12, v11, v12 };
    std::vector<double> v32 = v31;
    const std::vector<std::vector<double>> v18 { v31, v32, v31 };
    v32[2] = v12;
    double v17 = v8;
    const std::vector<std::vector<s0>> v30 = v10.p0;
    v32[0] = v12;
    std::vector<std::vector<double>> v67 = v18;
    std::vector<std::vector<double>> v41 = v67;
    std::vector<std::vector<s0>> v64 = v30;
    const std::vector<double> v70 = v41[0];
    const std::vector<s0> v45 = v64[1];
    v64[1] = v45;
    std::vector<double> v89 = v70;
    const double v75 = v89[0];
    const double v91 = v89[4];
    const s0 v110 = v45[0];
    const std::vector<std::vector<double>> v55 = v110.p1;
    std::vector<double> v87 = v32;
    const std::vector<double> v82 = v55[0];
    const double v215 = v87[4];
    v87[2] = v17;
    const double v69 = v215 / v75;
    const double v76 = v17 * v215;
    v32[2] = v91;
    v89[4] = v12;
    v67[2] = v70;
    const double v205 = v82[0];
    v89[2] = v205;
    v87[1] = v76;
    v67[0] = v87;
    return v69;
  }
  int main() {
    std::vector<s9> v0({ { { { { { { { { { { 0.0 }, { 1.0 }, { 2.0 } }, { { 3.0 } } } }, { { { { 4.0 }, { 5.0 }, { 6.0 } }, { { 7.0 } } } }, { { { { 8.0 }, { 9.0 }, { 10.0 } }, { { 11.0 } } } } }, { { { { { 12.0 }, { 13.0 }, { 14.0 } }, { { 15.0 } } } }, { { { { 16.0 }, { 17.0 }, { 18.0 } }, { { 19.0 } } } }, { { { { 20.0 }, { 21.0 }, { 22.0 } }, { { 23.0 } } } } } } }, { { { { { { { { 24.0 }, { 25.0 }, { 26.0 } }, { { 27.0 } } } }, { { { { 28.0 }, { 29.0 }, { 30.0 } }, { { 31.0 } } } } }, { { { { { { { 32.0 }, { 33.0 }, { 34.0 } }, { { 35.0 } } }, { { { 36.0 }, { 37.0 }, { 38.0 } }, { { 39.0 } } } }, { { { { { { 40.0 }, { 41.0 }, { 42.0 } }, { { 43.0 } } } }, { { { { 44.0 }, { 45.0 }, { 46.0 } }, { { 47.0 } } } }, { { { { 48.0 }, { 49.0 }, { 50.0 } }, { { 51.0 } } } } }, { { { { { 52.0 }, { 53.0 }, { 54.0 } }, { { 55.0 } } } }, { { { { 56.0 }, { 57.0 }, { 58.0 } }, { { 59.0 } } } }, { { { { 60.0 }, { 61.0 }, { 62.0 } }, { { 63.0 } } } } } } } } } }, { { { { { { 64.0 }, { 65.0 }, { 66.0 } }, { { 67.0 } } } }, { { { { 68.0 }, { 69.0 }, { 70.0 } }, { { 71.0 } } } }, { { { { 72.0 }, { 73.0 }, { 74.0 } }, { { 75.0 } } } } }, { { { { { 76.0 }, { 77.0 }, { 78.0 } }, { { 79.0 } } } }, { { { { 80.0 }, { 81.0 }, { 82.0 } }, { { 83.0 } } } }, { { { { 84.0 }, { 85.0 }, { 86.0 } }, { { 87.0 } } } } } } } } }, { { { { { { { { 88.0 }, { 89.0 }, { 90.0 } }, { { 91.0 } } } }, { { { { 92.0 }, { 93.0 }, { 94.0 } }, { { 95.0 } } } }, { { { { 96.0 }, { 97.0 }, { 98.0 } }, { { 99.0 } } } } }, { { { { { 100.0 }, { 101.0 }, { 102.0 } }, { { 103.0 } } } }, { { { { 104.0 }, { 105.0 }, { 106.0 } }, { { 107.0 } } } }, { { { { 108.0 }, { 109.0 }, { 110.0 } }, { { 111.0 } } } } } } }, { { { { { { { { 112.0 }, { 113.0 }, { 114.0 } }, { { 115.0 } } } }, { { { { 116.0 }, { 117.0 }, { 118.0 } }, { { 119.0 } } } } }, { { { { { { { 120.0 }, { 121.0 }, { 122.0 } }, { { 123.0 } } }, { { { 124.0 }, { 125.0 }, { 126.0 } }, { { 127.0 } } } }, { { { { { { 128.0 }, { 129.0 }, { 130.0 } }, { { 131.0 } } } }, { { { { 132.0 }, { 133.0 }, { 134.0 } }, { { 135.0 } } } }, { { { { 136.0 }, { 137.0 }, { 138.0 } }, { { 139.0 } } } } }, { { { { { 140.0 }, { 141.0 }, { 142.0 } }, { { 143.0 } } } }, { { { { 144.0 }, { 145.0 }, { 146.0 } }, { { 147.0 } } } }, { { { { 148.0 }, { 149.0 }, { 150.0 } }, { { 151.0 } } } } } } } } } }, { { { { { { 152.0 }, { 153.0 }, { 154.0 } }, { { 155.0 } } } }, { { { { 156.0 }, { 157.0 }, { 158.0 } }, { { 159.0 } } } }, { { { { 160.0 }, { 161.0 }, { 162.0 } }, { { 163.0 } } } } }, { { { { { 164.0 }, { 165.0 }, { 166.0 } }, { { 167.0 } } } }, { { { { 168.0 }, { 169.0 }, { 170.0 } }, { { 171.0 } } } }, { { { { 172.0 }, { 173.0 }, { 174.0 } }, { { 175.0 } } } } } } } } } }, { { { { { { 176.0 }, { 177.0 }, { 178.0 } }, { { 179.0 } } } }, { { { { 180.0 }, { 181.0 }, { 182.0 } }, { { 183.0 } } } } }, { { { { { { { 184.0 }, { 185.0 }, { 186.0 } }, { { 187.0 } } }, { { { 188.0 }, { 189.0 }, { 190.0 } }, { { 191.0 } } } }, { { { { { { 192.0 }, { 193.0 }, { 194.0 } }, { { 195.0 } } } }, { { { { 196.0 }, { 197.0 }, { 198.0 } }, { { 199.0 } } } }, { { { { 200.0 }, { 201.0 }, { 202.0 } }, { { 203.0 } } } } }, { { { { { 204.0 }, { 205.0 }, { 206.0 } }, { { 207.0 } } } }, { { { { 208.0 }, { 209.0 }, { 210.0 } }, { { 211.0 } } } }, { { { { 212.0 }, { 213.0 }, { 214.0 } }, { { 215.0 } } } } } } } } } } }, { { { { { { { { { { 216.0 }, { 217.0 }, { 218.0 } }, { { 219.0 } } } }, { { { { 220.0 }, { 221.0 }, { 222.0 } }, { { 223.0 } } } }, { { { { 224.0 }, { 225.0 }, { 226.0 } }, { { 227.0 } } } } }, { { { { { 228.0 }, { 229.0 }, { 230.0 } }, { { 231.0 } } } }, { { { { 232.0 }, { 233.0 }, { 234.0 } }, { { 235.0 } } } }, { { { { 236.0 }, { 237.0 }, { 238.0 } }, { { 239.0 } } } } } } }, { { { { { { { { 240.0 }, { 241.0 }, { 242.0 } }, { { 243.0 } } } }, { { { { 244.0 }, { 245.0 }, { 246.0 } }, { { 247.0 } } } } }, { { { { { { { 248.0 }, { 249.0 }, { 250.0 } }, { { 251.0 } } }, { { { 252.0 }, { 253.0 }, { 254.0 } }, { { 255.0 } } } }, { { { { { { 256.0 }, { 257.0 }, { 258.0 } }, { { 259.0 } } } }, { { { { 260.0 }, { 261.0 }, { 262.0 } }, { { 263.0 } } } }, { { { { 264.0 }, { 265.0 }, { 266.0 } }, { { 267.0 } } } } }, { { { { { 268.0 }, { 269.0 }, { 270.0 } }, { { 271.0 } } } }, { { { { 272.0 }, { 273.0 }, { 274.0 } }, { { 275.0 } } } }, { { { { 276.0 }, { 277.0 }, { 278.0 } }, { { 279.0 } } } } } } } } } }, { { { { { { 280.0 }, { 281.0 }, { 282.0 } }, { { 283.0 } } } }, { { { { 284.0 }, { 285.0 }, { 286.0 } }, { { 287.0 } } } }, { { { { 288.0 }, { 289.0 }, { 290.0 } }, { { 291.0 } } } } }, { { { { { 292.0 }, { 293.0 }, { 294.0 } }, { { 295.0 } } } }, { { { { 296.0 }, { 297.0 }, { 298.0 } }, { { 299.0 } } } }, { { { { 300.0 }, { 301.0 }, { 302.0 } }, { { 303.0 } } } } } } } } }, { { { { { { { { 304.0 }, { 305.0 }, { 306.0 } }, { { 307.0 } } } }, { { { { 308.0 }, { 309.0 }, { 310.0 } }, { { 311.0 } } } }, { { { { 312.0 }, { 313.0 }, { 314.0 } }, { { 315.0 } } } } }, { { { { { 316.0 }, { 317.0 }, { 318.0 } }, { { 319.0 } } } }, { { { { 320.0 }, { 321.0 }, { 322.0 } }, { { 323.0 } } } }, { { { { 324.0 }, { 325.0 }, { 326.0 } }, { { 327.0 } } } } } } }, { { { { { { { { 328.0 }, { 329.0 }, { 330.0 } }, { { 331.0 } } } }, { { { { 332.0 }, { 333.0 }, { 334.0 } }, { { 335.0 } } } } }, { { { { { { { 336.0 }, { 337.0 }, { 338.0 } }, { { 339.0 } } }, { { { 340.0 }, { 341.0 }, { 342.0 } }, { { 343.0 } } } }, { { { { { { 344.0 }, { 345.0 }, { 346.0 } }, { { 347.0 } } } }, { { { { 348.0 }, { 349.0 }, { 350.0 } }, { { 351.0 } } } }, { { { { 352.0 }, { 353.0 }, { 354.0 } }, { { 355.0 } } } } }, { { { { { 356.0 }, { 357.0 }, { 358.0 } }, { { 359.0 } } } }, { { { { 360.0 }, { 361.0 }, { 362.0 } }, { { 363.0 } } } }, { { { { 364.0 }, { 365.0 }, { 366.0 } }, { { 367.0 } } } } } } } } } }, { { { { { { 368.0 }, { 369.0 }, { 370.0 } }, { { 371.0 } } } }, { { { { 372.0 }, { 373.0 }, { 374.0 } }, { { 375.0 } } } }, { { { { 376.0 }, { 377.0 }, { 378.0 } }, { { 379.0 } } } } }, { { { { { 380.0 }, { 381.0 }, { 382.0 } }, { { 383.0 } } } }, { { { { 384.0 }, { 385.0 }, { 386.0 } }, { { 387.0 } } } }, { { { { 388.0 }, { 389.0 }, { 390.0 } }, { { 391.0 } } } } } } } } } }, { { { { { { 392.0 }, { 393.0 }, { 394.0 } }, { { 395.0 } } } }, { { { { 396.0 }, { 397.0 }, { 398.0 } }, { { 399.0 } } } } }, { { { { { { { 400.0 }, { 401.0 }, { 402.0 } }, { { 403.0 } } }, { { { 404.0 }, { 405.0 }, { 406.0 } }, { { 407.0 } } } }, { { { { { { 408.0 }, { 409.0 }, { 410.0 } }, { { 411.0 } } } }, { { { { 412.0 }, { 413.0 }, { 414.0 } }, { { 415.0 } } } }, { { { { 416.0 }, { 417.0 }, { 418.0 } }, { { 419.0 } } } } }, { { { { { 420.0 }, { 421.0 }, { 422.0 } }, { { 423.0 } } } }, { { { { 424.0 }, { 425.0 }, { 426.0 } }, { { 427.0 } } } }, { { { { 428.0 }, { 429.0 }, { 430.0 } }, { { 431.0 } } } } } } } } } } } });
    double v1(432.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
