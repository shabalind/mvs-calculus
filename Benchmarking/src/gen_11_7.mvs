  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: [[s0]]
    var p1: s2
  } in
  let f41: (s0, [s0]) -> s0 = (v0: s0, v1: [s0]) -> s0 {
    var v6: [s0] = v1 in
    let v7: s0 = v1[0] in
    var v3: [s0] = v6 in
    let v15: s2 = s2(v7, v3) in
    let v13: s0 = v6[2] in
    v3[0] = v13 in
    let v30: [s0] = v15.p1 in
    var v45: [s0] = v30 in
    let v34: s0 = v3[1] in
    v45[2] = v34 in
    let v37: s0 = v45[1] in
    v37
  } in
  let f28: (s3) -> s3 = (v0: s3) -> s3 {
    let v3: s2 = v0.p1 in
    var v7: s3 = v0 in
    var v5: s2 = v3 in
    let v1: [s2] = [v5, v3, v5, v5, v5, v3] in
    v7.p1 = v5 in
    var v2: s2 = v3 in
    var v9: s2 = v2 in
    v7.p1 = v9 in
    var v8: [s2] = v1 in
    let v13: s0 = v5.p0 in
    let v17: s2 = v8[5] in
    let v6: [[Float]] = v13.p1 in
    var v11: s3 = v0 in
    var v12: s3 = v11 in
    v9.p0 = v13 in
    let v44: s2 = v8[4] in
    v8[4] = v44 in
    let v54: s0 = v17.p0 in
    var v34: s0 = v54 in
    v5.p0 = v34 in
    v2.p0 = v13 in
    let v31: [s0] = v3.p1 in
    let v28: s2 = v8[4] in
    v5.p0 = v54 in
    v7 = v12 in
    let v79: s0 = f41(v54, v31) in
    let v49: [Float] = v54.p0 in
    let v73: s2 = v12.p1 in
    v8[0] = v9 in
    var v126: [s0] = v31 in
    let v42: s2 = v7.p1 in
    v34.p0 = v49 in
    v11.p1 = v73 in
    v126[1] = v13 in
    let v146: [[Float]] = v79.p1 in
    v9.p1 = v126 in
    v12.p1 = v9 in
    v7.p1 = v28 in
    let v105: [s0] = v42.p1 in
    v8[2] = v42 in
    v34.p1 = v146 in
    v2.p1 = v105 in
    v34.p1 = v6 in
    v12
  } in
  let f25: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    v0
  } in
  let f17: (s3) -> s3 = (v0: s3) -> s3 {
    let v6: s3 = f28(v0) in
    var v5: s3 = v0 in
    var v7: s3 = v6 in
    let v2: s2 = v6.p1 in
    v7.p1 = v2 in
    let v4: [[s0]] = v5.p0 in
    let v9: [[s0]] = v7.p0 in
    v5.p0 = v9 in
    let v12: [s0] = v9[2] in
    var v21: s2 = v2 in
    let v30: s0 = v12[0] in
    let v29: [s0] = v2.p1 in
    v5.p0 = v4 in
    let v24: [s0] = f25(v12) in
    v7.p1 = v2 in
    var v35: [s0] = v29 in
    let v23: [[s0]] = v6.p0 in
    let v19: s3 = s3(v23, v21) in
    let v27: s0 = v35[2] in
    let v53: s0 = v24[0] in
    let v32: s3 = f28(v19) in
    var v80: [s0] = v29 in
    let v95: s0 = v12[0] in
    var v58: [[s0]] = v4 in
    let v87: s0 = f41(v95, v29) in
    let v42: s2 = v19.p1 in
    let v142: [s0] = v42.p1 in
    let v68: s1 = s1(v58, v87) in
    let v79: [[s0]] = v68.p0 in
    v21.p1 = v29 in
    v21.p1 = v80 in
    var v110: [[s0]] = v79 in
    v35[0] = v30 in
    v21.p0 = v53 in
    v80[0] = v27 in
    v21.p1 = v142 in
    v7.p0 = v110 in
    v32
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    var v2: [[Float]] = v4 in
    let v6: [Float] = v4[2] in
    v2[0] = v6 in
    v2[0] = v6 in
    var v32: [[Float]] = v4 in
    let v12: [[[Float]]] = [v32, v4, v2, v4] in
    let v9: [Float] = v2[2] in
    let v14: [[Float]] = v12[1] in
    v32[1] = v6 in
    var v34: s0 = v0 in
    let v45: [Float] = v34.p0 in
    v32[2] = v9 in
    let v39: s0 = s0(v45, v14) in
    v34.p1 = v4 in
    v39
  } in
  let f1: (s2) -> s2 = (v0: s2) -> s2 {
    var v3: s2 = v0 in
    var v2: s2 = v3 in
    var v4: s2 = v0 in
    var v5: s2 = v4 in
    let v6: s0 = v5.p0 in
    let v1: s0 = v5.p0 in
    var v7: s2 = v0 in
    v2.p0 = v1 in
    var v13: s0 = v6 in
    let v9: [Float] = v13.p0 in
    let v14: s0 = f4(v6) in
    var v8: s2 = v5 in
    let v12: [s0] = v0.p1 in
    v3.p1 = v12 in
    v3.p0 = v6 in
    v7.p1 = v12 in
    v13.p0 = v9 in
    var v15: s2 = v2 in
    let v24: s0 = v12[0] in
    v8 = v3 in
    let v20: s0 = v12[1] in
    v4.p1 = v12 in
    let v31: s0 = f41(v24, v12) in
    let v16: s0 = v12[1] in
    let v30: s0 = f4(v20) in
    let v23: [[Float]] = v20.p1 in
    var v27: [s0] = v12 in
    v27[0] = v20 in
    var v81: s0 = v13 in
    v27[2] = v31 in
    v5.p0 = v16 in
    v27[1] = v81 in
    var v57: [s0] = v12 in
    let v33: s0 = f41(v24, v57) in
    let v67: [s0] = v7.p1 in
    v27[1] = v16 in
    let v42: s0 = v15.p0 in
    v3.p1 = v12 in
    v27[1] = v42 in
    v81.p1 = v23 in
    v57[2] = v1 in
    let v95: s0 = v67[2] in
    v57[2] = v1 in
    v57[0] = v95 in
    let v83: [Float] = v13.p0 in
    let v103: s0 = v8.p0 in
    let v72: s0 = f4(v30) in
    v5.p1 = v12 in
    let v64: s2 = s2(v33, v27) in
    let v77: s0 = f41(v30, v57) in
    v8.p0 = v72 in
    v27[1] = v103 in
    v13.p0 = v83 in
    v7.p0 = v77 in
    v27[1] = v14 in
    v64
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    var v4: s3 = v0 in
    let v3: s2 = v4.p1 in
    let v6: s3 = f28(v0) in
    let v5: s3 = f17(v0) in
    let v15: s0 = v3.p0 in
    let v14: s2 = v6.p1 in
    let v12: s0 = f4(v15) in
    let v23: s2 = f1(v14) in
    v4.p1 = v23 in
    let v27: [[s0]] = v5.p0 in
    let v21: [Float] = v12.p0 in
    v4.p0 = v27 in
    let v73: [[Float]] = [v21, v21, v21, v21, v21, v21] in
    let v139: [Float] = v73[4] in
    v4 = v6 in
    let v140: Float = v139[0] in
    let v253: Float = v1 * v140 in
    v253
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([[s0([0.0, 1.0], [[2.0], [3.0], [4.0]])], [s0([5.0, 6.0], [[7.0], [8.0], [9.0]])], [s0([10.0, 11.0], [[12.0], [13.0], [14.0]])]], s2(s0([15.0, 16.0], [[17.0], [18.0], [19.0]]), [s0([20.0, 21.0], [[22.0], [23.0], [24.0]]), s0([25.0, 26.0], [[27.0], [28.0], [29.0]]), s0([30.0, 31.0], [[32.0], [33.0], [34.0]])])) in
    let v1: Float = 35.0 in
    let initialResult: Float = 35.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()