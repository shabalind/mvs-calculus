  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s1]
  } in
  struct s3 {
    var p0: [s1]
    var p1: [s2]
    var p2: [s2]
  } in
  struct s4 {
    var p0: [s1]
    var p1: [s1]
  } in
  let f32: (s1) -> s1 = (v0: s1) -> s1 {
    var v4: s1 = v0 in
    var v1: s1 = v0 in
    var v5: s1 = v1 in
    let v6: s0 = v0.p0 in
    v1.p0 = v6 in
    let v7: s0 = v5.p1 in
    v4.p0 = v7 in
    v4.p1 = v6 in
    let v2: s0 = v5.p1 in
    let v9: [[Float]] = v7.p1 in
    var v22: s0 = v2 in
    v22.p1 = v9 in
    v4.p1 = v22 in
    v1.p1 = v6 in
    v5.p0 = v2 in
    v4 = v5 in
    v4
  } in
  let f28: (s1) -> s1 = (v0: s1) -> s1 {
    let v3: s0 = v0.p0 in
    let v1: s1 = f32(v0) in
    let v4: s1 = f32(v0) in
    var v9: s1 = v4 in
    let v8: s1 = f32(v1) in
    let v7: s1 = f32(v9) in
    let v5: s0 = v7.p0 in
    v9 = v4 in
    var v24: s0 = v5 in
    let v25: s1 = s1(v3, v24) in
    var v12: s0 = v5 in
    let v38: s1 = f32(v8) in
    let v19: s1 = s1(v12, v12) in
    let v46: s0 = v4.p1 in
    let v39: [[Float]] = v12.p1 in
    let v34: s1 = f32(v38) in
    let v33: s1 = f32(v34) in
    let v52: s0 = v8.p0 in
    let v55: s1 = f32(v8) in
    let v59: s1 = f32(v19) in
    let v69: s0 = v8.p0 in
    v12.p1 = v39 in
    let v60: [[Float]] = v69.p0 in
    var v64: s1 = v25 in
    v24 = v46 in
    v24.p0 = v60 in
    v9.p0 = v5 in
    let v224: s0 = v33.p1 in
    v9.p1 = v224 in
    v64.p0 = v24 in
    v12 = v69 in
    let v114: s1 = f32(v55) in
    v64.p1 = v52 in
    let v81: s0 = v59.p0 in
    let v175: s0 = v114.p0 in
    v9.p0 = v81 in
    let v156: s0 = v9.p0 in
    v9.p1 = v69 in
    v9.p0 = v156 in
    v64.p1 = v175 in
    v64
  } in
  let noinline_f0: ([s3], Float) -> Float = (v0: [s3], v1: Float) -> Float {
    let v6: s3 = v0[0] in
    var v4: s3 = v6 in
    var v2: s3 = v6 in
    let v3: s3 = v0[0] in
    let v10: s3 = v0[0] in
    let v27: s3 = v0[0] in
    let v19: [s1] = v4.p0 in
    let v17: s1 = v19[1] in
    let v28: [s2] = v3.p1 in
    v4.p0 = v19 in
    let v23: [s2] = v10.p1 in
    let v25: s0 = v17.p1 in
    let v20: s1 = f28(v17) in
    let v57: s1 = f32(v20) in
    v4.p1 = v23 in
    v4.p1 = v23 in
    let v62: s2 = v28[0] in
    let v85: [[Float]] = v25.p0 in
    let v41: [s1] = v62.p1 in
    let v94: [s2] = v27.p1 in
    var v60: s3 = v2 in
    let v140: [Float] = v85[1] in
    var v164: [s1] = v41 in
    let v92: s4 = s4(v164, v19) in
    var v133: s4 = v92 in
    let v131: [s1] = v60.p0 in
    let v90: [s1] = v133.p1 in
    v2.p1 = v94 in
    let v75: Float = v140[0] in
    v4.p0 = v90 in
    v164[0] = v57 in
    v4.p0 = v131 in
    v75
  } in
  fun loop(i: Int, v0: [s3], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3([s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])), s1(s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]]))], [s2(s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]]), [s1(s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]]))])], [s2(s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), [s1(s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]]), s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]]))]), s2(s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]]), [s1(s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]]))])])] in
    let v1: Float = 65.0 in
    let initialResult: Float = 65.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()