  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  let f14: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p0 in
    var v1: [[Float]] = v6 in
    var v3: s0 = v0 in
    v3.p0 = v6 in
    let v4: [[Float]] = v0.p1 in
    v3.p0 = v6 in
    var v17: s0 = v3 in
    let v8: [[Float]] = v17.p1 in
    let v11: [[Float]] = v0.p0 in
    let v5: [Float] = v11[0] in
    var v18: s0 = v3 in
    v18.p1 = v8 in
    let v10: [Float] = v8[1] in
    let v22: s0 = s0(v6, v8) in
    v18.p0 = v11 in
    var v15: s0 = v0 in
    let v12: [[Float]] = v18.p0 in
    var v20: [[Float]] = v8 in
    let v19: [Float] = v8[0] in
    v17.p0 = v1 in
    let v25: [[[Float]]] = [v4, v20, v20, v8] in
    v1[0] = v10 in
    var v16: [Float] = v10 in
    let v21: [[Float]] = v22.p0 in
    var v52: [Float] = v5 in
    var v40: [[Float]] = v4 in
    let v26: [Float] = v12[0] in
    let v38: [[Float]] = [v16, v52, v16, v26, v26, v5] in
    var v29: s0 = v22 in
    let v27: [[Float]] = v17.p0 in
    var v36: s0 = v0 in
    var v81: [[[Float]]] = v25 in
    let v39: [Float] = v38[3] in
    var v46: s0 = v0 in
    v15.p0 = v1 in
    v36.p1 = v40 in
    v40[1] = v39 in
    let v37: [Float] = v40[1] in
    v81[0] = v20 in
    let v90: [[Float]] = v46.p1 in
    let v102: [[Float]] = v36.p1 in
    let v60: [[Float]] = v29.p0 in
    let v69: [[Float]] = v25[3] in
    let v47: [[Float]] = v0.p1 in
    v52 = v39 in
    v18.p0 = v27 in
    let v63: [[Float]] = v15.p1 in
    var v105: [[[Float]]] = v81 in
    let v76: Float = v37[0] in
    var v54: Float = v76 in
    v15.p0 = v27 in
    v29.p0 = v60 in
    let v89: [Float] = v47[1] in
    var v172: Float = v76 in
    let v122: [Float] = v69[1] in
    let v119: [[Float]] = v105[2] in
    v20[1] = v89 in
    let v80: Float = v19[0] in
    v105[3] = v90 in
    v17.p1 = v102 in
    v20[0] = v89 in
    v81[1] = v63 in
    v52[0] = v80 in
    var v104: Float = v172 in
    v52[0] = v54 in
    var v127: s0 = v29 in
    let v124: [Float] = v119[0] in
    v17.p1 = v47 in
    let v107: Float = v122[0] in
    v127.p1 = v119 in
    v16[0] = v104 in
    var v430: [Float] = v124 in
    v20[0] = v430 in
    v16[0] = v107 in
    v29.p0 = v21 in
    v36.p1 = v63 in
    v127
  } in
  let noinline_f0: (s1, s0, Float) -> Float = (v0: s1, v1: s0, v2: Float) -> Float {
    let v11: s0 = f14(v1) in
    var v5: s0 = v11 in
    let v8: [[Float]] = v5.p1 in
    let v16: [Float] = v8[0] in
    let v14: [[Float]] = v5.p0 in
    var v22: [Float] = v16 in
    var v63: [[Float]] = v14 in
    v5.p0 = v63 in
    v63[0] = v16 in
    v22[0] = v2 in
    let v55: Float = v22[0] in
    v55
  } in
  fun loop(i: Int, v0: s1, v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([[s0([[0.0]], [[1.0], [2.0]])], [s0([[3.0]], [[4.0], [5.0]])]], s0([[6.0]], [[7.0], [8.0]])) in
    let v1: s0 = s0([[9.0]], [[10.0], [11.0]]) in
    let v2: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()