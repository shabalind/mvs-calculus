  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: s2
  } in
  struct s7 {
    var p0: s1
    var p1: s3
  } in
  struct s11 {
    var p0: Float
    var p1: s3
  } in
  let f89: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: [s0] = v0.p1 in
    let v2: [s0] = v0.p0 in
    var v8: [s0] = v2 in
    let v4: [s0] = v0.p0 in
    let v13: s0 = v6[2] in
    let v12: [[Float]] = v13.p0 in
    let v7: [[Float]] = v13.p0 in
    let v9: [[Float]] = v13.p0 in
    let v14: [[Float]] = v13.p1 in
    var v20: s0 = v13 in
    let v15: [[Float]] = v20.p0 in
    var v19: [[Float]] = v14 in
    v20.p1 = v14 in
    let v37: [[Float]] = v13.p0 in
    var v48: s1 = v0 in
    v8[1] = v20 in
    v8 = v6 in
    let v60: [s0] = v0.p1 in
    let v38: [[[Float]]] = [v37, v15, v9, v7, v37] in
    v8 = v4 in
    v48.p0 = v60 in
    let v26: [[Float]] = v38[3] in
    let v42: [[Float]] = v20.p0 in
    v20.p0 = v42 in
    let v67: s0 = s0(v12, v19) in
    v48.p1 = v8 in
    v48.p1 = v8 in
    v8[1] = v67 in
    v20.p0 = v26 in
    v48
  } in
  let f68: (s7) -> s7 = (v0: s7) -> s7 {
    v0
  } in
  let f61: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p0 in
    let v1: [Float] = v4[2] in
    let v2: [[Float]] = v0.p1 in
    let v8: [[[Float]]] = [v4, v4, v4] in
    let v7: [[Float]] = v8[1] in
    let v3: [Float] = v4[0] in
    let v9: [[Float]] = v0.p0 in
    let v13: [[Float]] = v0.p0 in
    var v6: [[Float]] = v2 in
    var v16: [[[Float]]] = v8 in
    let v14: s0 = s0(v4, v2) in
    let v15: [Float] = v13[2] in
    var v18: [[Float]] = v6 in
    var v19: [[Float]] = v6 in
    let v28: [[Float]] = v0.p1 in
    var v17: [[Float]] = v4 in
    let v23: s0 = s0(v9, v2) in
    let v51: [Float] = v28[0] in
    let v30: [[Float]] = v14.p0 in
    let v48: [[Float]] = v23.p1 in
    v17[0] = v1 in
    v16[2] = v13 in
    v18 = v19 in
    let v47: [Float] = v48[0] in
    let v74: [[Float]] = v14.p1 in
    v17[2] = v1 in
    v17[2] = v47 in
    let v50: s0 = s0(v30, v6) in
    v19[0] = v51 in
    v17[2] = v3 in
    var v27: [[Float]] = v74 in
    let v39: [[Float]] = v23.p0 in
    let v42: [[Float]] = v50.p0 in
    v17 = v7 in
    var v33: s0 = v14 in
    let v60: [Float] = v6[0] in
    v33.p0 = v9 in
    v33.p1 = v6 in
    v33.p1 = v18 in
    let v32: [[Float]] = v33.p0 in
    let v72: [Float] = v32[1] in
    v16[0] = v17 in
    v16[1] = v39 in
    v33.p0 = v42 in
    v19[0] = v3 in
    v27[0] = v60 in
    v19[0] = v1 in
    v19[0] = v72 in
    let v91: [[Float]] = v16[2] in
    v16[1] = v9 in
    v18[0] = v15 in
    v33.p1 = v74 in
    v33.p0 = v17 in
    v17[1] = v1 in
    let v258: s0 = s0(v32, v27) in
    v17 = v91 in
    v258
  } in
  let f27: (s1, s7) -> s7 = (v0: s1, v1: s7) -> s7 {
    let v6: s1 = v1.p0 in
    let v4: s7 = f68(v1) in
    let v7: s1 = v1.p0 in
    let v9: s7 = f68(v4) in
    var v2: s7 = v4 in
    var v12: s1 = v7 in
    let v11: s1 = f89(v12) in
    let v14: [s0] = v6.p0 in
    v12.p0 = v14 in
    let v10: s1 = f89(v11) in
    let v16: s0 = v14[2] in
    let v22: s0 = f61(v16) in
    var v17: s1 = v10 in
    let v27: s0 = v14[2] in
    v12.p1 = v14 in
    let v20: s0 = v14[0] in
    var v18: s0 = v16 in
    let v13: s0 = v14[1] in
    let v26: s1 = v2.p0 in
    var v28: [s0] = v14 in
    let v43: s0 = f61(v18) in
    let v50: s0 = f61(v43) in
    let v19: [[Float]] = v43.p1 in
    let v71: s0 = v28[1] in
    var v29: s0 = v50 in
    var v30: s7 = v2 in
    v28[1] = v50 in
    let v35: s3 = v1.p1 in
    v29.p1 = v19 in
    v28[1] = v13 in
    v17.p1 = v14 in
    v28[0] = v18 in
    var v48: s3 = v35 in
    v17.p1 = v28 in
    let v102: s3 = v2.p1 in
    v30.p0 = v17 in
    var v32: s0 = v71 in
    v28[1] = v29 in
    v28[0] = v43 in
    v32.p1 = v19 in
    v28[0] = v22 in
    v28[0] = v20 in
    v30.p1 = v48 in
    v28[0] = v16 in
    v18.p1 = v19 in
    v28[1] = v27 in
    v28[2] = v20 in
    v12.p1 = v14 in
    v28[2] = v32 in
    let v91: [s0] = v26.p1 in
    v17.p0 = v28 in
    v17.p1 = v14 in
    v30.p0 = v17 in
    v17.p1 = v91 in
    v2.p1 = v102 in
    v30 = v9 in
    v30
  } in
  let f12: (Float, s11) -> s11 = (v0: Float, v1: s11) -> s11 {
    let v7: Float = v1.p0 in
    var v6: s11 = v1 in
    v6.p0 = v0 in
    v6.p0 = v0 in
    v6.p0 = v7 in
    let v4: s3 = v6.p1 in
    v6.p1 = v4 in
    let v3: [Float] = [v0, v0, v0, v0] in
    v6 = v1 in
    let v11: Float = v3[2] in
    let v26: Float = v3[2] in
    var v16: s11 = v6 in
    v16.p0 = v11 in
    v6.p0 = v26 in
    let v85: s11 = s11(v0, v4) in
    var v61: s3 = v4 in
    v16 = v85 in
    v6.p0 = v7 in
    v6.p0 = v7 in
    v16.p1 = v61 in
    v16
  } in
  let noinline_f0: (s1, [s7], Float) -> Float = (v0: s1, v1: [s7], v2: Float) -> Float {
    let v4: s7 = v1[0] in
    let v6: Float = v2 + v2 in
    let v11: s7 = f68(v4) in
    var v12: s1 = v0 in
    let v29: s7 = f27(v12, v11) in
    let v25: s3 = v29.p1 in
    let v36: s11 = s11(v6, v25) in
    let v43: s11 = f12(v6, v36) in
    let v39: Float = v43.p0 in
    let v45: Float = v39 + v2 in
    let v35: Float = v45 + v39 in
    v35
  } in
  fun loop(i: Int, v0: s1, v1: [s7], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0]]), s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0]]), s0([[16.0], [17.0], [18.0]], [[19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0]])]) in
    let v1: [s7] = [s7(s1([s0([[24.0], [25.0], [26.0]], [[27.0]]), s0([[28.0], [29.0], [30.0]], [[31.0]]), s0([[32.0], [33.0], [34.0]], [[35.0]])], [s0([[36.0], [37.0], [38.0]], [[39.0]]), s0([[40.0], [41.0], [42.0]], [[43.0]]), s0([[44.0], [45.0], [46.0]], [[47.0]])]), s3(s2(s0([[48.0], [49.0], [50.0]], [[51.0]]), [s0([[52.0], [53.0], [54.0]], [[55.0]])]), s2(s0([[56.0], [57.0], [58.0]], [[59.0]]), [s0([[60.0], [61.0], [62.0]], [[63.0]])]))), s7(s1([s0([[64.0], [65.0], [66.0]], [[67.0]]), s0([[68.0], [69.0], [70.0]], [[71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0]])], [s0([[76.0], [77.0], [78.0]], [[79.0]]), s0([[80.0], [81.0], [82.0]], [[83.0]]), s0([[84.0], [85.0], [86.0]], [[87.0]])]), s3(s2(s0([[88.0], [89.0], [90.0]], [[91.0]]), [s0([[92.0], [93.0], [94.0]], [[95.0]])]), s2(s0([[96.0], [97.0], [98.0]], [[99.0]]), [s0([[100.0], [101.0], [102.0]], [[103.0]])]))), s7(s1([s0([[104.0], [105.0], [106.0]], [[107.0]]), s0([[108.0], [109.0], [110.0]], [[111.0]]), s0([[112.0], [113.0], [114.0]], [[115.0]])], [s0([[116.0], [117.0], [118.0]], [[119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0]]), s0([[124.0], [125.0], [126.0]], [[127.0]])]), s3(s2(s0([[128.0], [129.0], [130.0]], [[131.0]]), [s0([[132.0], [133.0], [134.0]], [[135.0]])]), s2(s0([[136.0], [137.0], [138.0]], [[139.0]]), [s0([[140.0], [141.0], [142.0]], [[143.0]])])))] in
    let v2: Float = 144.0 in
    let initialResult: Float = 144.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()