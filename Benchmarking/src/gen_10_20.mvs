  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
    var p2: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [s1]
  } in
  let f50: (Float) -> Float = (v0: Float) -> Float {
    var v5: Float = v0 in
    v5 = v0 in
    var v6: Float = v0 in
    var v1: Float = v5 in
    var v7: Float = v6 in
    let v2: Float = v1 / v1 in
    let v3: Float = v7 * v6 in
    var v4: Float = v7 in
    var v10: Float = v2 in
    let v8: [Float] = [v4] in
    let v11: Float = v8[0] in
    var v18: Float = v3 in
    var v14: [Float] = v8 in
    var v33: [Float] = v14 in
    v10 = v2 in
    var v15: Float = v11 in
    var v19: Float = v10 in
    var v86: Float = v15 in
    let v30: Float = v14[0] in
    var v23: Float = v3 in
    v14[0] = v30 in
    var v29: Float = v7 in
    v14[0] = v19 in
    var v35: [Float] = v33 in
    let v55: Float = v14[0] in
    v23 = v11 in
    v33[0] = v30 in
    v1 = v29 in
    v33[0] = v55 in
    var v28: [Float] = v8 in
    var v66: [Float] = v28 in
    var v20: Float = v18 in
    let v48: Float = v28[0] in
    v14[0] = v30 in
    v28[0] = v0 in
    v33[0] = v86 in
    let v71: Float = v8[0] in
    let v70: [[Float]] = [v35, v33, v14, v66, v14] in
    v28[0] = v23 in
    var v51: [Float] = v66 in
    var v52: [[Float]] = v70 in
    var v54: [[Float]] = v52 in
    v52[1] = v28 in
    let v103: [Float] = v54[0] in
    v28[0] = v20 in
    v51[0] = v48 in
    var v154: [Float] = v103 in
    let v123: Float = v51[0] in
    v14[0] = v123 in
    let v167: Float = v154[0] in
    v14[0] = v71 in
    v167
  } in
  let f43: (s2) -> s2 = (v0: s2) -> s2 {
    var v1: s2 = v0 in
    let v7: [s1] = v1.p1 in
    var v3: s2 = v1 in
    var v30: s2 = v3 in
    v1.p1 = v7 in
    v30
  } in
  let f29: (s2) -> s2 = (v0: s2) -> s2 {
    let v1: s2 = f43(v0) in
    var v4: s2 = v1 in
    var v2: s2 = v1 in
    let v3: [s2] = [v4, v1, v0, v2, v1, v0, v1] in
    v4 = v0 in
    let v19: s2 = v3[2] in
    let v36: s2 = f43(v19) in
    let v35: s2 = f43(v36) in
    let v24: s2 = f43(v35) in
    v24
  } in
  let f14: (Float) -> Float = (v0: Float) -> Float {
    let v6: [Float] = [v0, v0, v0] in
    let v2: Float = v6[0] in
    let v1: Float = f50(v2) in
    let v5: Float = v6[2] in
    var v7: [Float] = v6 in
    v7[1] = v5 in
    let v3: Float = v7[0] in
    v7 = v6 in
    var v10: [Float] = v7 in
    let v13: Float = v7[2] in
    v10[0] = v13 in
    let v9: Float = f50(v2) in
    let v18: Float = f50(v0) in
    let v16: Float = f50(v9) in
    let v19: Float = f50(v13) in
    v10[1] = v18 in
    let v12: Float = f50(v9) in
    let v15: Float = f50(v16) in
    var v20: [Float] = v6 in
    var v17: [Float] = v6 in
    var v27: Float = v13 in
    var v34: [Float] = v10 in
    let v40: Float = v15 / v16 in
    let v29: Float = f50(v15) in
    v20[0] = v12 in
    v10[1] = v27 in
    var v31: Float = v0 in
    var v30: [Float] = v6 in
    let v35: Float = f50(v13) in
    var v21: Float = v29 in
    v34[0] = v35 in
    let v23: Float = v20[0] in
    var v106: [Float] = v17 in
    v34[2] = v19 in
    v10[0] = v3 in
    v10 = v7 in
    let v32: Float = f50(v29) in
    var v66: Float = v27 in
    let v53: Float = v7[0] in
    var v57: [Float] = v6 in
    let v71: Float = v10[0] in
    var v62: Float = v21 in
    let v49: Float = f50(v32) in
    let v45: Float = f50(v53) in
    v10[0] = v40 in
    v20[2] = v1 in
    let v83: Float = v20[1] in
    var v58: Float = v5 in
    let v95: Float = f50(v62) in
    v30[0] = v66 in
    let v81: Float = f50(v49) in
    let v82: Float = f50(v31) in
    var v143: [Float] = v106 in
    let v107: Float = f50(v9) in
    var v111: [Float] = v143 in
    v111[1] = v107 in
    v111[2] = v95 in
    v7[2] = v49 in
    var v85: [Float] = v111 in
    let v139: Float = f50(v35) in
    v7[1] = v82 in
    v143[2] = v3 in
    v17[2] = v23 in
    v57[2] = v107 in
    let v227: Float = v111[0] in
    v106[2] = v227 in
    v30[2] = v139 in
    v7[1] = v71 in
    let v289: [[Float]] = [v34, v20, v6, v30, v85, v57, v106] in
    v57[1] = v45 in
    let v194: [Float] = v289[3] in
    v34[2] = v82 in
    let v110: Float = v194[2] in
    v57[0] = v58 in
    v20[1] = v83 in
    v85[2] = v81 in
    v110
  } in
  let noinline_f0: (s2, s2, Float) -> Float = (v0: s2, v1: s2, v2: Float) -> Float {
    let v5: s2 = f29(v0) in
    let v3: s1 = v5.p0 in
    let v10: s1 = v1.p0 in
    let v9: s0 = v3.p1 in
    var v26: s0 = v9 in
    let v23: [[Float]] = v26.p0 in
    let v16: [[Float]] = v26.p0 in
    let v13: [Float] = v16[0] in
    v26.p0 = v23 in
    let v32: [[Float]] = v9.p0 in
    let v22: [[s0]] = v3.p0 in
    v26.p0 = v16 in
    let v60: [Float] = v32[1] in
    let v50: Float = v13[0] in
    var v47: [[s0]] = v22 in
    var v54: [Float] = v60 in
    v26.p0 = v16 in
    let v166: Float = v54[0] in
    let v71: Float = v50 - v166 in
    let v53: [s0] = v47[0] in
    let v93: [[s0]] = v10.p0 in
    let v112: s0 = v53[0] in
    let v78: [s0] = v93[2] in
    var v102: [s0] = v78 in
    var v118: [s0] = v102 in
    v47[2] = v118 in
    let v149: Float = f14(v71) in
    v102[0] = v26 in
    let v120: [[Float]] = v112.p0 in
    v26.p0 = v120 in
    v149
  } in
  fun loop(i: Int, v0: s2, v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s1([[s0([[0.0], [1.0], [2.0]])], [s0([[3.0], [4.0], [5.0]])], [s0([[6.0], [7.0], [8.0]])]], s0([[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]])), [s1([[s0([[15.0], [16.0], [17.0]])], [s0([[18.0], [19.0], [20.0]])], [s0([[21.0], [22.0], [23.0]])]], s0([[24.0], [25.0], [26.0]]), s0([[27.0], [28.0], [29.0]]))]) in
    let v1: s2 = s2(s1([[s0([[30.0], [31.0], [32.0]])], [s0([[33.0], [34.0], [35.0]])], [s0([[36.0], [37.0], [38.0]])]], s0([[39.0], [40.0], [41.0]]), s0([[42.0], [43.0], [44.0]])), [s1([[s0([[45.0], [46.0], [47.0]])], [s0([[48.0], [49.0], [50.0]])], [s0([[51.0], [52.0], [53.0]])]], s0([[54.0], [55.0], [56.0]]), s0([[57.0], [58.0], [59.0]]))]) in
    let v2: Float = 60.0 in
    let initialResult: Float = 60.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()