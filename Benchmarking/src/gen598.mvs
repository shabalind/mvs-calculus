  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: [[s1]]
    var p1: s1
  } in
  struct s3 {
    var p0: [s2]
    var p1: [Float]
  } in
  let f106: ([s3]) -> [s3] = (v0: [s3]) -> [s3] {
    let v6: s3 = v0[2] in
    var v7: [s3] = v0 in
    v7[0] = v6 in
    var v10: [s3] = v7 in
    v7[1] = v6 in
    v10
  } in
  let f105: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p1 in
    let v5: [[Float]] = v0.p0 in
    let v4: [Float] = v7[0] in
    let v6: [Float] = v7[0] in
    let v2: [[Float]] = v0.p1 in
    let v9: s0 = s0(v5, v7) in
    let v1: Float = v6[0] in
    var v12: [[Float]] = v2 in
    let v11: [[Float]] = v0.p0 in
    let v10: [[Float]] = v9.p0 in
    let v8: [Float] = v2[0] in
    v12[0] = v4 in
    v12[0] = v4 in
    v12[0] = v8 in
    var v31: Float = v1 in
    let v28: [Float] = v10[1] in
    var v25: s0 = v9 in
    var v15: s0 = v0 in
    var v16: [Float] = v8 in
    v12[0] = v6 in
    var v19: Float = v31 in
    let v32: [Float] = v7[0] in
    let v20: [Float] = v11[0] in
    let v24: [[Float]] = v15.p1 in
    var v41: [Float] = v20 in
    let v46: [[Float]] = v0.p1 in
    let v65: s0 = s0(v11, v46) in
    var v40: [[Float]] = v46 in
    v41[0] = v1 in
    v25.p1 = v24 in
    let v47: [[Float]] = v9.p1 in
    v15.p1 = v7 in
    v40[0] = v41 in
    let v23: [[Float]] = v0.p1 in
    let v44: [[Float]] = v25.p0 in
    v25.p1 = v47 in
    v16[0] = v19 in
    let v45: [[Float]] = v65.p1 in
    var v35: [Float] = v16 in
    let v74: [[Float]] = v65.p1 in
    v41[0] = v19 in
    let v56: [Float] = v40[0] in
    v25.p1 = v12 in
    v15.p1 = v45 in
    v15.p1 = v23 in
    v12[0] = v56 in
    v25.p1 = v74 in
    v25.p1 = v74 in
    v12[0] = v32 in
    v15.p0 = v44 in
    v12[0] = v35 in
    v12[0] = v28 in
    v25
  } in
  let f103: (s3) -> s3 = (v0: s3) -> s3 {
    let v6: [Float] = v0.p1 in
    var v7: [Float] = v6 in
    let v4: [s3] = [v0, v0, v0] in
    var v1: s3 = v0 in
    let v3: Float = v6[1] in
    v1.p1 = v6 in
    v7[1] = v3 in
    var v11: [s3] = v4 in
    let v12: [s3] = f106(v11) in
    let v8: Float = v7[1] in
    var v42: s3 = v1 in
    v42.p1 = v6 in
    v11[1] = v1 in
    v7[0] = v8 in
    v11[2] = v42 in
    let v14: [Float] = v42.p1 in
    v42.p1 = v14 in
    let v31: s3 = v12[2] in
    v1.p1 = v7 in
    v7[0] = v8 in
    v31
  } in
  let f101: (s1, s3) -> s1 = (v0: s1, v1: s3) -> s1 {
    var v7: s1 = v0 in
    let v9: s0 = v7.p1 in
    v7.p1 = v9 in
    let v11: [s0] = v7.p0 in
    v7.p0 = v11 in
    let v22: [s0] = v7.p0 in
    v7.p0 = v22 in
    v7.p0 = v22 in
    var v54: s1 = v0 in
    let v48: [s0] = v0.p0 in
    v54.p0 = v22 in
    v54.p0 = v48 in
    v54
  } in
  let f98: (s3, s1) -> s3 = (v0: s3, v1: s1) -> s3 {
    let v7: s3 = f103(v0) in
    var v4: s3 = v0 in
    let v5: [s2] = v7.p0 in
    let v14: [s2] = v7.p0 in
    let v17: s3 = f103(v4) in
    v4.p0 = v5 in
    let v8: s3 = f103(v17) in
    let v27: [Float] = v8.p1 in
    let v19: s3 = s3(v14, v27) in
    let v50: s3 = f103(v17) in
    v4 = v50 in
    v19
  } in
  let f59: (s0, s3) -> s3 = (v0: s0, v1: s3) -> s3 {
    let v10: [Float] = v1.p1 in
    let v11: s3 = f103(v1) in
    let v17: [s2] = v11.p0 in
    var v25: [s2] = v17 in
    let v48: s3 = s3(v25, v10) in
    v48
  } in
  let f58: (s3) -> s3 = (v0: s3) -> s3 {
    var v2: s3 = v0 in
    let v4: s3 = f103(v0) in
    let v13: s3 = f103(v0) in
    let v1: s3 = f103(v2) in
    let v5: [Float] = v1.p1 in
    v2.p1 = v5 in
    v2.p1 = v5 in
    let v7: [Float] = v13.p1 in
    let v15: s3 = f103(v2) in
    v2.p1 = v7 in
    let v18: [s2] = v4.p0 in
    let v19: s3 = f103(v15) in
    var v22: [s2] = v18 in
    let v49: s2 = v22[0] in
    var v54: s2 = v49 in
    let v71: [s2] = v0.p0 in
    let v43: s1 = v54.p1 in
    var v40: s1 = v43 in
    let v58: s1 = f101(v40, v19) in
    v2.p0 = v71 in
    var v33: s1 = v58 in
    let v57: s3 = f98(v2, v33) in
    v57
  } in
  let f19: (s3) -> s3 = (v0: s3) -> s3 {
    let v5: s3 = f58(v0) in
    let v6: [s2] = v0.p0 in
    let v3: [Float] = v5.p1 in
    let v1: s2 = v6[0] in
    var v11: [s2] = v6 in
    var v12: [s2] = v6 in
    let v28: s3 = f58(v0) in
    let v25: s1 = v1.p1 in
    var v19: s2 = v1 in
    v11[0] = v1 in
    let v10: s1 = v19.p1 in
    let v24: s3 = s3(v11, v3) in
    let v18: s1 = v19.p1 in
    let v13: s2 = v12[0] in
    v19.p1 = v18 in
    v19.p1 = v25 in
    v12[0] = v13 in
    var v26: s1 = v18 in
    var v42: s1 = v25 in
    let v41: s3 = f98(v24, v26) in
    let v71: s1 = v19.p1 in
    v42 = v71 in
    let v31: s0 = v10.p1 in
    v26.p1 = v31 in
    let v30: s0 = v42.p1 in
    var v72: s0 = v30 in
    let v52: s2 = v12[0] in
    let v81: s1 = f101(v42, v41) in
    let v55: [s2] = [v52, v13, v19, v13, v19, v13, v13] in
    v42.p1 = v72 in
    v19.p1 = v81 in
    let v37: s3 = f98(v28, v18) in
    let v114: s0 = f105(v72) in
    let v124: s2 = v55[3] in
    let v62: s2 = v12[0] in
    let v121: s0 = v81.p1 in
    let v95: s3 = f59(v121, v37) in
    v26.p1 = v30 in
    v11[0] = v62 in
    v12[0] = v13 in
    let v79: [[Float]] = v114.p1 in
    v72.p1 = v79 in
    v11[0] = v124 in
    v72 = v121 in
    v95
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    let v7: s3 = f103(v0) in
    let v4: s3 = f19(v7) in
    let v5: s3 = f103(v4) in
    let v23: [Float] = v5.p1 in
    let v68: Float = v23[0] in
    v68
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s2([[s1([s0([[0.0], [1.0]], [[2.0]]), s0([[3.0], [4.0]], [[5.0]])], s0([[6.0], [7.0]], [[8.0]]))]], s1([s0([[9.0], [10.0]], [[11.0]]), s0([[12.0], [13.0]], [[14.0]])], s0([[15.0], [16.0]], [[17.0]])))], [18.0, 19.0]) in
    let v1: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()