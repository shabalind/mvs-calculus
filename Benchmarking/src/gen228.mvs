  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s2
    var p1: [[s0]]
  } in
  struct s4 {
    var p0: s3
    var p1: s1
  } in
  let f45: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    var v7: Float = v0 in
    var v4: Float = v2 in
    var v3: Float = v0 in
    var v8: Float = v0 in
    v2 = v4 in
    var v9: Float = v2 in
    var v6: Float = v8 in
    var v15: Float = v9 in
    var v16: Float = v3 in
    var v13: Float = v9 in
    var v19: Float = v15 in
    let v14: Float = v13 / v8 in
    var v24: Float = v7 in
    var v29: Float = v19 in
    var v18: Float = v24 in
    let v23: [Float] = [v15, v6] in
    let v43: Float = v23[1] in
    var v26: [Float] = v23 in
    var v21: Float = v4 in
    v26[1] = v6 in
    var v39: Float = v13 in
    var v25: Float = v39 in
    var v36: [Float] = v26 in
    let v34: Float = v23[0] in
    let v27: Float = v36[0] in
    let v59: Float = v36[0] in
    var v28: [Float] = v23 in
    var v38: [Float] = v36 in
    var v62: [Float] = v26 in
    v36[0] = v14 in
    var v33: [Float] = v62 in
    v33[0] = v21 in
    let v46: [[Float]] = [v23, v36, v62, v36] in
    var v50: [[Float]] = v46 in
    var v37: [[Float]] = v50 in
    var v32: Float = v18 in
    v36[1] = v21 in
    v26[1] = v25 in
    var v53: [[Float]] = v37 in
    let v67: Float = v33[1] in
    v28[1] = v29 in
    v33[0] = v4 in
    v37[3] = v28 in
    let v107: Float = v26[0] in
    v50[0] = v28 in
    v28[0] = v16 in
    v24 = v107 in
    v15 = v43 in
    v53[2] = v38 in
    v38[0] = v34 in
    var v87: Float = v67 in
    v26[1] = v25 in
    var v108: Float = v21 in
    v33[0] = v32 in
    let v117: Float = v62[0] in
    v38[1] = v27 in
    v62[0] = v117 in
    var v78: [[Float]] = v53 in
    let v95: [Float] = v78[0] in
    let v172: Float = v95[0] in
    v62[0] = v59 in
    v28[1] = v87 in
    v16 = v34 in
    v7 = v108 in
    v172
  } in
  let noinline_f0: (s4, [s1], Float) -> Float = (v0: s4, v1: [s1], v2: Float) -> Float {
    let v7: Float = f45(v2) in
    let v18: Float = f45(v2) in
    var v23: Float = v18 in
    let v73: Float = v7 - v18 in
    let v97: Float = v23 * v73 in
    let v284: Float = v23 - v97 in
    v284
  } in
  fun loop(i: Int, v0: s4, v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4(s3(s2([s0([[0.0]], [[1.0], [2.0]], [[3.0], [4.0], [5.0]], [[6.0], [7.0], [8.0]])], [[s1(s0([[9.0]], [[10.0], [11.0]], [[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), [s0([[18.0]], [[19.0], [20.0]], [[21.0], [22.0], [23.0]], [[24.0], [25.0], [26.0]]), s0([[27.0]], [[28.0], [29.0]], [[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0]], [[37.0], [38.0]], [[39.0], [40.0], [41.0]], [[42.0], [43.0], [44.0]])])]]), [[s0([[45.0]], [[46.0], [47.0]], [[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])], [s0([[54.0]], [[55.0], [56.0]], [[57.0], [58.0], [59.0]], [[60.0], [61.0], [62.0]])], [s0([[63.0]], [[64.0], [65.0]], [[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]])]]), s1(s0([[72.0]], [[73.0], [74.0]], [[75.0], [76.0], [77.0]], [[78.0], [79.0], [80.0]]), [s0([[81.0]], [[82.0], [83.0]], [[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]]), s0([[90.0]], [[91.0], [92.0]], [[93.0], [94.0], [95.0]], [[96.0], [97.0], [98.0]]), s0([[99.0]], [[100.0], [101.0]], [[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]])])) in
    let v1: [s1] = [s1(s0([[108.0]], [[109.0], [110.0]], [[111.0], [112.0], [113.0]], [[114.0], [115.0], [116.0]]), [s0([[117.0]], [[118.0], [119.0]], [[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]]), s0([[126.0]], [[127.0], [128.0]], [[129.0], [130.0], [131.0]], [[132.0], [133.0], [134.0]]), s0([[135.0]], [[136.0], [137.0]], [[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]])]), s1(s0([[144.0]], [[145.0], [146.0]], [[147.0], [148.0], [149.0]], [[150.0], [151.0], [152.0]]), [s0([[153.0]], [[154.0], [155.0]], [[156.0], [157.0], [158.0]], [[159.0], [160.0], [161.0]]), s0([[162.0]], [[163.0], [164.0]], [[165.0], [166.0], [167.0]], [[168.0], [169.0], [170.0]]), s0([[171.0]], [[172.0], [173.0]], [[174.0], [175.0], [176.0]], [[177.0], [178.0], [179.0]])]), s1(s0([[180.0]], [[181.0], [182.0]], [[183.0], [184.0], [185.0]], [[186.0], [187.0], [188.0]]), [s0([[189.0]], [[190.0], [191.0]], [[192.0], [193.0], [194.0]], [[195.0], [196.0], [197.0]]), s0([[198.0]], [[199.0], [200.0]], [[201.0], [202.0], [203.0]], [[204.0], [205.0], [206.0]]), s0([[207.0]], [[208.0], [209.0]], [[210.0], [211.0], [212.0]], [[213.0], [214.0], [215.0]])])] in
    let v2: Float = 216.0 in
    let initialResult: Float = 216.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()