  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: [s2]
    var p1: s2
  } in
  struct s5 {
    var p0: [s2]
    var p1: [[s3]]
  } in
  struct s7 {
    var p0: [[s5]]
    var p1: [s5]
  } in
  let f50: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    let v3: Float = v7 - v7 in
    var v1: Float = v7 in
    v7 = v1 in
    var v11: Float = v7 in
    let v5: Float = v3 * v0 in
    let v10: [Float] = [v11, v5] in
    let v15: Float = v10[1] in
    v15
  } in
  let noinline_f0: ([[s7]], [Float], Float) -> Float = (v0: [[s7]], v1: [Float], v2: Float) -> Float {
    var v5: Float = v2 in
    var v14: Float = v5 in
    let v15: Float = f50(v14) in
    v5 = v2 in
    var v36: Float = v15 in
    let v73: Float = v15 + v5 in
    v14 = v36 in
    v73
  } in
  fun loop(i: Int, v0: [[s7]], v1: [Float], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s7]] = [[s7([[s5([s2([s1(s0([[0.0]]), [[s0([[1.0]])]]), s1(s0([[2.0]]), [[s0([[3.0]])]]), s1(s0([[4.0]]), [[s0([[5.0]])]])], [[s1(s0([[6.0]]), [[s0([[7.0]])]])], [s1(s0([[8.0]]), [[s0([[9.0]])]])]]), s2([s1(s0([[10.0]]), [[s0([[11.0]])]]), s1(s0([[12.0]]), [[s0([[13.0]])]]), s1(s0([[14.0]]), [[s0([[15.0]])]])], [[s1(s0([[16.0]]), [[s0([[17.0]])]])], [s1(s0([[18.0]]), [[s0([[19.0]])]])]])], [[s3([s2([s1(s0([[20.0]]), [[s0([[21.0]])]]), s1(s0([[22.0]]), [[s0([[23.0]])]]), s1(s0([[24.0]]), [[s0([[25.0]])]])], [[s1(s0([[26.0]]), [[s0([[27.0]])]])], [s1(s0([[28.0]]), [[s0([[29.0]])]])]]), s2([s1(s0([[30.0]]), [[s0([[31.0]])]]), s1(s0([[32.0]]), [[s0([[33.0]])]]), s1(s0([[34.0]]), [[s0([[35.0]])]])], [[s1(s0([[36.0]]), [[s0([[37.0]])]])], [s1(s0([[38.0]]), [[s0([[39.0]])]])]])], s2([s1(s0([[40.0]]), [[s0([[41.0]])]]), s1(s0([[42.0]]), [[s0([[43.0]])]]), s1(s0([[44.0]]), [[s0([[45.0]])]])], [[s1(s0([[46.0]]), [[s0([[47.0]])]])], [s1(s0([[48.0]]), [[s0([[49.0]])]])]]))], [s3([s2([s1(s0([[50.0]]), [[s0([[51.0]])]]), s1(s0([[52.0]]), [[s0([[53.0]])]]), s1(s0([[54.0]]), [[s0([[55.0]])]])], [[s1(s0([[56.0]]), [[s0([[57.0]])]])], [s1(s0([[58.0]]), [[s0([[59.0]])]])]]), s2([s1(s0([[60.0]]), [[s0([[61.0]])]]), s1(s0([[62.0]]), [[s0([[63.0]])]]), s1(s0([[64.0]]), [[s0([[65.0]])]])], [[s1(s0([[66.0]]), [[s0([[67.0]])]])], [s1(s0([[68.0]]), [[s0([[69.0]])]])]])], s2([s1(s0([[70.0]]), [[s0([[71.0]])]]), s1(s0([[72.0]]), [[s0([[73.0]])]]), s1(s0([[74.0]]), [[s0([[75.0]])]])], [[s1(s0([[76.0]]), [[s0([[77.0]])]])], [s1(s0([[78.0]]), [[s0([[79.0]])]])]]))], [s3([s2([s1(s0([[80.0]]), [[s0([[81.0]])]]), s1(s0([[82.0]]), [[s0([[83.0]])]]), s1(s0([[84.0]]), [[s0([[85.0]])]])], [[s1(s0([[86.0]]), [[s0([[87.0]])]])], [s1(s0([[88.0]]), [[s0([[89.0]])]])]]), s2([s1(s0([[90.0]]), [[s0([[91.0]])]]), s1(s0([[92.0]]), [[s0([[93.0]])]]), s1(s0([[94.0]]), [[s0([[95.0]])]])], [[s1(s0([[96.0]]), [[s0([[97.0]])]])], [s1(s0([[98.0]]), [[s0([[99.0]])]])]])], s2([s1(s0([[100.0]]), [[s0([[101.0]])]]), s1(s0([[102.0]]), [[s0([[103.0]])]]), s1(s0([[104.0]]), [[s0([[105.0]])]])], [[s1(s0([[106.0]]), [[s0([[107.0]])]])], [s1(s0([[108.0]]), [[s0([[109.0]])]])]]))]])]], [s5([s2([s1(s0([[110.0]]), [[s0([[111.0]])]]), s1(s0([[112.0]]), [[s0([[113.0]])]]), s1(s0([[114.0]]), [[s0([[115.0]])]])], [[s1(s0([[116.0]]), [[s0([[117.0]])]])], [s1(s0([[118.0]]), [[s0([[119.0]])]])]]), s2([s1(s0([[120.0]]), [[s0([[121.0]])]]), s1(s0([[122.0]]), [[s0([[123.0]])]]), s1(s0([[124.0]]), [[s0([[125.0]])]])], [[s1(s0([[126.0]]), [[s0([[127.0]])]])], [s1(s0([[128.0]]), [[s0([[129.0]])]])]])], [[s3([s2([s1(s0([[130.0]]), [[s0([[131.0]])]]), s1(s0([[132.0]]), [[s0([[133.0]])]]), s1(s0([[134.0]]), [[s0([[135.0]])]])], [[s1(s0([[136.0]]), [[s0([[137.0]])]])], [s1(s0([[138.0]]), [[s0([[139.0]])]])]]), s2([s1(s0([[140.0]]), [[s0([[141.0]])]]), s1(s0([[142.0]]), [[s0([[143.0]])]]), s1(s0([[144.0]]), [[s0([[145.0]])]])], [[s1(s0([[146.0]]), [[s0([[147.0]])]])], [s1(s0([[148.0]]), [[s0([[149.0]])]])]])], s2([s1(s0([[150.0]]), [[s0([[151.0]])]]), s1(s0([[152.0]]), [[s0([[153.0]])]]), s1(s0([[154.0]]), [[s0([[155.0]])]])], [[s1(s0([[156.0]]), [[s0([[157.0]])]])], [s1(s0([[158.0]]), [[s0([[159.0]])]])]]))], [s3([s2([s1(s0([[160.0]]), [[s0([[161.0]])]]), s1(s0([[162.0]]), [[s0([[163.0]])]]), s1(s0([[164.0]]), [[s0([[165.0]])]])], [[s1(s0([[166.0]]), [[s0([[167.0]])]])], [s1(s0([[168.0]]), [[s0([[169.0]])]])]]), s2([s1(s0([[170.0]]), [[s0([[171.0]])]]), s1(s0([[172.0]]), [[s0([[173.0]])]]), s1(s0([[174.0]]), [[s0([[175.0]])]])], [[s1(s0([[176.0]]), [[s0([[177.0]])]])], [s1(s0([[178.0]]), [[s0([[179.0]])]])]])], s2([s1(s0([[180.0]]), [[s0([[181.0]])]]), s1(s0([[182.0]]), [[s0([[183.0]])]]), s1(s0([[184.0]]), [[s0([[185.0]])]])], [[s1(s0([[186.0]]), [[s0([[187.0]])]])], [s1(s0([[188.0]]), [[s0([[189.0]])]])]]))], [s3([s2([s1(s0([[190.0]]), [[s0([[191.0]])]]), s1(s0([[192.0]]), [[s0([[193.0]])]]), s1(s0([[194.0]]), [[s0([[195.0]])]])], [[s1(s0([[196.0]]), [[s0([[197.0]])]])], [s1(s0([[198.0]]), [[s0([[199.0]])]])]]), s2([s1(s0([[200.0]]), [[s0([[201.0]])]]), s1(s0([[202.0]]), [[s0([[203.0]])]]), s1(s0([[204.0]]), [[s0([[205.0]])]])], [[s1(s0([[206.0]]), [[s0([[207.0]])]])], [s1(s0([[208.0]]), [[s0([[209.0]])]])]])], s2([s1(s0([[210.0]]), [[s0([[211.0]])]]), s1(s0([[212.0]]), [[s0([[213.0]])]]), s1(s0([[214.0]]), [[s0([[215.0]])]])], [[s1(s0([[216.0]]), [[s0([[217.0]])]])], [s1(s0([[218.0]]), [[s0([[219.0]])]])]]))]]), s5([s2([s1(s0([[220.0]]), [[s0([[221.0]])]]), s1(s0([[222.0]]), [[s0([[223.0]])]]), s1(s0([[224.0]]), [[s0([[225.0]])]])], [[s1(s0([[226.0]]), [[s0([[227.0]])]])], [s1(s0([[228.0]]), [[s0([[229.0]])]])]]), s2([s1(s0([[230.0]]), [[s0([[231.0]])]]), s1(s0([[232.0]]), [[s0([[233.0]])]]), s1(s0([[234.0]]), [[s0([[235.0]])]])], [[s1(s0([[236.0]]), [[s0([[237.0]])]])], [s1(s0([[238.0]]), [[s0([[239.0]])]])]])], [[s3([s2([s1(s0([[240.0]]), [[s0([[241.0]])]]), s1(s0([[242.0]]), [[s0([[243.0]])]]), s1(s0([[244.0]]), [[s0([[245.0]])]])], [[s1(s0([[246.0]]), [[s0([[247.0]])]])], [s1(s0([[248.0]]), [[s0([[249.0]])]])]]), s2([s1(s0([[250.0]]), [[s0([[251.0]])]]), s1(s0([[252.0]]), [[s0([[253.0]])]]), s1(s0([[254.0]]), [[s0([[255.0]])]])], [[s1(s0([[256.0]]), [[s0([[257.0]])]])], [s1(s0([[258.0]]), [[s0([[259.0]])]])]])], s2([s1(s0([[260.0]]), [[s0([[261.0]])]]), s1(s0([[262.0]]), [[s0([[263.0]])]]), s1(s0([[264.0]]), [[s0([[265.0]])]])], [[s1(s0([[266.0]]), [[s0([[267.0]])]])], [s1(s0([[268.0]]), [[s0([[269.0]])]])]]))], [s3([s2([s1(s0([[270.0]]), [[s0([[271.0]])]]), s1(s0([[272.0]]), [[s0([[273.0]])]]), s1(s0([[274.0]]), [[s0([[275.0]])]])], [[s1(s0([[276.0]]), [[s0([[277.0]])]])], [s1(s0([[278.0]]), [[s0([[279.0]])]])]]), s2([s1(s0([[280.0]]), [[s0([[281.0]])]]), s1(s0([[282.0]]), [[s0([[283.0]])]]), s1(s0([[284.0]]), [[s0([[285.0]])]])], [[s1(s0([[286.0]]), [[s0([[287.0]])]])], [s1(s0([[288.0]]), [[s0([[289.0]])]])]])], s2([s1(s0([[290.0]]), [[s0([[291.0]])]]), s1(s0([[292.0]]), [[s0([[293.0]])]]), s1(s0([[294.0]]), [[s0([[295.0]])]])], [[s1(s0([[296.0]]), [[s0([[297.0]])]])], [s1(s0([[298.0]]), [[s0([[299.0]])]])]]))], [s3([s2([s1(s0([[300.0]]), [[s0([[301.0]])]]), s1(s0([[302.0]]), [[s0([[303.0]])]]), s1(s0([[304.0]]), [[s0([[305.0]])]])], [[s1(s0([[306.0]]), [[s0([[307.0]])]])], [s1(s0([[308.0]]), [[s0([[309.0]])]])]]), s2([s1(s0([[310.0]]), [[s0([[311.0]])]]), s1(s0([[312.0]]), [[s0([[313.0]])]]), s1(s0([[314.0]]), [[s0([[315.0]])]])], [[s1(s0([[316.0]]), [[s0([[317.0]])]])], [s1(s0([[318.0]]), [[s0([[319.0]])]])]])], s2([s1(s0([[320.0]]), [[s0([[321.0]])]]), s1(s0([[322.0]]), [[s0([[323.0]])]]), s1(s0([[324.0]]), [[s0([[325.0]])]])], [[s1(s0([[326.0]]), [[s0([[327.0]])]])], [s1(s0([[328.0]]), [[s0([[329.0]])]])]]))]]), s5([s2([s1(s0([[330.0]]), [[s0([[331.0]])]]), s1(s0([[332.0]]), [[s0([[333.0]])]]), s1(s0([[334.0]]), [[s0([[335.0]])]])], [[s1(s0([[336.0]]), [[s0([[337.0]])]])], [s1(s0([[338.0]]), [[s0([[339.0]])]])]]), s2([s1(s0([[340.0]]), [[s0([[341.0]])]]), s1(s0([[342.0]]), [[s0([[343.0]])]]), s1(s0([[344.0]]), [[s0([[345.0]])]])], [[s1(s0([[346.0]]), [[s0([[347.0]])]])], [s1(s0([[348.0]]), [[s0([[349.0]])]])]])], [[s3([s2([s1(s0([[350.0]]), [[s0([[351.0]])]]), s1(s0([[352.0]]), [[s0([[353.0]])]]), s1(s0([[354.0]]), [[s0([[355.0]])]])], [[s1(s0([[356.0]]), [[s0([[357.0]])]])], [s1(s0([[358.0]]), [[s0([[359.0]])]])]]), s2([s1(s0([[360.0]]), [[s0([[361.0]])]]), s1(s0([[362.0]]), [[s0([[363.0]])]]), s1(s0([[364.0]]), [[s0([[365.0]])]])], [[s1(s0([[366.0]]), [[s0([[367.0]])]])], [s1(s0([[368.0]]), [[s0([[369.0]])]])]])], s2([s1(s0([[370.0]]), [[s0([[371.0]])]]), s1(s0([[372.0]]), [[s0([[373.0]])]]), s1(s0([[374.0]]), [[s0([[375.0]])]])], [[s1(s0([[376.0]]), [[s0([[377.0]])]])], [s1(s0([[378.0]]), [[s0([[379.0]])]])]]))], [s3([s2([s1(s0([[380.0]]), [[s0([[381.0]])]]), s1(s0([[382.0]]), [[s0([[383.0]])]]), s1(s0([[384.0]]), [[s0([[385.0]])]])], [[s1(s0([[386.0]]), [[s0([[387.0]])]])], [s1(s0([[388.0]]), [[s0([[389.0]])]])]]), s2([s1(s0([[390.0]]), [[s0([[391.0]])]]), s1(s0([[392.0]]), [[s0([[393.0]])]]), s1(s0([[394.0]]), [[s0([[395.0]])]])], [[s1(s0([[396.0]]), [[s0([[397.0]])]])], [s1(s0([[398.0]]), [[s0([[399.0]])]])]])], s2([s1(s0([[400.0]]), [[s0([[401.0]])]]), s1(s0([[402.0]]), [[s0([[403.0]])]]), s1(s0([[404.0]]), [[s0([[405.0]])]])], [[s1(s0([[406.0]]), [[s0([[407.0]])]])], [s1(s0([[408.0]]), [[s0([[409.0]])]])]]))], [s3([s2([s1(s0([[410.0]]), [[s0([[411.0]])]]), s1(s0([[412.0]]), [[s0([[413.0]])]]), s1(s0([[414.0]]), [[s0([[415.0]])]])], [[s1(s0([[416.0]]), [[s0([[417.0]])]])], [s1(s0([[418.0]]), [[s0([[419.0]])]])]]), s2([s1(s0([[420.0]]), [[s0([[421.0]])]]), s1(s0([[422.0]]), [[s0([[423.0]])]]), s1(s0([[424.0]]), [[s0([[425.0]])]])], [[s1(s0([[426.0]]), [[s0([[427.0]])]])], [s1(s0([[428.0]]), [[s0([[429.0]])]])]])], s2([s1(s0([[430.0]]), [[s0([[431.0]])]]), s1(s0([[432.0]]), [[s0([[433.0]])]]), s1(s0([[434.0]]), [[s0([[435.0]])]])], [[s1(s0([[436.0]]), [[s0([[437.0]])]])], [s1(s0([[438.0]]), [[s0([[439.0]])]])]]))]])])]] in
    let v1: [Float] = [440.0] in
    let v2: Float = 441.0 in
    let initialResult: Float = 441.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()