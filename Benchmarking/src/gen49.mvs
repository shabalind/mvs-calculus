  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f27: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    v2 = v0 in
    let v4: [[Float]] = v2.p0 in
    let v1: [[Float]] = v2.p1 in
    v2 = v0 in
    let v15: [[Float]] = v0.p0 in
    v2.p0 = v4 in
    v2.p1 = v1 in
    let v13: [[Float]] = v2.p0 in
    v2.p1 = v1 in
    let v24: [[Float]] = v2.p1 in
    let v12: [[Float]] = v2.p0 in
    v2.p1 = v15 in
    let v34: [[[Float]]] = [v15, v24, v13, v24] in
    var v21: s0 = v2 in
    let v20: [[Float]] = v34[0] in
    let v19: [[Float]] = v34[3] in
    v21.p0 = v12 in
    v2.p0 = v20 in
    let v47: [[Float]] = v21.p1 in
    var v36: s0 = v21 in
    v21.p0 = v13 in
    var v61: [[Float]] = v13 in
    v21.p1 = v19 in
    let v57: [[Float]] = v21.p0 in
    v2.p1 = v1 in
    let v60: [[Float]] = v36.p1 in
    let v89: [[Float]] = v21.p0 in
    var v84: s0 = v36 in
    v2.p1 = v24 in
    v84.p0 = v47 in
    v2.p0 = v57 in
    v2.p1 = v24 in
    v21.p0 = v60 in
    v84.p0 = v61 in
    v36.p0 = v89 in
    v21.p1 = v4 in
    v84
  } in
  let f26: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v7: [[Float]] = v6.p0 in
    let v13: [[Float]] = v0.p0 in
    let v12: [[Float]] = v6.p1 in
    let v21: s0 = f27(v6) in
    let v29: s0 = f27(v21) in
    let v35: [[Float]] = v29.p1 in
    let v19: s0 = f27(v6) in
    v6.p1 = v35 in
    var v32: s0 = v19 in
    v6.p0 = v7 in
    v32.p1 = v12 in
    v32.p1 = v13 in
    v32
  } in
  let f23: (s0) -> s0 = (v0: s0) -> s0 {
    let v17: s0 = f27(v0) in
    let v16: s0 = f27(v17) in
    let v29: s0 = f26(v16) in
    let v31: s0 = f27(v29) in
    v31
  } in
  let f19: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p1 in
    var v3: s0 = v0 in
    var v1: [[Float]] = v2 in
    let v7: s0 = f23(v3) in
    let v4: [[Float]] = v0.p1 in
    let v5: [Float] = v1[1] in
    v3.p1 = v2 in
    let v8: [[Float]] = v0.p1 in
    let v6: s0 = f23(v3) in
    let v9: s0 = f26(v6) in
    v1[1] = v5 in
    v1[1] = v5 in
    let v10: [Float] = v1[1] in
    var v13: [Float] = v5 in
    v3.p0 = v4 in
    v1[2] = v10 in
    var v14: [[Float]] = v4 in
    let v18: s0 = f23(v3) in
    let v11: Float = v13[0] in
    v14[1] = v13 in
    var v12: [[Float]] = v14 in
    let v16: s0 = f23(v9) in
    v3.p0 = v12 in
    let v17: s0 = f27(v18) in
    let v25: [[Float]] = v6.p1 in
    v12[1] = v13 in
    let v20: [[Float]] = v16.p0 in
    let v46: [[Float]] = v7.p1 in
    let v49: s0 = f23(v3) in
    let v42: [Float] = v20[1] in
    let v35: s0 = f23(v49) in
    v12 = v20 in
    v13[0] = v11 in
    let v51: [[Float]] = v16.p0 in
    let v72: s0 = f27(v49) in
    let v82: [[Float]] = v6.p1 in
    v3.p1 = v8 in
    v14[2] = v5 in
    let v44: [[Float]] = v17.p1 in
    v3.p0 = v2 in
    let v63: [[Float]] = v35.p1 in
    v3.p0 = v82 in
    var v95: s0 = v72 in
    let v66: s0 = f23(v95) in
    v95.p0 = v44 in
    v3.p0 = v25 in
    v95.p0 = v63 in
    v12[2] = v42 in
    let v76: s0 = f27(v66) in
    let v321: [[Float]] = v3.p0 in
    let v137: [[Float]] = v76.p1 in
    let v112: [Float] = v1[0] in
    v12[0] = v112 in
    v3.p0 = v46 in
    let v205: s0 = s0(v137, v51) in
    v3.p0 = v321 in
    v205
  } in
  let f15: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f27(v0) in
    let v4: s0 = f23(v0) in
    let v8: s0 = f23(v3) in
    let v11: s0 = f23(v8) in
    var v15: s0 = v11 in
    let v22: [[Float]] = v4.p0 in
    v15.p0 = v22 in
    v15
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    var v3: s0 = v0 in
    let v5: s0 = f15(v0) in
    let v4: s0 = f19(v5) in
    let v14: [[Float]] = v3.p1 in
    let v9: [s0] = [v4, v4, v4, v4, v0, v3] in
    let v8: [Float] = v14[0] in
    var v15: [[Float]] = v14 in
    let v20: s0 = f19(v3) in
    var v30: [[Float]] = v15 in
    v3.p0 = v15 in
    var v28: [s0] = v9 in
    let v38: [Float] = v30[2] in
    var v33: [Float] = v38 in
    let v19: s0 = v28[5] in
    let v51: [[Float]] = v19.p1 in
    v3.p0 = v51 in
    v30[0] = v8 in
    let v81: Float = v33[0] in
    v28[5] = v20 in
    v3.p1 = v15 in
    v3.p0 = v30 in
    v81
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]) in
    let v1: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()