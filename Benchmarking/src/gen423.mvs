  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s0]]
    var p2: s0
  } in
  struct s3 {
    var p0: s1
    var p1: [s0]
  } in
  struct s7 {
    var p0: [s2]
    var p1: s3
    var p2: s0
  } in
  let f109: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v7: [s1] = v0 in
    var v3: [s1] = v7 in
    let v2: s1 = v0[0] in
    v3[0] = v2 in
    var v1: [s1] = v3 in
    v1
  } in
  let f77: ([s1], Float) -> Float = (v0: [s1], v1: Float) -> Float {
    let v7: s1 = v0[1] in
    let v6: s0 = v7.p1 in
    var v18: s1 = v7 in
    v18.p1 = v6 in
    let v31: s0 = v18.p1 in
    v18.p1 = v6 in
    v18.p1 = v6 in
    v18.p1 = v6 in
    let v17: [s0] = [v6, v31, v31, v31, v31] in
    let v47: s0 = v17[4] in
    let v34: s0 = v17[4] in
    let v41: [[s0]] = v18.p0 in
    var v72: [s0] = v17 in
    v18.p1 = v34 in
    let v59: [s0] = v41[1] in
    v18.p1 = v34 in
    v18.p1 = v47 in
    let v93: s0 = v72[0] in
    v72[3] = v47 in
    v18.p1 = v31 in
    v18.p0 = v41 in
    let v159: [[s0]] = v18.p0 in
    v18.p0 = v159 in
    let v163: s0 = v59[0] in
    v18.p0 = v41 in
    let v126: [Float] = v93.p1 in
    v18.p1 = v163 in
    let v195: Float = v126[1] in
    v18.p1 = v34 in
    v195
  } in
  let f53: ([[s0]]) -> [[s0]] = (v0: [[s0]]) -> [[s0]] {
    var v3: [[s0]] = v0 in
    let v5: [s0] = v3[1] in
    let v4: [s0] = v3[1] in
    var v12: [s0] = v4 in
    v3[0] = v12 in
    var v6: [[s0]] = v3 in
    v3[0] = v4 in
    let v10: s0 = v4[0] in
    v3[0] = v5 in
    let v18: [s0] = v6[1] in
    v3[0] = v12 in
    v12[0] = v10 in
    var v29: [[s0]] = v0 in
    v29[1] = v18 in
    v12 = v5 in
    v29
  } in
  let f52: (s0, s1) -> s1 = (v0: s0, v1: s1) -> s1 {
    let v4: [s1] = [v1, v1, v1, v1, v1, v1, v1] in
    let v5: s1 = v4[3] in
    let v7: [[Float]] = v0.p0 in
    let v2: [[Float]] = v0.p0 in
    var v14: s1 = v5 in
    v14.p1 = v0 in
    let v12: [Float] = v0.p1 in
    let v15: [Float] = v0.p1 in
    let v18: Float = v15[0] in
    var v17: s0 = v0 in
    let v10: [[s0]] = v5.p0 in
    let v31: [[s0]] = f53(v10) in
    var v30: [Float] = v12 in
    let v20: [[s0]] = f53(v31) in
    v14.p1 = v17 in
    let v23: [Float] = v2[1] in
    v30[1] = v18 in
    var v27: [[s0]] = v20 in
    let v33: Float = v23[0] in
    let v36: [[s0]] = f53(v27) in
    let v54: Float = v33 / v18 in
    var v48: s0 = v17 in
    var v47: [Float] = v15 in
    let v91: [[Float]] = v48.p0 in
    v30[1] = v18 in
    v30[0] = v54 in
    let v49: [s0] = v10[0] in
    let v129: s0 = v49[0] in
    var v51: s0 = v17 in
    v17 = v51 in
    let v73: [[s0]] = f53(v10) in
    let v41: [[s0]] = f53(v36) in
    v47[1] = v54 in
    var v110: [[Float]] = v91 in
    let v106: [Float] = v48.p1 in
    var v140: [Float] = v30 in
    let v125: s0 = v14.p1 in
    v14.p1 = v129 in
    v17.p1 = v140 in
    v14.p1 = v51 in
    let v112: [[Float]] = v125.p0 in
    v17.p0 = v110 in
    v48.p0 = v112 in
    let v234: [[s0]] = f53(v73) in
    v48.p1 = v106 in
    v14.p0 = v41 in
    v17.p1 = v47 in
    v51.p0 = v7 in
    v14.p0 = v234 in
    v14
  } in
  let noinline_f0: (s1, s3, [s7], Float) -> Float = (v0: s1, v1: s3, v2: [s7], v3: Float) -> Float {
    let v5: [s0] = v1.p1 in
    let v6: s0 = v5[2] in
    let v8: [s0] = v1.p1 in
    let v15: s0 = v8[2] in
    let v16: s1 = f52(v15, v0) in
    let v19: [Float] = v6.p1 in
    let v32: s0 = v8[2] in
    let v18: Float = v19[1] in
    let v33: Float = v18 / v3 in
    var v22: [Float] = v19 in
    let v17: [[s0]] = v0.p0 in
    let v56: Float = v19[1] in
    var v24: s1 = v0 in
    let v35: [[s0]] = f53(v17) in
    let v64: [s1] = [v0, v16, v24] in
    let v59: s0 = v5[1] in
    v22[1] = v56 in
    let v50: s1 = v64[0] in
    let v37: [s1] = f109(v64) in
    let v58: s1 = s1(v17, v59) in
    let v63: [[s0]] = v58.p0 in
    var v85: [[s0]] = v63 in
    v24.p0 = v35 in
    v24 = v50 in
    let v91: Float = f77(v37, v33) in
    v24.p0 = v85 in
    v24.p1 = v32 in
    var v77: [Float] = v22 in
    v77[1] = v91 in
    let v163: Float = v77[0] in
    v77[0] = v56 in
    v163
  } in
  fun loop(i: Int, v0: s1, v1: s3, v2: [s7], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([[s0([[0.0], [1.0], [2.0]], [3.0, 4.0])], [s0([[5.0], [6.0], [7.0]], [8.0, 9.0])]], s0([[10.0], [11.0], [12.0]], [13.0, 14.0])) in
    let v1: s3 = s3(s1([[s0([[15.0], [16.0], [17.0]], [18.0, 19.0])], [s0([[20.0], [21.0], [22.0]], [23.0, 24.0])]], s0([[25.0], [26.0], [27.0]], [28.0, 29.0])), [s0([[30.0], [31.0], [32.0]], [33.0, 34.0]), s0([[35.0], [36.0], [37.0]], [38.0, 39.0]), s0([[40.0], [41.0], [42.0]], [43.0, 44.0])]) in
    let v2: [s7] = [s7([s2(s0([[45.0], [46.0], [47.0]], [48.0, 49.0]), [[s0([[50.0], [51.0], [52.0]], [53.0, 54.0])]], s0([[55.0], [56.0], [57.0]], [58.0, 59.0])), s2(s0([[60.0], [61.0], [62.0]], [63.0, 64.0]), [[s0([[65.0], [66.0], [67.0]], [68.0, 69.0])]], s0([[70.0], [71.0], [72.0]], [73.0, 74.0])), s2(s0([[75.0], [76.0], [77.0]], [78.0, 79.0]), [[s0([[80.0], [81.0], [82.0]], [83.0, 84.0])]], s0([[85.0], [86.0], [87.0]], [88.0, 89.0]))], s3(s1([[s0([[90.0], [91.0], [92.0]], [93.0, 94.0])], [s0([[95.0], [96.0], [97.0]], [98.0, 99.0])]], s0([[100.0], [101.0], [102.0]], [103.0, 104.0])), [s0([[105.0], [106.0], [107.0]], [108.0, 109.0]), s0([[110.0], [111.0], [112.0]], [113.0, 114.0]), s0([[115.0], [116.0], [117.0]], [118.0, 119.0])]), s0([[120.0], [121.0], [122.0]], [123.0, 124.0]))] in
    let v3: Float = 125.0 in
    let initialResult: Float = 125.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()