  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: Float
    var p1: [s0]
  } in
  struct s3 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s5 {
    var p0: s3
    var p1: s0
  } in
  let f44: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v5: Float = v0 in
    let v2: [Float] = [v3, v0] in
    var v9: [Float] = v2 in
    let v7: Float = v2[0] in
    let v4: Float = v2[0] in
    let v1: Float = v9[0] in
    var v12: [Float] = v2 in
    var v13: [Float] = v12 in
    v9[0] = v3 in
    v9[1] = v7 in
    var v25: Float = v4 in
    var v18: Float = v25 in
    var v19: Float = v1 in
    let v40: [Float] = [v25, v3, v0] in
    var v39: [Float] = v12 in
    v39[1] = v5 in
    let v73: [[Float]] = [v39, v9] in
    var v30: [Float] = v40 in
    let v44: Float = v40[1] in
    v12[0] = v18 in
    var v51: [Float] = v30 in
    var v22: [Float] = v12 in
    v12[1] = v44 in
    var v49: [Float] = v51 in
    let v89: [Float] = v73[1] in
    let v98: [Float] = v73[1] in
    var v69: [Float] = v13 in
    v51[1] = v0 in
    let v82: Float = v69[0] in
    let v60: [Float] = v73[1] in
    var v121: [Float] = v22 in
    var v63: [Float] = v69 in
    var v99: [Float] = v63 in
    v121 = v39 in
    var v132: [Float] = v121 in
    let v147: Float = v49[1] in
    let v117: Float = v51[0] in
    v132[0] = v82 in
    v30[2] = v147 in
    v13[0] = v19 in
    let v92: [[Float]] = [v132, v89, v60, v99, v98, v89, v99] in
    let v138: [Float] = v92[6] in
    v9[0] = v18 in
    v132[0] = v117 in
    let v273: Float = v138[1] in
    v273
  } in
  let f18: (Float) -> Float = (v0: Float) -> Float {
    let v2: Float = f44(v0) in
    let v10: Float = f44(v2) in
    let v12: Float = f44(v2) in
    let v30: [Float] = [v0, v2, v10, v12, v0] in
    var v27: [Float] = v30 in
    var v46: [Float] = v27 in
    let v86: Float = v46[0] in
    v86
  } in
  let noinline_f0: (s1, s5, s0, s0, Float) -> Float = (v0: s1, v1: s5, v2: s0, v3: s0, v4: Float) -> Float {
    let v14: Float = v0.p0 in
    let v23: Float = v14 * v14 in
    var v18: Float = v23 in
    let v35: Float = f18(v23) in
    let v16: [[Float]] = v3.p1 in
    let v34: [Float] = v16[0] in
    var v28: [Float] = v34 in
    let v39: Float = f18(v18) in
    v28[0] = v35 in
    let v33: Float = v28[0] in
    v28 = v34 in
    v28[0] = v39 in
    v33
  } in
  fun loop(i: Int, v0: s1, v1: s5, v2: s0, v3: s0, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(0.0, [s0([[1.0], [2.0], [3.0]], [[4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0]])]) in
    let v1: s5 = s5(s3([[s0([[9.0], [10.0], [11.0]], [[12.0]])], [s0([[13.0], [14.0], [15.0]], [[16.0]])]], [s0([[17.0], [18.0], [19.0]], [[20.0]])]), s0([[21.0], [22.0], [23.0]], [[24.0]])) in
    let v2: s0 = s0([[25.0], [26.0], [27.0]], [[28.0]]) in
    let v3: s0 = s0([[29.0], [30.0], [31.0]], [[32.0]]) in
    let v4: Float = 33.0 in
    let initialResult: Float = 33.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()