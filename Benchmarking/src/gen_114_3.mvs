  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  let f70: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: s0 = v0.p1 in
    let v7: s0 = v0.p1 in
    let v5: [[Float]] = v7.p0 in
    let v6: [Float] = v5[0] in
    var v2: s0 = v7 in
    let v10: [[Float]] = v7.p1 in
    var v8: s1 = v0 in
    let v13: [Float] = v10[1] in
    let v3: [[Float]] = v4.p1 in
    let v9: s0 = s0(v5, v10, v5, v5) in
    var v11: [[Float]] = v3 in
    var v15: s1 = v0 in
    let v18: Float = v6[0] in
    var v36: [Float] = v13 in
    var v17: Float = v18 in
    v2.p0 = v5 in
    v11[1] = v13 in
    v11[1] = v13 in
    v11[0] = v13 in
    let v117: [Float] = v5[0] in
    let v41: [Float] = v10[0] in
    let v14: Float = v17 + v17 in
    let v26: [Float] = v5[0] in
    let v23: Float = v6[0] in
    v36[0] = v14 in
    let v29: [Float] = v3[1] in
    v36 = v26 in
    let v27: s0 = v15.p1 in
    v11[1] = v13 in
    var v35: [Float] = v41 in
    v2.p2 = v5 in
    let v58: [[Float]] = [v117, v35, v29, v35, v35] in
    let v32: s0 = v15.p1 in
    var v44: [[Float]] = v5 in
    var v53: [[Float]] = v5 in
    let v28: [Float] = v44[0] in
    let v37: [Float] = v44[0] in
    v53[0] = v29 in
    v15.p0 = v32 in
    var v48: s1 = v8 in
    let v73: [Float] = v58[2] in
    let v79: s0 = v48.p0 in
    let v71: [[Float]] = v7.p0 in
    v48.p0 = v9 in
    v35[0] = v23 in
    let v67: s1 = s1(v27, v2) in
    var v50: s1 = v0 in
    v44[0] = v36 in
    v50.p1 = v32 in
    var v42: Float = v14 in
    let v47: s0 = v48.p1 in
    v36[0] = v14 in
    v44[0] = v73 in
    v11[0] = v73 in
    var v61: [[Float]] = v53 in
    v2 = v7 in
    let v65: [[Float]] = v32.p2 in
    let v51: [Float] = v11[0] in
    v44[0] = v117 in
    v61[0] = v37 in
    v2.p2 = v61 in
    v50.p1 = v7 in
    let v60: s0 = v50.p1 in
    let v75: [[Float]] = v60.p1 in
    let v178: s0 = v50.p1 in
    let v70: s0 = v48.p1 in
    let v84: [Float] = v58[2] in
    v36[0] = v42 in
    v48.p1 = v70 in
    v44[0] = v84 in
    let v121: s0 = v0.p0 in
    v15.p1 = v60 in
    let v43: [[Float]] = v47.p0 in
    let v96: [Float] = v58[2] in
    var v191: s1 = v67 in
    v50 = v8 in
    let v78: [[Float]] = v121.p0 in
    v61[0] = v51 in
    v36[0] = v18 in
    v61 = v43 in
    v2.p3 = v71 in
    v36 = v28 in
    v2.p0 = v43 in
    v191.p0 = v178 in
    v35[0] = v18 in
    v11[0] = v96 in
    v15.p0 = v79 in
    v191.p1 = v178 in
    v50.p1 = v32 in
    let v243: s0 = s0(v78, v75, v61, v65) in
    v8.p0 = v243 in
    v191
  } in
  let f68: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v5: [[Float]] = v3.p2 in
    let v6: s1 = s1(v3, v3) in
    let v1: s1 = f70(v6) in
    var v12: s1 = v6 in
    var v14: s1 = v1 in
    let v7: [Float] = v5[0] in
    let v8: s1 = f70(v1) in
    let v11: s1 = f70(v12) in
    var v4: [[Float]] = v5 in
    v14.p0 = v0 in
    v12.p1 = v3 in
    var v17: [Float] = v7 in
    let v15: s1 = f70(v11) in
    let v28: [[Float]] = v0.p3 in
    let v23: s1 = f70(v8) in
    v4[0] = v17 in
    var v20: [[Float]] = v4 in
    let v18: s0 = v23.p0 in
    let v31: s1 = f70(v14) in
    let v19: [[Float]] = v3.p1 in
    var v30: s0 = v18 in
    let v16: s0 = v31.p1 in
    let v32: s1 = f70(v23) in
    let v34: s1 = f70(v23) in
    var v29: [[Float]] = v19 in
    let v40: s0 = v32.p1 in
    let v35: [Float] = v28[0] in
    let v52: [s1] = [v15, v15, v11] in
    let v21: Float = v17[0] in
    v29[1] = v35 in
    let v39: Float = v21 / v21 in
    var v123: [[Float]] = v5 in
    let v48: [Float] = v123[0] in
    let v38: [Float] = v19[0] in
    v12.p1 = v16 in
    v14.p1 = v40 in
    let v36: s1 = f70(v34) in
    v30.p0 = v123 in
    v123[0] = v17 in
    let v103: s1 = v52[2] in
    let v102: [Float] = v20[0] in
    v12 = v36 in
    let v97: s1 = v52[1] in
    let v109: Float = v21 - v39 in
    v17[0] = v109 in
    v14.p0 = v16 in
    let v160: s1 = f70(v103) in
    let v107: s0 = v160.p0 in
    v14.p0 = v16 in
    v29[1] = v48 in
    v29[1] = v38 in
    v12.p1 = v107 in
    v3.p1 = v29 in
    v123[0] = v102 in
    let v427: s0 = v97.p0 in
    v12.p0 = v30 in
    var v79: s0 = v427 in
    v79
  } in
  let f65: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: [s1] = [v0] in
    let v4: s1 = v5[0] in
    var v6: s1 = v4 in
    let v15: s1 = v5[0] in
    let v16: s0 = v15.p1 in
    v6.p0 = v16 in
    v6
  } in
  let f64: (s0, s1) -> s0 = (v0: s0, v1: s1) -> s0 {
    var v8: s0 = v0 in
    let v20: s0 = f68(v8) in
    var v11: s0 = v20 in
    var v32: s0 = v11 in
    let v41: s0 = f68(v32) in
    let v42: [[Float]] = v41.p0 in
    v11.p3 = v42 in
    v32
  } in
  let noinline_f0: ([s0], s0, Float) -> Float = (v0: [s0], v1: s0, v2: Float) -> Float {
    let v4: Float = v2 / v2 in
    let v7: [[Float]] = v1.p2 in
    let v8: s1 = s1(v1, v1) in
    let v16: [Float] = v7[0] in
    let v15: s1 = f70(v8) in
    let v18: s0 = f64(v1, v15) in
    var v17: Float = v4 in
    var v29: [Float] = v16 in
    var v19: [[Float]] = v7 in
    let v26: s1 = f65(v8) in
    v29[0] = v17 in
    v19 = v7 in
    let v47: s0 = v26.p1 in
    let v35: [Float] = v19[0] in
    let v20: [Float] = v19[0] in
    let v58: [[Float]] = v47.p1 in
    v29[0] = v17 in
    let v65: [[Float]] = v18.p2 in
    let v69: [Float] = v58[1] in
    let v93: [Float] = v58[1] in
    v29 = v35 in
    v19[0] = v20 in
    let v77: Float = v69[0] in
    v29[0] = v77 in
    v19[0] = v29 in
    var v60: [[Float]] = v65 in
    var v136: [[Float]] = v60 in
    v19[0] = v93 in
    v136[0] = v29 in
    v60[0] = v69 in
    let v64: [Float] = v136[0] in
    var v131: [[Float]] = v19 in
    let v166: Float = v29[0] in
    v60 = v131 in
    v19[0] = v64 in
    v166
  } in
  fun loop(i: Int, v0: [s0], v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0]], [[1.0], [2.0]], [[3.0]], [[4.0]])] in
    let v1: s0 = s0([[5.0]], [[6.0], [7.0]], [[8.0]], [[9.0]]) in
    let v2: Float = 10.0 in
    let initialResult: Float = 10.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()