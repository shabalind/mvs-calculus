  let f84: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v2: Float = v1 in
    var v4: Float = v2 in
    var v7: Float = v1 in
    var v3: Float = v0 in
    var v13: Float = v7 in
    var v11: Float = v1 in
    var v8: Float = v0 in
    var v6: Float = v13 in
    var v10: Float = v7 in
    let v17: [Float] = [v13, v4, v10, v3, v10] in
    var v25: [Float] = v17 in
    var v26: Float = v0 in
    v25[4] = v6 in
    var v21: [Float] = v17 in
    v25[1] = v8 in
    let v27: Float = v21[0] in
    v25[2] = v11 in
    var v71: [Float] = v25 in
    v25[4] = v26 in
    var v30: [Float] = v71 in
    var v70: Float = v26 in
    let v34: Float = v30[3] in
    v21[2] = v70 in
    v71[3] = v27 in
    v71[0] = v27 in
    v25[2] = v70 in
    v30[2] = v7 in
    v21[2] = v1 in
    v21[1] = v27 in
    v34
  } in
  let noinline_f0: ([Float], Float) -> Float = (v0: [Float], v1: Float) -> Float {
    var v6: Float = v1 in
    let v2: Float = f84(v1) in
    let v5: Float = v0[0] in
    let v3: Float = v2 * v6 in
    let v9: Float = v0[0] in
    let v7: Float = f84(v1) in
    let v16: Float = f84(v7) in
    var v11: Float = v5 in
    let v22: Float = v0[0] in
    let v18: Float = f84(v22) in
    let v10: Float = f84(v9) in
    let v51: Float = v0[0] in
    let v24: Float = v0[0] in
    var v23: [Float] = v0 in
    v23[0] = v24 in
    let v15: [Float] = [v18, v10, v6, v18, v16, v11] in
    v23[0] = v51 in
    let v26: Float = v15[3] in
    let v25: Float = f84(v7) in
    var v34: [Float] = v23 in
    v34[0] = v10 in
    var v65: [Float] = v23 in
    var v81: [Float] = v65 in
    v81 = v65 in
    v81 = v34 in
    v23 = v0 in
    v65[0] = v26 in
    let v121: Float = v81[0] in
    let v100: Float = f84(v25) in
    v81 = v65 in
    var v114: Float = v100 in
    v34[0] = v3 in
    v34[0] = v114 in
    v121
  } in
  fun loop(i: Int, v0: [Float], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [Float] = [0.0] in
    let v1: Float = 1.0 in
    let initialResult: Float = 1.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()