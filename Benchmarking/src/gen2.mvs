  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  let f80: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [Float] = v0.p0 in
    let v2: [[Float]] = v0.p1 in
    let v3: [Float] = v0.p0 in
    var v11: s0 = v0 in
    let v1: [[[Float]]] = [v2, v2, v2, v2, v2, v2] in
    var v10: [[[Float]]] = v1 in
    v10[5] = v2 in
    var v12: [[[Float]]] = v1 in
    let v17: [[Float]] = v11.p1 in
    v11.p0 = v3 in
    let v19: [[Float]] = v0.p1 in
    v11.p1 = v2 in
    let v42: s0 = s0(v3, v17) in
    let v14: [Float] = v11.p0 in
    let v16: [[Float]] = v0.p1 in
    var v45: [[[Float]]] = v10 in
    v12[0] = v16 in
    let v23: [Float] = v11.p0 in
    let v26: [[Float]] = v45[5] in
    v11.p1 = v17 in
    v11.p0 = v5 in
    v10 = v45 in
    v45 = v1 in
    let v24: [[Float]] = v12[2] in
    v12[4] = v2 in
    v10[2] = v16 in
    v11.p0 = v3 in
    v12[0] = v2 in
    v12[0] = v17 in
    let v35: [Float] = v42.p0 in
    let v43: [[Float]] = v45[4] in
    v11.p0 = v23 in
    let v41: [[Float]] = v11.p1 in
    let v50: [[Float]] = v42.p1 in
    v11.p0 = v5 in
    var v74: [[Float]] = v17 in
    var v32: s0 = v42 in
    v11.p0 = v23 in
    let v34: s0 = s0(v35, v74) in
    let v48: [[Float]] = v11.p1 in
    v11.p1 = v50 in
    v10[5] = v43 in
    v11.p1 = v41 in
    v32.p1 = v19 in
    let v37: [s0] = [v11, v42, v34, v34, v34, v0, v0] in
    v32.p0 = v14 in
    v10[4] = v26 in
    let v47: [[Float]] = v32.p1 in
    v45[3] = v47 in
    let v85: s0 = v37[3] in
    let v55: [Float] = v85.p0 in
    var v76: [s0] = v37 in
    let v49: [[Float]] = v42.p1 in
    v11.p0 = v55 in
    v32.p1 = v24 in
    var v160: [s0] = v76 in
    v11.p1 = v49 in
    v11.p1 = v48 in
    let v150: s0 = v160[4] in
    let v62: [Float] = v150.p0 in
    v11.p1 = v26 in
    v76[6] = v11 in
    let v177: s0 = s0(v62, v26) in
    v177
  } in
  let f79: (s1, s0) -> s1 = (v0: s1, v1: s0) -> s1 {
    var v3: s1 = v0 in
    var v2: s1 = v3 in
    let v7: [[s0]] = v3.p0 in
    let v21: [s0] = [v1, v1] in
    let v11: s0 = f80(v1) in
    let v18: s0 = v21[1] in
    var v10: s1 = v0 in
    let v14: [[s0]] = v0.p0 in
    let v17: s0 = f80(v11) in
    let v12: s0 = f80(v17) in
    v3 = v10 in
    v3.p0 = v14 in
    var v20: [s0] = v21 in
    v3.p1 = v18 in
    v20[1] = v1 in
    v2.p0 = v7 in
    let v38: [[s0]] = v10.p0 in
    let v44: s0 = f80(v12) in
    v20[1] = v17 in
    v2.p0 = v38 in
    v2.p0 = v14 in
    let v53: s0 = f80(v44) in
    v20[0] = v17 in
    v10.p0 = v14 in
    let v106: s0 = v20[1] in
    v10.p1 = v106 in
    let v133: s0 = f80(v18) in
    v2.p1 = v133 in
    v20[1] = v53 in
    v20[1] = v1 in
    v2
  } in
  let f66: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    let v6: s0 = v0[0] in
    let v1: s0 = f80(v6) in
    var v3: [s0] = v0 in
    let v5: s0 = v3[0] in
    let v11: [[s0]] = [v0] in
    v3[0] = v6 in
    v3[0] = v6 in
    let v7: s0 = v3[0] in
    let v9: s0 = f80(v1) in
    let v17: [[Float]] = v9.p1 in
    let v24: [Float] = v9.p0 in
    let v31: s0 = f80(v5) in
    let v20: [s0] = v11[0] in
    v3[0] = v7 in
    let v18: s0 = s0(v24, v17) in
    var v33: [s0] = v20 in
    let v68: s0 = f80(v6) in
    v33[0] = v18 in
    v3[0] = v31 in
    v33[0] = v31 in
    v3[0] = v9 in
    v33[0] = v68 in
    v3[0] = v6 in
    v33
  } in
  let f65: (s1, [s1]) -> s1 = (v0: s1, v1: [s1]) -> s1 {
    let v7: s1 = v1[0] in
    let v2: s1 = v1[0] in
    var v9: s1 = v7 in
    let v13: [[s0]] = v2.p0 in
    var v15: [[s0]] = v13 in
    var v20: [[s0]] = v15 in
    var v19: s1 = v7 in
    v19.p0 = v20 in
    let v39: [[s0]] = v9.p0 in
    let v30: [s0] = v13[0] in
    let v38: [s0] = v39[2] in
    let v56: s0 = v7.p1 in
    let v18: [s0] = v39[2] in
    let v33: [s0] = f66(v18) in
    let v29: s0 = v30[0] in
    v15[0] = v33 in
    var v27: [[s0]] = v15 in
    v27[2] = v38 in
    let v28: [s0] = [v29, v56, v29, v29] in
    let v86: s0 = v28[0] in
    let v26: s0 = v19.p1 in
    v19.p0 = v20 in
    v19.p0 = v27 in
    var v88: [[s0]] = v15 in
    v9.p1 = v86 in
    let v98: [s0] = f66(v33) in
    let v59: s1 = s1(v88, v26) in
    let v72: s0 = v18[0] in
    v88[0] = v98 in
    let v69: s1 = f79(v59, v72) in
    v69
  } in
  let f54: (s1, Float, Float) -> Float = (v0: s1, v1: Float, v2: Float) -> Float {
    v2
  } in
  let f27: (Float) -> Float = (v0: Float) -> Float {
    let v7: [Float] = [v0, v0, v0, v0, v0, v0, v0] in
    var v6: [Float] = v7 in
    let v9: [Float] = [v0, v0, v0, v0, v0] in
    var v8: [Float] = v9 in
    let v1: Float = v8[4] in
    let v5: Float = v6[3] in
    let v12: Float = v6[5] in
    v6[2] = v0 in
    let v10: Float = v5 * v12 in
    v6[4] = v10 in
    v8[1] = v0 in
    v6[3] = v1 in
    v10
  } in
  let noinline_f0: ([s1], s1, Float) -> Float = (v0: [s1], v1: s1, v2: Float) -> Float {
    let v7: s0 = v1.p1 in
    let v6: Float = f54(v1, v2, v2) in
    var v9: [s1] = v0 in
    var v4: Float = v6 in
    v9[0] = v1 in
    var v34: Float = v2 in
    var v17: Float = v34 in
    let v53: s1 = f65(v1, v9) in
    let v19: s1 = f65(v1, v0) in
    let v16: [[Float]] = v7.p1 in
    var v38: [[Float]] = v16 in
    v17 = v34 in
    var v57: [s1] = v0 in
    let v69: s1 = f65(v19, v57) in
    v57[0] = v69 in
    let v81: [Float] = v38[0] in
    let v54: Float = f27(v4) in
    let v146: Float = v17 / v54 in
    let v77: Float = v81[0] in
    let v106: Float = v77 + v34 in
    let v88: Float = f54(v53, v146, v34) in
    v9[0] = v69 in
    v4 = v6 in
    let v177: [Float] = [v6, v88, v106, v77, v106] in
    let v279: Float = v177[3] in
    v279
  } in
  fun loop(i: Int, v0: [s1], v1: s1, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s1] = [s1([[s0([0.0, 1.0], [[2.0], [3.0]])], [s0([4.0, 5.0], [[6.0], [7.0]])], [s0([8.0, 9.0], [[10.0], [11.0]])]], s0([12.0, 13.0], [[14.0], [15.0]]))] in
    let v1: s1 = s1([[s0([16.0, 17.0], [[18.0], [19.0]])], [s0([20.0, 21.0], [[22.0], [23.0]])], [s0([24.0, 25.0], [[26.0], [27.0]])]], s0([28.0, 29.0], [[30.0], [31.0]])) in
    let v2: Float = 32.0 in
    let initialResult: Float = 32.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()