  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: s1
    var p1: s0
  } in
  struct s6 {
    var p0: s3
    var p1: s2
    var p2: s0
  } in
  let noinline_f0: (s6, s1, Float) -> Float = (v0: s6, v1: s1, v2: Float) -> Float {
    let v3: s0 = v0.p2 in
    var v5: s0 = v3 in
    var v12: Float = v2 in
    let v7: [Float] = v5.p0 in
    let v10: s0 = v1.p0 in
    let v14: Float = v7[0] in
    let v34: [[Float]] = [v7, v7, v7, v7, v7] in
    let v19: s0 = v1.p0 in
    let v13: [Float] = v34[3] in
    let v23: Float = v2 / v14 in
    let v27: [[Float]] = v19.p1 in
    var v65: [Float] = v13 in
    v65[2] = v2 in
    let v21: Float = v65[0] in
    let v24: [[Float]] = v19.p1 in
    v65[1] = v21 in
    let v38: [Float] = v24[2] in
    let v46: [[Float]] = v10.p1 in
    var v37: [[Float]] = v46 in
    v37[0] = v38 in
    v5.p0 = v65 in
    let v80: [Float] = v34[3] in
    v12 = v23 in
    v5.p0 = v80 in
    var v55: Float = v21 in
    var v77: [[Float]] = v27 in
    let v92: [Float] = v34[3] in
    v5.p0 = v92 in
    let v195: Float = v92[0] in
    v65[2] = v195 in
    v65[1] = v12 in
    v5.p1 = v77 in
    v5.p1 = v37 in
    v55
  } in
  fun loop(i: Int, v0: s6, v1: s1, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s6 = s6(s3(s1(s0([0.0, 1.0, 2.0], [[3.0], [4.0], [5.0]]), s0([6.0, 7.0, 8.0], [[9.0], [10.0], [11.0]])), s0([12.0, 13.0, 14.0], [[15.0], [16.0], [17.0]])), s2(s0([18.0, 19.0, 20.0], [[21.0], [22.0], [23.0]]), [s0([24.0, 25.0, 26.0], [[27.0], [28.0], [29.0]]), s0([30.0, 31.0, 32.0], [[33.0], [34.0], [35.0]]), s0([36.0, 37.0, 38.0], [[39.0], [40.0], [41.0]])]), s0([42.0, 43.0, 44.0], [[45.0], [46.0], [47.0]])) in
    let v1: s1 = s1(s0([48.0, 49.0, 50.0], [[51.0], [52.0], [53.0]]), s0([54.0, 55.0, 56.0], [[57.0], [58.0], [59.0]])) in
    let v2: Float = 60.0 in
    let initialResult: Float = 60.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()