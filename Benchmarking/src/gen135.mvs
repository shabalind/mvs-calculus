  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [Float]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
    var p2: [s0]
    var p3: [s0]
    var p4: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [s1]
  } in
  let noinline_f0: ([[s2]], Float) -> Float = (v0: [[s2]], v1: Float) -> Float {
    var v3: [[s2]] = v0 in
    var v8: [[s2]] = v3 in
    let v10: [s2] = v8[0] in
    let v2: s2 = v10[0] in
    var v15: [[s2]] = v8 in
    let v30: [s2] = v15[0] in
    let v14: [s1] = v2.p1 in
    v3[0] = v30 in
    v8[0] = v30 in
    let v46: [s2] = v3[0] in
    let v32: s1 = v14[0] in
    let v36: s0 = v32.p4 in
    v8[0] = v10 in
    let v162: [Float] = v36.p2 in
    v15[0] = v46 in
    let v101: Float = v162[0] in
    v101
  } in
  fun loop(i: Int, v0: [[s2]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s2]] = [[s2(s1([s0([[0.0], [1.0]], [[2.0], [3.0]], [4.0]), s0([[5.0], [6.0]], [[7.0], [8.0]], [9.0])], [s0([[10.0], [11.0]], [[12.0], [13.0]], [14.0])], [s0([[15.0], [16.0]], [[17.0], [18.0]], [19.0])], [s0([[20.0], [21.0]], [[22.0], [23.0]], [24.0]), s0([[25.0], [26.0]], [[27.0], [28.0]], [29.0]), s0([[30.0], [31.0]], [[32.0], [33.0]], [34.0])], s0([[35.0], [36.0]], [[37.0], [38.0]], [39.0])), [s1([s0([[40.0], [41.0]], [[42.0], [43.0]], [44.0]), s0([[45.0], [46.0]], [[47.0], [48.0]], [49.0])], [s0([[50.0], [51.0]], [[52.0], [53.0]], [54.0])], [s0([[55.0], [56.0]], [[57.0], [58.0]], [59.0])], [s0([[60.0], [61.0]], [[62.0], [63.0]], [64.0]), s0([[65.0], [66.0]], [[67.0], [68.0]], [69.0]), s0([[70.0], [71.0]], [[72.0], [73.0]], [74.0])], s0([[75.0], [76.0]], [[77.0], [78.0]], [79.0])), s1([s0([[80.0], [81.0]], [[82.0], [83.0]], [84.0]), s0([[85.0], [86.0]], [[87.0], [88.0]], [89.0])], [s0([[90.0], [91.0]], [[92.0], [93.0]], [94.0])], [s0([[95.0], [96.0]], [[97.0], [98.0]], [99.0])], [s0([[100.0], [101.0]], [[102.0], [103.0]], [104.0]), s0([[105.0], [106.0]], [[107.0], [108.0]], [109.0]), s0([[110.0], [111.0]], [[112.0], [113.0]], [114.0])], s0([[115.0], [116.0]], [[117.0], [118.0]], [119.0]))])]] in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()