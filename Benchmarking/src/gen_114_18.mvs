  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [[s1]]
    var p1: s1
  } in
  let f35: (s0) -> s0 = (v0: s0) -> s0 {
    var v8: s0 = v0 in
    var v6: s0 = v8 in
    v6
  } in
  let f30: (Float, s0, [s1]) -> Float = (v0: Float, v1: s0, v2: [s1]) -> Float {
    let v4: s0 = f35(v1) in
    let v9: [[Float]] = v4.p1 in
    let v57: [Float] = v9[1] in
    var v62: [Float] = v57 in
    let v136: Float = v62[0] in
    v136
  } in
  let f26: (s0, s0, s1, s2) -> s0 = (v0: s0, v1: s0, v2: s1, v3: s2) -> s0 {
    let v8: s0 = f35(v1) in
    var v10: s1 = v2 in
    let v7: s0 = f35(v0) in
    let v5: s0 = f35(v1) in
    let v13: [[s0]] = v10.p1 in
    v10.p1 = v13 in
    let v12: s0 = f35(v7) in
    let v9: s0 = f35(v5) in
    let v15: [s0] = v13[0] in
    var v11: [s0] = v15 in
    let v14: s0 = f35(v1) in
    var v17: s1 = v2 in
    var v22: s0 = v1 in
    let v20: [[Float]] = v5.p0 in
    let v49: [s0] = v13[0] in
    v22.p0 = v20 in
    let v21: s0 = f35(v14) in
    var v26: s1 = v17 in
    var v42: [s0] = v15 in
    v10.p0 = v8 in
    let v36: [s0] = v13[0] in
    let v29: [[Float]] = v12.p1 in
    let v30: [[Float]] = v0.p0 in
    v11[0] = v21 in
    v42[0] = v9 in
    let v33: s0 = f35(v7) in
    v42[0] = v1 in
    var v44: [[s0]] = v13 in
    var v48: [s0] = v36 in
    v10.p1 = v13 in
    let v37: s0 = v26.p0 in
    v17.p1 = v13 in
    let v28: [[s0]] = v10.p1 in
    let v60: s0 = v2.p0 in
    let v53: [[s0]] = v17.p1 in
    v44[0] = v11 in
    let v47: s0 = f35(v12) in
    v42[0] = v22 in
    var v55: [[Float]] = v29 in
    v42[0] = v60 in
    var v45: s0 = v37 in
    v44 = v53 in
    let v97: s0 = v17.p0 in
    v26.p1 = v28 in
    let v65: [[Float]] = v12.p0 in
    v44[0] = v42 in
    v45.p0 = v30 in
    let v143: s0 = s0(v65, v55) in
    v48[0] = v12 in
    v11[0] = v14 in
    let v56: s0 = f35(v21) in
    v42[0] = v7 in
    let v118: [[Float]] = v7.p1 in
    v44[0] = v49 in
    var v133: [[Float]] = v118 in
    let v76: [s0] = [v143, v97, v37, v8, v45, v56] in
    v11[0] = v33 in
    let v68: s0 = v76[2] in
    v22.p1 = v55 in
    v44[0] = v48 in
    v17.p0 = v47 in
    v10.p1 = v44 in
    v45.p1 = v133 in
    let v153: [[Float]] = v0.p1 in
    v45.p1 = v153 in
    v68
  } in
  let f17: (s2) -> s2 = (v0: s2) -> s2 {
    let v9: s1 = v0.p1 in
    let v4: s0 = v9.p0 in
    let v7: s0 = f26(v4, v4, v9, v0) in
    let v5: [[s0]] = v9.p1 in
    let v13: [s0] = v5[0] in
    let v8: [s0] = v5[0] in
    let v10: s0 = v9.p0 in
    var v24: [s0] = v8 in
    var v26: [[s0]] = v5 in
    var v25: [[s0]] = v26 in
    let v52: [[s1]] = v0.p0 in
    v24[0] = v7 in
    v24[0] = v10 in
    v26 = v25 in
    var v40: s1 = v9 in
    v25[0] = v13 in
    v40.p1 = v26 in
    v25[0] = v24 in
    var v69: s2 = v0 in
    v69.p0 = v52 in
    v69.p1 = v40 in
    v69
  } in
  let f11: (s2) -> s2 = (v0: s2) -> s2 {
    let v3: s2 = f17(v0) in
    let v2: s2 = f17(v3) in
    v2
  } in
  let f6: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: s0 = f35(v0) in
    var v1: s0 = v7 in
    var v2: s0 = v1 in
    let v5: [[Float]] = v7.p1 in
    let v6: s0 = f35(v1) in
    let v4: s0 = f35(v2) in
    var v9: [[Float]] = v5 in
    let v11: [Float] = v9[0] in
    let v13: [[Float]] = v6.p0 in
    v2.p0 = v13 in
    let v10: [[Float]] = v2.p1 in
    v1.p1 = v9 in
    let v12: [[[Float]]] = [v9, v9, v5, v5, v5, v10, v10] in
    v2.p1 = v5 in
    let v34: [[Float]] = v0.p0 in
    let v32: [[Float]] = v12[0] in
    let v20: [Float] = v34[1] in
    let v27: [[Float]] = v2.p0 in
    v1.p0 = v27 in
    v2.p1 = v32 in
    v9[1] = v11 in
    v9[0] = v20 in
    v9[1] = v11 in
    let v41: s0 = f35(v4) in
    v2.p1 = v32 in
    let v59: [[Float]] = v12[0] in
    v2.p0 = v34 in
    let v64: [Float] = v9[0] in
    v9[1] = v64 in
    v2.p1 = v5 in
    v1 = v2 in
    v1.p1 = v59 in
    let v142: s0 = f35(v41) in
    v142
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    var v5: s2 = v0 in
    var v2: s2 = v0 in
    let v4: s2 = f11(v5) in
    let v8: s1 = v5.p1 in
    let v6: s2 = f17(v0) in
    let v13: s0 = v8.p0 in
    var v9: s2 = v2 in
    let v11: [[s0]] = v8.p1 in
    let v3: s1 = v6.p1 in
    v2 = v5 in
    let v12: [s0] = v11[0] in
    v2.p1 = v3 in
    let v16: Float = v1 + v1 in
    v2.p1 = v3 in
    let v18: s0 = v12[0] in
    let v26: [[s1]] = v9.p0 in
    let v17: s2 = f11(v9) in
    let v20: [s1] = v26[0] in
    var v25: s0 = v13 in
    let v19: Float = v1 - v16 in
    let v28: s0 = f26(v13, v25, v3, v17) in
    let v32: s0 = v8.p0 in
    let v27: Float = v1 / v19 in
    let v46: s0 = f6(v13) in
    let v33: s0 = v12[0] in
    let v31: [[Float]] = v32.p0 in
    let v64: s0 = f26(v33, v18, v8, v5) in
    v25.p0 = v31 in
    let v42: [[s1]] = v4.p0 in
    let v84: [s1] = v42[0] in
    v2.p0 = v26 in
    let v61: s1 = v84[0] in
    var v69: [[s1]] = v42 in
    let v113: Float = f30(v1, v28, v20) in
    let v83: Float = v113 * v27 in
    let v63: [s1] = v69[0] in
    v9.p1 = v61 in
    v69[0] = v63 in
    let v94: s0 = f26(v64, v46, v8, v6) in
    let v75: Float = f30(v83, v94, v63) in
    v75
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([[s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), [[s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])]])]], s1(s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]), [[s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]])]])) in
    let v1: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()