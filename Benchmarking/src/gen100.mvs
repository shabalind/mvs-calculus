  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: Float
  } in
  struct s2 {
    var p0: [s1]
    var p1: [s1]
    var p2: [s1]
  } in
  struct s3 {
    var p0: [s1]
    var p1: s0
  } in
  struct s4 {
    var p0: [[s2]]
  } in
  struct s5 {
    var p0: [s3]
    var p1: [s2]
  } in
  struct s6 {
    var p0: s5
    var p1: s1
  } in
  let f82: (s2) -> s2 = (v0: s2) -> s2 {
    let v7: [s1] = v0.p0 in
    var v4: [s1] = v7 in
    let v5: s1 = v4[1] in
    var v6: s1 = v5 in
    let v9: Float = v6.p0 in
    var v3: Float = v9 in
    v6.p0 = v9 in
    v4[1] = v5 in
    let v10: s1 = v4[1] in
    let v2: s1 = v7[0] in
    var v18: s2 = v0 in
    var v1: Float = v3 in
    v4[1] = v10 in
    let v13: s1 = v7[1] in
    var v8: [s1] = v4 in
    v18.p1 = v8 in
    let v17: [s1] = v18.p2 in
    v4[1] = v13 in
    var v14: s1 = v5 in
    var v11: [s1] = v17 in
    v8[1] = v14 in
    let v15: [s1] = v18.p2 in
    v6.p0 = v3 in
    var v20: s1 = v13 in
    var v26: Float = v9 in
    v11[0] = v20 in
    v4[0] = v13 in
    var v16: s1 = v14 in
    let v30: s1 = v11[0] in
    v4[0] = v16 in
    v4[1] = v2 in
    v16.p0 = v26 in
    let v21: [Float] = [v1, v1] in
    let v22: s1 = v4[0] in
    v11[0] = v20 in
    v6.p0 = v26 in
    v11[0] = v6 in
    v11[1] = v30 in
    var v44: s2 = v18 in
    v4[1] = v22 in
    let v49: [s1] = v44.p2 in
    v14.p0 = v26 in
    let v38: s2 = s2(v11, v17, v4) in
    v18.p1 = v8 in
    var v39: [Float] = v21 in
    v6.p0 = v3 in
    var v32: s2 = v38 in
    v8[0] = v22 in
    v39[1] = v3 in
    v44.p2 = v49 in
    var v59: s2 = v32 in
    v4[1] = v5 in
    v11[0] = v13 in
    let v78: Float = v39[0] in
    let v58: [s1] = v44.p2 in
    v32.p1 = v15 in
    let v159: s1 = v58[0] in
    v8[0] = v159 in
    v14.p0 = v78 in
    v59
  } in
  let f80: (s2) -> s2 = (v0: s2) -> s2 {
    let v6: s2 = f82(v0) in
    let v9: s2 = f82(v0) in
    let v2: s2 = f82(v6) in
    let v5: [s1] = v2.p1 in
    let v12: s2 = f82(v9) in
    var v18: s2 = v12 in
    v18.p2 = v5 in
    v18.p1 = v5 in
    v18 = v12 in
    let v79: s2 = f82(v18) in
    v79
  } in
  let f78: ([s3]) -> [s3] = (v0: [s3]) -> [s3] {
    var v2: [s3] = v0 in
    let v8: s3 = v2[0] in
    var v10: s3 = v8 in
    v2[0] = v10 in
    let v23: s0 = v10.p1 in
    let v18: s0 = v10.p1 in
    v10.p1 = v18 in
    let v39: s3 = v0[1] in
    v10.p1 = v23 in
    v2[1] = v39 in
    var v53: [s3] = v2 in
    var v55: [s3] = v0 in
    v2[2] = v10 in
    v53 = v0 in
    v2 = v55 in
    v53
  } in
  let f76: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: Float = v0.p0 in
    let v6: Float = v0.p0 in
    let v8: Float = v0.p0 in
    var v7: Float = v6 in
    var v16: s1 = v0 in
    var v13: s1 = v0 in
    v16 = v13 in
    v16.p0 = v8 in
    v16.p0 = v7 in
    v16.p0 = v5 in
    v16
  } in
  let f71: (s1) -> s1 = (v0: s1) -> s1 {
    let v3: s1 = f76(v0) in
    let v4: s1 = f76(v0) in
    var v7: s1 = v0 in
    let v1: s1 = f76(v3) in
    let v12: Float = v0.p0 in
    let v5: s1 = f76(v3) in
    let v8: s1 = f76(v1) in
    let v6: [Float] = [v12, v12, v12, v12, v12, v12, v12] in
    let v9: Float = v6[3] in
    let v10: Float = v8.p0 in
    v7.p0 = v10 in
    v7.p0 = v10 in
    v7.p0 = v10 in
    v7 = v0 in
    let v16: Float = v4.p0 in
    let v11: s1 = f76(v4) in
    let v15: Float = v6[1] in
    v7.p0 = v15 in
    v7.p0 = v9 in
    let v28: s1 = f76(v11) in
    let v56: Float = v5.p0 in
    v7.p0 = v56 in
    let v78: s1 = f76(v28) in
    v7.p0 = v12 in
    v7.p0 = v16 in
    let v173: Float = v78.p0 in
    v7.p0 = v173 in
    v7
  } in
  let f56: (s2) -> s2 = (v0: s2) -> s2 {
    var v6: s2 = v0 in
    let v5: [s1] = v0.p0 in
    let v7: s2 = f80(v6) in
    let v8: s2 = f80(v0) in
    v6.p2 = v5 in
    v6.p0 = v5 in
    v6.p1 = v5 in
    var v2: s2 = v7 in
    v6 = v8 in
    let v23: s2 = f80(v2) in
    let v30: s2 = f82(v23) in
    v30
  } in
  let f34: (s5) -> s5 = (v0: s5) -> s5 {
    v0
  } in
  let f32: (s6) -> s6 = (v0: s6) -> s6 {
    v0
  } in
  let f25: (s5) -> s5 = (v0: s5) -> s5 {
    var v3: s5 = v0 in
    let v7: [s2] = v3.p1 in
    v3.p1 = v7 in
    let v1: [s3] = v3.p0 in
    let v2: [s2] = v0.p1 in
    v3 = v0 in
    let v5: s5 = f34(v3) in
    var v8: s5 = v5 in
    var v9: s5 = v3 in
    let v11: [s3] = f78(v1) in
    let v6: [s2] = v3.p1 in
    let v4: [s3] = v5.p0 in
    let v13: s2 = v6[0] in
    let v15: [s5] = [v8, v9, v9, v0] in
    v9.p0 = v4 in
    let v18: s2 = f56(v13) in
    let v21: [s2] = v3.p1 in
    var v69: [s2] = v21 in
    v69[1] = v18 in
    v69[0] = v13 in
    v3.p1 = v69 in
    let v51: [s3] = v8.p0 in
    v8.p0 = v51 in
    v9.p1 = v2 in
    v8.p0 = v11 in
    let v65: s5 = v15[2] in
    v69 = v2 in
    v65
  } in
  let f12: (s6) -> s6 = (v0: s6) -> s6 {
    let v3: s1 = v0.p1 in
    var v4: s6 = v0 in
    let v10: s6 = f32(v4) in
    let v6: s5 = v10.p0 in
    let v8: s5 = f25(v6) in
    v4.p0 = v8 in
    let v15: s1 = v10.p1 in
    let v16: s6 = f32(v4) in
    v4 = v16 in
    let v20: s6 = f32(v4) in
    v4.p0 = v6 in
    let v17: s5 = v20.p0 in
    let v38: s5 = v10.p0 in
    v4.p0 = v8 in
    v4.p0 = v17 in
    let v87: s1 = f71(v15) in
    v4.p1 = v3 in
    var v112: s6 = v0 in
    v112.p1 = v87 in
    v112.p0 = v38 in
    let v125: s5 = f25(v38) in
    v112.p1 = v87 in
    let v123: s5 = f25(v125) in
    v112.p0 = v123 in
    let v209: [s6] = [v112, v16, v112] in
    let v76: s6 = v209[2] in
    v76
  } in
  let noinline_f0: (s1, s0, [s4], s6, s0, Float) -> Float = (v0: s1, v1: s0, v2: [s4], v3: s6, v4: s0, v5: Float) -> Float {
    let v21: [[Float]] = v1.p1 in
    let v14: s6 = f12(v3) in
    let v25: s1 = v14.p1 in
    let v27: [Float] = v21[2] in
    let v45: Float = v25.p0 in
    var v37: [Float] = v27 in
    let v23: Float = v25.p0 in
    v37[0] = v23 in
    let v39: Float = v37[0] in
    let v146: Float = v39 * v45 in
    v146
  } in
  fun loop(i: Int, v0: s1, v1: s0, v2: [s4], v3: s6, v4: s0, v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(0.0) in
    let v1: s0 = s0([[1.0]], [[2.0], [3.0], [4.0]]) in
    let v2: [s4] = [s4([[s2([s1(5.0), s1(6.0)], [s1(7.0), s1(8.0)], [s1(9.0), s1(10.0)])], [s2([s1(11.0), s1(12.0)], [s1(13.0), s1(14.0)], [s1(15.0), s1(16.0)])], [s2([s1(17.0), s1(18.0)], [s1(19.0), s1(20.0)], [s1(21.0), s1(22.0)])]])] in
    let v3: s6 = s6(s5([s3([s1(23.0), s1(24.0)], s0([[25.0]], [[26.0], [27.0], [28.0]])), s3([s1(29.0), s1(30.0)], s0([[31.0]], [[32.0], [33.0], [34.0]])), s3([s1(35.0), s1(36.0)], s0([[37.0]], [[38.0], [39.0], [40.0]]))], [s2([s1(41.0), s1(42.0)], [s1(43.0), s1(44.0)], [s1(45.0), s1(46.0)]), s2([s1(47.0), s1(48.0)], [s1(49.0), s1(50.0)], [s1(51.0), s1(52.0)])]), s1(53.0)) in
    let v4: s0 = s0([[54.0]], [[55.0], [56.0], [57.0]]) in
    let v5: Float = 58.0 in
    let initialResult: Float = 58.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()