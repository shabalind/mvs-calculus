  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s4 {
    var p0: s1
    var p1: s1
  } in
  let f29: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v2: [[Float]] = v1.p0 in
    let v3: [s0] = [v0, v1, v0, v1, v1] in
    let v4: s0 = v3[3] in
    let v8: [Float] = v2[0] in
    let v10: s0 = v3[3] in
    let v5: [[Float]] = v1.p0 in
    let v11: s0 = v3[1] in
    let v12: [[Float]] = v10.p1 in
    let v21: [[Float]] = v4.p1 in
    var v23: s0 = v0 in
    var v15: [[Float]] = v2 in
    var v28: s0 = v1 in
    v23.p0 = v5 in
    v28.p1 = v12 in
    let v25: [[Float]] = v11.p1 in
    v28.p0 = v5 in
    v15[2] = v8 in
    v23.p1 = v25 in
    let v16: [[Float]] = v28.p0 in
    v28.p0 = v5 in
    let v38: [Float] = v15[2] in
    v23.p1 = v21 in
    v28.p1 = v21 in
    v28.p1 = v12 in
    let v52: [[Float]] = v10.p0 in
    let v41: s0 = v3[3] in
    v28.p1 = v25 in
    let v78: [[Float]] = v10.p1 in
    let v32: [[Float]] = v11.p0 in
    var v70: [[Float]] = v32 in
    var v85: [[Float]] = v70 in
    var v51: [s0] = v3 in
    v23.p1 = v12 in
    v15 = v16 in
    let v66: [[Float]] = v28.p0 in
    var v93: [s0] = v51 in
    v28.p0 = v15 in
    v85[2] = v38 in
    v93[1] = v28 in
    let v86: [[Float]] = v41.p0 in
    let v74: [Float] = v78[0] in
    v28.p0 = v52 in
    v23.p0 = v66 in
    let v176: s0 = v93[1] in
    v28.p0 = v2 in
    v51[4] = v28 in
    v28.p1 = v21 in
    v23.p0 = v86 in
    let v109: [Float] = v85[1] in
    v15[1] = v109 in
    v85[0] = v74 in
    v93[3] = v23 in
    v23.p0 = v70 in
    v176
  } in
  let f28: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    let v1: [[Float]] = v7.p1 in
    let v6: s0 = f29(v0, v7) in
    let v11: [Float] = v1[0] in
    var v9: [[Float]] = v1 in
    var v8: [Float] = v11 in
    var v16: [Float] = v8 in
    v7.p1 = v1 in
    var v31: [Float] = v16 in
    let v21: Float = v16[0] in
    v8 = v31 in
    v7.p1 = v9 in
    let v15: Float = v16[0] in
    let v17: [[Float]] = v7.p0 in
    v9[0] = v31 in
    v8[0] = v15 in
    v16[0] = v21 in
    let v27: s0 = s0(v17, v9) in
    let v55: s0 = f29(v6, v27) in
    v9[0] = v31 in
    let v43: s0 = f29(v55, v7) in
    v43
  } in
  let f24: (s1) -> s1 = (v0: s1) -> s1 {
    let v7: s0 = v0.p0 in
    var v2: s1 = v0 in
    v2 = v0 in
    v2.p0 = v7 in
    v2.p0 = v7 in
    v2
  } in
  let f19: (s4) -> s4 = (v0: s4) -> s4 {
    var v5: s4 = v0 in
    let v6: s1 = v0.p1 in
    v5.p1 = v6 in
    v5
  } in
  let f11: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    let v6: [[Float]] = v2.p1 in
    let v1: [[Float]] = v2.p1 in
    v2.p1 = v1 in
    let v4: s0 = f28(v0) in
    v2.p1 = v1 in
    v2.p1 = v1 in
    var v5: s0 = v0 in
    let v14: [[Float]] = v0.p0 in
    let v20: s0 = f29(v4, v5) in
    v2.p0 = v14 in
    let v15: [[Float]] = v20.p0 in
    v5.p0 = v15 in
    let v26: s0 = f28(v0) in
    v2.p1 = v1 in
    let v30: [s0] = [v20, v26] in
    let v38: s0 = v30[0] in
    let v46: [[Float]] = v2.p0 in
    var v125: s0 = v38 in
    v125.p1 = v6 in
    v5.p0 = v46 in
    v125
  } in
  let f6: (s1, Float, s4) -> Float = (v0: s1, v1: Float, v2: s4) -> Float {
    let v5: s0 = v0.p0 in
    let v8: [[Float]] = v5.p0 in
    let v12: [Float] = v8[1] in
    let v58: Float = v12[0] in
    let v45: Float = v1 + v58 in
    var v63: Float = v45 in
    v63
  } in
  let f1: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v8: s0 = f11(v6) in
    let v4: [s0] = [v8, v0, v6, v8] in
    let v1: s0 = v4[0] in
    let v7: s0 = v4[3] in
    let v5: s0 = v4[3] in
    let v2: [[Float]] = v7.p0 in
    v6.p0 = v2 in
    let v12: [[Float]] = v5.p1 in
    var v10: [[Float]] = v2 in
    var v21: s0 = v7 in
    let v3: [Float] = v12[0] in
    v10[1] = v3 in
    let v13: [Float] = v2[0] in
    v6.p0 = v2 in
    v10[0] = v3 in
    v10[1] = v13 in
    v21.p0 = v10 in
    v21.p1 = v12 in
    v21.p1 = v12 in
    let v25: s0 = f11(v21) in
    let v43: s0 = f29(v1, v25) in
    v43
  } in
  let noinline_f0: (s1, s1, s0, Float) -> Float = (v0: s1, v1: s1, v2: s0, v3: Float) -> Float {
    let v5: s0 = f1(v2) in
    let v9: s0 = f29(v5, v5) in
    let v13: s0 = f28(v9) in
    let v8: [[Float]] = v13.p0 in
    let v10: [Float] = v8[0] in
    var v21: Float = v3 in
    let v15: Float = v10[0] in
    let v31: s1 = f24(v0) in
    let v76: [s1] = [v1, v0, v0] in
    let v71: s1 = v76[1] in
    let v64: s4 = s4(v1, v31) in
    let v125: s4 = f19(v64) in
    let v104: Float = v15 * v21 in
    let v205: Float = f6(v71, v104, v125) in
    v205
  } in
  fun loop(i: Int, v0: s1, v1: s1, v2: s0, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0], [2.0]], [[3.0]]), [s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0]])]) in
    let v1: s1 = s1(s0([[16.0], [17.0], [18.0]], [[19.0]]), [s0([[20.0], [21.0], [22.0]], [[23.0]]), s0([[24.0], [25.0], [26.0]], [[27.0]]), s0([[28.0], [29.0], [30.0]], [[31.0]])]) in
    let v2: s0 = s0([[32.0], [33.0], [34.0]], [[35.0]]) in
    let v3: Float = 36.0 in
    let initialResult: Float = 36.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()