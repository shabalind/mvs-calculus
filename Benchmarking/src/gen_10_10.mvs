  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  let f64: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [[Float]] = v0.p1 in
    let v7: [[Float]] = v0.p1 in
    let v4: [Float] = v7[0] in
    let v5: [[Float]] = v0.p1 in
    var v8: [Float] = v4 in
    var v6: s0 = v0 in
    let v1: [Float] = v0.p0 in
    v6 = v0 in
    let v9: [Float] = v6.p0 in
    let v2: [Float] = v6.p0 in
    var v10: [[Float]] = v5 in
    let v12: [Float] = v10[0] in
    v10[0] = v8 in
    let v11: [[Float]] = v6.p1 in
    let v17: [Float] = v0.p0 in
    let v15: [Float] = v11[0] in
    var v24: [Float] = v9 in
    let v28: Float = v1[1] in
    let v36: [[Float]] = [v17, v9, v9] in
    var v19: s0 = v0 in
    v10[0] = v4 in
    let v27: [Float] = v36[1] in
    v6.p1 = v3 in
    var v29: [Float] = v12 in
    var v26: [Float] = v24 in
    var v100: s0 = v6 in
    let v34: [Float] = v6.p0 in
    var v32: Float = v28 in
    var v73: s0 = v100 in
    var v43: [Float] = v8 in
    v73.p0 = v2 in
    let v46: [Float] = v0.p0 in
    var v30: [Float] = v15 in
    let v47: Float = v28 - v32 in
    v10 = v7 in
    v10[0] = v43 in
    let v38: [Float] = v36[2] in
    v19.p1 = v11 in
    v26[0] = v32 in
    var v58: Float = v47 in
    v8[0] = v28 in
    v8[0] = v58 in
    let v35: [[Float]] = v19.p1 in
    let v61: Float = v46[0] in
    v30 = v29 in
    v24[0] = v28 in
    let v37: [Float] = v6.p0 in
    let v91: [[Float]] = v19.p1 in
    v73.p0 = v26 in
    let v57: [[Float]] = v6.p1 in
    var v99: Float = v61 in
    v73.p1 = v91 in
    v8[0] = v99 in
    v10[0] = v30 in
    v43[0] = v61 in
    v6.p1 = v57 in
    let v83: [[Float]] = v73.p1 in
    let v84: Float = v12[0] in
    let v60: [[Float]] = v6.p1 in
    let v67: [[Float]] = v0.p1 in
    v6.p1 = v60 in
    v19.p0 = v38 in
    let v97: Float = v34[1] in
    v24[1] = v97 in
    v19.p0 = v27 in
    v100.p1 = v83 in
    v73.p1 = v67 in
    v19.p1 = v83 in
    v24[0] = v84 in
    v73.p0 = v37 in
    v100.p1 = v35 in
    v73
  } in
  let f54: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v4: s0 = f64(v1) in
    let v3: [Float] = v1.p0 in
    let v5: s0 = f64(v0) in
    let v8: Float = v3[1] in
    let v19: [Float] = v4.p0 in
    var v31: [Float] = v19 in
    var v25: s0 = v5 in
    v31[0] = v8 in
    v25.p0 = v31 in
    let v38: s0 = f64(v25) in
    v38
  } in
  let f29: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v2: Float = v0[0] in
    var v3: Float = v2 in
    let v9: Float = v0[0] in
    let v7: Float = v2 * v3 in
    var v5: Float = v7 in
    let v1: Float = v0[0] in
    var v14: [Float] = v0 in
    let v11: Float = v0[0] in
    let v15: Float = v0[0] in
    v14[0] = v15 in
    let v6: Float = v0[0] in
    v14[0] = v6 in
    let v13: Float = v0[0] in
    var v12: Float = v5 in
    let v10: Float = v0[0] in
    var v25: [Float] = v14 in
    let v17: [Float] = [v13, v1, v9] in
    var v51: [Float] = v0 in
    v12 = v10 in
    let v23: Float = v0[0] in
    let v16: Float = v0[0] in
    let v19: [[Float]] = [v51, v0] in
    var v24: [[Float]] = v19 in
    let v21: Float = v17[0] in
    v24 = v19 in
    let v28: Float = v51[0] in
    v25[0] = v23 in
    v51[0] = v21 in
    let v70: [Float] = v24[1] in
    let v30: Float = v28 + v15 in
    var v45: [Float] = v70 in
    v45[0] = v30 in
    var v44: [Float] = v0 in
    v24[0] = v45 in
    var v27: Float = v11 in
    let v31: [[Float]] = [v44, v25, v70] in
    v24[1] = v51 in
    v45 = v70 in
    v25[0] = v27 in
    v25[0] = v16 in
    v24[0] = v0 in
    var v47: Float = v12 in
    let v66: [Float] = v31[0] in
    var v38: [Float] = v45 in
    var v73: [Float] = v66 in
    v73[0] = v47 in
    let v80: Float = v38[0] in
    v12 = v6 in
    v5 = v80 in
    v73
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v6: s0 = f54(v0, v0) in
    let v4: [[Float]] = v6.p1 in
    let v8: [Float] = v4[0] in
    var v10: s0 = v6 in
    let v7: [[Float]] = [v8, v8] in
    let v11: Float = v8[0] in
    let v15: [Float] = f29(v8) in
    let v9: [Float] = v7[1] in
    let v17: [Float] = f29(v15) in
    let v42: Float = v17[0] in
    let v14: Float = v9[0] in
    var v23: s0 = v10 in
    var v27: Float = v1 in
    let v28: [Float] = v23.p0 in
    v23.p0 = v28 in
    let v37: Float = v9[0] in
    let v38: Float = v14 / v11 in
    var v19: [Float] = v28 in
    let v50: Float = v19[0] in
    v23.p1 = v4 in
    let v25: [[Float]] = v6.p1 in
    v19[1] = v27 in
    let v41: [Float] = [v38, v37, v50, v1, v14, v14, v11] in
    let v51: Float = v41[0] in
    v27 = v42 in
    v23.p1 = v4 in
    v23.p1 = v25 in
    v51
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([0.0, 1.0], [[2.0]]) in
    let v1: Float = 3.0 in
    let initialResult: Float = 3.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()