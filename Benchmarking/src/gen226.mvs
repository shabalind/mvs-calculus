  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v8: [[Float]] = v6.p1 in
    let v2: [[Float]] = v0.p0 in
    let v3: [[Float]] = v0.p1 in
    let v5: [[Float]] = v6.p0 in
    let v7: [Float] = v2[1] in
    let v1: [[Float]] = v0.p1 in
    var v12: [[Float]] = v5 in
    let v16: [[Float]] = v6.p0 in
    let v11: [[Float]] = v6.p1 in
    let v13: [Float] = v1[0] in
    var v14: [Float] = v7 in
    let v9: [[Float]] = v6.p0 in
    v12[1] = v13 in
    var v10: s0 = v0 in
    v10.p1 = v8 in
    var v15: [[Float]] = v3 in
    let v28: [Float] = v5[0] in
    v12 = v16 in
    v12[1] = v14 in
    var v21: [[Float]] = v2 in
    v10.p1 = v15 in
    v10.p0 = v9 in
    v6.p1 = v1 in
    v12[1] = v28 in
    var v35: s0 = v10 in
    v10.p0 = v12 in
    v35.p1 = v3 in
    v10.p0 = v21 in
    v21[1] = v7 in
    let v37: [[Float]] = v35.p0 in
    v35.p1 = v11 in
    let v54: [[Float]] = v0.p1 in
    let v36: [[Float]] = v10.p1 in
    let v109: s0 = s0(v37, v54) in
    v35.p1 = v11 in
    v10.p1 = v36 in
    v109
  } in
  let noinline_f0: ([[s0]], s1, [[s1]], s0, Float) -> Float = (v0: [[s0]], v1: s1, v2: [[s1]], v3: s0, v4: Float) -> Float {
    let v9: [[Float]] = v3.p0 in
    let v10: s0 = v1.p0 in
    var v5: s0 = v3 in
    let v7: s0 = f12(v5) in
    v5.p0 = v9 in
    let v23: [[Float]] = v10.p1 in
    let v14: s0 = v1.p0 in
    var v30: s0 = v5 in
    let v25: [[Float]] = v30.p1 in
    let v37: [[Float]] = v14.p1 in
    v5.p0 = v9 in
    let v59: s0 = v1.p0 in
    v5.p1 = v37 in
    let v41: s0 = s0(v9, v37) in
    let v64: [[Float]] = v10.p1 in
    let v73: [[Float]] = v59.p1 in
    v5.p0 = v9 in
    let v49: [[[Float]]] = [v73, v23, v37, v23, v23, v64, v73] in
    let v67: [[Float]] = v49[2] in
    v5 = v7 in
    var v110: [[Float]] = v37 in
    v30.p1 = v67 in
    let v173: [[Float]] = v41.p0 in
    let v235: [Float] = v25[2] in
    v110[0] = v235 in
    let v231: Float = v235[0] in
    v5.p0 = v173 in
    v30.p0 = v9 in
    v5.p1 = v110 in
    v231
  } in
  fun loop(i: Int, v0: [[s0]], v1: s1, v2: [[s1]], v3: s0, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]])]] in
    let v1: s1 = s1(s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]), [s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]]), s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])]) in
    let v2: [[s1]] = [[s1(s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]]), [s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]]), s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]])])], [s1(s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]]), [s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]]), s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]])])], [s1(s0([[65.0], [66.0]], [[67.0], [68.0], [69.0]]), [s0([[70.0], [71.0]], [[72.0], [73.0], [74.0]]), s0([[75.0], [76.0]], [[77.0], [78.0], [79.0]]), s0([[80.0], [81.0]], [[82.0], [83.0], [84.0]])])]] in
    let v3: s0 = s0([[85.0], [86.0]], [[87.0], [88.0], [89.0]]) in
    let v4: Float = 90.0 in
    let initialResult: Float = 90.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()