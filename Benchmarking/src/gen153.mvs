  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s0
  } in
  struct s3 {
    var p0: s1
  } in
  struct s4 {
    var p0: [s2]
    var p1: s2
  } in
  let f28: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v2: Float = v1 in
    v2 = v0 in
    var v5: Float = v1 in
    var v7: Float = v1 in
    var v6: Float = v7 in
    v6 = v0 in
    var v4: Float = v2 in
    var v10: Float = v5 in
    var v14: Float = v4 in
    var v3: Float = v14 in
    var v8: Float = v6 in
    let v11: Float = v5 / v6 in
    var v15: Float = v4 in
    var v24: Float = v11 in
    var v13: Float = v0 in
    var v21: Float = v5 in
    var v31: Float = v0 in
    let v35: [Float] = [v3, v21, v8, v15] in
    let v27: Float = v35[0] in
    var v62: Float = v3 in
    v24 = v13 in
    let v29: Float = v35[3] in
    let v46: Float = v35[1] in
    let v30: Float = v31 + v62 in
    var v52: [Float] = v35 in
    var v33: [Float] = v52 in
    v52[2] = v21 in
    var v75: [Float] = v33 in
    v33[2] = v15 in
    v33[1] = v29 in
    v75[2] = v31 in
    let v42: Float = v30 / v27 in
    var v47: [Float] = v35 in
    v52[1] = v29 in
    var v28: [Float] = v33 in
    let v71: [[Float]] = [v28, v35, v33, v75, v47, v52, v75] in
    v47 = v52 in
    let v109: [Float] = v71[1] in
    let v32: Float = v109[0] in
    v33[3] = v10 in
    v52[3] = v24 in
    v33[0] = v46 in
    v24 = v42 in
    v32
  } in
  let noinline_f0: (s4, s3, s3, Float) -> Float = (v0: s4, v1: s3, v2: s3, v3: Float) -> Float {
    let v5: Float = f28(v3) in
    let v7: Float = f28(v5) in
    let v28: Float = v7 - v7 in
    v28
  } in
  fun loop(i: Int, v0: s4, v1: s3, v2: s3, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s4 = s4([s2(s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])), s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]))], s2(s1(s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])), s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]))) in
    let v1: s3 = s3(s1(s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]]), s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]]))) in
    let v2: s3 = s3(s1(s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]]), s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]]))) in
    let v3: Float = 50.0 in
    let initialResult: Float = 50.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()