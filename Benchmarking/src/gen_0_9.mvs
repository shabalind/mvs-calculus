  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
    var p2: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s1]
  } in
  struct s3 {
    var p0: [s2]
    var p1: [s0]
  } in
  let f91: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v4: [[Float]] = v0.p2 in
    var v5: [[Float]] = v4 in
    v3.p2 = v5 in
    var v2: [[Float]] = v4 in
    let v6: [Float] = v3.p1 in
    let v7: [Float] = v5[1] in
    v3.p2 = v5 in
    var v9: [Float] = v6 in
    v5[0] = v7 in
    v3.p1 = v9 in
    let v1: [Float] = v2[0] in
    v3.p2 = v2 in
    var v16: [Float] = v7 in
    let v10: [Float] = v3.p1 in
    let v15: [Float] = v0.p1 in
    let v11: [[Float]] = v3.p0 in
    let v8: [Float] = v11[0] in
    var v12: [[Float]] = v11 in
    v12[0] = v16 in
    let v14: s0 = s0(v11, v15, v2) in
    var v19: [[Float]] = v12 in
    v3.p0 = v12 in
    let v18: [Float] = v3.p1 in
    v3.p1 = v10 in
    v3.p1 = v10 in
    v19[0] = v8 in
    v3.p1 = v15 in
    let v36: [[Float]] = v3.p0 in
    let v25: [Float] = v0.p1 in
    v3.p0 = v36 in
    v3.p2 = v2 in
    var v40: [[Float]] = v36 in
    v3.p0 = v19 in
    v3.p1 = v10 in
    v19[0] = v1 in
    v19[0] = v8 in
    v3.p1 = v18 in
    v2 = v4 in
    let v44: [[Float]] = v14.p2 in
    var v48: [[Float]] = v40 in
    let v120: [[Float]] = v3.p0 in
    let v42: [[Float]] = v0.p0 in
    let v76: [Float] = v2[1] in
    v3.p0 = v120 in
    v3.p2 = v2 in
    v3.p0 = v120 in
    let v52: [[Float]] = v0.p2 in
    let v47: s0 = s0(v12, v18, v44) in
    v12 = v42 in
    v3.p0 = v48 in
    v19[0] = v76 in
    v3.p1 = v18 in
    v3.p0 = v42 in
    v3.p2 = v52 in
    var v64: [[Float]] = v5 in
    v3.p0 = v19 in
    v3.p0 = v12 in
    v3.p1 = v25 in
    v3.p2 = v64 in
    v47
  } in
  let f70: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: s0 = v0.p0 in
    let v6: s0 = f91(v2) in
    let v4: s0 = f91(v6) in
    let v11: [[s0]] = v0.p1 in
    let v36: [s1] = [v0, v0, v0, v0, v0, v0, v0] in
    let v52: s1 = v36[6] in
    var v29: s1 = v52 in
    v29.p1 = v11 in
    let v37: [[s0]] = v0.p1 in
    v29.p1 = v37 in
    v29.p0 = v2 in
    v29.p0 = v4 in
    v29
  } in
  let f36: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [Float] = v0.p1 in
    var v4: s0 = v0 in
    v4.p1 = v7 in
    v4.p1 = v7 in
    let v22: s0 = f91(v4) in
    var v40: s0 = v22 in
    v40
  } in
  let f7: (s1, s0) -> s0 = (v0: s1, v1: s0) -> s0 {
    let v7: [Float] = v1.p1 in
    var v8: s0 = v1 in
    let v12: s0 = f36(v8) in
    let v21: s0 = f36(v12) in
    v8.p1 = v7 in
    v21
  } in
  let noinline_f0: (s3, s1, Float) -> Float = (v0: s3, v1: s1, v2: Float) -> Float {
    let v9: s1 = f70(v1) in
    let v10: s0 = v9.p0 in
    let v17: [[Float]] = v10.p0 in
    var v11: [[Float]] = v17 in
    let v21: [Float] = v11[0] in
    let v12: [Float] = v11[0] in
    let v24: s0 = f7(v9, v10) in
    v11 = v17 in
    let v18: [Float] = v17[0] in
    let v36: [[Float]] = v24.p2 in
    var v31: [[Float]] = v36 in
    let v41: [Float] = v31[1] in
    let v104: [Float] = v17[0] in
    v11[0] = v41 in
    v11[0] = v104 in
    var v74: [Float] = v21 in
    v11 = v17 in
    var v125: [Float] = v18 in
    let v195: Float = v41[0] in
    v11[0] = v12 in
    v11[0] = v125 in
    v31[1] = v12 in
    v31[0] = v74 in
    v195
  } in
  fun loop(i: Int, v0: s3, v1: s1, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s2([s0([[0.0]], [1.0, 2.0], [[3.0], [4.0]]), s0([[5.0]], [6.0, 7.0], [[8.0], [9.0]]), s0([[10.0]], [11.0, 12.0], [[13.0], [14.0]])], [s1(s0([[15.0]], [16.0, 17.0], [[18.0], [19.0]]), [[s0([[20.0]], [21.0, 22.0], [[23.0], [24.0]])], [s0([[25.0]], [26.0, 27.0], [[28.0], [29.0]])], [s0([[30.0]], [31.0, 32.0], [[33.0], [34.0]])]])]), s2([s0([[35.0]], [36.0, 37.0], [[38.0], [39.0]]), s0([[40.0]], [41.0, 42.0], [[43.0], [44.0]]), s0([[45.0]], [46.0, 47.0], [[48.0], [49.0]])], [s1(s0([[50.0]], [51.0, 52.0], [[53.0], [54.0]]), [[s0([[55.0]], [56.0, 57.0], [[58.0], [59.0]])], [s0([[60.0]], [61.0, 62.0], [[63.0], [64.0]])], [s0([[65.0]], [66.0, 67.0], [[68.0], [69.0]])]])])], [s0([[70.0]], [71.0, 72.0], [[73.0], [74.0]])]) in
    let v1: s1 = s1(s0([[75.0]], [76.0, 77.0], [[78.0], [79.0]]), [[s0([[80.0]], [81.0, 82.0], [[83.0], [84.0]])], [s0([[85.0]], [86.0, 87.0], [[88.0], [89.0]])], [s0([[90.0]], [91.0, 92.0], [[93.0], [94.0]])]]) in
    let v2: Float = 95.0 in
    let initialResult: Float = 95.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()