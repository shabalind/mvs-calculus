  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f81: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v3: Float = v6 in
    v6 = v0 in
    var v1: Float = v6 in
    var v4: Float = v1 in
    var v10: Float = v0 in
    var v2: Float = v3 in
    var v9: Float = v4 in
    var v5: Float = v6 in
    var v12: Float = v10 in
    var v21: Float = v5 in
    let v27: [Float] = [v0, v12, v2, v3] in
    var v61: [Float] = v27 in
    v61[1] = v9 in
    let v16: [[Float]] = [v61, v27, v27, v61] in
    let v33: Float = v61[0] in
    v61[2] = v33 in
    var v34: [[Float]] = v16 in
    let v53: [Float] = v34[3] in
    var v32: [[Float]] = v34 in
    var v37: [[Float]] = v32 in
    let v40: [Float] = v37[1] in
    v61[3] = v21 in
    let v71: [Float] = v34[1] in
    let v48: [[Float]] = [v71, v71, v71, v27, v53, v71, v40] in
    v32[1] = v61 in
    let v101: [Float] = v48[5] in
    v34 = v16 in
    let v112: Float = v101[3] in
    v112
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v2: [[Float]] = v0.p0 in
    var v10: Float = v1 in
    let v9: [Float] = v2[2] in
    var v17: [Float] = v9 in
    let v75: [[Float]] = [v17, v9, v17, v9, v9] in
    let v23: Float = v10 + v1 in
    let v29: Float = f81(v1) in
    v10 = v29 in
    var v34: [[Float]] = v75 in
    let v73: Float = v23 - v1 in
    v34[1] = v9 in
    let v59: [Float] = v34[0] in
    let v33: [Float] = v75[3] in
    var v63: [[Float]] = v75 in
    v63[4] = v59 in
    v63[0] = v59 in
    v17[0] = v73 in
    v63[1] = v33 in
    let v62: Float = v17[0] in
    v17[0] = v23 in
    var v111: [[Float]] = v63 in
    v17[0] = v62 in
    let v189: [Float] = v111[1] in
    let v190: Float = v189[0] in
    let v107: [Float] = v111[0] in
    v63[4] = v107 in
    v190
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]) in
    let v1: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()