  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  let f4: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v2: Float = v3 in
    var v8: Float = v0 in
    var v9: Float = v8 in
    var v22: Float = v2 in
    var v10: Float = v22 in
    var v37: Float = v3 in
    let v25: Float = v10 + v37 in
    var v14: Float = v0 in
    var v26: Float = v9 in
    var v48: Float = v26 in
    let v89: [Float] = [v22, v0] in
    var v40: [Float] = v89 in
    var v24: [Float] = v40 in
    v24[1] = v48 in
    v40[0] = v26 in
    v40[0] = v14 in
    var v42: [Float] = v89 in
    let v35: [[Float]] = [v40] in
    var v34: [[Float]] = v35 in
    let v50: [Float] = v34[0] in
    v34[0] = v42 in
    let v73: Float = v42[1] in
    let v80: [Float] = v34[0] in
    v34[0] = v24 in
    v42[1] = v25 in
    var v90: [[Float]] = v34 in
    var v53: [[Float]] = v34 in
    let v118: Float = v50[0] in
    v90[0] = v80 in
    var v99: Float = v73 in
    v40[0] = v99 in
    v90 = v53 in
    let v95: [Float] = v90[0] in
    v34[0] = v95 in
    v118
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v8: Float = f4(v1) in
    let v5: Float = f4(v8) in
    let v10: Float = f4(v5) in
    v10
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]], [[5.0], [6.0]]), s0([[7.0], [8.0], [9.0]], [[10.0], [11.0]], [[12.0], [13.0]])], s0([[14.0], [15.0], [16.0]], [[17.0], [18.0]], [[19.0], [20.0]])) in
    let v1: Float = 21.0 in
    let initialResult: Float = 21.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()