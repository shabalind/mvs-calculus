  import Dispatch
  struct s0 {
    var p0: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  }
  struct s2 {
    var p0: [[s1]]
    var p1: s0
  }
  struct s3 {
    var p0: s2
    var p1: s2
  }
  struct s4 {
    var p0: s2
    var p1: s2
  }
  struct s5 {
    var p0: [s4]
    var p1: [[s0]]
  }
  struct s6 {
    var p0: s5
    var p1: [s0]
  }
  struct s7 {
    var p0: [[s1]]
    var p1: [s6]
  }
  struct s8 {
    var p0: s0
    var p1: [s6]
    var p2: [[s7]]
  }
  struct s12 {
    var p0: [s8]
    var p1: s3
  }
  @inline(never)
  func f0(_ v0: s12, _ v1: Double) -> Double {
    let v7: Double = v1 - v1
    let v15: [Double] = [v1, v1, v1, v7]
    var v11: [Double] = v15
    let v20: Double = v11[0]
    v11[3] = v7
    let v13: Double = v11[3]
    var v10: [Double] = v11
    var v21: Double = v20
    let v14: Double = v15[3]
    v11[3] = v20
    let v37: Double = v15[1]
    var v24: Double = v37
    v11[1] = v24
    let v48: Double = v10[0]
    v10[0] = v13
    v11[1] = v20
    v11[2] = v14
    v11[0] = v21
    let v165: Double = v48 / v24
    let v102: Double = v21 - v165
    v10[3] = v14
    return v102
  }
  func benchmark() {
    let v0: s12 = s12(p0: [s8(p0: s0(p0: [[0.0]]), p1: [s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[1.0]]), s0(p0: [[2.0]])], p1: [s0(p0: [[3.0]]), s0(p0: [[4.0]])])], [s1(p0: [s0(p0: [[5.0]]), s0(p0: [[6.0]])], p1: [s0(p0: [[7.0]]), s0(p0: [[8.0]])])]], p1: s0(p0: [[9.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[10.0]]), s0(p0: [[11.0]])], p1: [s0(p0: [[12.0]]), s0(p0: [[13.0]])])], [s1(p0: [s0(p0: [[14.0]]), s0(p0: [[15.0]])], p1: [s0(p0: [[16.0]]), s0(p0: [[17.0]])])]], p1: s0(p0: [[18.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[19.0]]), s0(p0: [[20.0]])], p1: [s0(p0: [[21.0]]), s0(p0: [[22.0]])])], [s1(p0: [s0(p0: [[23.0]]), s0(p0: [[24.0]])], p1: [s0(p0: [[25.0]]), s0(p0: [[26.0]])])]], p1: s0(p0: [[27.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[28.0]]), s0(p0: [[29.0]])], p1: [s0(p0: [[30.0]]), s0(p0: [[31.0]])])], [s1(p0: [s0(p0: [[32.0]]), s0(p0: [[33.0]])], p1: [s0(p0: [[34.0]]), s0(p0: [[35.0]])])]], p1: s0(p0: [[36.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[37.0]]), s0(p0: [[38.0]])], p1: [s0(p0: [[39.0]]), s0(p0: [[40.0]])])], [s1(p0: [s0(p0: [[41.0]]), s0(p0: [[42.0]])], p1: [s0(p0: [[43.0]]), s0(p0: [[44.0]])])]], p1: s0(p0: [[45.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[46.0]]), s0(p0: [[47.0]])], p1: [s0(p0: [[48.0]]), s0(p0: [[49.0]])])], [s1(p0: [s0(p0: [[50.0]]), s0(p0: [[51.0]])], p1: [s0(p0: [[52.0]]), s0(p0: [[53.0]])])]], p1: s0(p0: [[54.0]])))], p1: [[s0(p0: [[55.0]])], [s0(p0: [[56.0]])], [s0(p0: [[57.0]])]]), p1: [s0(p0: [[58.0]]), s0(p0: [[59.0]]), s0(p0: [[60.0]])]), s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[61.0]]), s0(p0: [[62.0]])], p1: [s0(p0: [[63.0]]), s0(p0: [[64.0]])])], [s1(p0: [s0(p0: [[65.0]]), s0(p0: [[66.0]])], p1: [s0(p0: [[67.0]]), s0(p0: [[68.0]])])]], p1: s0(p0: [[69.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[70.0]]), s0(p0: [[71.0]])], p1: [s0(p0: [[72.0]]), s0(p0: [[73.0]])])], [s1(p0: [s0(p0: [[74.0]]), s0(p0: [[75.0]])], p1: [s0(p0: [[76.0]]), s0(p0: [[77.0]])])]], p1: s0(p0: [[78.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[79.0]]), s0(p0: [[80.0]])], p1: [s0(p0: [[81.0]]), s0(p0: [[82.0]])])], [s1(p0: [s0(p0: [[83.0]]), s0(p0: [[84.0]])], p1: [s0(p0: [[85.0]]), s0(p0: [[86.0]])])]], p1: s0(p0: [[87.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[88.0]]), s0(p0: [[89.0]])], p1: [s0(p0: [[90.0]]), s0(p0: [[91.0]])])], [s1(p0: [s0(p0: [[92.0]]), s0(p0: [[93.0]])], p1: [s0(p0: [[94.0]]), s0(p0: [[95.0]])])]], p1: s0(p0: [[96.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[97.0]]), s0(p0: [[98.0]])], p1: [s0(p0: [[99.0]]), s0(p0: [[100.0]])])], [s1(p0: [s0(p0: [[101.0]]), s0(p0: [[102.0]])], p1: [s0(p0: [[103.0]]), s0(p0: [[104.0]])])]], p1: s0(p0: [[105.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[106.0]]), s0(p0: [[107.0]])], p1: [s0(p0: [[108.0]]), s0(p0: [[109.0]])])], [s1(p0: [s0(p0: [[110.0]]), s0(p0: [[111.0]])], p1: [s0(p0: [[112.0]]), s0(p0: [[113.0]])])]], p1: s0(p0: [[114.0]])))], p1: [[s0(p0: [[115.0]])], [s0(p0: [[116.0]])], [s0(p0: [[117.0]])]]), p1: [s0(p0: [[118.0]]), s0(p0: [[119.0]]), s0(p0: [[120.0]])]), s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[121.0]]), s0(p0: [[122.0]])], p1: [s0(p0: [[123.0]]), s0(p0: [[124.0]])])], [s1(p0: [s0(p0: [[125.0]]), s0(p0: [[126.0]])], p1: [s0(p0: [[127.0]]), s0(p0: [[128.0]])])]], p1: s0(p0: [[129.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[130.0]]), s0(p0: [[131.0]])], p1: [s0(p0: [[132.0]]), s0(p0: [[133.0]])])], [s1(p0: [s0(p0: [[134.0]]), s0(p0: [[135.0]])], p1: [s0(p0: [[136.0]]), s0(p0: [[137.0]])])]], p1: s0(p0: [[138.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[139.0]]), s0(p0: [[140.0]])], p1: [s0(p0: [[141.0]]), s0(p0: [[142.0]])])], [s1(p0: [s0(p0: [[143.0]]), s0(p0: [[144.0]])], p1: [s0(p0: [[145.0]]), s0(p0: [[146.0]])])]], p1: s0(p0: [[147.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[148.0]]), s0(p0: [[149.0]])], p1: [s0(p0: [[150.0]]), s0(p0: [[151.0]])])], [s1(p0: [s0(p0: [[152.0]]), s0(p0: [[153.0]])], p1: [s0(p0: [[154.0]]), s0(p0: [[155.0]])])]], p1: s0(p0: [[156.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[157.0]]), s0(p0: [[158.0]])], p1: [s0(p0: [[159.0]]), s0(p0: [[160.0]])])], [s1(p0: [s0(p0: [[161.0]]), s0(p0: [[162.0]])], p1: [s0(p0: [[163.0]]), s0(p0: [[164.0]])])]], p1: s0(p0: [[165.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[166.0]]), s0(p0: [[167.0]])], p1: [s0(p0: [[168.0]]), s0(p0: [[169.0]])])], [s1(p0: [s0(p0: [[170.0]]), s0(p0: [[171.0]])], p1: [s0(p0: [[172.0]]), s0(p0: [[173.0]])])]], p1: s0(p0: [[174.0]])))], p1: [[s0(p0: [[175.0]])], [s0(p0: [[176.0]])], [s0(p0: [[177.0]])]]), p1: [s0(p0: [[178.0]]), s0(p0: [[179.0]]), s0(p0: [[180.0]])])], p2: [[s7(p0: [[s1(p0: [s0(p0: [[181.0]]), s0(p0: [[182.0]])], p1: [s0(p0: [[183.0]]), s0(p0: [[184.0]])])], [s1(p0: [s0(p0: [[185.0]]), s0(p0: [[186.0]])], p1: [s0(p0: [[187.0]]), s0(p0: [[188.0]])])]], p1: [s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[189.0]]), s0(p0: [[190.0]])], p1: [s0(p0: [[191.0]]), s0(p0: [[192.0]])])], [s1(p0: [s0(p0: [[193.0]]), s0(p0: [[194.0]])], p1: [s0(p0: [[195.0]]), s0(p0: [[196.0]])])]], p1: s0(p0: [[197.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[198.0]]), s0(p0: [[199.0]])], p1: [s0(p0: [[200.0]]), s0(p0: [[201.0]])])], [s1(p0: [s0(p0: [[202.0]]), s0(p0: [[203.0]])], p1: [s0(p0: [[204.0]]), s0(p0: [[205.0]])])]], p1: s0(p0: [[206.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[207.0]]), s0(p0: [[208.0]])], p1: [s0(p0: [[209.0]]), s0(p0: [[210.0]])])], [s1(p0: [s0(p0: [[211.0]]), s0(p0: [[212.0]])], p1: [s0(p0: [[213.0]]), s0(p0: [[214.0]])])]], p1: s0(p0: [[215.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[216.0]]), s0(p0: [[217.0]])], p1: [s0(p0: [[218.0]]), s0(p0: [[219.0]])])], [s1(p0: [s0(p0: [[220.0]]), s0(p0: [[221.0]])], p1: [s0(p0: [[222.0]]), s0(p0: [[223.0]])])]], p1: s0(p0: [[224.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[225.0]]), s0(p0: [[226.0]])], p1: [s0(p0: [[227.0]]), s0(p0: [[228.0]])])], [s1(p0: [s0(p0: [[229.0]]), s0(p0: [[230.0]])], p1: [s0(p0: [[231.0]]), s0(p0: [[232.0]])])]], p1: s0(p0: [[233.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[234.0]]), s0(p0: [[235.0]])], p1: [s0(p0: [[236.0]]), s0(p0: [[237.0]])])], [s1(p0: [s0(p0: [[238.0]]), s0(p0: [[239.0]])], p1: [s0(p0: [[240.0]]), s0(p0: [[241.0]])])]], p1: s0(p0: [[242.0]])))], p1: [[s0(p0: [[243.0]])], [s0(p0: [[244.0]])], [s0(p0: [[245.0]])]]), p1: [s0(p0: [[246.0]]), s0(p0: [[247.0]]), s0(p0: [[248.0]])]), s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[249.0]]), s0(p0: [[250.0]])], p1: [s0(p0: [[251.0]]), s0(p0: [[252.0]])])], [s1(p0: [s0(p0: [[253.0]]), s0(p0: [[254.0]])], p1: [s0(p0: [[255.0]]), s0(p0: [[256.0]])])]], p1: s0(p0: [[257.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[258.0]]), s0(p0: [[259.0]])], p1: [s0(p0: [[260.0]]), s0(p0: [[261.0]])])], [s1(p0: [s0(p0: [[262.0]]), s0(p0: [[263.0]])], p1: [s0(p0: [[264.0]]), s0(p0: [[265.0]])])]], p1: s0(p0: [[266.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[267.0]]), s0(p0: [[268.0]])], p1: [s0(p0: [[269.0]]), s0(p0: [[270.0]])])], [s1(p0: [s0(p0: [[271.0]]), s0(p0: [[272.0]])], p1: [s0(p0: [[273.0]]), s0(p0: [[274.0]])])]], p1: s0(p0: [[275.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[276.0]]), s0(p0: [[277.0]])], p1: [s0(p0: [[278.0]]), s0(p0: [[279.0]])])], [s1(p0: [s0(p0: [[280.0]]), s0(p0: [[281.0]])], p1: [s0(p0: [[282.0]]), s0(p0: [[283.0]])])]], p1: s0(p0: [[284.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[285.0]]), s0(p0: [[286.0]])], p1: [s0(p0: [[287.0]]), s0(p0: [[288.0]])])], [s1(p0: [s0(p0: [[289.0]]), s0(p0: [[290.0]])], p1: [s0(p0: [[291.0]]), s0(p0: [[292.0]])])]], p1: s0(p0: [[293.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[294.0]]), s0(p0: [[295.0]])], p1: [s0(p0: [[296.0]]), s0(p0: [[297.0]])])], [s1(p0: [s0(p0: [[298.0]]), s0(p0: [[299.0]])], p1: [s0(p0: [[300.0]]), s0(p0: [[301.0]])])]], p1: s0(p0: [[302.0]])))], p1: [[s0(p0: [[303.0]])], [s0(p0: [[304.0]])], [s0(p0: [[305.0]])]]), p1: [s0(p0: [[306.0]]), s0(p0: [[307.0]]), s0(p0: [[308.0]])]), s6(p0: s5(p0: [s4(p0: s2(p0: [[s1(p0: [s0(p0: [[309.0]]), s0(p0: [[310.0]])], p1: [s0(p0: [[311.0]]), s0(p0: [[312.0]])])], [s1(p0: [s0(p0: [[313.0]]), s0(p0: [[314.0]])], p1: [s0(p0: [[315.0]]), s0(p0: [[316.0]])])]], p1: s0(p0: [[317.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[318.0]]), s0(p0: [[319.0]])], p1: [s0(p0: [[320.0]]), s0(p0: [[321.0]])])], [s1(p0: [s0(p0: [[322.0]]), s0(p0: [[323.0]])], p1: [s0(p0: [[324.0]]), s0(p0: [[325.0]])])]], p1: s0(p0: [[326.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[327.0]]), s0(p0: [[328.0]])], p1: [s0(p0: [[329.0]]), s0(p0: [[330.0]])])], [s1(p0: [s0(p0: [[331.0]]), s0(p0: [[332.0]])], p1: [s0(p0: [[333.0]]), s0(p0: [[334.0]])])]], p1: s0(p0: [[335.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[336.0]]), s0(p0: [[337.0]])], p1: [s0(p0: [[338.0]]), s0(p0: [[339.0]])])], [s1(p0: [s0(p0: [[340.0]]), s0(p0: [[341.0]])], p1: [s0(p0: [[342.0]]), s0(p0: [[343.0]])])]], p1: s0(p0: [[344.0]]))), s4(p0: s2(p0: [[s1(p0: [s0(p0: [[345.0]]), s0(p0: [[346.0]])], p1: [s0(p0: [[347.0]]), s0(p0: [[348.0]])])], [s1(p0: [s0(p0: [[349.0]]), s0(p0: [[350.0]])], p1: [s0(p0: [[351.0]]), s0(p0: [[352.0]])])]], p1: s0(p0: [[353.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[354.0]]), s0(p0: [[355.0]])], p1: [s0(p0: [[356.0]]), s0(p0: [[357.0]])])], [s1(p0: [s0(p0: [[358.0]]), s0(p0: [[359.0]])], p1: [s0(p0: [[360.0]]), s0(p0: [[361.0]])])]], p1: s0(p0: [[362.0]])))], p1: [[s0(p0: [[363.0]])], [s0(p0: [[364.0]])], [s0(p0: [[365.0]])]]), p1: [s0(p0: [[366.0]]), s0(p0: [[367.0]]), s0(p0: [[368.0]])])])]])], p1: s3(p0: s2(p0: [[s1(p0: [s0(p0: [[369.0]]), s0(p0: [[370.0]])], p1: [s0(p0: [[371.0]]), s0(p0: [[372.0]])])], [s1(p0: [s0(p0: [[373.0]]), s0(p0: [[374.0]])], p1: [s0(p0: [[375.0]]), s0(p0: [[376.0]])])]], p1: s0(p0: [[377.0]])), p1: s2(p0: [[s1(p0: [s0(p0: [[378.0]]), s0(p0: [[379.0]])], p1: [s0(p0: [[380.0]]), s0(p0: [[381.0]])])], [s1(p0: [s0(p0: [[382.0]]), s0(p0: [[383.0]])], p1: [s0(p0: [[384.0]]), s0(p0: [[385.0]])])]], p1: s0(p0: [[386.0]]))))
    let v1: Double = 387.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 387.0
    for _ in 1...1000 {
      result = f0(v0, v1)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
