  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [[s0]]
  } in
  struct s3 {
    var p0: [s1]
    var p1: [s2]
  } in
  let f89: (s1) -> s1 = (v0: s1) -> s1 {
    let v1: s0 = v0.p0 in
    var v6: s0 = v1 in
    var v5: s1 = v0 in
    let v3: s0 = v5.p0 in
    let v10: [[Float]] = v3.p0 in
    v6.p1 = v10 in
    v6.p0 = v10 in
    let v14: s0 = v0.p0 in
    v5.p1 = v14 in
    var v21: s1 = v0 in
    let v33: s0 = v21.p1 in
    var v146: s0 = v6 in
    let v68: s1 = s1(v33, v146) in
    v68
  } in
  let f84: (s3, [s2]) -> [s2] = (v0: s3, v1: [s2]) -> [s2] {
    let v2: s2 = v1[0] in
    var v3: s2 = v2 in
    var v9: [s2] = v1 in
    let v15: [[s0]] = v2.p1 in
    var v12: [s2] = v9 in
    let v17: [[s0]] = v2.p1 in
    let v14: [s2] = v0.p1 in
    var v21: [s2] = v12 in
    var v24: [s2] = v21 in
    v24[0] = v2 in
    let v26: s2 = v14[0] in
    v12 = v24 in
    v3.p1 = v15 in
    v12[1] = v26 in
    v3.p1 = v17 in
    v21 = v1 in
    v9[0] = v3 in
    v12
  } in
  let f80: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: s0 = v0.p1 in
    var v1: s0 = v2 in
    var v3: s0 = v2 in
    let v5: [[Float]] = v1.p2 in
    var v8: s1 = v0 in
    var v7: [[Float]] = v5 in
    let v6: [Float] = v7[0] in
    v7[0] = v6 in
    let v11: s1 = f89(v8) in
    let v10: s1 = s1(v2, v3) in
    var v15: s1 = v11 in
    let v18: s1 = f89(v8) in
    let v14: [[Float]] = v1.p1 in
    let v13: s0 = v18.p0 in
    let v22: s1 = f89(v10) in
    var v27: s1 = v22 in
    let v24: s0 = v8.p1 in
    v3.p1 = v14 in
    let v36: [[Float]] = v24.p1 in
    v3.p2 = v7 in
    let v21: s0 = v11.p1 in
    let v26: s1 = f89(v0) in
    v8.p0 = v3 in
    let v49: s1 = f89(v27) in
    let v61: s0 = v26.p0 in
    let v56: [[Float]] = v13.p1 in
    let v176: s0 = v15.p0 in
    v15.p0 = v1 in
    let v64: s1 = f89(v49) in
    let v77: s1 = f89(v11) in
    v27.p1 = v1 in
    v15 = v77 in
    let v60: [Float] = v7[0] in
    v3.p0 = v36 in
    v27.p1 = v21 in
    v7[0] = v60 in
    v8.p1 = v61 in
    v3.p1 = v56 in
    v27.p1 = v176 in
    v64
  } in
  let f75: (s3) -> s3 = (v0: s3) -> s3 {
    var v2: s3 = v0 in
    let v29: [s1] = v0.p0 in
    v2.p0 = v29 in
    var v47: s3 = v2 in
    v47
  } in
  let f73: (s1) -> s1 = (v0: s1) -> s1 {
    var v7: s1 = v0 in
    let v5: s1 = f80(v7) in
    let v6: s1 = f80(v7) in
    let v9: s0 = v5.p1 in
    let v2: s1 = f80(v0) in
    let v10: s0 = v6.p0 in
    let v12: s1 = f80(v2) in
    let v8: s0 = v0.p0 in
    let v27: s1 = f89(v12) in
    let v25: [[Float]] = v9.p3 in
    var v18: [[Float]] = v25 in
    v7.p0 = v8 in
    let v31: [Float] = v18[0] in
    let v52: s1 = f89(v27) in
    let v103: [Float] = v25[0] in
    let v29: [[Float]] = v8.p2 in
    let v23: Float = v103[0] in
    var v58: [Float] = v31 in
    let v28: [Float] = v18[1] in
    let v21: [Float] = v29[0] in
    v18[1] = v58 in
    let v44: [Float] = v25[0] in
    v58[0] = v23 in
    var v50: s0 = v8 in
    let v32: Float = v28[0] in
    v7.p0 = v50 in
    var v61: [[Float]] = v25 in
    v58[0] = v23 in
    v58[0] = v32 in
    let v53: [Float] = v29[0] in
    let v35: s0 = v5.p1 in
    var v36: [[Float]] = v61 in
    var v49: [[Float]] = v29 in
    let v34: [Float] = v25[1] in
    let v39: [Float] = [v23, v32, v32, v23, v23, v23] in
    var v65: [Float] = v39 in
    var v56: Float = v23 in
    v50.p2 = v29 in
    var v74: [Float] = v39 in
    v18[1] = v44 in
    v49[0] = v28 in
    v7.p0 = v9 in
    v18[1] = v31 in
    v49[0] = v53 in
    let v59: s0 = v52.p0 in
    var v84: s0 = v59 in
    let v87: [[Float]] = v9.p3 in
    let v193: Float = v74[2] in
    v50.p2 = v49 in
    v49[0] = v21 in
    let v90: s1 = s1(v84, v9) in
    v50.p3 = v87 in
    v84.p3 = v25 in
    let v166: [[Float]] = v50.p1 in
    v65[0] = v193 in
    let v121: Float = v65[0] in
    let v141: [Float] = v166[1] in
    let v85: Float = v65[4] in
    v74[1] = v56 in
    let v62: Float = v141[0] in
    v7.p0 = v10 in
    let v106: [[Float]] = v35.p1 in
    v84.p1 = v106 in
    var v97: Float = v121 in
    v84.p3 = v36 in
    v58 = v34 in
    v58[0] = v97 in
    v74[1] = v62 in
    v58[0] = v85 in
    v90
  } in
  let f72: (s1, s3) -> s1 = (v0: s1, v1: s3) -> s1 {
    var v5: s3 = v1 in
    let v2: [s1] = v5.p0 in
    v5.p0 = v2 in
    v5.p0 = v2 in
    let v4: [s1] = v5.p0 in
    let v33: s1 = v2[1] in
    let v32: s3 = f75(v5) in
    let v89: [s2] = v32.p1 in
    let v24: s2 = v89[1] in
    var v20: [s2] = v89 in
    v20[1] = v24 in
    let v44: [s2] = f84(v5, v20) in
    v5.p1 = v44 in
    var v42: s2 = v24 in
    v20[0] = v42 in
    let v74: s1 = f89(v33) in
    let v176: s1 = f73(v74) in
    v5.p0 = v4 in
    v176
  } in
  let f46: (s1) -> s1 = (v0: s1) -> s1 {
    let v7: s1 = f73(v0) in
    let v4: s0 = v7.p1 in
    let v9: s1 = s1(v4, v4) in
    let v20: s1 = f89(v9) in
    let v41: s1 = f89(v20) in
    let v40: s1 = f89(v41) in
    let v82: s1 = f80(v40) in
    var v122: s1 = v82 in
    v122
  } in
  let f44: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v2: [s1] = v0 in
    let v1: s1 = v0[1] in
    v2[0] = v1 in
    let v6: s0 = v1.p0 in
    var v3: s1 = v1 in
    let v5: s1 = v0[0] in
    let v4: s1 = v2[1] in
    let v10: s1 = f46(v3) in
    v2[1] = v4 in
    v3.p1 = v6 in
    v2[1] = v3 in
    v3.p1 = v6 in
    var v11: [s1] = v2 in
    let v25: s0 = v4.p1 in
    let v19: s1 = f73(v5) in
    let v22: s1 = f89(v10) in
    v3.p0 = v25 in
    let v68: s1 = f46(v5) in
    v11[1] = v3 in
    v2[1] = v22 in
    let v50: s1 = v0[1] in
    v2[0] = v50 in
    v3.p1 = v6 in
    let v39: s0 = v68.p0 in
    v3.p1 = v6 in
    v2[1] = v19 in
    var v47: [s1] = v11 in
    v3.p0 = v25 in
    v3.p0 = v39 in
    v3.p0 = v25 in
    v11 = v2 in
    let v42: s1 = v2[1] in
    v2[1] = v42 in
    v3.p0 = v6 in
    v47
  } in
  let f20: ([s1], s0, s1) -> [s1] = (v0: [s1], v1: s0, v2: s1) -> [s1] {
    var v19: [s1] = v0 in
    v19
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    var v5: s3 = v0 in
    let v3: [s2] = v0.p1 in
    let v9: [s2] = v5.p1 in
    var v6: s3 = v5 in
    v5.p1 = v3 in
    let v2: s3 = f75(v0) in
    let v11: [s1] = v5.p0 in
    let v12: s1 = v11[0] in
    v5.p1 = v9 in
    let v15: [s1] = v6.p0 in
    let v16: s1 = v15[1] in
    let v18: s1 = f72(v16, v6) in
    let v23: s0 = v12.p1 in
    v6 = v2 in
    let v20: s1 = f72(v16, v2) in
    let v44: [s1] = v5.p0 in
    let v71: [s1] = f44(v11) in
    let v33: [s1] = f20(v11, v23, v20) in
    var v67: [s1] = v44 in
    let v30: [[Float]] = v23.p3 in
    v67[0] = v12 in
    v67[0] = v16 in
    v5.p0 = v67 in
    v67[1] = v20 in
    v67[1] = v18 in
    let v73: [Float] = v30[0] in
    let v92: Float = v73[0] in
    v67[1] = v16 in
    v5.p0 = v33 in
    v5.p0 = v71 in
    let v98: s1 = f80(v18) in
    v67[0] = v98 in
    var v83: Float = v92 in
    v83
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]], [[6.0]], [[7.0], [8.0]]), s0([[9.0], [10.0], [11.0]], [[12.0], [13.0], [14.0]], [[15.0]], [[16.0], [17.0]])), s1(s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]], [[24.0]], [[25.0], [26.0]]), s0([[27.0], [28.0], [29.0]], [[30.0], [31.0], [32.0]], [[33.0]], [[34.0], [35.0]]))], [s2(s1(s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]], [[42.0]], [[43.0], [44.0]]), s0([[45.0], [46.0], [47.0]], [[48.0], [49.0], [50.0]], [[51.0]], [[52.0], [53.0]])), [[s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]], [[60.0]], [[61.0], [62.0]])]]), s2(s1(s0([[63.0], [64.0], [65.0]], [[66.0], [67.0], [68.0]], [[69.0]], [[70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]], [[78.0]], [[79.0], [80.0]])), [[s0([[81.0], [82.0], [83.0]], [[84.0], [85.0], [86.0]], [[87.0]], [[88.0], [89.0]])]])]) in
    let v1: Float = 90.0 in
    let initialResult: Float = 90.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()