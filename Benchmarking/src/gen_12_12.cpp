  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<std::vector<double>> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<std::vector<double>> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  struct s1 {
    s0 p0;
    s0 p1;
    s1(s0 v0, s0 v1): p0(v0), p1(v1) { }
  };
  s0 f88(const s0 &v0) {
    const std::vector<s0> v4 { v0, v0, v0 };
    const s0 v2 = v4[1];
    const s0 v5 = v4[2];
    const std::vector<std::vector<double>> v9 = v5.p0;
    const std::vector<double> v1 = v9[1];
    const std::vector<std::vector<double>> v3 = v5.p0;
    s0 v6 = v5;
    std::vector<s0> v7 = v4;
    const std::vector<std::vector<double>> v17 = v0.p0;
    std::vector<std::vector<double>> v22 = v17;
    s0 v21 = v6;
    const s0 v12 = v4[0];
    const std::vector<double> v11 = v9[1];
    const std::vector<std::vector<double>> v24 = v2.p1;
    const std::vector<std::vector<double>> v14 = v5.p0;
    const std::vector<std::vector<double>> v23 = v21.p0;
    v6.p1 = v24;
    std::vector<double> v50 = v1;
    v21.p0 = v22;
    const std::vector<std::vector<double>> v35 = v12.p1;
    const std::vector<std::vector<double>> v33 = v12.p1;
    v6.p1 = v24;
    v6.p0 = v14;
    v21.p1 = v35;
    std::vector<std::vector<double>> v47 = v24;
    std::vector<s0> v45 = v7;
    std::vector<std::vector<double>> v32 = v33;
    v7[0] = v6;
    const s0 v72 = v45[0];
    const std::vector<double> v48 = v23[0];
    v32 = v33;
    const s1 v42(v2, v21);
    s1 v62 = v42;
    v21.p0 = v3;
    v22[0] = v50;
    std::vector<std::vector<double>> v77 = v47;
    const double v36 = v48[0];
    std::vector<double> v70 = v50;
    v32[0] = v11;
    const s0 v85 = v62.p0;
    v22[0] = v70;
    double v73 = v36;
    std::vector<std::vector<double>> v54 = v77;
    v21.p1 = v32;
    v70[0] = v73;
    v6.p1 = v24;
    v32[0] = v11;
    v47 = v54;
    v62.p1 = v85;
    v62.p0 = v6;
    const s0 v80 = v62.p1;
    v6.p1 = v47;
    v62.p0 = v21;
    v62.p1 = v0;
    v62.p1 = v72;
    return v80;
  }
  s0 f74(const s0 &v0) {
    s0 v6 = v0;
    const s0 v4 = f88(v0);
    s0 v1 = v6;
    s0 v8 = v6;
    const s0 v11 = f88(v8);
    const std::vector<std::vector<double>> v3 = v4.p0;
    s0 v12 = v1;
    const s0 v5 = f88(v4);
    const s0 v9 = f88(v5);
    v12.p0 = v3;
    s0 v10 = v11;
    std::vector<std::vector<double>> v18 = v3;
    const std::vector<double> v21 = v3[0];
    const std::vector<std::vector<double>> v30 = v10.p0;
    const std::vector<std::vector<double>> v14 = v1.p0;
    v6.p0 = v3;
    v18[1] = v21;
    const std::vector<std::vector<double>> v24 = v9.p1;
    const std::vector<double> v15 = v24[1];
    const s0 v13 = f88(v10);
    const s0 v23 = f88(v12);
    v18[1] = v15;
    v6 = v13;
    const std::vector<std::vector<double>> v42 = v6.p1;
    const std::vector<double> v25 = v42[1];
    const std::vector<double> v16 = v24[0];
    std::vector<std::vector<double>> v20 = v24;
    const std::vector<double> v29 = v30[1];
    std::vector<std::vector<double>> v44 = v18;
    v18[0] = v29;
    v8.p1 = v20;
    v44[1] = v16;
    v12.p0 = v14;
    std::vector<std::vector<double>> v37 = v24;
    std::vector<std::vector<double>> v102 = v44;
    v8.p1 = v20;
    const std::vector<std::vector<double>> v38 = v0.p1;
    v18[0] = v15;
    v6.p0 = v102;
    const s0 v87 = f88(v23);
    v102[1] = v15;
    s0 v45 = v87;
    v12.p1 = v38;
    v12.p1 = v37;
    v8.p0 = v18;
    v20[0] = v25;
    v45.p0 = v18;
    return v45;
  }
  double f45(const double &v0) {
    double v5 = v0;
    double v3 = v5;
    double v2 = v5;
    double v1 = v2;
    double v4 = v0;
    v5 = v1;
    double v7 = v5;
    double v18 = v5;
    double v9 = v18;
    double v8 = v7;
    double v10 = v8;
    double v13 = v4;
    double v19 = v10;
    double v11 = v2;
    v9 = v1;
    const double v23 = v9 / v5;
    double v15 = v18;
    double v16 = v7;
    v3 = v16;
    v1 = v3;
    double v46 = v15;
    double v36 = v19;
    const std::vector<double> v21 { v1, v36, v0 };
    const double v35 = v21[0];
    std::vector<double> v48 = v21;
    const double v30 = v48[2];
    v48[1] = v4;
    double v51 = v3;
    const std::vector<double> v52 { v51, v4, v2, v2, v23, v11 };
    const std::vector<std::vector<double>> v74 { v52, v52, v52, v52 };
    std::vector<std::vector<double>> v71 = v74;
    v48[2] = v8;
    const std::vector<double> v84 = v71[0];
    const std::vector<double> v79 = v71[2];
    v36 = v35;
    std::vector<double> v83 = v84;
    double v55 = v13;
    std::vector<double> v64 = v79;
    v71[1] = v64;
    v4 = v55;
    const double v95 = v83[3];
    v71[0] = v52;
    v64[3] = v46;
    v64[4] = v30;
    return v95;
  }
  __attribute__((noinline))
  double f0(const std::vector<s0> &v0, const double &v1) {
    const s0 v3 = v0[0];
    const std::vector<std::vector<double>> v6 = v3.p1;
    const double v5 = f45(v1);
    s0 v4 = v3;
    const s0 v2 = f88(v4);
    double v8 = v1;
    const s0 v7 = v0[0];
    const std::vector<std::vector<double>> v12 = v2.p1;
    double v9 = v1;
    const std::vector<std::vector<double>> v14 = v7.p1;
    v4.p1 = v6;
    v4.p1 = v14;
    const s0 v13 = v0[1];
    v4.p1 = v12;
    s0 v22 = v13;
    const std::vector<double> v45 = v6[2];
    const std::vector<std::vector<double>> v24 = v22.p0;
    const std::vector<double> v29 = v24[1];
    const s0 v26 = f74(v3);
    const std::vector<std::vector<double>> v33 = v3.p1;
    v22.p1 = v12;
    const double v16 = v29[0];
    const double v34 = v45[0];
    const double v49 = v34 + v8;
    const std::vector<std::vector<double>> v56 = v26.p0;
    const std::vector<std::vector<double>> v38 = v4.p0;
    const double v37 = v34 - v49;
    v4.p1 = v12;
    v4.p0 = v38;
    v22.p0 = v56;
    v4.p1 = v33;
    v8 = v1;
    double v76 = v1;
    const double v52 = v37 - v49;
    const std::vector<double> v114 { v52, v76, v5, v16, v9, v76 };
    std::vector<double> v110 = v114;
    const double v98 = v110[2];
    return v98;
  }
  int main() {
    std::vector<s0> v0({ { { { 0.0 }, { 1.0 } }, { { 2.0 }, { 3.0 }, { 4.0 } } }, { { { 5.0 }, { 6.0 } }, { { 7.0 }, { 8.0 }, { 9.0 } } } });
    double v1(10.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
