  struct s0 {
    var p0: [[Float]]
    var p1: Float
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: s0
    var p2: s0
  } in
  struct s3 {
    var p0: s0
    var p1: s0
  } in
  let f34: (s3) -> s3 = (v0: s3) -> s3 {
    var v6: s3 = v0 in
    var v7: s3 = v0 in
    var v3: s3 = v0 in
    var v2: s3 = v6 in
    let v4: s0 = v7.p0 in
    let v1: [s3] = [v3, v6, v0, v2, v0, v3] in
    v2.p1 = v4 in
    v2.p1 = v4 in
    v7.p0 = v4 in
    let v9: s0 = v6.p1 in
    let v18: s0 = v7.p1 in
    let v17: s0 = v2.p0 in
    v6.p1 = v17 in
    var v33: s3 = v6 in
    var v12: s3 = v33 in
    v2.p1 = v17 in
    let v20: s3 = v1[4] in
    v7.p1 = v4 in
    v2.p0 = v17 in
    v3.p0 = v18 in
    v2.p0 = v9 in
    let v22: s0 = v12.p0 in
    var v45: s3 = v20 in
    v6.p1 = v4 in
    v7.p0 = v4 in
    v33.p0 = v18 in
    v45.p1 = v22 in
    v45
  } in
  let f33: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: [s0] = v0.p0 in
    var v7: s1 = v0 in
    let v3: [s0] = v7.p0 in
    var v2: [s0] = v5 in
    let v8: s0 = v5[1] in
    let v10: s0 = v3[2] in
    var v1: s0 = v8 in
    let v4: [s0] = v0.p0 in
    v7.p1 = v1 in
    let v12: [[Float]] = v1.p0 in
    v2[0] = v10 in
    var v17: s1 = v7 in
    let v9: s0 = v4[2] in
    v2[2] = v10 in
    v17.p0 = v2 in
    var v6: [[Float]] = v12 in
    v17.p1 = v1 in
    v1.p0 = v6 in
    let v14: s2 = s2(v17, v10, v8) in
    let v16: [[Float]] = v1.p0 in
    let v25: s0 = v4[1] in
    v2[1] = v8 in
    v1.p0 = v16 in
    v17.p1 = v25 in
    let v26: s0 = v14.p2 in
    v7.p1 = v9 in
    v17 = v7 in
    v7.p0 = v3 in
    v2[0] = v26 in
    v17.p1 = v8 in
    v7.p1 = v1 in
    var v29: s1 = v17 in
    v29
  } in
  let f24: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    var v4: Float = v0 in
    var v3: Float = v4 in
    var v7: Float = v4 in
    var v6: Float = v2 in
    let v8: [Float] = [v0, v4, v2, v4, v7] in
    var v11: [Float] = v8 in
    var v10: Float = v6 in
    let v9: Float = v11[1] in
    var v12: [Float] = v8 in
    let v22: Float = v12[4] in
    v4 = v22 in
    let v13: [[Float]] = [v8, v12, v11, v8, v8, v11, v11] in
    v12[3] = v7 in
    v11[3] = v2 in
    let v17: Float = v12[3] in
    v11[2] = v7 in
    let v35: Float = v12[1] in
    v11[2] = v10 in
    var v20: [[Float]] = v13 in
    v12[0] = v17 in
    v7 = v17 in
    v4 = v3 in
    v12[2] = v35 in
    v20 = v13 in
    var v14: [[Float]] = v20 in
    let v27: [Float] = v14[0] in
    let v56: Float = v27[2] in
    v4 = v0 in
    v12[3] = v9 in
    v56
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p0 in
    var v3: [[Float]] = v5 in
    let v7: [[Float]] = v0.p0 in
    let v1: [Float] = v7[0] in
    let v9: Float = v1[0] in
    let v10: s0 = s0(v3, v9) in
    var v11: [Float] = v1 in
    v3 = v7 in
    let v14: Float = v1[0] in
    let v17: [Float] = v7[0] in
    var v8: s0 = v0 in
    var v25: Float = v14 in
    let v18: Float = v1[0] in
    v25 = v18 in
    let v13: [[Float]] = v0.p0 in
    let v19: Float = v17[0] in
    v8.p1 = v25 in
    v8 = v10 in
    let v23: Float = v1[0] in
    v8.p1 = v23 in
    var v28: s0 = v0 in
    v8 = v10 in
    var v48: [[Float]] = v13 in
    v48[0] = v17 in
    let v30: Float = v11[0] in
    v28.p1 = v19 in
    var v33: s0 = v10 in
    v8.p1 = v30 in
    v33.p1 = v23 in
    v33.p0 = v7 in
    v8.p0 = v5 in
    v48[0] = v17 in
    var v50: s0 = v33 in
    var v43: s0 = v50 in
    let v60: Float = v28.p1 in
    let v74: s3 = s3(v0, v43) in
    var v37: s3 = v74 in
    var v71: s3 = v37 in
    v50.p0 = v48 in
    let v81: s3 = f34(v74) in
    v8.p0 = v3 in
    v8.p1 = v60 in
    let v59: s0 = v81.p1 in
    let v132: s3 = f34(v74) in
    let v85: s0 = v74.p1 in
    let v96: s0 = v71.p0 in
    let v148: [[Float]] = v8.p0 in
    v37.p1 = v59 in
    v33 = v8 in
    let v94: [[Float]] = v85.p0 in
    v71 = v132 in
    v37.p1 = v33 in
    v43.p0 = v148 in
    v8.p0 = v94 in
    v8.p0 = v148 in
    v96
  } in
  let noinline_f0: ([s2], [s2], [s1], Float) -> Float = (v0: [s2], v1: [s2], v2: [s1], v3: Float) -> Float {
    var v8: [s2] = v0 in
    let v4: s2 = v8[0] in
    let v9: s0 = v4.p2 in
    v8[0] = v4 in
    var v14: s2 = v4 in
    let v7: [[Float]] = v9.p0 in
    v14.p2 = v9 in
    let v5: s0 = f22(v9) in
    v8[1] = v4 in
    v14.p2 = v5 in
    let v13: s0 = v14.p1 in
    v8[0] = v14 in
    let v10: Float = f24(v3) in
    let v6: Float = v13.p1 in
    let v16: s1 = v2[0] in
    let v11: s1 = f33(v16) in
    let v28: s2 = v1[0] in
    v14.p0 = v11 in
    v8[1] = v28 in
    var v37: s0 = v9 in
    var v70: Float = v10 in
    v37.p0 = v7 in
    let v42: Float = v70 * v6 in
    let v45: Float = v37.p1 in
    v70 = v45 in
    v42
  } in
  fun loop(i: Int, v0: [s2], v1: [s2], v2: [s1], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2(s1([s0([[0.0]], 1.0), s0([[2.0]], 3.0), s0([[4.0]], 5.0)], s0([[6.0]], 7.0)), s0([[8.0]], 9.0), s0([[10.0]], 11.0)), s2(s1([s0([[12.0]], 13.0), s0([[14.0]], 15.0), s0([[16.0]], 17.0)], s0([[18.0]], 19.0)), s0([[20.0]], 21.0), s0([[22.0]], 23.0))] in
    let v1: [s2] = [s2(s1([s0([[24.0]], 25.0), s0([[26.0]], 27.0), s0([[28.0]], 29.0)], s0([[30.0]], 31.0)), s0([[32.0]], 33.0), s0([[34.0]], 35.0))] in
    let v2: [s1] = [s1([s0([[36.0]], 37.0), s0([[38.0]], 39.0), s0([[40.0]], 41.0)], s0([[42.0]], 43.0)), s1([s0([[44.0]], 45.0), s0([[46.0]], 47.0), s0([[48.0]], 49.0)], s0([[50.0]], 51.0)), s1([s0([[52.0]], 53.0), s0([[54.0]], 55.0), s0([[56.0]], 57.0)], s0([[58.0]], 59.0))] in
    let v3: Float = 60.0 in
    let initialResult: Float = 60.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()