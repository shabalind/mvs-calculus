  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  }
  struct s2 {
    var p0: [s0]
    var p1: [[s0]]
    var p2: s1
    var p3: Double
    var p4: s1
  }
  struct s3 {
    var p0: s2
  }
  struct s4 {
    var p0: s3
    var p1: [s2]
  }
  struct s5 {
    var p0: [[s3]]
    var p1: [s4]
    var p2: s2
    var p3: [[s3]]
    var p4: [[s4]]
    var p5: s1
    var p6: [[s1]]
  }
  struct s6 {
    var p0: [s2]
    var p1: [[s3]]
  }
  struct s7 {
    var p0: [[s6]]
    var p1: [s3]
  }
  @inline(never)
  func f0(_ v0: [[s7]], _ v1: [s5], _ v2: Double) -> Double {
    var v3: Double = v2
    var v6: Double = v2
    let v21: Double = v2 * v6
    let v83: Double = v2 / v3
    let v143: Double = v21 + v21
    let v58: Double = v143 + v2
    let v109: Double = v83 / v2
    let v97: Double = v109 + v83
    let v218: Double = v58 - v2
    let v127: Double = v218 * v97
    return v127
  }
  func benchmark() {
    let v0: [[s7]] = [[s7(p0: [[s6(p0: [s2(p0: [s0(p0: [[0.0]], p1: [[1.0], [2.0], [3.0]]), s0(p0: [[4.0]], p1: [[5.0], [6.0], [7.0]])], p1: [[s0(p0: [[8.0]], p1: [[9.0], [10.0], [11.0]])]], p2: s1(p0: [[s0(p0: [[12.0]], p1: [[13.0], [14.0], [15.0]])], [s0(p0: [[16.0]], p1: [[17.0], [18.0], [19.0]])], [s0(p0: [[20.0]], p1: [[21.0], [22.0], [23.0]])]], p1: s0(p0: [[24.0]], p1: [[25.0], [26.0], [27.0]])), p3: 28.0, p4: s1(p0: [[s0(p0: [[29.0]], p1: [[30.0], [31.0], [32.0]])], [s0(p0: [[33.0]], p1: [[34.0], [35.0], [36.0]])], [s0(p0: [[37.0]], p1: [[38.0], [39.0], [40.0]])]], p1: s0(p0: [[41.0]], p1: [[42.0], [43.0], [44.0]])))], p1: [[s3(p0: s2(p0: [s0(p0: [[45.0]], p1: [[46.0], [47.0], [48.0]]), s0(p0: [[49.0]], p1: [[50.0], [51.0], [52.0]])], p1: [[s0(p0: [[53.0]], p1: [[54.0], [55.0], [56.0]])]], p2: s1(p0: [[s0(p0: [[57.0]], p1: [[58.0], [59.0], [60.0]])], [s0(p0: [[61.0]], p1: [[62.0], [63.0], [64.0]])], [s0(p0: [[65.0]], p1: [[66.0], [67.0], [68.0]])]], p1: s0(p0: [[69.0]], p1: [[70.0], [71.0], [72.0]])), p3: 73.0, p4: s1(p0: [[s0(p0: [[74.0]], p1: [[75.0], [76.0], [77.0]])], [s0(p0: [[78.0]], p1: [[79.0], [80.0], [81.0]])], [s0(p0: [[82.0]], p1: [[83.0], [84.0], [85.0]])]], p1: s0(p0: [[86.0]], p1: [[87.0], [88.0], [89.0]]))))], [s3(p0: s2(p0: [s0(p0: [[90.0]], p1: [[91.0], [92.0], [93.0]]), s0(p0: [[94.0]], p1: [[95.0], [96.0], [97.0]])], p1: [[s0(p0: [[98.0]], p1: [[99.0], [100.0], [101.0]])]], p2: s1(p0: [[s0(p0: [[102.0]], p1: [[103.0], [104.0], [105.0]])], [s0(p0: [[106.0]], p1: [[107.0], [108.0], [109.0]])], [s0(p0: [[110.0]], p1: [[111.0], [112.0], [113.0]])]], p1: s0(p0: [[114.0]], p1: [[115.0], [116.0], [117.0]])), p3: 118.0, p4: s1(p0: [[s0(p0: [[119.0]], p1: [[120.0], [121.0], [122.0]])], [s0(p0: [[123.0]], p1: [[124.0], [125.0], [126.0]])], [s0(p0: [[127.0]], p1: [[128.0], [129.0], [130.0]])]], p1: s0(p0: [[131.0]], p1: [[132.0], [133.0], [134.0]]))))]])], [s6(p0: [s2(p0: [s0(p0: [[135.0]], p1: [[136.0], [137.0], [138.0]]), s0(p0: [[139.0]], p1: [[140.0], [141.0], [142.0]])], p1: [[s0(p0: [[143.0]], p1: [[144.0], [145.0], [146.0]])]], p2: s1(p0: [[s0(p0: [[147.0]], p1: [[148.0], [149.0], [150.0]])], [s0(p0: [[151.0]], p1: [[152.0], [153.0], [154.0]])], [s0(p0: [[155.0]], p1: [[156.0], [157.0], [158.0]])]], p1: s0(p0: [[159.0]], p1: [[160.0], [161.0], [162.0]])), p3: 163.0, p4: s1(p0: [[s0(p0: [[164.0]], p1: [[165.0], [166.0], [167.0]])], [s0(p0: [[168.0]], p1: [[169.0], [170.0], [171.0]])], [s0(p0: [[172.0]], p1: [[173.0], [174.0], [175.0]])]], p1: s0(p0: [[176.0]], p1: [[177.0], [178.0], [179.0]])))], p1: [[s3(p0: s2(p0: [s0(p0: [[180.0]], p1: [[181.0], [182.0], [183.0]]), s0(p0: [[184.0]], p1: [[185.0], [186.0], [187.0]])], p1: [[s0(p0: [[188.0]], p1: [[189.0], [190.0], [191.0]])]], p2: s1(p0: [[s0(p0: [[192.0]], p1: [[193.0], [194.0], [195.0]])], [s0(p0: [[196.0]], p1: [[197.0], [198.0], [199.0]])], [s0(p0: [[200.0]], p1: [[201.0], [202.0], [203.0]])]], p1: s0(p0: [[204.0]], p1: [[205.0], [206.0], [207.0]])), p3: 208.0, p4: s1(p0: [[s0(p0: [[209.0]], p1: [[210.0], [211.0], [212.0]])], [s0(p0: [[213.0]], p1: [[214.0], [215.0], [216.0]])], [s0(p0: [[217.0]], p1: [[218.0], [219.0], [220.0]])]], p1: s0(p0: [[221.0]], p1: [[222.0], [223.0], [224.0]]))))], [s3(p0: s2(p0: [s0(p0: [[225.0]], p1: [[226.0], [227.0], [228.0]]), s0(p0: [[229.0]], p1: [[230.0], [231.0], [232.0]])], p1: [[s0(p0: [[233.0]], p1: [[234.0], [235.0], [236.0]])]], p2: s1(p0: [[s0(p0: [[237.0]], p1: [[238.0], [239.0], [240.0]])], [s0(p0: [[241.0]], p1: [[242.0], [243.0], [244.0]])], [s0(p0: [[245.0]], p1: [[246.0], [247.0], [248.0]])]], p1: s0(p0: [[249.0]], p1: [[250.0], [251.0], [252.0]])), p3: 253.0, p4: s1(p0: [[s0(p0: [[254.0]], p1: [[255.0], [256.0], [257.0]])], [s0(p0: [[258.0]], p1: [[259.0], [260.0], [261.0]])], [s0(p0: [[262.0]], p1: [[263.0], [264.0], [265.0]])]], p1: s0(p0: [[266.0]], p1: [[267.0], [268.0], [269.0]]))))]])]], p1: [s3(p0: s2(p0: [s0(p0: [[270.0]], p1: [[271.0], [272.0], [273.0]]), s0(p0: [[274.0]], p1: [[275.0], [276.0], [277.0]])], p1: [[s0(p0: [[278.0]], p1: [[279.0], [280.0], [281.0]])]], p2: s1(p0: [[s0(p0: [[282.0]], p1: [[283.0], [284.0], [285.0]])], [s0(p0: [[286.0]], p1: [[287.0], [288.0], [289.0]])], [s0(p0: [[290.0]], p1: [[291.0], [292.0], [293.0]])]], p1: s0(p0: [[294.0]], p1: [[295.0], [296.0], [297.0]])), p3: 298.0, p4: s1(p0: [[s0(p0: [[299.0]], p1: [[300.0], [301.0], [302.0]])], [s0(p0: [[303.0]], p1: [[304.0], [305.0], [306.0]])], [s0(p0: [[307.0]], p1: [[308.0], [309.0], [310.0]])]], p1: s0(p0: [[311.0]], p1: [[312.0], [313.0], [314.0]])))), s3(p0: s2(p0: [s0(p0: [[315.0]], p1: [[316.0], [317.0], [318.0]]), s0(p0: [[319.0]], p1: [[320.0], [321.0], [322.0]])], p1: [[s0(p0: [[323.0]], p1: [[324.0], [325.0], [326.0]])]], p2: s1(p0: [[s0(p0: [[327.0]], p1: [[328.0], [329.0], [330.0]])], [s0(p0: [[331.0]], p1: [[332.0], [333.0], [334.0]])], [s0(p0: [[335.0]], p1: [[336.0], [337.0], [338.0]])]], p1: s0(p0: [[339.0]], p1: [[340.0], [341.0], [342.0]])), p3: 343.0, p4: s1(p0: [[s0(p0: [[344.0]], p1: [[345.0], [346.0], [347.0]])], [s0(p0: [[348.0]], p1: [[349.0], [350.0], [351.0]])], [s0(p0: [[352.0]], p1: [[353.0], [354.0], [355.0]])]], p1: s0(p0: [[356.0]], p1: [[357.0], [358.0], [359.0]]))))])], [s7(p0: [[s6(p0: [s2(p0: [s0(p0: [[360.0]], p1: [[361.0], [362.0], [363.0]]), s0(p0: [[364.0]], p1: [[365.0], [366.0], [367.0]])], p1: [[s0(p0: [[368.0]], p1: [[369.0], [370.0], [371.0]])]], p2: s1(p0: [[s0(p0: [[372.0]], p1: [[373.0], [374.0], [375.0]])], [s0(p0: [[376.0]], p1: [[377.0], [378.0], [379.0]])], [s0(p0: [[380.0]], p1: [[381.0], [382.0], [383.0]])]], p1: s0(p0: [[384.0]], p1: [[385.0], [386.0], [387.0]])), p3: 388.0, p4: s1(p0: [[s0(p0: [[389.0]], p1: [[390.0], [391.0], [392.0]])], [s0(p0: [[393.0]], p1: [[394.0], [395.0], [396.0]])], [s0(p0: [[397.0]], p1: [[398.0], [399.0], [400.0]])]], p1: s0(p0: [[401.0]], p1: [[402.0], [403.0], [404.0]])))], p1: [[s3(p0: s2(p0: [s0(p0: [[405.0]], p1: [[406.0], [407.0], [408.0]]), s0(p0: [[409.0]], p1: [[410.0], [411.0], [412.0]])], p1: [[s0(p0: [[413.0]], p1: [[414.0], [415.0], [416.0]])]], p2: s1(p0: [[s0(p0: [[417.0]], p1: [[418.0], [419.0], [420.0]])], [s0(p0: [[421.0]], p1: [[422.0], [423.0], [424.0]])], [s0(p0: [[425.0]], p1: [[426.0], [427.0], [428.0]])]], p1: s0(p0: [[429.0]], p1: [[430.0], [431.0], [432.0]])), p3: 433.0, p4: s1(p0: [[s0(p0: [[434.0]], p1: [[435.0], [436.0], [437.0]])], [s0(p0: [[438.0]], p1: [[439.0], [440.0], [441.0]])], [s0(p0: [[442.0]], p1: [[443.0], [444.0], [445.0]])]], p1: s0(p0: [[446.0]], p1: [[447.0], [448.0], [449.0]]))))], [s3(p0: s2(p0: [s0(p0: [[450.0]], p1: [[451.0], [452.0], [453.0]]), s0(p0: [[454.0]], p1: [[455.0], [456.0], [457.0]])], p1: [[s0(p0: [[458.0]], p1: [[459.0], [460.0], [461.0]])]], p2: s1(p0: [[s0(p0: [[462.0]], p1: [[463.0], [464.0], [465.0]])], [s0(p0: [[466.0]], p1: [[467.0], [468.0], [469.0]])], [s0(p0: [[470.0]], p1: [[471.0], [472.0], [473.0]])]], p1: s0(p0: [[474.0]], p1: [[475.0], [476.0], [477.0]])), p3: 478.0, p4: s1(p0: [[s0(p0: [[479.0]], p1: [[480.0], [481.0], [482.0]])], [s0(p0: [[483.0]], p1: [[484.0], [485.0], [486.0]])], [s0(p0: [[487.0]], p1: [[488.0], [489.0], [490.0]])]], p1: s0(p0: [[491.0]], p1: [[492.0], [493.0], [494.0]]))))]])], [s6(p0: [s2(p0: [s0(p0: [[495.0]], p1: [[496.0], [497.0], [498.0]]), s0(p0: [[499.0]], p1: [[500.0], [501.0], [502.0]])], p1: [[s0(p0: [[503.0]], p1: [[504.0], [505.0], [506.0]])]], p2: s1(p0: [[s0(p0: [[507.0]], p1: [[508.0], [509.0], [510.0]])], [s0(p0: [[511.0]], p1: [[512.0], [513.0], [514.0]])], [s0(p0: [[515.0]], p1: [[516.0], [517.0], [518.0]])]], p1: s0(p0: [[519.0]], p1: [[520.0], [521.0], [522.0]])), p3: 523.0, p4: s1(p0: [[s0(p0: [[524.0]], p1: [[525.0], [526.0], [527.0]])], [s0(p0: [[528.0]], p1: [[529.0], [530.0], [531.0]])], [s0(p0: [[532.0]], p1: [[533.0], [534.0], [535.0]])]], p1: s0(p0: [[536.0]], p1: [[537.0], [538.0], [539.0]])))], p1: [[s3(p0: s2(p0: [s0(p0: [[540.0]], p1: [[541.0], [542.0], [543.0]]), s0(p0: [[544.0]], p1: [[545.0], [546.0], [547.0]])], p1: [[s0(p0: [[548.0]], p1: [[549.0], [550.0], [551.0]])]], p2: s1(p0: [[s0(p0: [[552.0]], p1: [[553.0], [554.0], [555.0]])], [s0(p0: [[556.0]], p1: [[557.0], [558.0], [559.0]])], [s0(p0: [[560.0]], p1: [[561.0], [562.0], [563.0]])]], p1: s0(p0: [[564.0]], p1: [[565.0], [566.0], [567.0]])), p3: 568.0, p4: s1(p0: [[s0(p0: [[569.0]], p1: [[570.0], [571.0], [572.0]])], [s0(p0: [[573.0]], p1: [[574.0], [575.0], [576.0]])], [s0(p0: [[577.0]], p1: [[578.0], [579.0], [580.0]])]], p1: s0(p0: [[581.0]], p1: [[582.0], [583.0], [584.0]]))))], [s3(p0: s2(p0: [s0(p0: [[585.0]], p1: [[586.0], [587.0], [588.0]]), s0(p0: [[589.0]], p1: [[590.0], [591.0], [592.0]])], p1: [[s0(p0: [[593.0]], p1: [[594.0], [595.0], [596.0]])]], p2: s1(p0: [[s0(p0: [[597.0]], p1: [[598.0], [599.0], [600.0]])], [s0(p0: [[601.0]], p1: [[602.0], [603.0], [604.0]])], [s0(p0: [[605.0]], p1: [[606.0], [607.0], [608.0]])]], p1: s0(p0: [[609.0]], p1: [[610.0], [611.0], [612.0]])), p3: 613.0, p4: s1(p0: [[s0(p0: [[614.0]], p1: [[615.0], [616.0], [617.0]])], [s0(p0: [[618.0]], p1: [[619.0], [620.0], [621.0]])], [s0(p0: [[622.0]], p1: [[623.0], [624.0], [625.0]])]], p1: s0(p0: [[626.0]], p1: [[627.0], [628.0], [629.0]]))))]])]], p1: [s3(p0: s2(p0: [s0(p0: [[630.0]], p1: [[631.0], [632.0], [633.0]]), s0(p0: [[634.0]], p1: [[635.0], [636.0], [637.0]])], p1: [[s0(p0: [[638.0]], p1: [[639.0], [640.0], [641.0]])]], p2: s1(p0: [[s0(p0: [[642.0]], p1: [[643.0], [644.0], [645.0]])], [s0(p0: [[646.0]], p1: [[647.0], [648.0], [649.0]])], [s0(p0: [[650.0]], p1: [[651.0], [652.0], [653.0]])]], p1: s0(p0: [[654.0]], p1: [[655.0], [656.0], [657.0]])), p3: 658.0, p4: s1(p0: [[s0(p0: [[659.0]], p1: [[660.0], [661.0], [662.0]])], [s0(p0: [[663.0]], p1: [[664.0], [665.0], [666.0]])], [s0(p0: [[667.0]], p1: [[668.0], [669.0], [670.0]])]], p1: s0(p0: [[671.0]], p1: [[672.0], [673.0], [674.0]])))), s3(p0: s2(p0: [s0(p0: [[675.0]], p1: [[676.0], [677.0], [678.0]]), s0(p0: [[679.0]], p1: [[680.0], [681.0], [682.0]])], p1: [[s0(p0: [[683.0]], p1: [[684.0], [685.0], [686.0]])]], p2: s1(p0: [[s0(p0: [[687.0]], p1: [[688.0], [689.0], [690.0]])], [s0(p0: [[691.0]], p1: [[692.0], [693.0], [694.0]])], [s0(p0: [[695.0]], p1: [[696.0], [697.0], [698.0]])]], p1: s0(p0: [[699.0]], p1: [[700.0], [701.0], [702.0]])), p3: 703.0, p4: s1(p0: [[s0(p0: [[704.0]], p1: [[705.0], [706.0], [707.0]])], [s0(p0: [[708.0]], p1: [[709.0], [710.0], [711.0]])], [s0(p0: [[712.0]], p1: [[713.0], [714.0], [715.0]])]], p1: s0(p0: [[716.0]], p1: [[717.0], [718.0], [719.0]]))))])]]
    let v1: [s5] = [s5(p0: [[s3(p0: s2(p0: [s0(p0: [[720.0]], p1: [[721.0], [722.0], [723.0]]), s0(p0: [[724.0]], p1: [[725.0], [726.0], [727.0]])], p1: [[s0(p0: [[728.0]], p1: [[729.0], [730.0], [731.0]])]], p2: s1(p0: [[s0(p0: [[732.0]], p1: [[733.0], [734.0], [735.0]])], [s0(p0: [[736.0]], p1: [[737.0], [738.0], [739.0]])], [s0(p0: [[740.0]], p1: [[741.0], [742.0], [743.0]])]], p1: s0(p0: [[744.0]], p1: [[745.0], [746.0], [747.0]])), p3: 748.0, p4: s1(p0: [[s0(p0: [[749.0]], p1: [[750.0], [751.0], [752.0]])], [s0(p0: [[753.0]], p1: [[754.0], [755.0], [756.0]])], [s0(p0: [[757.0]], p1: [[758.0], [759.0], [760.0]])]], p1: s0(p0: [[761.0]], p1: [[762.0], [763.0], [764.0]]))))]], p1: [s4(p0: s3(p0: s2(p0: [s0(p0: [[765.0]], p1: [[766.0], [767.0], [768.0]]), s0(p0: [[769.0]], p1: [[770.0], [771.0], [772.0]])], p1: [[s0(p0: [[773.0]], p1: [[774.0], [775.0], [776.0]])]], p2: s1(p0: [[s0(p0: [[777.0]], p1: [[778.0], [779.0], [780.0]])], [s0(p0: [[781.0]], p1: [[782.0], [783.0], [784.0]])], [s0(p0: [[785.0]], p1: [[786.0], [787.0], [788.0]])]], p1: s0(p0: [[789.0]], p1: [[790.0], [791.0], [792.0]])), p3: 793.0, p4: s1(p0: [[s0(p0: [[794.0]], p1: [[795.0], [796.0], [797.0]])], [s0(p0: [[798.0]], p1: [[799.0], [800.0], [801.0]])], [s0(p0: [[802.0]], p1: [[803.0], [804.0], [805.0]])]], p1: s0(p0: [[806.0]], p1: [[807.0], [808.0], [809.0]])))), p1: [s2(p0: [s0(p0: [[810.0]], p1: [[811.0], [812.0], [813.0]]), s0(p0: [[814.0]], p1: [[815.0], [816.0], [817.0]])], p1: [[s0(p0: [[818.0]], p1: [[819.0], [820.0], [821.0]])]], p2: s1(p0: [[s0(p0: [[822.0]], p1: [[823.0], [824.0], [825.0]])], [s0(p0: [[826.0]], p1: [[827.0], [828.0], [829.0]])], [s0(p0: [[830.0]], p1: [[831.0], [832.0], [833.0]])]], p1: s0(p0: [[834.0]], p1: [[835.0], [836.0], [837.0]])), p3: 838.0, p4: s1(p0: [[s0(p0: [[839.0]], p1: [[840.0], [841.0], [842.0]])], [s0(p0: [[843.0]], p1: [[844.0], [845.0], [846.0]])], [s0(p0: [[847.0]], p1: [[848.0], [849.0], [850.0]])]], p1: s0(p0: [[851.0]], p1: [[852.0], [853.0], [854.0]])))]), s4(p0: s3(p0: s2(p0: [s0(p0: [[855.0]], p1: [[856.0], [857.0], [858.0]]), s0(p0: [[859.0]], p1: [[860.0], [861.0], [862.0]])], p1: [[s0(p0: [[863.0]], p1: [[864.0], [865.0], [866.0]])]], p2: s1(p0: [[s0(p0: [[867.0]], p1: [[868.0], [869.0], [870.0]])], [s0(p0: [[871.0]], p1: [[872.0], [873.0], [874.0]])], [s0(p0: [[875.0]], p1: [[876.0], [877.0], [878.0]])]], p1: s0(p0: [[879.0]], p1: [[880.0], [881.0], [882.0]])), p3: 883.0, p4: s1(p0: [[s0(p0: [[884.0]], p1: [[885.0], [886.0], [887.0]])], [s0(p0: [[888.0]], p1: [[889.0], [890.0], [891.0]])], [s0(p0: [[892.0]], p1: [[893.0], [894.0], [895.0]])]], p1: s0(p0: [[896.0]], p1: [[897.0], [898.0], [899.0]])))), p1: [s2(p0: [s0(p0: [[900.0]], p1: [[901.0], [902.0], [903.0]]), s0(p0: [[904.0]], p1: [[905.0], [906.0], [907.0]])], p1: [[s0(p0: [[908.0]], p1: [[909.0], [910.0], [911.0]])]], p2: s1(p0: [[s0(p0: [[912.0]], p1: [[913.0], [914.0], [915.0]])], [s0(p0: [[916.0]], p1: [[917.0], [918.0], [919.0]])], [s0(p0: [[920.0]], p1: [[921.0], [922.0], [923.0]])]], p1: s0(p0: [[924.0]], p1: [[925.0], [926.0], [927.0]])), p3: 928.0, p4: s1(p0: [[s0(p0: [[929.0]], p1: [[930.0], [931.0], [932.0]])], [s0(p0: [[933.0]], p1: [[934.0], [935.0], [936.0]])], [s0(p0: [[937.0]], p1: [[938.0], [939.0], [940.0]])]], p1: s0(p0: [[941.0]], p1: [[942.0], [943.0], [944.0]])))])], p2: s2(p0: [s0(p0: [[945.0]], p1: [[946.0], [947.0], [948.0]]), s0(p0: [[949.0]], p1: [[950.0], [951.0], [952.0]])], p1: [[s0(p0: [[953.0]], p1: [[954.0], [955.0], [956.0]])]], p2: s1(p0: [[s0(p0: [[957.0]], p1: [[958.0], [959.0], [960.0]])], [s0(p0: [[961.0]], p1: [[962.0], [963.0], [964.0]])], [s0(p0: [[965.0]], p1: [[966.0], [967.0], [968.0]])]], p1: s0(p0: [[969.0]], p1: [[970.0], [971.0], [972.0]])), p3: 973.0, p4: s1(p0: [[s0(p0: [[974.0]], p1: [[975.0], [976.0], [977.0]])], [s0(p0: [[978.0]], p1: [[979.0], [980.0], [981.0]])], [s0(p0: [[982.0]], p1: [[983.0], [984.0], [985.0]])]], p1: s0(p0: [[986.0]], p1: [[987.0], [988.0], [989.0]]))), p3: [[s3(p0: s2(p0: [s0(p0: [[990.0]], p1: [[991.0], [992.0], [993.0]]), s0(p0: [[994.0]], p1: [[995.0], [996.0], [997.0]])], p1: [[s0(p0: [[998.0]], p1: [[999.0], [1000.0], [1001.0]])]], p2: s1(p0: [[s0(p0: [[1002.0]], p1: [[1003.0], [1004.0], [1005.0]])], [s0(p0: [[1006.0]], p1: [[1007.0], [1008.0], [1009.0]])], [s0(p0: [[1010.0]], p1: [[1011.0], [1012.0], [1013.0]])]], p1: s0(p0: [[1014.0]], p1: [[1015.0], [1016.0], [1017.0]])), p3: 1018.0, p4: s1(p0: [[s0(p0: [[1019.0]], p1: [[1020.0], [1021.0], [1022.0]])], [s0(p0: [[1023.0]], p1: [[1024.0], [1025.0], [1026.0]])], [s0(p0: [[1027.0]], p1: [[1028.0], [1029.0], [1030.0]])]], p1: s0(p0: [[1031.0]], p1: [[1032.0], [1033.0], [1034.0]]))))]], p4: [[s4(p0: s3(p0: s2(p0: [s0(p0: [[1035.0]], p1: [[1036.0], [1037.0], [1038.0]]), s0(p0: [[1039.0]], p1: [[1040.0], [1041.0], [1042.0]])], p1: [[s0(p0: [[1043.0]], p1: [[1044.0], [1045.0], [1046.0]])]], p2: s1(p0: [[s0(p0: [[1047.0]], p1: [[1048.0], [1049.0], [1050.0]])], [s0(p0: [[1051.0]], p1: [[1052.0], [1053.0], [1054.0]])], [s0(p0: [[1055.0]], p1: [[1056.0], [1057.0], [1058.0]])]], p1: s0(p0: [[1059.0]], p1: [[1060.0], [1061.0], [1062.0]])), p3: 1063.0, p4: s1(p0: [[s0(p0: [[1064.0]], p1: [[1065.0], [1066.0], [1067.0]])], [s0(p0: [[1068.0]], p1: [[1069.0], [1070.0], [1071.0]])], [s0(p0: [[1072.0]], p1: [[1073.0], [1074.0], [1075.0]])]], p1: s0(p0: [[1076.0]], p1: [[1077.0], [1078.0], [1079.0]])))), p1: [s2(p0: [s0(p0: [[1080.0]], p1: [[1081.0], [1082.0], [1083.0]]), s0(p0: [[1084.0]], p1: [[1085.0], [1086.0], [1087.0]])], p1: [[s0(p0: [[1088.0]], p1: [[1089.0], [1090.0], [1091.0]])]], p2: s1(p0: [[s0(p0: [[1092.0]], p1: [[1093.0], [1094.0], [1095.0]])], [s0(p0: [[1096.0]], p1: [[1097.0], [1098.0], [1099.0]])], [s0(p0: [[1100.0]], p1: [[1101.0], [1102.0], [1103.0]])]], p1: s0(p0: [[1104.0]], p1: [[1105.0], [1106.0], [1107.0]])), p3: 1108.0, p4: s1(p0: [[s0(p0: [[1109.0]], p1: [[1110.0], [1111.0], [1112.0]])], [s0(p0: [[1113.0]], p1: [[1114.0], [1115.0], [1116.0]])], [s0(p0: [[1117.0]], p1: [[1118.0], [1119.0], [1120.0]])]], p1: s0(p0: [[1121.0]], p1: [[1122.0], [1123.0], [1124.0]])))])], [s4(p0: s3(p0: s2(p0: [s0(p0: [[1125.0]], p1: [[1126.0], [1127.0], [1128.0]]), s0(p0: [[1129.0]], p1: [[1130.0], [1131.0], [1132.0]])], p1: [[s0(p0: [[1133.0]], p1: [[1134.0], [1135.0], [1136.0]])]], p2: s1(p0: [[s0(p0: [[1137.0]], p1: [[1138.0], [1139.0], [1140.0]])], [s0(p0: [[1141.0]], p1: [[1142.0], [1143.0], [1144.0]])], [s0(p0: [[1145.0]], p1: [[1146.0], [1147.0], [1148.0]])]], p1: s0(p0: [[1149.0]], p1: [[1150.0], [1151.0], [1152.0]])), p3: 1153.0, p4: s1(p0: [[s0(p0: [[1154.0]], p1: [[1155.0], [1156.0], [1157.0]])], [s0(p0: [[1158.0]], p1: [[1159.0], [1160.0], [1161.0]])], [s0(p0: [[1162.0]], p1: [[1163.0], [1164.0], [1165.0]])]], p1: s0(p0: [[1166.0]], p1: [[1167.0], [1168.0], [1169.0]])))), p1: [s2(p0: [s0(p0: [[1170.0]], p1: [[1171.0], [1172.0], [1173.0]]), s0(p0: [[1174.0]], p1: [[1175.0], [1176.0], [1177.0]])], p1: [[s0(p0: [[1178.0]], p1: [[1179.0], [1180.0], [1181.0]])]], p2: s1(p0: [[s0(p0: [[1182.0]], p1: [[1183.0], [1184.0], [1185.0]])], [s0(p0: [[1186.0]], p1: [[1187.0], [1188.0], [1189.0]])], [s0(p0: [[1190.0]], p1: [[1191.0], [1192.0], [1193.0]])]], p1: s0(p0: [[1194.0]], p1: [[1195.0], [1196.0], [1197.0]])), p3: 1198.0, p4: s1(p0: [[s0(p0: [[1199.0]], p1: [[1200.0], [1201.0], [1202.0]])], [s0(p0: [[1203.0]], p1: [[1204.0], [1205.0], [1206.0]])], [s0(p0: [[1207.0]], p1: [[1208.0], [1209.0], [1210.0]])]], p1: s0(p0: [[1211.0]], p1: [[1212.0], [1213.0], [1214.0]])))])], [s4(p0: s3(p0: s2(p0: [s0(p0: [[1215.0]], p1: [[1216.0], [1217.0], [1218.0]]), s0(p0: [[1219.0]], p1: [[1220.0], [1221.0], [1222.0]])], p1: [[s0(p0: [[1223.0]], p1: [[1224.0], [1225.0], [1226.0]])]], p2: s1(p0: [[s0(p0: [[1227.0]], p1: [[1228.0], [1229.0], [1230.0]])], [s0(p0: [[1231.0]], p1: [[1232.0], [1233.0], [1234.0]])], [s0(p0: [[1235.0]], p1: [[1236.0], [1237.0], [1238.0]])]], p1: s0(p0: [[1239.0]], p1: [[1240.0], [1241.0], [1242.0]])), p3: 1243.0, p4: s1(p0: [[s0(p0: [[1244.0]], p1: [[1245.0], [1246.0], [1247.0]])], [s0(p0: [[1248.0]], p1: [[1249.0], [1250.0], [1251.0]])], [s0(p0: [[1252.0]], p1: [[1253.0], [1254.0], [1255.0]])]], p1: s0(p0: [[1256.0]], p1: [[1257.0], [1258.0], [1259.0]])))), p1: [s2(p0: [s0(p0: [[1260.0]], p1: [[1261.0], [1262.0], [1263.0]]), s0(p0: [[1264.0]], p1: [[1265.0], [1266.0], [1267.0]])], p1: [[s0(p0: [[1268.0]], p1: [[1269.0], [1270.0], [1271.0]])]], p2: s1(p0: [[s0(p0: [[1272.0]], p1: [[1273.0], [1274.0], [1275.0]])], [s0(p0: [[1276.0]], p1: [[1277.0], [1278.0], [1279.0]])], [s0(p0: [[1280.0]], p1: [[1281.0], [1282.0], [1283.0]])]], p1: s0(p0: [[1284.0]], p1: [[1285.0], [1286.0], [1287.0]])), p3: 1288.0, p4: s1(p0: [[s0(p0: [[1289.0]], p1: [[1290.0], [1291.0], [1292.0]])], [s0(p0: [[1293.0]], p1: [[1294.0], [1295.0], [1296.0]])], [s0(p0: [[1297.0]], p1: [[1298.0], [1299.0], [1300.0]])]], p1: s0(p0: [[1301.0]], p1: [[1302.0], [1303.0], [1304.0]])))])]], p5: s1(p0: [[s0(p0: [[1305.0]], p1: [[1306.0], [1307.0], [1308.0]])], [s0(p0: [[1309.0]], p1: [[1310.0], [1311.0], [1312.0]])], [s0(p0: [[1313.0]], p1: [[1314.0], [1315.0], [1316.0]])]], p1: s0(p0: [[1317.0]], p1: [[1318.0], [1319.0], [1320.0]])), p6: [[s1(p0: [[s0(p0: [[1321.0]], p1: [[1322.0], [1323.0], [1324.0]])], [s0(p0: [[1325.0]], p1: [[1326.0], [1327.0], [1328.0]])], [s0(p0: [[1329.0]], p1: [[1330.0], [1331.0], [1332.0]])]], p1: s0(p0: [[1333.0]], p1: [[1334.0], [1335.0], [1336.0]]))], [s1(p0: [[s0(p0: [[1337.0]], p1: [[1338.0], [1339.0], [1340.0]])], [s0(p0: [[1341.0]], p1: [[1342.0], [1343.0], [1344.0]])], [s0(p0: [[1345.0]], p1: [[1346.0], [1347.0], [1348.0]])]], p1: s0(p0: [[1349.0]], p1: [[1350.0], [1351.0], [1352.0]]))], [s1(p0: [[s0(p0: [[1353.0]], p1: [[1354.0], [1355.0], [1356.0]])], [s0(p0: [[1357.0]], p1: [[1358.0], [1359.0], [1360.0]])], [s0(p0: [[1361.0]], p1: [[1362.0], [1363.0], [1364.0]])]], p1: s0(p0: [[1365.0]], p1: [[1366.0], [1367.0], [1368.0]]))]])]
    let v2: Double = 1369.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1369.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
