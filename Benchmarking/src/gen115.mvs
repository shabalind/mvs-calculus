  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f87: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p1 in
    let v2: [Float] = v5[0] in
    let v7: [[Float]] = v0.p0 in
    var v35: s0 = v0 in
    v35.p1 = v5 in
    var v24: s0 = v0 in
    v24.p1 = v5 in
    let v43: [[Float]] = v24.p1 in
    var v39: s0 = v0 in
    v39.p1 = v5 in
    let v20: [[Float]] = v0.p0 in
    let v26: [[Float]] = v24.p0 in
    v35.p0 = v26 in
    var v50: [[Float]] = v20 in
    v24.p0 = v20 in
    v39 = v35 in
    var v54: [[Float]] = v43 in
    let v58: [[Float]] = v0.p0 in
    v35.p1 = v43 in
    v39.p1 = v54 in
    v35.p0 = v7 in
    v35 = v24 in
    v24.p0 = v50 in
    let v112: [[Float]] = v0.p1 in
    v35.p0 = v58 in
    v39.p1 = v43 in
    var v79: [[Float]] = v43 in
    var v105: s0 = v39 in
    v39.p1 = v112 in
    v35.p1 = v5 in
    v79[0] = v2 in
    let v252: [[Float]] = v39.p1 in
    v105.p1 = v79 in
    v39.p1 = v252 in
    v105
  } in
  let f82: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    var v7: s0 = v0 in
    let v10: s0 = f87(v1) in
    let v4: [[Float]] = v0.p1 in
    let v5: s0 = f87(v1) in
    let v8: [[Float]] = v7.p1 in
    var v3: [[Float]] = v8 in
    let v6: [Float] = v3[0] in
    var v9: [[Float]] = v4 in
    var v11: [Float] = v6 in
    var v2: [Float] = v11 in
    v9[0] = v6 in
    let v15: [[Float]] = v5.p1 in
    v9[0] = v2 in
    v7.p1 = v15 in
    v3[0] = v6 in
    v7.p1 = v3 in
    v7.p1 = v8 in
    let v22: Float = v2[0] in
    let v19: s0 = f87(v1) in
    v2 = v11 in
    let v14: [Float] = v4[0] in
    v7.p1 = v9 in
    let v81: [[Float]] = [v6, v2, v11, v14, v11] in
    v9 = v8 in
    var v23: Float = v22 in
    let v42: [Float] = v81[0] in
    let v27: [[Float]] = v19.p0 in
    v3 = v15 in
    var v33: [Float] = v14 in
    v7.p1 = v9 in
    let v26: [[Float]] = v10.p0 in
    var v21: [[Float]] = v26 in
    v7.p0 = v21 in
    v3[0] = v33 in
    v9[0] = v2 in
    v3[0] = v42 in
    let v61: s0 = f87(v7) in
    var v28: s0 = v61 in
    v2[0] = v23 in
    v7.p0 = v27 in
    v28
  } in
  let f59: (s0) -> s0 = (v0: s0) -> s0 {
    var v8: s0 = v0 in
    var v6: s0 = v0 in
    var v4: s0 = v0 in
    let v7: [[Float]] = v4.p1 in
    let v1: [[Float]] = v6.p0 in
    let v10: [Float] = v7[0] in
    let v5: s0 = f82(v4, v6) in
    var v2: [[Float]] = v7 in
    let v3: [Float] = v1[1] in
    let v11: s0 = f87(v0) in
    let v13: s0 = f87(v5) in
    v6.p0 = v1 in
    let v12: [[Float]] = v0.p0 in
    v2[0] = v10 in
    let v17: s0 = f82(v5, v11) in
    v6.p0 = v12 in
    let v22: [[Float]] = v13.p0 in
    let v24: [Float] = v12[0] in
    let v34: s0 = f82(v17, v8) in
    let v26: [[Float]] = v6.p0 in
    v8.p0 = v12 in
    var v30: [Float] = v10 in
    var v16: [Float] = v30 in
    var v27: [Float] = v16 in
    let v31: Float = v3[0] in
    v8.p1 = v2 in
    v8.p0 = v26 in
    v6.p0 = v22 in
    let v57: s0 = f87(v6) in
    let v52: [[Float]] = v8.p1 in
    v6.p1 = v52 in
    v6.p0 = v1 in
    let v96: s0 = f82(v34, v8) in
    v27[0] = v31 in
    let v72: [[Float]] = v57.p1 in
    v4.p1 = v72 in
    let v62: [[Float]] = v0.p1 in
    v2[0] = v24 in
    v8.p0 = v26 in
    v16[0] = v31 in
    v2[0] = v27 in
    v4.p1 = v62 in
    v96
  } in
  let f52: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    let v4: s0 = v0[0] in
    let v7: [[Float]] = v4.p0 in
    let v11: s0 = f82(v4, v4) in
    let v5: [[Float]] = v11.p1 in
    var v2: [s0] = v0 in
    let v9: s0 = f82(v4, v4) in
    let v15: s0 = s0(v7, v5) in
    let v18: s0 = f59(v15) in
    let v20: s0 = f59(v9) in
    v2[0] = v15 in
    var v69: [s0] = v2 in
    v69[0] = v20 in
    v69[0] = v18 in
    v69
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v3: [Float] = [v1, v1, v1] in
    let v7: Float = v3[2] in
    let v22: [s0] = v0[0] in
    var v13: Float = v7 in
    var v10: Float = v1 in
    var v12: Float = v13 in
    let v28: [s0] = f52(v22) in
    let v15: s0 = v28[0] in
    let v35: Float = v1 - v12 in
    let v55: Float = v35 * v12 in
    let v36: [[Float]] = v15.p0 in
    v13 = v10 in
    let v58: [Float] = v36[0] in
    let v34: Float = v58[0] in
    let v87: Float = v55 * v34 in
    v87
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0]], [[2.0]])], [s0([[3.0], [4.0]], [[5.0]])], [s0([[6.0], [7.0]], [[8.0]])]] in
    let v1: Float = 9.0 in
    let initialResult: Float = 9.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()