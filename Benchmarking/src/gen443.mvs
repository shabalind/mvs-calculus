  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
    var p2: s0
  } in
  struct s3 {
    var p0: [s0]
    var p1: [[s1]]
  } in
  let f72: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [s0] = [v0] in
    let v1: s0 = v3[0] in
    let v7: s0 = v3[0] in
    let v4: [[Float]] = v1.p0 in
    let v11: [[Float]] = v1.p1 in
    var v5: [[Float]] = v4 in
    let v2: [[Float]] = v0.p0 in
    var v23: s0 = v7 in
    v23.p1 = v11 in
    v23.p0 = v5 in
    v23.p0 = v4 in
    v23.p0 = v5 in
    v23.p0 = v4 in
    let v30: [[Float]] = v23.p1 in
    let v18: s0 = s0(v4, v30) in
    v23.p0 = v4 in
    let v32: [[Float]] = v18.p0 in
    v23.p0 = v2 in
    var v89: s0 = v18 in
    v23.p0 = v32 in
    v89
  } in
  let f70: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s0 = f72(v0) in
    let v6: [[Float]] = v0.p1 in
    var v3: [[Float]] = v6 in
    let v8: [[Float]] = v0.p1 in
    var v7: s0 = v1 in
    v7.p1 = v8 in
    var v21: [[Float]] = v8 in
    let v12: [[Float]] = v7.p0 in
    var v15: [[Float]] = v12 in
    let v17: [Float] = v3[0] in
    var v11: [[Float]] = v21 in
    var v10: [Float] = v17 in
    let v14: [Float] = v11[0] in
    v21[0] = v14 in
    let v34: [Float] = v12[0] in
    let v35: s0 = s0(v15, v3) in
    let v42: Float = v10[0] in
    v7.p1 = v11 in
    v21[0] = v10 in
    var v20: Float = v42 in
    let v74: Float = v20 * v42 in
    v11[0] = v34 in
    let v94: s0 = f72(v35) in
    v3[0] = v14 in
    v10[0] = v74 in
    v94
  } in
  let noinline_f0: (s0, s3, Float) -> Float = (v0: s0, v1: s3, v2: Float) -> Float {
    let v6: s0 = f70(v0) in
    let v19: [[Float]] = v6.p1 in
    let v11: [Float] = v19[0] in
    let v16: Float = v11[0] in
    let v26: Float = v2 + v16 in
    v26
  } in
  fun loop(i: Int, v0: s0, v1: s3, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0]]) in
    let v1: s3 = s3([s0([[3.0], [4.0]], [[5.0]])], [[s1([s0([[6.0], [7.0]], [[8.0]])], [s0([[9.0], [10.0]], [[11.0]]), s0([[12.0], [13.0]], [[14.0]]), s0([[15.0], [16.0]], [[17.0]])], s0([[18.0], [19.0]], [[20.0]]))]]) in
    let v2: Float = 21.0 in
    let initialResult: Float = 21.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()