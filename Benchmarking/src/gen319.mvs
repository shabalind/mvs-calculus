  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s3 {
    var p0: [s0]
    var p1: s1
  } in
  struct s7 {
    var p0: [s3]
    var p1: [[s1]]
  } in
  let f39: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    var v3: Float = v1 in
    let v8: [[Float]] = v0.p1 in
    let v2: [[Float]] = v0.p1 in
    let v5: [Float] = v8[1] in
    var v10: s0 = v0 in
    v10.p0 = v2 in
    var v7: s0 = v10 in
    var v6: s0 = v7 in
    var v4: s0 = v10 in
    let v9: s0 = s0(v2, v8) in
    let v13: Float = v1 + v1 in
    let v11: [[Float]] = v0.p0 in
    v10.p0 = v11 in
    let v22: [Float] = v2[0] in
    let v21: Float = v5[0] in
    var v18: [Float] = v22 in
    var v55: Float = v21 in
    var v23: s0 = v6 in
    let v14: s0 = s0(v8, v11) in
    let v24: [[Float]] = v14.p1 in
    let v35: Float = v13 + v13 in
    let v44: [[Float]] = v23.p0 in
    var v26: Float = v1 in
    v18[0] = v3 in
    let v17: Float = v18[0] in
    let v27: [[Float]] = v9.p1 in
    let v33: [[Float]] = v4.p1 in
    let v34: Float = v26 + v35 in
    v18[0] = v26 in
    let v32: [[Float]] = v10.p0 in
    v18[0] = v26 in
    let v31: [Float] = v32[1] in
    let v25: [[Float]] = v23.p0 in
    v18[0] = v55 in
    var v80: [Float] = v5 in
    v23.p1 = v27 in
    v18[0] = v55 in
    let v50: [Float] = v24[1] in
    v18[0] = v34 in
    v26 = v55 in
    var v100: Float = v17 in
    var v49: [[Float]] = v33 in
    v7.p1 = v25 in
    var v58: [[Float]] = v2 in
    let v61: [[Float]] = v7.p0 in
    let v56: [Float] = v61[1] in
    v58[1] = v18 in
    let v29: [[Float]] = v4.p1 in
    v58[0] = v31 in
    v18[0] = v3 in
    let v121: Float = v18[0] in
    var v107: Float = v121 in
    v49[1] = v80 in
    let v81: Float = v13 / v100 in
    v23.p1 = v44 in
    v10.p1 = v29 in
    let v75: [[Float]] = v7.p0 in
    v26 = v107 in
    let v148: [[Float]] = v9.p0 in
    let v86: Float = v56[0] in
    var v130: Float = v86 in
    v7.p1 = v58 in
    let v122: [[Float]] = v7.p1 in
    v6.p1 = v75 in
    v58[0] = v80 in
    v18[0] = v130 in
    v49[1] = v31 in
    v7.p0 = v122 in
    v58[1] = v50 in
    v49[1] = v31 in
    v80[0] = v55 in
    v49[0] = v18 in
    v23.p1 = v49 in
    v7.p1 = v49 in
    v4.p0 = v148 in
    v81
  } in
  let f27: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v7: Float = v6 in
    let v2: [Float] = [v7, v6, v7, v7, v6, v0, v7] in
    let v4: Float = v2[2] in
    let v32: [[Float]] = [v2] in
    var v16: [[Float]] = v32 in
    var v14: [[Float]] = v16 in
    let v15: [Float] = v14[0] in
    var v22: [Float] = v15 in
    var v21: [[Float]] = v16 in
    v21[0] = v22 in
    var v20: [Float] = v22 in
    let v26: Float = v20[3] in
    let v78: [Float] = v32[0] in
    v22[6] = v4 in
    let v24: Float = v22[2] in
    v6 = v26 in
    v14[0] = v78 in
    v16[0] = v2 in
    v20[5] = v24 in
    v16[0] = v78 in
    let v35: [Float] = v21[0] in
    v16[0] = v22 in
    v14[0] = v78 in
    v14[0] = v2 in
    let v220: Float = v35[4] in
    v220
  } in
  let noinline_f0: (s7, s0, Float) -> Float = (v0: s7, v1: s0, v2: Float) -> Float {
    let v3: Float = f39(v1, v2) in
    let v19: Float = f27(v3) in
    v19
  } in
  fun loop(i: Int, v0: s7, v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s7 = s7([s3([s0([[0.0], [1.0]], [[2.0], [3.0]]), s0([[4.0], [5.0]], [[6.0], [7.0]]), s0([[8.0], [9.0]], [[10.0], [11.0]])], s1([s0([[12.0], [13.0]], [[14.0], [15.0]]), s0([[16.0], [17.0]], [[18.0], [19.0]])], [s0([[20.0], [21.0]], [[22.0], [23.0]])]))], [[s1([s0([[24.0], [25.0]], [[26.0], [27.0]]), s0([[28.0], [29.0]], [[30.0], [31.0]])], [s0([[32.0], [33.0]], [[34.0], [35.0]])])], [s1([s0([[36.0], [37.0]], [[38.0], [39.0]]), s0([[40.0], [41.0]], [[42.0], [43.0]])], [s0([[44.0], [45.0]], [[46.0], [47.0]])])], [s1([s0([[48.0], [49.0]], [[50.0], [51.0]]), s0([[52.0], [53.0]], [[54.0], [55.0]])], [s0([[56.0], [57.0]], [[58.0], [59.0]])])]]) in
    let v1: s0 = s0([[60.0], [61.0]], [[62.0], [63.0]]) in
    let v2: Float = 64.0 in
    let initialResult: Float = 64.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()