  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f8: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v6: [[Float]] = v3.p0 in
    var v4: [[Float]] = v6 in
    let v7: [Float] = v4[1] in
    let v5: [[Float]] = v3.p0 in
    let v1: [[Float]] = [v7, v7] in
    v4[1] = v7 in
    let v9: Float = v7[0] in
    v3.p0 = v6 in
    let v8: [[Float]] = v3.p1 in
    v4[1] = v7 in
    var v13: [Float] = v7 in
    let v14: [Float] = v6[0] in
    let v10: [Float] = v1[1] in
    v3.p1 = v8 in
    v4[0] = v14 in
    v13[0] = v9 in
    let v20: Float = v7[0] in
    v4 = v6 in
    let v35: Float = v14[0] in
    let v17: [[Float]] = v3.p0 in
    let v21: [[Float]] = v3.p1 in
    let v15: [[Float]] = v3.p1 in
    v13[0] = v9 in
    let v19: [[Float]] = v3.p1 in
    let v25: [Float] = v19[0] in
    v3.p1 = v8 in
    let v60: [[Float]] = v3.p0 in
    v3.p0 = v1 in
    v3.p0 = v60 in
    v3.p0 = v17 in
    let v30: [[Float]] = v0.p1 in
    let v39: [Float] = v21[0] in
    var v31: [[Float]] = v30 in
    let v42: Float = v35 * v20 in
    v4[1] = v25 in
    var v22: [Float] = v13 in
    var v36: [[Float]] = v15 in
    v3.p0 = v6 in
    var v24: Float = v9 in
    let v34: Float = v35 - v9 in
    let v50: [[[Float]]] = [v36, v15, v30, v8, v31, v31] in
    v36[0] = v10 in
    v36[0] = v14 in
    var v32: [[Float]] = v31 in
    let v112: [[Float]] = v50[2] in
    v31 = v32 in
    v3.p1 = v31 in
    let v87: Float = v10[0] in
    let v74: [Float] = [v42, v24, v34, v20, v87] in
    let v59: Float = v74[2] in
    let v57: s0 = s0(v5, v112) in
    v31[0] = v22 in
    v31[0] = v39 in
    v13[0] = v59 in
    v3.p1 = v21 in
    v57
  } in
  let f6: (s0, s0, [s0], s0, [s0], s0, s0, s0) -> s0 = (v0: s0, v1: s0, v2: [s0], v3: s0, v4: [s0], v5: s0, v6: s0, v7: s0) -> s0 {
    let v9: [[Float]] = v3.p1 in
    let v16: [[Float]] = v3.p0 in
    let v8: [[Float]] = v7.p1 in
    let v23: [[Float]] = v5.p0 in
    let v28: s0 = f8(v0) in
    let v31: [Float] = v23[1] in
    let v51: s0 = f8(v28) in
    let v35: s0 = s0(v23, v9) in
    let v91: s0 = f8(v51) in
    let v76: [[Float]] = v35.p0 in
    let v60: s0 = s0(v76, v8) in
    let v41: [[Float]] = v91.p1 in
    var v65: [[Float]] = v9 in
    var v197: s0 = v60 in
    v197.p1 = v41 in
    v197.p0 = v16 in
    v65[0] = v31 in
    v197.p1 = v65 in
    v197
  } in
  let f4: ([s0], s0, [s0], s0, [s0], s0, [s0], [s0]) -> s0 = (v0: [s0], v1: s0, v2: [s0], v3: s0, v4: [s0], v5: s0, v6: [s0], v7: [s0]) -> s0 {
    var v14: [s0] = v2 in
    let v9: s0 = f8(v3) in
    let v10: s0 = f8(v5) in
    let v8: [[Float]] = v10.p0 in
    let v15: [Float] = v8[1] in
    v14[0] = v3 in
    var v36: [Float] = v15 in
    let v23: [[Float]] = v1.p0 in
    let v18: s0 = f8(v10) in
    let v19: s0 = v6[0] in
    let v20: s0 = f8(v9) in
    let v28: s0 = f8(v10) in
    let v46: s0 = v6[0] in
    var v33: [[Float]] = v23 in
    v14[2] = v18 in
    var v42: [Float] = v36 in
    let v34: s0 = v14[2] in
    let v31: [[Float]] = v28.p1 in
    let v24: [[Float]] = v34.p0 in
    v33[0] = v15 in
    let v40: s0 = f8(v19) in
    var v25: s0 = v40 in
    v14[2] = v20 in
    let v32: [[Float]] = v5.p1 in
    v25 = v5 in
    let v85: [[Float]] = v25.p1 in
    var v91: [[Float]] = v85 in
    let v68: [[Float]] = v5.p1 in
    let v73: [[Float]] = v46.p0 in
    let v41: [[Float]] = v25.p0 in
    v25.p1 = v32 in
    v25.p1 = v68 in
    v25.p0 = v73 in
    let v82: s0 = s0(v24, v91) in
    v91[0] = v42 in
    v25.p0 = v41 in
    v25.p1 = v31 in
    v25.p0 = v33 in
    v82
  } in
  let noinline_f0: ([s0], [s0], s0, [s0], Float) -> Float = (v0: [s0], v1: [s0], v2: s0, v3: [s0], v4: Float) -> Float {
    var v8: [s0] = v0 in
    let v5: s0 = v8[0] in
    let v9: [[Float]] = v5.p0 in
    let v10: s0 = v3[1] in
    let v11: [[Float]] = v5.p0 in
    let v15: s0 = v8[0] in
    let v6: [Float] = v11[0] in
    let v27: s0 = v8[0] in
    v8[0] = v15 in
    let v12: [[Float]] = v2.p1 in
    let v13: s0 = f6(v2, v15, v0, v5, v3, v15, v5, v2) in
    let v30: s0 = s0(v9, v12) in
    let v25: s0 = f4(v1, v15, v3, v2, v1, v27, v1, v1) in
    var v21: s0 = v30 in
    let v16: [[Float]] = v10.p1 in
    let v40: [[Float]] = v13.p1 in
    let v23: Float = v6[0] in
    let v24: Float = v23 + v4 in
    v21.p1 = v12 in
    v21.p1 = v40 in
    v21.p1 = v16 in
    let v43: [[Float]] = v25.p1 in
    v21.p1 = v43 in
    v21.p0 = v11 in
    v21.p1 = v43 in
    v8[0] = v21 in
    v24
  } in
  fun loop(i: Int, v0: [s0], v1: [s0], v2: s0, v3: [s0], v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0], [1.0]], [[2.0]])] in
    let v1: [s0] = [s0([[3.0], [4.0]], [[5.0]]), s0([[6.0], [7.0]], [[8.0]])] in
    let v2: s0 = s0([[9.0], [10.0]], [[11.0]]) in
    let v3: [s0] = [s0([[12.0], [13.0]], [[14.0]]), s0([[15.0], [16.0]], [[17.0]]), s0([[18.0], [19.0]], [[20.0]])] in
    let v4: Float = 21.0 in
    let initialResult: Float = 21.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()