  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f39: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v4: Float = v3 in
    var v2: Float = v3 in
    var v1: Float = v0 in
    var v13: Float = v0 in
    var v6: Float = v1 in
    var v10: Float = v3 in
    var v5: Float = v6 in
    let v16: [Float] = [v6, v2, v2, v5, v3, v4, v5] in
    let v15: Float = v16[5] in
    var v12: [Float] = v16 in
    let v35: [[Float]] = [v12, v16, v16, v12, v16, v12, v12] in
    let v19: [[Float]] = [v12, v16, v12, v16, v16, v12, v12] in
    v12[4] = v4 in
    var v24: Float = v15 in
    var v14: [Float] = v12 in
    let v37: [Float] = v19[1] in
    v14[5] = v4 in
    let v31: Float = v12[4] in
    let v23: [Float] = v19[0] in
    let v45: [Float] = v19[4] in
    var v40: [[Float]] = v35 in
    v12[4] = v15 in
    v40[2] = v45 in
    v14[5] = v6 in
    let v32: [[[Float]]] = [v40, v35, v19, v40] in
    v40[6] = v14 in
    var v18: [[[Float]]] = v32 in
    let v28: [Float] = v19[6] in
    v40[0] = v28 in
    let v22: [[Float]] = v18[3] in
    v13 = v24 in
    let v62: [[Float]] = v32[2] in
    let v52: Float = v4 - v2 in
    let v27: [Float] = v35[6] in
    v18[3] = v19 in
    v10 = v3 in
    var v59: [Float] = v14 in
    let v51: [Float] = v62[2] in
    v14[3] = v10 in
    let v85: Float = v16[4] in
    v12[1] = v13 in
    let v36: Float = v51[6] in
    v59[3] = v24 in
    let v109: [Float] = v22[5] in
    v12 = v51 in
    let v47: Float = v37[4] in
    v40[0] = v28 in
    v1 = v85 in
    v18[2] = v19 in
    let v79: [[Float]] = [v27, v23, v59, v109, v12] in
    let v170: [Float] = v79[4] in
    v5 = v31 in
    let v179: Float = v170[2] in
    v13 = v52 in
    v12[6] = v47 in
    v14[1] = v10 in
    let v185: Float = v36 - v179 in
    v185
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    var v4: Float = v1 in
    let v7: [[Float]] = v0.p0 in
    let v8: [Float] = v7[0] in
    let v11: Float = f39(v1) in
    let v21: Float = f39(v11) in
    let v12: Float = v8[0] in
    v4 = v12 in
    var v50: Float = v4 in
    let v34: [[Float]] = v0.p1 in
    let v39: [Float] = v34[0] in
    var v175: [Float] = v39 in
    let v124: Float = v175[0] in
    var v77: Float = v21 in
    let v166: Float = f39(v50) in
    v77 = v124 in
    v175[0] = v166 in
    v77
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0]]) in
    let v1: Float = 3.0 in
    let initialResult: Float = 3.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()