  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: [s1]
  } in
  let f85: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v5: [s0] = v0 in
    var v4: [s0] = v5 in
    let v1: s0 = v4[0] in
    v4[0] = v1 in
    var v3: s0 = v1 in
    let v9: [[Float]] = v3.p1 in
    var v17: [s0] = v4 in
    let v15: [[Float]] = v3.p0 in
    v17[0] = v1 in
    var v23: [[Float]] = v9 in
    v5 = v17 in
    v3.p1 = v15 in
    v3.p0 = v23 in
    v4[0] = v3 in
    v17
  } in
  let f77: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p0 in
    var v7: [[Float]] = v5 in
    var v1: s0 = v0 in
    v1.p0 = v5 in
    var v3: [[Float]] = v5 in
    let v4: s0 = s0(v5, v3) in
    v1.p1 = v3 in
    let v6: [[Float]] = v1.p0 in
    let v12: [[Float]] = v0.p0 in
    v7 = v6 in
    v1.p0 = v7 in
    v1.p0 = v12 in
    let v33: [[Float]] = v4.p0 in
    v1.p0 = v3 in
    var v29: [[Float]] = v12 in
    v1.p1 = v33 in
    let v41: [[Float]] = v0.p1 in
    let v70: [[Float]] = v1.p0 in
    v1.p0 = v29 in
    v1.p1 = v41 in
    let v58: s0 = s0(v70, v33) in
    v1.p0 = v70 in
    v1.p0 = v41 in
    v58
  } in
  let f40: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v3: [s0] = v0 in
    let v2: [s0] = f85(v0) in
    let v5: s0 = v3[0] in
    let v1: [[Float]] = v5.p1 in
    var v6: [[Float]] = v1 in
    let v4: [Float] = v6[1] in
    let v13: [[Float]] = v5.p0 in
    let v8: s0 = f77(v5) in
    let v10: s0 = v3[0] in
    let v11: [[Float]] = v8.p1 in
    var v12: s0 = v8 in
    let v14: [[Float]] = v10.p1 in
    v12.p0 = v14 in
    let v22: [[Float]] = v8.p1 in
    let v19: [s0] = f85(v2) in
    v12.p0 = v11 in
    v12.p1 = v13 in
    v6[0] = v4 in
    v12.p1 = v22 in
    let v30: [[Float]] = v10.p0 in
    v12.p1 = v1 in
    v3[0] = v10 in
    v12.p0 = v6 in
    var v29: s0 = v8 in
    v6[1] = v4 in
    let v39: s0 = s0(v6, v30) in
    let v38: s0 = f77(v29) in
    let v51: [[Float]] = v12.p1 in
    let v34: [s0] = f85(v19) in
    let v59: [Float] = v51[1] in
    v3[0] = v5 in
    v6[2] = v59 in
    v29.p0 = v14 in
    v29.p1 = v1 in
    v29.p1 = v30 in
    let v109: [[Float]] = v38.p0 in
    let v105: s0 = s0(v6, v6) in
    let v150: [s0] = f85(v34) in
    v12.p1 = v11 in
    v12.p1 = v14 in
    v12 = v39 in
    var v89: [s0] = v150 in
    v29.p1 = v109 in
    v89[0] = v105 in
    v3[0] = v29 in
    v12.p1 = v1 in
    v29.p0 = v13 in
    v89
  } in
  let noinline_f0: (s3, [s0], Float) -> Float = (v0: s3, v1: [s0], v2: Float) -> Float {
    let v3: [s0] = f40(v1) in
    let v4: s0 = v3[0] in
    let v10: [[Float]] = v4.p0 in
    let v23: [Float] = v10[0] in
    let v105: Float = v23[0] in
    v105
  } in
  fun loop(i: Int, v0: s3, v1: [s0], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), [s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])])]) in
    let v1: [s0] = [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])] in
    let v2: Float = 30.0 in
    let initialResult: Float = 30.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()