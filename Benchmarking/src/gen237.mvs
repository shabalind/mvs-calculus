  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: s1
    var p1: [Float]
  } in
  struct s4 {
    var p0: [s0]
    var p1: [s3]
  } in
  struct s5 {
    var p0: s3
    var p1: s2
  } in
  struct s6 {
    var p0: s3
    var p1: s2
  } in
  struct s7 {
    var p0: [s6]
    var p1: [[s3]]
  } in
  struct s10 {
    var p0: s4
    var p1: [s1]
  } in
  let f12: ([s3]) -> [s3] = (v0: [s3]) -> [s3] {
    var v2: [s3] = v0 in
    v2
  } in
  let f11: (s4, s2) -> s4 = (v0: s4, v1: s2) -> s4 {
    let v4: [s0] = v0.p0 in
    let v11: s0 = v4[0] in
    let v7: s0 = v4[0] in
    let v15: s0 = v4[0] in
    var v13: [s0] = v4 in
    v13 = v4 in
    var v29: [s0] = v4 in
    let v16: [s3] = v0.p1 in
    let v34: [s0] = v1.p0 in
    v13[1] = v7 in
    v13[0] = v11 in
    let v58: s0 = v34[0] in
    v29[1] = v58 in
    v29[0] = v15 in
    let v78: s0 = v34[0] in
    v29[1] = v78 in
    let v41: [s3] = f12(v16) in
    var v82: s4 = v0 in
    var v62: s0 = v58 in
    let v59: s4 = s4(v29, v41) in
    let v100: [[Float]] = v62.p1 in
    v29[1] = v62 in
    let v123: [s0] = v59.p0 in
    v82.p0 = v13 in
    v82.p0 = v123 in
    v62.p1 = v100 in
    v82
  } in
  let f7: (s3) -> s3 = (v0: s3) -> s3 {
    let v5: [Float] = v0.p1 in
    let v1: [Float] = v0.p1 in
    var v3: s3 = v0 in
    let v7: [Float] = v3.p1 in
    let v8: [Float] = v3.p1 in
    let v10: s1 = v0.p0 in
    var v9: s1 = v10 in
    let v6: [Float] = v0.p1 in
    var v16: s3 = v3 in
    let v13: [[s0]] = v9.p0 in
    v3.p0 = v10 in
    let v20: s1 = v16.p0 in
    let v17: [s0] = v13[1] in
    let v22: s0 = v17[0] in
    var v35: [[s0]] = v13 in
    var v25: s1 = v9 in
    let v24: [[Float]] = v22.p1 in
    v9.p0 = v13 in
    v16.p1 = v6 in
    let v30: [s0] = v35[0] in
    v25.p0 = v35 in
    let v29: s3 = s3(v25, v1) in
    var v69: s3 = v3 in
    var v43: [[Float]] = v24 in
    var v44: s0 = v22 in
    let v33: [Float] = v29.p1 in
    let v34: [s0] = v13[1] in
    let v27: [[s0]] = v25.p0 in
    let v54: [[s0]] = v20.p1 in
    let v39: [[Float]] = [v33, v7, v6, v8, v1] in
    let v56: s2 = s2(v30, v44) in
    v25.p1 = v54 in
    let v47: [Float] = v39[1] in
    v3.p0 = v25 in
    let v81: [s0] = v27[0] in
    var v37: [[Float]] = v39 in
    let v107: [Float] = v37[1] in
    v25.p1 = v54 in
    var v60: s0 = v22 in
    let v32: s6 = s6(v69, v56) in
    var v75: [[s0]] = v27 in
    let v48: s2 = v32.p1 in
    let v65: [s0] = v54[1] in
    v35[2] = v65 in
    v9.p1 = v54 in
    v37[3] = v47 in
    var v71: s2 = v48 in
    v69.p1 = v107 in
    let v101: [[[s0]]] = [v75] in
    v75[0] = v65 in
    v44.p1 = v43 in
    let v82: [[s0]] = v101[0] in
    let v120: [[Float]] = v60.p1 in
    v16.p1 = v5 in
    v69.p1 = v5 in
    v25.p0 = v82 in
    v71.p0 = v30 in
    let v317: s5 = s5(v69, v71) in
    v75[1] = v34 in
    v75[2] = v81 in
    let v176: s3 = v317.p0 in
    v44.p1 = v120 in
    v176
  } in
  let f6: (s2) -> s2 = (v0: s2) -> s2 {
    var v8: s2 = v0 in
    v8 = v0 in
    let v1: [s0] = v0.p0 in
    let v3: s0 = v1[0] in
    let v7: s0 = v1[0] in
    let v10: [s0] = v8.p0 in
    let v5: s0 = v10[0] in
    let v6: [[Float]] = v7.p0 in
    let v30: [s0] = v0.p0 in
    var v9: [s0] = v30 in
    v9[0] = v3 in
    var v13: s0 = v3 in
    let v16: [[Float]] = v5.p0 in
    var v11: [s0] = v9 in
    let v14: s2 = s2(v9, v5) in
    let v29: s0 = v11[0] in
    let v12: s0 = v10[0] in
    v11[0] = v12 in
    let v34: [[Float]] = v12.p0 in
    let v18: s0 = v30[0] in
    var v60: s0 = v13 in
    v9[0] = v60 in
    var v38: s0 = v60 in
    v9[0] = v60 in
    v13.p0 = v6 in
    let v44: [[Float]] = v12.p1 in
    v11[0] = v18 in
    let v35: [[Float]] = v13.p0 in
    let v40: [Float] = v34[1] in
    let v26: [[Float]] = v29.p1 in
    var v46: [[Float]] = v26 in
    let v69: s0 = v14.p1 in
    v38.p1 = v46 in
    v9[0] = v38 in
    var v86: s0 = v69 in
    v86.p0 = v6 in
    v9[0] = v86 in
    v13.p1 = v26 in
    let v74: [[Float]] = v60.p0 in
    v13.p0 = v35 in
    v13.p0 = v16 in
    v13.p0 = v74 in
    v46[0] = v40 in
    v13.p1 = v44 in
    v14
  } in
  let f3: (s7) -> s7 = (v0: s7) -> s7 {
    var v7: s7 = v0 in
    var v5: s7 = v7 in
    let v2: [s6] = v5.p0 in
    let v3: [[s3]] = v7.p1 in
    var v1: s7 = v7 in
    var v6: s7 = v7 in
    let v10: [s3] = v3[0] in
    var v33: [[s3]] = v3 in
    let v31: [s6] = v6.p0 in
    v5 = v1 in
    v33[0] = v10 in
    var v19: s7 = v6 in
    let v17: [s3] = v33[0] in
    v7.p1 = v33 in
    var v30: [[s3]] = v33 in
    v33[0] = v17 in
    v19.p1 = v30 in
    v6.p1 = v30 in
    let v35: [s3] = f12(v10) in
    var v27: [s6] = v2 in
    v33[0] = v35 in
    v1 = v5 in
    v33[0] = v35 in
    let v89: s6 = v27[0] in
    v27[0] = v89 in
    var v82: [s6] = v27 in
    v30[0] = v35 in
    v5 = v0 in
    v33[0] = v17 in
    v27 = v31 in
    let v79: [s7] = [v19, v5, v1, v6] in
    v19.p0 = v82 in
    let v56: s7 = v79[1] in
    v56
  } in
  let noinline_f0: (s2, s7, s10, Float) -> Float = (v0: s2, v1: s7, v2: s10, v3: Float) -> Float {
    var v4: Float = v3 in
    var v8: s10 = v2 in
    let v7: s2 = f6(v0) in
    let v9: s4 = v8.p0 in
    let v6: s7 = f3(v1) in
    var v13: s4 = v9 in
    let v14: s2 = f6(v0) in
    let v17: s7 = f3(v6) in
    var v15: s4 = v13 in
    let v18: [[s3]] = v17.p1 in
    let v21: [s1] = v2.p1 in
    let v28: [s3] = v18[0] in
    let v29: [s0] = v0.p0 in
    v8 = v2 in
    var v19: [s0] = v29 in
    let v20: [s3] = v18[0] in
    let v16: [s3] = f12(v28) in
    var v25: [s3] = v20 in
    let v42: Float = v4 * v4 in
    let v39: s4 = f11(v9, v14) in
    let v51: s4 = f11(v13, v14) in
    var v33: Float = v4 in
    v8.p0 = v51 in
    let v30: [s0] = v7.p0 in
    let v41: s0 = v19[0] in
    let v26: s10 = s10(v15, v21) in
    let v22: s4 = v26.p0 in
    var v68: s4 = v39 in
    let v48: [s0] = v22.p0 in
    let v43: [s3] = v68.p1 in
    v15.p1 = v16 in
    let v53: s3 = v25[0] in
    let v36: [[Float]] = v41.p1 in
    let v32: s3 = v20[0] in
    var v54: s0 = v41 in
    let v34: [Float] = v36[0] in
    v13.p1 = v43 in
    var v58: [[Float]] = v36 in
    let v50: s3 = f7(v32) in
    v58[0] = v34 in
    v25[0] = v50 in
    let v114: [[Float]] = v54.p0 in
    v13.p0 = v48 in
    let v86: Float = v42 * v33 in
    v25[0] = v53 in
    var v52: [s3] = v43 in
    v68.p1 = v28 in
    var v128: [Float] = v34 in
    let v98: s3 = v52[0] in
    v52[0] = v53 in
    let v63: s0 = v30[0] in
    var v120: [[Float]] = v58 in
    v15.p0 = v48 in
    v68 = v15 in
    var v118: Float = v86 in
    v68.p0 = v48 in
    var v97: [[Float]] = v114 in
    v15.p0 = v48 in
    v19[0] = v63 in
    var v99: [Float] = v128 in
    let v158: s0 = v29[0] in
    v19[0] = v158 in
    let v168: [s0] = v15.p0 in
    v52[0] = v32 in
    v52[0] = v98 in
    let v136: Float = v99[0] in
    let v153: s0 = v168[1] in
    var v196: Float = v42 in
    let v293: Float = v118 - v196 in
    var v152: [[Float]] = v97 in
    let v124: [s0] = v68.p0 in
    v19[0] = v153 in
    v128[0] = v293 in
    let v173: [Float] = v152[1] in
    v15.p1 = v52 in
    v54.p1 = v120 in
    v99 = v173 in
    v68.p0 = v124 in
    v136
  } in
  fun loop(i: Int, v0: s2, v1: s7, v2: s10, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s0([[0.0], [1.0]], [[2.0]])], s0([[3.0], [4.0]], [[5.0]])) in
    let v1: s7 = s7([s6(s3(s1([[s0([[6.0], [7.0]], [[8.0]])], [s0([[9.0], [10.0]], [[11.0]])], [s0([[12.0], [13.0]], [[14.0]])]], [[s0([[15.0], [16.0]], [[17.0]])], [s0([[18.0], [19.0]], [[20.0]])]]), [21.0, 22.0]), s2([s0([[23.0], [24.0]], [[25.0]])], s0([[26.0], [27.0]], [[28.0]]))), s6(s3(s1([[s0([[29.0], [30.0]], [[31.0]])], [s0([[32.0], [33.0]], [[34.0]])], [s0([[35.0], [36.0]], [[37.0]])]], [[s0([[38.0], [39.0]], [[40.0]])], [s0([[41.0], [42.0]], [[43.0]])]]), [44.0, 45.0]), s2([s0([[46.0], [47.0]], [[48.0]])], s0([[49.0], [50.0]], [[51.0]])))], [[s3(s1([[s0([[52.0], [53.0]], [[54.0]])], [s0([[55.0], [56.0]], [[57.0]])], [s0([[58.0], [59.0]], [[60.0]])]], [[s0([[61.0], [62.0]], [[63.0]])], [s0([[64.0], [65.0]], [[66.0]])]]), [67.0, 68.0])]]) in
    let v2: s10 = s10(s4([s0([[69.0], [70.0]], [[71.0]]), s0([[72.0], [73.0]], [[74.0]])], [s3(s1([[s0([[75.0], [76.0]], [[77.0]])], [s0([[78.0], [79.0]], [[80.0]])], [s0([[81.0], [82.0]], [[83.0]])]], [[s0([[84.0], [85.0]], [[86.0]])], [s0([[87.0], [88.0]], [[89.0]])]]), [90.0, 91.0])]), [s1([[s0([[92.0], [93.0]], [[94.0]])], [s0([[95.0], [96.0]], [[97.0]])], [s0([[98.0], [99.0]], [[100.0]])]], [[s0([[101.0], [102.0]], [[103.0]])], [s0([[104.0], [105.0]], [[106.0]])]])]) in
    let v3: Float = 107.0 in
    let initialResult: Float = 107.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()