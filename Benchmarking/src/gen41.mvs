  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
    var p2: s0
  } in
  struct s4 {
    var p0: s2
    var p1: [Float]
  } in
  struct s5 {
    var p0: s4
    var p1: s2
  } in
  struct s7 {
    var p0: [s2]
    var p1: s5
  } in
  let f46: (s1, s4) -> s4 = (v0: s1, v1: s4) -> s4 {
    var v12: s4 = v1 in
    let v31: s2 = v12.p0 in
    v12.p0 = v31 in
    v12
  } in
  let f41: ([s2]) -> [s2] = (v0: [s2]) -> [s2] {
    let v5: s2 = v0[2] in
    var v3: [s2] = v0 in
    let v6: s2 = v3[0] in
    v3[2] = v6 in
    var v8: [s2] = v3 in
    v3[0] = v5 in
    v8[2] = v6 in
    v8
  } in
  let f39: (s2) -> s2 = (v0: s2) -> s2 {
    var v4: s2 = v0 in
    var v1: s2 = v4 in
    let v3: [s2] = [v1] in
    let v5: s2 = v3[0] in
    var v7: [s2] = v3 in
    let v2: s2 = v7[0] in
    let v6: s2 = v7[0] in
    let v9: [s0] = v6.p0 in
    v7[0] = v1 in
    let v13: [s0] = v4.p1 in
    let v10: s0 = v4.p2 in
    v1 = v0 in
    var v8: [s0] = v13 in
    let v15: [s0] = v5.p1 in
    let v14: s0 = v9[0] in
    let v20: [s2] = [v5, v0, v1, v1, v1] in
    v8[0] = v14 in
    var v18: [s0] = v9 in
    v4 = v0 in
    let v11: [s2] = [v1, v1, v4] in
    v7[0] = v0 in
    v7[0] = v0 in
    v7[0] = v0 in
    var v19: s2 = v2 in
    var v37: [s0] = v18 in
    v18[0] = v10 in
    let v57: s0 = v0.p2 in
    v7[0] = v19 in
    let v39: [s2] = f41(v11) in
    var v49: [s2] = v39 in
    let v35: [s0] = v1.p0 in
    v19.p0 = v9 in
    v4.p0 = v35 in
    let v53: [s2] = f41(v11) in
    let v81: s0 = v13[1] in
    v8[0] = v57 in
    let v51: [s0] = v6.p0 in
    let v65: s2 = v53[1] in
    let v143: s2 = v49[1] in
    v37[0] = v81 in
    v7[0] = v143 in
    let v76: [[s2]] = [v20, v20, v20, v20] in
    v1.p0 = v51 in
    let v149: [s2] = v76[2] in
    v19.p0 = v35 in
    let v136: s2 = v149[2] in
    var v87: [s0] = v15 in
    v19.p1 = v87 in
    v4.p1 = v8 in
    v49[0] = v65 in
    v4.p0 = v37 in
    v19.p2 = v57 in
    v19.p1 = v13 in
    v136
  } in
  let f33: (s0, s2) -> s2 = (v0: s0, v1: s2) -> s2 {
    var v4: s2 = v1 in
    let v5: s2 = f39(v4) in
    v4.p2 = v0 in
    v4.p2 = v0 in
    v5
  } in
  let f23: (s2) -> s2 = (v0: s2) -> s2 {
    let v6: s2 = f39(v0) in
    let v3: [s0] = v6.p0 in
    var v5: s2 = v0 in
    v5.p0 = v3 in
    v5.p0 = v3 in
    var v4: [s0] = v3 in
    let v1: [s0] = v0.p1 in
    var v13: s2 = v5 in
    let v11: s0 = v3[0] in
    let v17: s0 = v1[1] in
    v4[0] = v17 in
    v13.p1 = v1 in
    let v60: [[Float]] = v11.p0 in
    var v25: [[Float]] = v60 in
    v5.p2 = v17 in
    let v23: s0 = v1[0] in
    var v18: s0 = v17 in
    let v10: s2 = f33(v18, v13) in
    v13.p1 = v1 in
    v13.p0 = v4 in
    v25 = v60 in
    let v38: s2 = f33(v23, v10) in
    v18.p0 = v25 in
    v13.p0 = v3 in
    v25 = v60 in
    v4[0] = v23 in
    let v94: s2 = f33(v23, v38) in
    v94
  } in
  let noinline_f0: (s7, Float) -> Float = (v0: s7, v1: Float) -> Float {
    let v3: [s7] = [v0, v0, v0, v0] in
    let v13: s7 = v3[3] in
    let v11: s5 = v13.p1 in
    let v9: s4 = v11.p0 in
    let v15: s2 = v11.p1 in
    var v23: s4 = v9 in
    let v28: s2 = f23(v15) in
    v23.p0 = v15 in
    var v29: s4 = v23 in
    let v38: s2 = f23(v28) in
    v23.p0 = v38 in
    let v31: s2 = f23(v28) in
    let v32: [s0] = v15.p1 in
    let v60: s2 = f23(v15) in
    let v22: s2 = f23(v60) in
    let v50: s2 = f23(v31) in
    v29.p0 = v22 in
    let v155: s0 = v32[0] in
    let v39: s1 = s1(v155, v155) in
    let v94: s4 = f46(v39, v29) in
    v29.p0 = v22 in
    let v85: s2 = v23.p0 in
    let v117: s2 = f33(v155, v50) in
    v23 = v94 in
    let v79: s2 = f39(v85) in
    let v103: s0 = v79.p2 in
    let v70: [[Float]] = v103.p0 in
    let v72: s2 = f23(v117) in
    v29.p0 = v72 in
    v29 = v9 in
    let v224: [Float] = v70[0] in
    var v161: [Float] = v224 in
    let v286: Float = v161[0] in
    v286
  } in
  fun loop(i: Int, v0: s7, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s7 = s7([s2([s0([[0.0], [1.0]], [[2.0]])], [s0([[3.0], [4.0]], [[5.0]]), s0([[6.0], [7.0]], [[8.0]])], s0([[9.0], [10.0]], [[11.0]]))], s5(s4(s2([s0([[12.0], [13.0]], [[14.0]])], [s0([[15.0], [16.0]], [[17.0]]), s0([[18.0], [19.0]], [[20.0]])], s0([[21.0], [22.0]], [[23.0]])), [24.0, 25.0]), s2([s0([[26.0], [27.0]], [[28.0]])], [s0([[29.0], [30.0]], [[31.0]]), s0([[32.0], [33.0]], [[34.0]])], s0([[35.0], [36.0]], [[37.0]])))) in
    let v1: Float = 38.0 in
    let initialResult: Float = 38.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()