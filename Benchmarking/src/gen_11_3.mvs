  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  let f59: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p1 in
    let v3: [[Float]] = v0.p1 in
    let v4: [Float] = v2[0] in
    var v7: s0 = v0 in
    var v9: [[Float]] = v3 in
    v9[0] = v4 in
    var v8: [[Float]] = v2 in
    let v11: [[Float]] = v7.p0 in
    let v5: [[Float]] = v7.p1 in
    var v10: [[Float]] = v11 in
    v7.p0 = v10 in
    v8[0] = v4 in
    var v17: [[Float]] = v11 in
    var v16: [[Float]] = v9 in
    v7.p0 = v11 in
    let v21: [Float] = v17[0] in
    v8[0] = v21 in
    let v12: [[Float]] = v7.p0 in
    let v24: [Float] = v17[1] in
    let v27: [[Float]] = v7.p1 in
    let v50: [Float] = v10[1] in
    v17[2] = v21 in
    v8[0] = v50 in
    let v37: [Float] = v12[2] in
    var v30: s0 = v7 in
    let v23: [[Float]] = v30.p1 in
    v16[0] = v4 in
    var v36: s0 = v0 in
    var v101: s0 = v36 in
    let v56: s0 = s0(v10, v16) in
    let v67: [[Float]] = v101.p0 in
    let v63: [[Float]] = v56.p0 in
    v30.p0 = v67 in
    v36.p0 = v17 in
    v17[2] = v37 in
    let v85: [[Float]] = v56.p0 in
    v9[0] = v24 in
    v36.p1 = v23 in
    let v71: s0 = s0(v67, v5) in
    v30 = v0 in
    v30.p1 = v9 in
    v8 = v3 in
    v36.p1 = v27 in
    v7.p0 = v85 in
    v101.p1 = v8 in
    let v137: [[Float]] = v30.p0 in
    v7.p0 = v63 in
    v17 = v137 in
    v71
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v2: s0 = f59(v3) in
    var v6: s0 = v0 in
    let v1: s0 = f59(v3) in
    let v4: s0 = f59(v3) in
    let v8: s0 = f59(v2) in
    var v9: s0 = v4 in
    let v5: [[Float]] = v1.p0 in
    let v11: s0 = f59(v8) in
    var v15: [[Float]] = v5 in
    let v17: [[Float]] = v3.p0 in
    var v10: [[Float]] = v17 in
    let v21: [[Float]] = v4.p0 in
    let v18: [Float] = v5[0] in
    var v16: s0 = v1 in
    let v26: [[Float]] = v9.p0 in
    v3.p0 = v15 in
    let v22: [Float] = v21[1] in
    var v14: [[Float]] = v17 in
    var v20: [Float] = v18 in
    var v33: [[Float]] = v14 in
    let v42: [Float] = v26[1] in
    let v24: s0 = f59(v0) in
    var v35: [[Float]] = v17 in
    let v19: [Float] = v10[1] in
    let v41: [[Float]] = v24.p0 in
    var v36: s0 = v11 in
    let v51: [[Float]] = [v42, v20, v19, v20, v19, v20, v20] in
    v33[1] = v22 in
    v14[1] = v22 in
    var v37: [Float] = v19 in
    let v104: s0 = f59(v16) in
    v16.p0 = v15 in
    let v55: Float = v37[0] in
    let v49: [[[Float]]] = [v51, v51] in
    var v61: Float = v55 in
    v20[0] = v55 in
    var v40: s0 = v36 in
    let v66: s0 = f59(v104) in
    v40.p0 = v41 in
    v37[0] = v55 in
    v36.p0 = v33 in
    v3.p0 = v35 in
    let v72: s0 = f59(v40) in
    let v79: s0 = f59(v72) in
    let v112: s0 = f59(v66) in
    var v70: [[Float]] = v15 in
    v14[1] = v19 in
    let v80: [[Float]] = v49[0] in
    let v58: [Float] = v80[1] in
    let v94: s0 = f59(v79) in
    let v97: [[Float]] = v6.p1 in
    let v82: Float = v61 / v55 in
    let v87: [Float] = v97[0] in
    let v48: [[Float]] = v112.p0 in
    v14[2] = v58 in
    v15[2] = v87 in
    v10[2] = v58 in
    v9.p0 = v70 in
    let v177: s0 = f59(v94) in
    let v137: s0 = f59(v177) in
    v16.p1 = v97 in
    v37[0] = v82 in
    v6.p0 = v48 in
    v137
  } in
  let noinline_f0: (s1, [s1], Float) -> Float = (v0: s1, v1: [s1], v2: Float) -> Float {
    let v4: Float = v2 / v2 in
    let v7: s0 = v0.p1 in
    var v6: s0 = v7 in
    let v5: s0 = f4(v6) in
    let v15: [[Float]] = v6.p0 in
    let v10: [[Float]] = v5.p0 in
    let v14: [Float] = v15[1] in
    var v21: [[Float]] = v10 in
    let v26: Float = v14[0] in
    v21[1] = v14 in
    v6.p0 = v21 in
    let v40: Float = v4 * v26 in
    v6.p0 = v10 in
    v40
  } in
  fun loop(i: Int, v0: s1, v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0]]), s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]])], s0([[12.0], [13.0], [14.0]], [[15.0]])) in
    let v1: [s1] = [s1([s0([[16.0], [17.0], [18.0]], [[19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0]]), s0([[24.0], [25.0], [26.0]], [[27.0]])], s0([[28.0], [29.0], [30.0]], [[31.0]])), s1([s0([[32.0], [33.0], [34.0]], [[35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0]]), s0([[40.0], [41.0], [42.0]], [[43.0]])], s0([[44.0], [45.0], [46.0]], [[47.0]])), s1([s0([[48.0], [49.0], [50.0]], [[51.0]]), s0([[52.0], [53.0], [54.0]], [[55.0]]), s0([[56.0], [57.0], [58.0]], [[59.0]])], s0([[60.0], [61.0], [62.0]], [[63.0]]))] in
    let v2: Float = 64.0 in
    let initialResult: Float = 64.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()