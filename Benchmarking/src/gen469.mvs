  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  let f80: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [s0] = [v0, v0, v0, v0] in
    var v6: [s0] = v2 in
    let v9: s0 = v6[0] in
    v6[3] = v0 in
    v6[1] = v0 in
    v6[3] = v0 in
    v6[1] = v0 in
    v6[0] = v0 in
    var v12: [s0] = v6 in
    let v21: s0 = v12[1] in
    v6[1] = v0 in
    let v17: s1 = s1(v9, v21) in
    let v33: s0 = v2[3] in
    v6[0] = v21 in
    var v44: s1 = v17 in
    v44.p0 = v9 in
    v44.p1 = v0 in
    v6[2] = v33 in
    v44.p0 = v0 in
    v44.p1 = v33 in
    v44.p1 = v0 in
    let v40: s0 = v44.p1 in
    v44.p1 = v9 in
    v40
  } in
  let f76: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v6: [[Float]] = v0.p1 in
    let v3: [[Float]] = v4.p0 in
    let v5: [[Float]] = v0.p1 in
    let v8: s0 = f80(v4) in
    v4 = v8 in
    let v11: [[Float]] = v8.p0 in
    v4 = v8 in
    let v13: s0 = s0(v11, v6) in
    v4.p0 = v11 in
    v4.p1 = v5 in
    let v14: s0 = f80(v0) in
    let v49: s0 = f80(v4) in
    let v27: s0 = f80(v13) in
    v4.p0 = v3 in
    let v38: [[Float]] = v49.p0 in
    v4.p0 = v38 in
    v4.p0 = v38 in
    let v23: [[Float]] = v0.p1 in
    var v36: s0 = v27 in
    v36.p1 = v23 in
    let v39: [[Float]] = v14.p1 in
    v4.p1 = v39 in
    let v42: s0 = f80(v36) in
    v36 = v27 in
    v36.p1 = v23 in
    v42
  } in
  let f54: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: s0 = f80(v0) in
    let v3: [s0] = [v5] in
    let v4: s0 = f76(v5) in
    let v10: s0 = v3[0] in
    var v15: s0 = v5 in
    let v30: s0 = f80(v4) in
    var v18: [s0] = v3 in
    v18 = v3 in
    v18[0] = v0 in
    let v71: s0 = f80(v10) in
    v18[0] = v10 in
    let v40: s0 = v18[0] in
    let v32: [[Float]] = v30.p1 in
    v15.p1 = v32 in
    let v69: s1 = s1(v40, v71) in
    let v76: s0 = v69.p1 in
    v18[0] = v15 in
    v76
  } in
  let noinline_f0: (s2, s0, Float) -> Float = (v0: s2, v1: s0, v2: Float) -> Float {
    let v3: s0 = f54(v1) in
    let v7: [[Float]] = v3.p1 in
    let v29: [Float] = v7[1] in
    var v22: Float = v2 in
    let v28: Float = v29[0] in
    var v183: Float = v28 in
    let v151: Float = v183 + v22 in
    let v189: Float = v151 - v151 in
    var v133: Float = v189 in
    v133
  } in
  fun loop(i: Int, v0: s2, v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), [s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]]), s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])]) in
    let v1: s0 = s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]) in
    let v2: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()