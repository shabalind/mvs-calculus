  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s5 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s8 {
    var p0: s5
    var p1: [s5]
  } in
  let f116: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    v7 = v0 in
    var v5: s0 = v7 in
    let v2: [[Float]] = v5.p1 in
    v5.p1 = v2 in
    let v1: [Float] = v2[1] in
    let v6: [[Float]] = v7.p0 in
    let v4: [Float] = v2[0] in
    let v10: [[Float]] = v0.p0 in
    var v15: [[Float]] = v2 in
    let v13: [Float] = v6[2] in
    var v12: [[Float]] = v6 in
    v12[2] = v4 in
    var v42: [[Float]] = v15 in
    v7 = v0 in
    var v21: [[Float]] = v15 in
    v12[2] = v4 in
    v15[1] = v13 in
    let v22: [Float] = v2[1] in
    let v44: s0 = s0(v10, v42) in
    v5.p0 = v6 in
    let v31: [Float] = v10[0] in
    v42 = v21 in
    v15[1] = v1 in
    let v50: [Float] = v6[2] in
    v7.p0 = v12 in
    v12[2] = v31 in
    let v64: Float = v22[0] in
    v15[0] = v50 in
    var v81: [Float] = v13 in
    v81[0] = v64 in
    var v61: [[Float]] = v6 in
    v21[0] = v81 in
    v5.p0 = v61 in
    v44
  } in
  let f90: (s0, [s5]) -> [s5] = (v0: s0, v1: [s5]) -> [s5] {
    var v8: [s5] = v1 in
    let v9: s5 = v8[0] in
    v8 = v1 in
    v8[0] = v9 in
    let v7: s5 = v1[0] in
    var v10: [s5] = v1 in
    v8 = v1 in
    let v12: s5 = v10[0] in
    v10[0] = v12 in
    let v20: s5 = v8[0] in
    v10[0] = v7 in
    v10[0] = v20 in
    v8 = v10 in
    v10
  } in
  let f83: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v4: Float = v0[0] in
    var v2: [Float] = v0 in
    let v9: Float = v0[0] in
    v2[0] = v9 in
    let v5: Float = v2[0] in
    v2[0] = v4 in
    let v6: Float = v2[0] in
    var v13: Float = v6 in
    let v11: Float = v2[0] in
    let v24: Float = v0[0] in
    let v18: Float = v0[0] in
    v2[0] = v11 in
    v2[0] = v18 in
    let v10: Float = v0[0] in
    var v8: [Float] = v0 in
    let v12: [Float] = [v6] in
    var v14: [Float] = v2 in
    let v21: Float = v8[0] in
    let v15: Float = v8[0] in
    let v23: Float = v14[0] in
    let v17: Float = v0[0] in
    let v19: [Float] = [v10, v11, v24, v15, v23, v17, v17] in
    let v51: [[Float]] = [v19, v19, v19, v19, v19] in
    let v26: [Float] = v51[2] in
    v14[0] = v6 in
    v14[0] = v18 in
    v8[0] = v5 in
    var v33: [Float] = v12 in
    let v37: Float = v0[0] in
    v33[0] = v37 in
    v2[0] = v4 in
    v33[0] = v21 in
    v14[0] = v13 in
    let v44: Float = v8[0] in
    var v38: [Float] = v33 in
    v14 = v38 in
    v14[0] = v10 in
    v33[0] = v21 in
    let v60: Float = v44 - v10 in
    let v48: Float = v26[5] in
    v33[0] = v48 in
    v2 = v33 in
    v33[0] = v60 in
    v2 = v12 in
    v38
  } in
  let f75: (s5) -> s5 = (v0: s5) -> s5 {
    let v3: [[s0]] = v0.p1 in
    let v2: s0 = v0.p0 in
    var v7: s0 = v2 in
    var v8: s0 = v7 in
    let v1: [s5] = [v0] in
    var v6: [s5] = v1 in
    let v10: [s0] = v3[0] in
    var v11: [[s0]] = v3 in
    let v5: [[Float]] = v7.p1 in
    let v12: [[s0]] = v0.p1 in
    var v35: s5 = v0 in
    v11[1] = v10 in
    var v19: s0 = v2 in
    let v17: s5 = v6[0] in
    let v14: [[s0]] = v35.p1 in
    let v18: [[Float]] = v7.p1 in
    var v13: s5 = v17 in
    let v30: [Float] = v18[1] in
    v8.p1 = v18 in
    let v23: [[s5]] = [v6] in
    let v46: s0 = f116(v8) in
    var v16: [s0] = v10 in
    v13.p0 = v46 in
    let v44: s0 = v16[0] in
    v6[0] = v17 in
    let v58: s5 = s5(v7, v11) in
    let v24: s0 = f116(v7) in
    let v39: [s0] = v11[2] in
    let v29: [s5] = v23[0] in
    let v31: [[Float]] = v19.p0 in
    v13.p1 = v14 in
    v11[0] = v16 in
    let v47: s0 = v13.p0 in
    let v33: s0 = f116(v24) in
    let v53: s0 = v0.p0 in
    v6[0] = v13 in
    v16[0] = v53 in
    v8.p1 = v5 in
    let v55: [[Float]] = v33.p1 in
    v7.p0 = v31 in
    let v62: [Float] = f83(v30) in
    let v56: [[Float]] = v44.p1 in
    v11[1] = v16 in
    let v40: s0 = f116(v19) in
    v19.p0 = v31 in
    let v69: s0 = v10[0] in
    let v60: s0 = f116(v2) in
    v7 = v60 in
    let v78: [[Float]] = v8.p1 in
    v13.p1 = v11 in
    v6[0] = v13 in
    v13.p0 = v44 in
    v35.p1 = v12 in
    let v94: [s5] = f90(v53, v29) in
    v19.p0 = v31 in
    v7 = v2 in
    let v66: [[s0]] = v58.p1 in
    let v83: s5 = s5(v47, v66) in
    v19.p1 = v56 in
    let v45: [[Float]] = v44.p1 in
    let v96: [[Float]] = v40.p1 in
    var v132: [[Float]] = v96 in
    v19.p1 = v45 in
    v8.p1 = v78 in
    v8.p0 = v31 in
    v6[0] = v83 in
    v8.p1 = v55 in
    v16[0] = v46 in
    v13.p0 = v69 in
    var v70: [[Float]] = v132 in
    let v116: s0 = v39[0] in
    v132[1] = v62 in
    let v85: [[Float]] = v53.p0 in
    let v191: s5 = v94[0] in
    let v242: s0 = v17.p0 in
    v8.p1 = v56 in
    v8 = v242 in
    v13 = v0 in
    v16[0] = v116 in
    v8.p1 = v78 in
    v8.p0 = v85 in
    v6[0] = v58 in
    v7.p1 = v70 in
    v6[0] = v191 in
    v83
  } in
  let f44: (s8) -> s8 = (v0: s8) -> s8 {
    let v2: s5 = v0.p0 in
    let v5: s5 = v0.p0 in
    let v1: [s5] = [v2, v2, v5, v2, v2] in
    let v7: s5 = v1[2] in
    let v10: [s5] = v0.p1 in
    let v21: [[s5]] = [v10, v10, v10, v10] in
    let v69: [s5] = v21[2] in
    let v95: s8 = s8(v7, v69) in
    var v37: s8 = v95 in
    v37
  } in
  let f8: (s8) -> s8 = (v0: s8) -> s8 {
    let v4: [s5] = v0.p1 in
    let v7: s5 = v4[1] in
    var v6: s8 = v0 in
    let v3: s5 = f75(v7) in
    var v2: [s5] = v4 in
    let v5: s5 = v2[2] in
    v6.p0 = v5 in
    v6.p0 = v3 in
    let v27: s8 = f44(v6) in
    v27
  } in
  let noinline_f0: (s8, Float) -> Float = (v0: s8, v1: Float) -> Float {
    let v4: s8 = f8(v0) in
    let v6: s8 = f44(v4) in
    let v3: s5 = v6.p0 in
    let v8: s0 = v3.p0 in
    let v9: [[Float]] = v8.p1 in
    let v13: [Float] = v9[1] in
    let v17: Float = v13[0] in
    v17
  } in
  fun loop(i: Int, v0: s8, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s8 = s8(s5(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), [[s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])], [s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])], [s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]])]]), [s5(s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]]), [[s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]])], [s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]])], [s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])]]), s5(s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]]), [[s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]])], [s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]])], [s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]])]]), s5(s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]]), [[s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]])], [s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]])], [s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]])]])]) in
    let v1: Float = 80.0 in
    let initialResult: Float = 80.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()