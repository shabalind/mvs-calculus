  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f24: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [[Float]] = v0.p0 in
    let v4: [[Float]] = v0.p1 in
    let v13: s0 = s0(v3, v4) in
    v13
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s0 = f24(v0) in
    let v2: s0 = f24(v1) in
    let v3: [[Float]] = v0.p0 in
    var v5: [[Float]] = v3 in
    let v6: [Float] = v5[1] in
    v5[0] = v6 in
    let v9: s0 = f24(v2) in
    let v11: [[Float]] = v2.p0 in
    v5[2] = v6 in
    let v16: s0 = f24(v9) in
    let v12: s0 = f24(v0) in
    let v8: s0 = f24(v12) in
    v5[1] = v6 in
    var v19: [Float] = v6 in
    let v26: s0 = f24(v8) in
    var v28: s0 = v26 in
    v28.p0 = v11 in
    v5[2] = v19 in
    let v27: [[Float]] = v16.p0 in
    v28.p0 = v5 in
    v28.p0 = v27 in
    v5[1] = v6 in
    v28.p0 = v27 in
    let v41: s0 = f24(v28) in
    let v43: s0 = f24(v16) in
    let v70: [[Float]] = v43.p1 in
    v28.p1 = v70 in
    v41
  } in
  let f21: ([[s0]]) -> [[s0]] = (v0: [[s0]]) -> [[s0]] {
    var v4: [[s0]] = v0 in
    let v3: [[[s0]]] = [v4, v0, v4, v0, v0, v0, v4] in
    let v15: [[s0]] = v3[0] in
    v15
  } in
  let f20: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f22(v0) in
    var v2: s0 = v0 in
    var v10: s0 = v0 in
    var v5: s0 = v0 in
    let v1: s0 = f22(v0) in
    let v4: [[Float]] = v0.p1 in
    let v8: [[Float]] = v3.p1 in
    let v6: [[Float]] = v10.p1 in
    let v20: s0 = f22(v10) in
    let v11: s0 = f24(v1) in
    v10.p1 = v4 in
    v5 = v20 in
    let v12: s0 = f24(v5) in
    let v19: [[Float]] = v3.p0 in
    v5.p1 = v6 in
    let v14: s0 = f22(v1) in
    let v24: [[Float]] = v11.p1 in
    v5.p1 = v24 in
    let v25: s0 = f22(v2) in
    v2.p1 = v6 in
    v2.p0 = v19 in
    let v68: s0 = f24(v12) in
    let v28: [[Float]] = v2.p0 in
    let v48: [[Float]] = v14.p1 in
    v2.p1 = v8 in
    let v58: [[Float]] = v10.p0 in
    v5.p0 = v28 in
    v5 = v25 in
    v10.p0 = v28 in
    v10.p1 = v48 in
    v2.p0 = v58 in
    v68
  } in
  let f15: (s0, [s0]) -> [s0] = (v0: s0, v1: [s0]) -> [s0] {
    v1
  } in
  let f13: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f22(v0) in
    let v5: s0 = f22(v0) in
    let v1: [s0] = [v3, v0, v3, v3, v3, v3] in
    let v2: s0 = v1[5] in
    var v8: [s0] = v1 in
    v8 = v1 in
    var v10: [s0] = v8 in
    let v7: s0 = v1[4] in
    var v13: [s0] = v8 in
    v10[5] = v7 in
    var v6: [s0] = v1 in
    v6[4] = v3 in
    var v12: [s0] = v1 in
    let v16: s0 = v6[5] in
    let v26: s0 = v12[2] in
    let v9: s0 = v8[5] in
    let v28: [[Float]] = v2.p1 in
    var v17: s0 = v5 in
    v10 = v12 in
    var v19: [[Float]] = v28 in
    var v33: s0 = v16 in
    let v23: [[Float]] = v9.p1 in
    let v20: s0 = v13[5] in
    let v29: s0 = f22(v26) in
    var v30: s0 = v16 in
    v17.p1 = v19 in
    var v46: s0 = v30 in
    let v48: s0 = v10[3] in
    let v22: [[Float]] = v33.p1 in
    v46.p1 = v23 in
    v33.p1 = v22 in
    let v35: [s0] = [v29, v48, v20, v33] in
    let v56: [Float] = v19[0] in
    let v25: [[Float]] = v46.p0 in
    v13[4] = v16 in
    v17.p1 = v23 in
    v30.p0 = v25 in
    var v50: [s0] = v35 in
    var v89: [[Float]] = v19 in
    v17.p0 = v25 in
    v46.p1 = v89 in
    var v102: [s0] = v10 in
    v89[0] = v56 in
    let v134: [[Float]] = v5.p1 in
    let v60: s0 = f20(v3) in
    v12[3] = v60 in
    let v78: s0 = v102[2] in
    v8[4] = v78 in
    v10[1] = v17 in
    let v85: s0 = f20(v48) in
    v17.p1 = v134 in
    v50[3] = v2 in
    v12[3] = v85 in
    let v122: s0 = v50[1] in
    v122
  } in
  let f6: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v4: [s0] = v0 in
    let v6: s0 = v4[0] in
    let v2: s0 = f13(v6) in
    let v5: [[Float]] = v2.p1 in
    let v7: s0 = f24(v2) in
    var v9: s0 = v6 in
    var v3: s0 = v7 in
    v4[0] = v3 in
    let v15: s0 = f22(v7) in
    let v8: s0 = f13(v15) in
    v4[0] = v8 in
    let v14: s0 = f20(v7) in
    let v40: [[Float]] = v8.p0 in
    v3.p0 = v40 in
    let v29: s0 = f13(v6) in
    var v19: [s0] = v4 in
    let v24: [[Float]] = v29.p1 in
    v9.p1 = v5 in
    let v36: s0 = f24(v9) in
    let v39: [[Float]] = v8.p0 in
    let v31: s0 = f24(v3) in
    v9.p0 = v39 in
    let v21: [[Float]] = v29.p0 in
    let v30: [[Float]] = v15.p1 in
    let v46: [[Float]] = v9.p0 in
    let v64: [s0] = f15(v14, v19) in
    v4[0] = v36 in
    v4 = v0 in
    v3.p1 = v24 in
    v4[0] = v31 in
    v9.p1 = v30 in
    v9.p0 = v46 in
    let v69: s0 = f20(v7) in
    v9.p0 = v21 in
    v4[0] = v69 in
    v64
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v2: [[s0]] = f21(v0) in
    let v7: [s0] = v2[0] in
    let v19: [s0] = f6(v7) in
    let v21: s0 = v19[0] in
    let v23: [[Float]] = v21.p0 in
    let v80: [Float] = v23[0] in
    let v215: Float = v80[0] in
    v215
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0], [2.0]], [[3.0]])], [s0([[4.0], [5.0], [6.0]], [[7.0]])], [s0([[8.0], [9.0], [10.0]], [[11.0]])]] in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()