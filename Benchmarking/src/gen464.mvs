  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f57: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v2: Float = v0[0] in
    let v5: Float = v0[0] in
    let v7: Float = v0[0] in
    var v1: [Float] = v0 in
    v1[0] = v5 in
    var v8: [Float] = v0 in
    let v9: Float = v8[0] in
    var v6: Float = v9 in
    var v4: Float = v5 in
    v1[0] = v2 in
    var v12: Float = v4 in
    v1[0] = v7 in
    let v15: Float = v0[0] in
    v8[0] = v15 in
    let v19: Float = v1[0] in
    var v11: [Float] = v1 in
    v11 = v1 in
    v8[0] = v9 in
    var v13: [Float] = v1 in
    v13[0] = v19 in
    var v16: [Float] = v8 in
    v8[0] = v6 in
    v1[0] = v15 in
    let v22: Float = v11[0] in
    let v42: Float = v11[0] in
    let v32: Float = v22 / v22 in
    var v20: [Float] = v13 in
    var v28: [Float] = v16 in
    var v35: [Float] = v20 in
    let v67: Float = v35[0] in
    v11[0] = v5 in
    var v33: [Float] = v16 in
    let v72: Float = v20[0] in
    v33[0] = v12 in
    let v50: Float = v28[0] in
    let v69: Float = v1[0] in
    v13[0] = v69 in
    var v48: [Float] = v8 in
    v48[0] = v67 in
    v1[0] = v50 in
    let v38: Float = v28[0] in
    let v80: [[Float]] = [v35, v28, v33, v0, v11] in
    var v76: [[Float]] = v80 in
    var v46: [[Float]] = v80 in
    v46[2] = v11 in
    var v47: [[Float]] = v80 in
    v76[1] = v48 in
    v48[0] = v72 in
    let v56: [Float] = v47[0] in
    v8[0] = v50 in
    let v85: [[[Float]]] = [v47, v76, v47] in
    var v115: [[[Float]]] = v85 in
    var v116: [[[Float]]] = v115 in
    let v81: [[Float]] = v116[2] in
    let v70: Float = v56[0] in
    let v66: [Float] = v46[1] in
    let v68: [Float] = v81[3] in
    v46[2] = v33 in
    v16[0] = v38 in
    v48[0] = v7 in
    v33[0] = v5 in
    v1[0] = v32 in
    v28[0] = v70 in
    v11[0] = v42 in
    v47[3] = v66 in
    v68
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    var v6: [[s0]] = v0 in
    let v4: [s0] = v6[0] in
    var v7: [s0] = v4 in
    let v11: [s0] = v6[0] in
    let v14: s0 = v7[0] in
    v7[0] = v14 in
    let v30: s0 = v4[0] in
    let v40: [s0] = v0[0] in
    v6[0] = v4 in
    v6[0] = v7 in
    v6[0] = v40 in
    let v29: [[Float]] = v30.p1 in
    v6[0] = v7 in
    let v27: [Float] = v29[0] in
    let v50: [Float] = f57(v27) in
    v6 = v0 in
    v6[0] = v4 in
    v6[0] = v11 in
    let v104: Float = v50[0] in
    v6[0] = v7 in
    v104
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0], [2.0]], [[3.0]])]] in
    let v1: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()