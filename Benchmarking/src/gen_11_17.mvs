  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: [s0]
  } in
  let f71: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [s0] = [v0, v0, v0, v0, v0, v0] in
    let v19: s0 = v1[0] in
    var v43: [s0] = v1 in
    let v65: s0 = v43[5] in
    v43[0] = v19 in
    v43[0] = v0 in
    v65
  } in
  let f68: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: s0 = f71(v0) in
    var v4: s0 = v0 in
    let v6: s0 = f71(v4) in
    let v7: [[Float]] = v6.p0 in
    var v3: [[Float]] = v7 in
    let v12: [Float] = v3[1] in
    v3[1] = v12 in
    v3[0] = v12 in
    let v9: s0 = f71(v0) in
    var v5: s0 = v9 in
    let v13: [[Float]] = v9.p1 in
    let v8: Float = v12[0] in
    v3[1] = v12 in
    let v21: [[Float]] = v9.p1 in
    let v16: [Float] = v21[0] in
    var v27: [Float] = v12 in
    let v15: [[Float]] = v2.p0 in
    var v17: [[Float]] = v15 in
    let v24: [Float] = v17[2] in
    let v14: s0 = f71(v5) in
    v4.p1 = v21 in
    v3[0] = v12 in
    v27[0] = v8 in
    v17[2] = v16 in
    let v28: Float = v12[0] in
    v4.p1 = v13 in
    let v19: Float = v24[0] in
    v5.p0 = v17 in
    let v32: [Float] = v17[1] in
    v3[1] = v32 in
    let v18: s0 = s0(v7, v21, v21) in
    let v41: s0 = f71(v14) in
    let v42: [[Float]] = v41.p2 in
    let v65: [Float] = v3[1] in
    v3[2] = v65 in
    let v40: [[Float]] = v18.p0 in
    v4.p0 = v3 in
    var v46: [Float] = v65 in
    var v44: [[Float]] = v40 in
    var v58: [[Float]] = v42 in
    v27[0] = v28 in
    v17[0] = v27 in
    v3[0] = v27 in
    let v93: [[Float]] = v14.p2 in
    let v34: [[Float]] = v9.p1 in
    let v180: [Float] = v93[0] in
    let v84: [[Float]] = v5.p1 in
    let v116: s0 = s0(v44, v84, v34) in
    let v96: s0 = f71(v116) in
    v46[0] = v19 in
    v58[0] = v46 in
    v5.p2 = v58 in
    let v183: s0 = f71(v96) in
    v3[0] = v180 in
    v183
  } in
  let f66: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: s0 = f71(v0) in
    let v2: s0 = f71(v3) in
    let v4: s0 = f71(v2) in
    let v8: [[Float]] = v0.p2 in
    var v16: s0 = v3 in
    v16.p1 = v8 in
    let v6: [[Float]] = v16.p2 in
    let v12: [[Float]] = v16.p0 in
    v16 = v3 in
    v16 = v4 in
    let v35: [[Float]] = v0.p2 in
    let v18: s0 = s0(v12, v35, v6) in
    let v42: [[Float]] = v4.p1 in
    let v31: [[Float]] = v18.p1 in
    let v60: s0 = s0(v12, v31, v8) in
    var v69: [[Float]] = v8 in
    v16.p2 = v69 in
    v16.p2 = v42 in
    let v41: s0 = f68(v60) in
    v16.p2 = v69 in
    let v37: [[Float]] = v41.p2 in
    v16.p1 = v6 in
    v16.p1 = v37 in
    v41
  } in
  let f35: (s2) -> s2 = (v0: s2) -> s2 {
    let v2: [s2] = [v0] in
    let v17: s2 = v2[0] in
    v17
  } in
  let noinline_f0: (s2, s0, [s0], Float) -> Float = (v0: s2, v1: s0, v2: [s0], v3: Float) -> Float {
    let v5: s2 = f35(v0) in
    let v8: [Float] = [v3, v3, v3, v3, v3] in
    let v4: [[Float]] = v1.p1 in
    var v18: [[Float]] = v4 in
    let v7: [s0] = v5.p1 in
    var v11: [[Float]] = v4 in
    let v12: s0 = v7[0] in
    var v22: [[Float]] = v18 in
    let v14: [Float] = v22[0] in
    let v24: s0 = f66(v12) in
    v11[0] = v14 in
    let v20: Float = v14[0] in
    let v39: Float = v14[0] in
    var v30: [Float] = v8 in
    let v31: Float = v8[4] in
    var v35: Float = v39 in
    let v47: Float = v35 * v20 in
    v22[0] = v14 in
    v30[4] = v39 in
    v30[1] = v47 in
    v18[0] = v14 in
    let v55: [[Float]] = v24.p1 in
    v30[3] = v20 in
    let v120: [Float] = v55[0] in
    var v84: [Float] = v120 in
    let v44: Float = v84[0] in
    let v102: Float = v30[2] in
    v30[0] = v31 in
    v30[4] = v44 in
    v30[0] = v3 in
    let v81: [[Float]] = v1.p1 in
    let v174: [Float] = v81[0] in
    let v145: [Float] = v11[0] in
    v22[0] = v145 in
    v18[0] = v174 in
    v30[2] = v31 in
    v102
  } in
  fun loop(i: Int, v0: s2, v1: s0, v2: [s0], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s1([s0([[0.0], [1.0], [2.0]], [[3.0]], [[4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0]], [[9.0]])], [s0([[10.0], [11.0], [12.0]], [[13.0]], [[14.0]])]), [s0([[15.0], [16.0], [17.0]], [[18.0]], [[19.0]])]) in
    let v1: s0 = s0([[20.0], [21.0], [22.0]], [[23.0]], [[24.0]]) in
    let v2: [s0] = [s0([[25.0], [26.0], [27.0]], [[28.0]], [[29.0]])] in
    let v3: Float = 30.0 in
    let initialResult: Float = 30.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()