  struct s0 {
    var p0: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
    var p2: s0
    var p3: s0
    var p4: s0
    var p5: s0
  } in
  let f20: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: s0 = v0.p0 in
    var v3: s0 = v5 in
    let v2: [[Float]] = v5.p0 in
    let v15: s0 = v0.p0 in
    v3.p0 = v2 in
    let v6: [s1] = [v0, v0, v0, v0, v0, v0] in
    let v9: [[Float]] = v3.p0 in
    v3.p0 = v2 in
    let v13: s1 = v6[5] in
    let v34: [[Float]] = v15.p0 in
    v3.p0 = v34 in
    let v22: s1 = v6[0] in
    let v38: [[Float]] = v3.p0 in
    v3.p0 = v38 in
    let v29: s0 = v13.p5 in
    var v42: [[Float]] = v38 in
    v3.p0 = v9 in
    var v43: s0 = v29 in
    var v63: s1 = v22 in
    var v82: s1 = v63 in
    v43.p0 = v42 in
    v63.p3 = v43 in
    v82
  } in
  let f14: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v2: Float = v0[0] in
    var v7: Float = v2 in
    var v4: [Float] = v0 in
    let v6: Float = v4[0] in
    v4[0] = v6 in
    var v1: [Float] = v0 in
    v4[0] = v7 in
    let v15: Float = v4[0] in
    v1[0] = v7 in
    let v3: [[Float]] = [v0, v1] in
    let v20: [Float] = v3[0] in
    let v13: Float = v20[0] in
    v4[0] = v15 in
    var v11: [Float] = v4 in
    let v9: [[Float]] = [v0, v4, v0] in
    v4 = v1 in
    var v17: Float = v13 in
    v4[0] = v2 in
    var v14: [[Float]] = v9 in
    let v25: [Float] = v14[1] in
    var v19: [[Float]] = v9 in
    v19[0] = v11 in
    let v26: [Float] = v19[0] in
    var v43: [Float] = v25 in
    v43[0] = v17 in
    v14[0] = v4 in
    v14 = v19 in
    v19[2] = v26 in
    v43
  } in
  let f13: (s0, s1, s1) -> s0 = (v0: s0, v1: s1, v2: s1) -> s0 {
    let v3: s0 = v1.p5 in
    let v4: [[Float]] = v0.p0 in
    let v6: [Float] = v4[0] in
    let v7: [Float] = v4[0] in
    var v9: s0 = v3 in
    let v5: [Float] = v4[1] in
    let v14: s0 = v1.p5 in
    v9.p0 = v4 in
    let v13: s0 = v1.p5 in
    let v35: [[Float]] = v3.p0 in
    var v11: [[Float]] = v35 in
    let v10: [Float] = v4[1] in
    let v12: s0 = s0(v35) in
    let v15: s1 = f20(v1) in
    v9.p0 = v35 in
    v9 = v13 in
    v11[0] = v5 in
    let v32: [[Float]] = v3.p0 in
    let v39: [Float] = v11[1] in
    v11[0] = v7 in
    v9.p0 = v32 in
    v9.p0 = v35 in
    v9.p0 = v35 in
    var v23: s1 = v2 in
    let v26: Float = v39[0] in
    let v54: [[Float]] = v9.p0 in
    v23.p5 = v9 in
    v23.p0 = v12 in
    v11[1] = v7 in
    let v33: [[Float]] = v3.p0 in
    let v34: [Float] = f14(v10) in
    v9.p0 = v33 in
    v11[0] = v34 in
    let v56: [[Float]] = v3.p0 in
    v11[1] = v39 in
    v9.p0 = v54 in
    v23.p3 = v3 in
    var v49: [Float] = v34 in
    let v21: [Float] = v56[0] in
    let v50: s0 = v2.p4 in
    v23.p2 = v0 in
    v9.p0 = v33 in
    v23.p2 = v3 in
    let v46: Float = v10[0] in
    var v37: [[Float]] = v35 in
    var v101: [Float] = v6 in
    v37[0] = v49 in
    v37[1] = v101 in
    v23.p2 = v50 in
    v37[0] = v6 in
    v37[0] = v49 in
    v9.p0 = v37 in
    v9.p0 = v35 in
    var v62: s1 = v15 in
    var v63: [Float] = v21 in
    var v85: Float = v46 in
    v37[1] = v63 in
    let v243: s1 = f20(v23) in
    let v113: s0 = v62.p4 in
    v23.p5 = v14 in
    let v171: s0 = v243.p0 in
    let v91: Float = v5[0] in
    v62.p5 = v9 in
    v23.p1 = v113 in
    v101[0] = v85 in
    v101[0] = v91 in
    var v187: s0 = v171 in
    v63[0] = v26 in
    v187
  } in
  let noinline_f0: ([[s1]], Float) -> Float = (v0: [[s1]], v1: Float) -> Float {
    let v6: [s1] = v0[0] in
    let v2: [s1] = v0[0] in
    let v3: s1 = v6[0] in
    let v9: s1 = v2[0] in
    let v10: s1 = v6[0] in
    let v4: s0 = v10.p5 in
    var v11: s1 = v9 in
    var v19: s1 = v9 in
    v19.p2 = v4 in
    let v13: s0 = f13(v4, v11, v3) in
    let v30: s0 = f13(v13, v19, v10) in
    let v31: s0 = v11.p1 in
    let v28: s1 = v6[0] in
    v19.p4 = v31 in
    let v41: [[Float]] = v30.p0 in
    let v50: s0 = v28.p1 in
    let v42: Float = v1 + v1 in
    let v79: [Float] = [v1, v1, v1, v42] in
    let v43: Float = v79[0] in
    v19.p4 = v13 in
    let v60: [Float] = v41[1] in
    let v93: Float = v60[0] in
    v19.p2 = v50 in
    let v142: Float = v93 * v43 in
    v142
  } in
  fun loop(i: Int, v0: [[s1]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s1]] = [[s1(s0([[0.0], [1.0]]), s0([[2.0], [3.0]]), s0([[4.0], [5.0]]), s0([[6.0], [7.0]]), s0([[8.0], [9.0]]), s0([[10.0], [11.0]]))], [s1(s0([[12.0], [13.0]]), s0([[14.0], [15.0]]), s0([[16.0], [17.0]]), s0([[18.0], [19.0]]), s0([[20.0], [21.0]]), s0([[22.0], [23.0]]))]] in
    let v1: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()