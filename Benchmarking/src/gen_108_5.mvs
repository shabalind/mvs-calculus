  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  let f24: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    var v7: s0 = v0 in
    let v2: [[Float]] = v7.p1 in
    let v9: [[Float]] = v7.p0 in
    v7.p0 = v9 in
    let v22: [Float] = v2[0] in
    let v12: Float = v22[0] in
    let v11: [[Float]] = v0.p1 in
    let v29: [Float] = v2[0] in
    v7.p0 = v11 in
    var v21: Float = v12 in
    let v41: Float = v29[0] in
    v21 = v41 in
    v7.p1 = v11 in
    v21
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p0 in
    var v5: [[Float]] = v2 in
    let v6: s0 = s0(v2, v2) in
    var v7: s0 = v6 in
    let v4: [Float] = v2[0] in
    let v3: [[Float]] = v6.p1 in
    let v8: Float = v4[0] in
    let v11: [[Float]] = v0.p1 in
    let v17: [[[Float]]] = [v11, v11, v2, v3] in
    let v12: [[Float]] = v0.p1 in
    let v21: [Float] = v11[0] in
    let v15: Float = f24(v6, v8) in
    v7.p1 = v5 in
    v7.p1 = v12 in
    var v26: s0 = v6 in
    var v18: [Float] = v21 in
    let v10: Float = f24(v6, v15) in
    var v20: [[Float]] = v2 in
    var v14: [[[Float]]] = v17 in
    var v40: s0 = v7 in
    v7.p0 = v11 in
    var v27: [[Float]] = v20 in
    v7.p1 = v11 in
    var v25: [[Float]] = v11 in
    v40.p1 = v5 in
    let v22: [[Float]] = v17[2] in
    let v33: [[Float]] = v26.p0 in
    let v61: Float = f24(v6, v10) in
    v14[1] = v5 in
    v27[0] = v4 in
    let v28: Float = f24(v40, v61) in
    let v32: [[Float]] = v7.p0 in
    let v42: [Float] = v32[0] in
    v14[0] = v32 in
    v18[0] = v28 in
    let v69: [[Float]] = v17[3] in
    v26.p1 = v20 in
    v40.p0 = v3 in
    v27 = v12 in
    v7.p1 = v33 in
    v27[0] = v21 in
    v27[0] = v42 in
    let v114: [[Float]] = v26.p0 in
    let v54: [[Float]] = v14[3] in
    v25[0] = v4 in
    v20[0] = v4 in
    v5[0] = v42 in
    let v51: [Float] = v22[0] in
    v27[0] = v51 in
    let v135: [Float] = v54[0] in
    var v132: [Float] = v135 in
    v5[0] = v18 in
    v20[0] = v18 in
    let v56: [[Float]] = v6.p0 in
    let v82: [[Float]] = v26.p1 in
    v14[2] = v56 in
    v40.p0 = v20 in
    v5[0] = v132 in
    v14[2] = v11 in
    v7.p1 = v25 in
    v7.p0 = v27 in
    let v190: [Float] = v82[0] in
    v5[0] = v51 in
    v7.p1 = v5 in
    v5[0] = v190 in
    v14[0] = v114 in
    v5 = v69 in
    v40
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    let v4: [s0] = v0.p0 in
    let v7: s0 = v4[1] in
    let v17: s0 = f22(v7) in
    let v24: [[Float]] = v7.p0 in
    let v30: [Float] = v24[0] in
    let v81: Float = v30[0] in
    let v51: Float = f24(v17, v81) in
    v51
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]])], s0([[4.0]], [[5.0]])) in
    let v1: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()