  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f26: (s0, s0, s0) -> s0 = (v0: s0, v1: s0, v2: s0) -> s0 {
    var v3: s0 = v1 in
    var v4: s0 = v0 in
    v3 = v4 in
    let v7: [[Float]] = v3.p1 in
    let v5: [Float] = v7[0] in
    v3.p1 = v7 in
    let v14: Float = v5[0] in
    let v13: [[Float]] = v1.p0 in
    var v23: Float = v14 in
    let v21: [[Float]] = v0.p1 in
    let v20: [[Float]] = v4.p0 in
    v4.p0 = v13 in
    let v15: [Float] = v20[0] in
    var v24: [[Float]] = v20 in
    v24[0] = v5 in
    var v18: [[Float]] = v24 in
    v4.p0 = v20 in
    var v19: s0 = v2 in
    v4.p0 = v18 in
    var v34: [[Float]] = v18 in
    v24[1] = v5 in
    var v47: s0 = v4 in
    v19.p0 = v24 in
    var v44: [Float] = v15 in
    v4.p1 = v21 in
    v3.p0 = v34 in
    let v51: [[Float]] = v3.p1 in
    v44[0] = v23 in
    v19.p1 = v7 in
    let v37: [s0] = [v3, v47, v0, v4, v2, v19] in
    let v70: s0 = v37[3] in
    v19.p1 = v51 in
    let v102: [[Float]] = v70.p1 in
    var v60: [Float] = v44 in
    v47.p1 = v102 in
    v44[0] = v23 in
    v44[0] = v23 in
    let v107: s0 = v37[2] in
    v24[1] = v60 in
    v107
  } in
  let f25: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    let v1: [[Float]] = v2.p1 in
    let v7: [[Float]] = v0.p0 in
    var v4: [[Float]] = v1 in
    let v3: s0 = f26(v2, v0, v2) in
    v2 = v0 in
    let v5: s0 = f26(v3, v2, v0) in
    let v6: [Float] = v7[1] in
    let v9: s0 = f26(v3, v5, v3) in
    let v8: [[Float]] = v3.p1 in
    let v34: [Float] = v7[1] in
    let v13: [[Float]] = v3.p0 in
    v2.p1 = v8 in
    let v17: s0 = f26(v3, v2, v3) in
    var v21: [[Float]] = v7 in
    var v10: [[Float]] = v4 in
    let v15: [Float] = v7[1] in
    let v45: [[Float]] = v3.p1 in
    let v23: s0 = f26(v3, v0, v17) in
    var v14: s0 = v9 in
    let v24: s0 = s0(v13, v8) in
    let v22: [Float] = v8[0] in
    v4[0] = v34 in
    v21 = v13 in
    let v40: s0 = f26(v9, v2, v2) in
    let v49: s0 = f26(v0, v0, v23) in
    let v26: s0 = f26(v40, v49, v40) in
    let v42: s0 = f26(v26, v3, v14) in
    let v41: [[Float]] = [v22, v15, v22, v6, v34, v6] in
    let v32: s0 = f26(v23, v2, v26) in
    v4 = v45 in
    let v62: s0 = f26(v42, v0, v26) in
    let v28: s0 = f26(v62, v32, v17) in
    v14.p1 = v10 in
    let v44: [[Float]] = v26.p1 in
    let v81: [[Float]] = v28.p1 in
    let v54: s0 = f26(v9, v42, v26) in
    let v61: s0 = f26(v9, v40, v24) in
    v2.p0 = v21 in
    let v102: s0 = f26(v26, v62, v5) in
    let v89: [[Float]] = v24.p0 in
    let v56: s0 = f26(v42, v42, v26) in
    let v100: [Float] = v41[2] in
    var v88: [[Float]] = v10 in
    let v57: [[Float]] = v102.p0 in
    let v55: [[Float]] = v49.p0 in
    var v103: [[Float]] = v57 in
    v14.p1 = v81 in
    v14.p1 = v8 in
    v14.p1 = v88 in
    v2.p0 = v89 in
    v14.p0 = v55 in
    v21[0] = v100 in
    let v118: s0 = f26(v62, v14, v14) in
    v14.p0 = v103 in
    v2.p1 = v44 in
    let v65: s0 = f26(v102, v42, v42) in
    v2.p1 = v8 in
    let v98: s0 = f26(v65, v9, v3) in
    v14 = v118 in
    let v157: s0 = f26(v54, v61, v56) in
    let v128: s0 = f26(v17, v98, v157) in
    v128
  } in
  let f23: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    var v5: s0 = v1 in
    let v7: s0 = f25(v1) in
    let v13: [[Float]] = v5.p0 in
    var v11: s0 = v5 in
    var v15: s0 = v5 in
    let v14: [[Float]] = v15.p1 in
    let v19: [[Float]] = v7.p0 in
    let v3: [Float] = v13[1] in
    let v52: s0 = f25(v1) in
    let v26: [[Float]] = v0.p1 in
    var v40: [[Float]] = v13 in
    let v27: [[Float]] = v52.p0 in
    v15.p0 = v40 in
    v5.p1 = v26 in
    v40[0] = v3 in
    let v66: [Float] = v14[0] in
    var v38: [[Float]] = v19 in
    v11.p0 = v27 in
    let v67: s0 = s0(v38, v14) in
    v15.p0 = v40 in
    v40[0] = v66 in
    let v55: s0 = f26(v67, v11, v11) in
    v15.p1 = v26 in
    var v97: s0 = v55 in
    v97
  } in
  let noinline_f0: ([[s0]], [[s0]], s0, s0, [[s0]], Float) -> Float = (v0: [[s0]], v1: [[s0]], v2: s0, v3: s0, v4: [[s0]], v5: Float) -> Float {
    let v9: s0 = f23(v3, v3) in
    let v11: [[Float]] = v9.p1 in
    let v31: [Float] = v11[0] in
    let v50: Float = v31[0] in
    v50
  } in
  fun loop(i: Int, v0: [[s0]], v1: [[s0]], v2: s0, v3: s0, v4: [[s0]], v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0]], [[2.0]])], [s0([[3.0], [4.0]], [[5.0]])]] in
    let v1: [[s0]] = [[s0([[6.0], [7.0]], [[8.0]])], [s0([[9.0], [10.0]], [[11.0]])]] in
    let v2: s0 = s0([[12.0], [13.0]], [[14.0]]) in
    let v3: s0 = s0([[15.0], [16.0]], [[17.0]]) in
    let v4: [[s0]] = [[s0([[18.0], [19.0]], [[20.0]])], [s0([[21.0], [22.0]], [[23.0]])], [s0([[24.0], [25.0]], [[26.0]])]] in
    let v5: Float = 27.0 in
    let initialResult: Float = 27.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()