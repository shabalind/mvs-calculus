  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
    var p2: s0
    var p3: [s0]
    var p4: [[s0]]
    var p5: [[s0]]
  } in
  struct s2 {
    var p0: s1
    var p1: s0
  } in
  let f51: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    var v5: [Float] = v0 in
    let v1: Float = v0[0] in
    var v7: Float = v1 in
    var v2: [Float] = v5 in
    var v23: [Float] = v2 in
    var v17: [Float] = v0 in
    let v13: Float = v23[0] in
    var v15: Float = v7 in
    var v22: [Float] = v2 in
    let v47: Float = v23[1] in
    v5[1] = v15 in
    var v27: [Float] = v22 in
    var v70: [Float] = v0 in
    v22[0] = v13 in
    var v33: Float = v47 in
    v5 = v70 in
    v5[1] = v33 in
    v5 = v17 in
    v22[1] = v15 in
    v27
  } in
  let f48: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    v1
  } in
  let f31: ([[Float]], s0) -> [[Float]] = (v0: [[Float]], v1: s0) -> [[Float]] {
    let v6: [[Float]] = v1.p1 in
    let v19: [Float] = v1.p0 in
    let v17: s0 = s0(v19, v6) in
    let v14: s0 = f48(v17, v17) in
    let v22: [[Float]] = v14.p1 in
    v22
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p1 in
    let v4: [Float] = v2[2] in
    var v9: s0 = v0 in
    var v7: [[Float]] = v2 in
    var v6: [[Float]] = v7 in
    let v3: [[Float]] = f31(v7, v0) in
    let v1: s0 = f48(v0, v0) in
    let v13: [Float] = v9.p0 in
    let v17: s0 = s0(v13, v6) in
    v6[0] = v4 in
    let v27: [Float] = f51(v13) in
    v7[0] = v4 in
    let v11: [Float] = v9.p0 in
    let v14: s0 = f48(v9, v1) in
    let v24: [Float] = f51(v11) in
    var v29: [Float] = v27 in
    var v40: [Float] = v24 in
    v9.p1 = v3 in
    v9.p0 = v40 in
    v9.p1 = v6 in
    let v46: [[Float]] = v14.p1 in
    v9.p0 = v29 in
    v6 = v46 in
    let v30: s0 = f48(v9, v17) in
    v30
  } in
  let noinline_f0: ([s2], Float) -> Float = (v0: [s2], v1: Float) -> Float {
    var v2: [s2] = v0 in
    let v6: s2 = v2[2] in
    let v10: s1 = v6.p0 in
    let v13: [[s0]] = v10.p5 in
    let v23: s2 = v2[0] in
    let v12: s1 = v23.p0 in
    let v18: [s0] = v13[0] in
    let v24: [[s0]] = v12.p4 in
    var v29: [[s0]] = v24 in
    let v27: [s0] = v29[1] in
    v2[1] = v23 in
    v29[1] = v18 in
    let v73: s0 = v27[0] in
    let v59: [s0] = v13[0] in
    let v123: s0 = f22(v73) in
    v29[1] = v59 in
    let v248: [[Float]] = v123.p1 in
    let v126: [Float] = v248[2] in
    let v214: Float = v126[0] in
    v214
  } in
  fun loop(i: Int, v0: [s2], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2(s1([s0([0.0, 1.0], [[2.0], [3.0], [4.0]]), s0([5.0, 6.0], [[7.0], [8.0], [9.0]])], [[s0([10.0, 11.0], [[12.0], [13.0], [14.0]])]], s0([15.0, 16.0], [[17.0], [18.0], [19.0]]), [s0([20.0, 21.0], [[22.0], [23.0], [24.0]]), s0([25.0, 26.0], [[27.0], [28.0], [29.0]]), s0([30.0, 31.0], [[32.0], [33.0], [34.0]])], [[s0([35.0, 36.0], [[37.0], [38.0], [39.0]])], [s0([40.0, 41.0], [[42.0], [43.0], [44.0]])]], [[s0([45.0, 46.0], [[47.0], [48.0], [49.0]])]]), s0([50.0, 51.0], [[52.0], [53.0], [54.0]])), s2(s1([s0([55.0, 56.0], [[57.0], [58.0], [59.0]]), s0([60.0, 61.0], [[62.0], [63.0], [64.0]])], [[s0([65.0, 66.0], [[67.0], [68.0], [69.0]])]], s0([70.0, 71.0], [[72.0], [73.0], [74.0]]), [s0([75.0, 76.0], [[77.0], [78.0], [79.0]]), s0([80.0, 81.0], [[82.0], [83.0], [84.0]]), s0([85.0, 86.0], [[87.0], [88.0], [89.0]])], [[s0([90.0, 91.0], [[92.0], [93.0], [94.0]])], [s0([95.0, 96.0], [[97.0], [98.0], [99.0]])]], [[s0([100.0, 101.0], [[102.0], [103.0], [104.0]])]]), s0([105.0, 106.0], [[107.0], [108.0], [109.0]])), s2(s1([s0([110.0, 111.0], [[112.0], [113.0], [114.0]]), s0([115.0, 116.0], [[117.0], [118.0], [119.0]])], [[s0([120.0, 121.0], [[122.0], [123.0], [124.0]])]], s0([125.0, 126.0], [[127.0], [128.0], [129.0]]), [s0([130.0, 131.0], [[132.0], [133.0], [134.0]]), s0([135.0, 136.0], [[137.0], [138.0], [139.0]]), s0([140.0, 141.0], [[142.0], [143.0], [144.0]])], [[s0([145.0, 146.0], [[147.0], [148.0], [149.0]])], [s0([150.0, 151.0], [[152.0], [153.0], [154.0]])]], [[s0([155.0, 156.0], [[157.0], [158.0], [159.0]])]]), s0([160.0, 161.0], [[162.0], [163.0], [164.0]]))] in
    let v1: Float = 165.0 in
    let initialResult: Float = 165.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()