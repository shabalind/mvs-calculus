  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
  } in
  struct s2 {
    var p0: Float
  } in
  struct s9 {
    var p0: s1
  } in
  let f98: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    let v4: s2 = s2(v6) in
    let v19: Float = v4.p0 in
    v19
  } in
  let f95: (s2) -> s2 = (v0: s2) -> s2 {
    let v7: Float = v0.p0 in
    let v8: Float = v0.p0 in
    let v6: [s2] = [v0, v0] in
    let v1: Float = f98(v8) in
    let v12: s2 = v6[0] in
    var v16: s2 = v12 in
    let v11: Float = f98(v7) in
    let v20: Float = f98(v11) in
    let v22: Float = v0.p0 in
    let v24: Float = v22 - v20 in
    v16.p0 = v1 in
    v16.p0 = v24 in
    v16
  } in
  let f52: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v2: Float = v0 in
    let v1: [Float] = [v2, v0, v0, v7, v7] in
    let v3: Float = f98(v2) in
    var v8: [Float] = v1 in
    var v6: Float = v3 in
    var v9: [Float] = v8 in
    let v11: Float = f98(v6) in
    v9[0] = v3 in
    let v17: Float = f98(v0) in
    let v14: Float = v1[2] in
    let v16: Float = v8[0] in
    var v25: [Float] = v8 in
    let v19: Float = v9[2] in
    let v27: [[Float]] = [v25, v1, v8, v25, v1] in
    let v13: s2 = s2(v7) in
    let v30: Float = v9[4] in
    v7 = v11 in
    v8[2] = v19 in
    let v26: [Float] = v27[4] in
    var v43: [[Float]] = v27 in
    let v38: [Float] = v43[2] in
    v8[4] = v7 in
    let v53: Float = v13.p0 in
    var v36: s2 = v13 in
    let v42: Float = v36.p0 in
    var v22: [Float] = v26 in
    let v51: Float = f98(v0) in
    let v125: Float = v38[1] in
    let v81: s2 = f95(v13) in
    let v90: s2 = f95(v36) in
    v36.p0 = v125 in
    var v77: s2 = v36 in
    let v32: Float = v77.p0 in
    v8 = v22 in
    let v68: s2 = f95(v36) in
    let v57: Float = v13.p0 in
    v77.p0 = v125 in
    v43[4] = v38 in
    var v55: s2 = v68 in
    v22[0] = v42 in
    let v91: Float = v90.p0 in
    let v54: [s2] = [v81, v77, v90, v77] in
    let v69: s2 = f95(v68) in
    v55.p0 = v14 in
    let v78: s2 = f95(v69) in
    v22[4] = v53 in
    v25[0] = v17 in
    let v84: Float = v36.p0 in
    v55.p0 = v16 in
    v22[2] = v84 in
    let v179: s2 = f95(v13) in
    v55.p0 = v6 in
    v77.p0 = v91 in
    let v97: Float = v11 - v57 in
    let v99: s2 = v54[0] in
    v36.p0 = v32 in
    let v214: s2 = v54[3] in
    let v160: Float = v55.p0 in
    let v203: Float = f98(v19) in
    v7 = v19 in
    v9[2] = v160 in
    v55.p0 = v203 in
    v77 = v78 in
    v36.p0 = v0 in
    let v279: Float = v214.p0 in
    v36.p0 = v53 in
    v8[2] = v51 in
    v25[4] = v97 in
    v55.p0 = v279 in
    let v204: Float = v179.p0 in
    let v183: s2 = f95(v99) in
    v36.p0 = v204 in
    v36.p0 = v30 in
    let v266: Float = v183.p0 in
    v266
  } in
  let noinline_f0: ([[s9]], Float) -> Float = (v0: [[s9]], v1: Float) -> Float {
    var v8: Float = v1 in
    let v6: Float = f52(v8) in
    let v22: Float = f98(v6) in
    let v47: Float = f98(v8) in
    v8 = v47 in
    let v91: Float = v47 - v22 in
    v91
  } in
  fun loop(i: Int, v0: [[s9]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s9]] = [[s9(s1(s0([[0.0]], [[1.0]])))], [s9(s1(s0([[2.0]], [[3.0]])))]] in
    let v1: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()