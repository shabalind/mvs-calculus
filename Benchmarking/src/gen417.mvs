  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f29: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p0 in
    var v9: s0 = v0 in
    let v7: [[Float]] = v0.p1 in
    v9.p1 = v7 in
    let v3: [[Float]] = v9.p0 in
    var v4: [[Float]] = v2 in
    let v5: [[Float]] = v0.p1 in
    var v6: [[Float]] = v3 in
    let v8: s0 = s0(v2, v5) in
    v9.p0 = v3 in
    let v12: [Float] = v2[0] in
    let v11: [[Float]] = v0.p0 in
    let v22: [[Float]] = v8.p0 in
    let v13: [Float] = v11[0] in
    var v15: [Float] = v13 in
    let v41: s0 = s0(v2, v7) in
    let v30: [Float] = v5[0] in
    v9.p0 = v4 in
    v4[0] = v12 in
    var v23: [[Float]] = v7 in
    v6[1] = v15 in
    var v32: [[Float]] = v7 in
    let v33: [[Float]] = v41.p0 in
    let v36: s0 = s0(v2, v7) in
    let v42: [[Float]] = v0.p1 in
    let v51: [[Float]] = v41.p1 in
    let v58: [Float] = v32[1] in
    var v50: s0 = v9 in
    v9.p1 = v5 in
    v6[0] = v30 in
    v9.p0 = v11 in
    v23[1] = v12 in
    let v59: [[Float]] = v36.p1 in
    v9.p0 = v6 in
    v50.p0 = v6 in
    let v107: [Float] = v22[1] in
    let v70: s0 = s0(v22, v32) in
    v50.p0 = v3 in
    v9.p1 = v59 in
    v9.p1 = v42 in
    let v119: [[Float]] = v70.p1 in
    v23[1] = v107 in
    v9.p0 = v33 in
    v50.p1 = v23 in
    let v71: [Float] = v119[0] in
    v9.p0 = v33 in
    v9.p1 = v7 in
    v9.p1 = v51 in
    v9.p0 = v33 in
    v4[1] = v58 in
    v23[2] = v71 in
    v9.p1 = v59 in
    v50
  } in
  let f16: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v1: Float = v0 in
    var v4: Float = v1 in
    var v2: Float = v3 in
    let v7: [Float] = [v2, v0, v1, v3, v3] in
    let v9: Float = v7[3] in
    var v6: [Float] = v7 in
    var v8: Float = v2 in
    var v5: [Float] = v7 in
    let v15: Float = v5[4] in
    let v11: Float = v6[4] in
    var v18: [Float] = v5 in
    v6[1] = v9 in
    var v16: [Float] = v18 in
    let v14: Float = v16[3] in
    var v13: [Float] = v6 in
    let v20: Float = v7[1] in
    let v48: Float = v6[1] in
    v6[4] = v20 in
    let v19: Float = v18[4] in
    let v28: Float = v18[0] in
    let v33: Float = v13[2] in
    var v34: [Float] = v13 in
    var v29: Float = v15 in
    var v55: [Float] = v34 in
    let v38: [Float] = [v0, v14, v11, v33, v4, v19, v14] in
    var v43: [Float] = v38 in
    v6[1] = v8 in
    let v56: Float = v55[4] in
    v34[4] = v48 in
    v55[4] = v29 in
    var v47: [Float] = v43 in
    v47[2] = v56 in
    v34[2] = v28 in
    let v91: Float = v47[6] in
    v5[1] = v28 in
    v91
  } in
  let f6: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p1 in
    let v4: s0 = f29(v0) in
    let v2: s0 = f29(v4) in
    let v3: [[Float]] = v2.p1 in
    let v24: [[Float]] = v4.p1 in
    var v21: s0 = v4 in
    let v34: [[Float]] = v21.p0 in
    let v19: [[Float]] = v2.p0 in
    let v47: s0 = s0(v19, v24) in
    v21.p1 = v3 in
    let v46: [[Float]] = v47.p0 in
    let v26: s0 = f29(v47) in
    v21.p0 = v46 in
    v21.p1 = v5 in
    v21 = v26 in
    var v40: s0 = v0 in
    let v32: [[Float]] = v26.p1 in
    v40.p1 = v5 in
    var v61: s0 = v40 in
    v61.p1 = v32 in
    v40.p0 = v34 in
    v61
  } in
  let f5: (Float) -> Float = (v0: Float) -> Float {
    let v4: Float = f16(v0) in
    let v1: Float = f16(v0) in
    let v7: Float = f16(v1) in
    let v2: Float = f16(v0) in
    let v5: Float = f16(v0) in
    var v9: Float = v1 in
    let v6: Float = f16(v9) in
    let v11: Float = v4 - v4 in
    var v10: Float = v7 in
    let v8: Float = v1 + v0 in
    let v14: Float = v9 - v7 in
    var v16: Float = v5 in
    var v12: Float = v9 in
    var v18: Float = v8 in
    var v21: Float = v5 in
    let v23: Float = f16(v6) in
    let v24: Float = f16(v12) in
    let v40: Float = v10 * v21 in
    let v17: [Float] = [v14, v9, v0] in
    v16 = v11 in
    v18 = v2 in
    let v63: Float = f16(v18) in
    let v47: [Float] = [v1, v63, v16, v40, v23] in
    var v46: [Float] = v47 in
    let v66: Float = v46[1] in
    var v39: [Float] = v17 in
    let v80: Float = v39[2] in
    v18 = v24 in
    var v78: Float = v66 in
    v16 = v80 in
    v78
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v3: [s0] = v0[1] in
    let v7: s0 = v3[0] in
    let v17: s0 = f6(v7) in
    let v61: [[Float]] = v17.p1 in
    let v36: [Float] = v61[2] in
    let v43: Float = v36[0] in
    let v139: Float = f5(v43) in
    v139
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]])], [s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])], [s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])]] in
    let v1: Float = 15.0 in
    let initialResult: Float = 15.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()