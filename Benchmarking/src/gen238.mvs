  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  let f21: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    let v5: [[Float]] = v7.p2 in
    v7.p0 = v5 in
    var v4: [[Float]] = v5 in
    let v8: [Float] = v4[1] in
    v4[0] = v8 in
    v7.p2 = v4 in
    let v3: Float = v8[0] in
    let v9: [[Float]] = v7.p0 in
    let v1: [[Float]] = v0.p1 in
    let v2: [Float] = [v3] in
    var v6: Float = v3 in
    let v10: [[Float]] = v7.p0 in
    v7.p0 = v4 in
    let v13: Float = v2[0] in
    v7 = v0 in
    let v11: [[Float]] = v0.p2 in
    var v12: [Float] = v2 in
    let v18: [[Float]] = v7.p1 in
    let v20: [[Float]] = v0.p1 in
    v4[1] = v2 in
    var v25: Float = v13 in
    let v19: [Float] = v18[0] in
    let v14: s0 = s0(v10, v1, v10) in
    v4[1] = v12 in
    var v17: Float = v6 in
    v4[1] = v19 in
    let v16: [[Float]] = v14.p2 in
    v7.p2 = v9 in
    v4[0] = v19 in
    v12[0] = v17 in
    v7.p0 = v11 in
    let v45: [[Float]] = v14.p1 in
    var v39: s0 = v14 in
    let v32: [[Float]] = v0.p1 in
    let v47: [[Float]] = v39.p0 in
    v12[0] = v25 in
    v39.p1 = v18 in
    v39.p0 = v16 in
    let v54: s0 = s0(v4, v45, v47) in
    v4[1] = v2 in
    let v51: Float = v8[0] in
    v7.p1 = v32 in
    v39.p0 = v5 in
    v39.p1 = v20 in
    v12[0] = v51 in
    v54
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v5: s0 = f21(v0) in
    let v8: [[Float]] = v5.p0 in
    let v3: [Float] = v8[0] in
    let v31: Float = v3[0] in
    var v139: Float = v31 in
    v139
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0]], [[4.0], [5.0], [6.0]]) in
    let v1: Float = 7.0 in
    let initialResult: Float = 7.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()