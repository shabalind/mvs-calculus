  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: s0
  } in
  let f17: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    v6 = v0 in
    let v7: [s0] = [v0, v6, v6, v6, v0, v6, v0] in
    var v9: [s0] = v7 in
    let v4: s0 = v7[4] in
    let v8: [[Float]] = v4.p0 in
    var v2: s0 = v0 in
    v9[2] = v2 in
    let v1: [[Float]] = v0.p1 in
    var v11: s0 = v4 in
    v11 = v4 in
    var v13: s0 = v4 in
    v6 = v13 in
    let v21: s0 = s0(v1, v1) in
    var v14: s0 = v11 in
    let v25: [[s0]] = [v7, v9, v7, v7] in
    v9[5] = v11 in
    var v17: [[s0]] = v25 in
    v9[1] = v21 in
    let v18: [s0] = v17[3] in
    var v30: [[Float]] = v8 in
    let v22: [Float] = v1[0] in
    let v36: [[Float]] = v6.p1 in
    v2.p1 = v30 in
    let v67: [[Float]] = v2.p0 in
    v6.p0 = v1 in
    v13.p0 = v67 in
    v9 = v7 in
    let v20: [[Float]] = v21.p1 in
    let v43: [[Float]] = v14.p0 in
    v9[0] = v13 in
    var v51: [s0] = v18 in
    let v23: s0 = v51[3] in
    var v35: [[Float]] = v8 in
    let v74: [[Float]] = v4.p1 in
    v2.p0 = v43 in
    v35[1] = v22 in
    let v54: [[Float]] = v4.p1 in
    v11.p1 = v35 in
    var v86: s0 = v23 in
    let v77: s0 = s0(v74, v54) in
    v86.p1 = v36 in
    var v94: [s0] = v51 in
    v6.p0 = v20 in
    v86.p1 = v35 in
    v17[2] = v94 in
    v6 = v77 in
    v86
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [[Float]] = v0.p1 in
    let v5: [Float] = v3[2] in
    let v8: s0 = f17(v0) in
    let v4: [[Float]] = v8.p0 in
    var v6: s0 = v0 in
    v6.p1 = v4 in
    let v12: [Float] = v3[1] in
    let v1: s0 = f17(v0) in
    let v7: s0 = f17(v1) in
    let v13: s0 = f17(v6) in
    let v27: [Float] = v4[2] in
    v6.p1 = v4 in
    let v11: Float = v5[0] in
    let v24: [[Float]] = v1.p1 in
    var v18: [Float] = v12 in
    let v30: [[Float]] = v8.p0 in
    let v21: [Float] = v30[0] in
    let v29: s0 = f17(v7) in
    var v50: s0 = v1 in
    let v15: [[Float]] = v8.p1 in
    let v34: [[Float]] = v29.p1 in
    let v37: [Float] = v4[1] in
    v6.p1 = v24 in
    var v47: [[Float]] = v34 in
    v6.p1 = v24 in
    v50.p1 = v47 in
    v47[2] = v5 in
    v50.p0 = v47 in
    v6.p0 = v15 in
    var v53: s0 = v13 in
    let v41: [[Float]] = v53.p0 in
    v18[0] = v11 in
    var v70: [[Float]] = v30 in
    let v36: [Float] = v70[2] in
    let v49: [Float] = v4[0] in
    v50.p0 = v30 in
    let v63: [[Float]] = [v21, v37, v5, v18, v21, v12, v36] in
    let v197: [Float] = v63[4] in
    let v124: s0 = f17(v50) in
    v47[1] = v197 in
    let v69: [[Float]] = v1.p1 in
    let v77: s0 = f17(v6) in
    v47[1] = v5 in
    v47[1] = v27 in
    v53.p0 = v34 in
    let v148: [[Float]] = v77.p1 in
    let v156: s0 = f17(v124) in
    let v242: [[Float]] = v156.p0 in
    let v108: s0 = s0(v242, v41) in
    v53.p0 = v148 in
    v6.p1 = v69 in
    v70[2] = v49 in
    v108
  } in
  let noinline_f0: ([s2], Float) -> Float = (v0: [s2], v1: Float) -> Float {
    let v6: s2 = v0[1] in
    let v4: s2 = v0[1] in
    let v5: s0 = v4.p1 in
    let v14: Float = v1 / v1 in
    let v7: s0 = v6.p1 in
    var v19: s0 = v5 in
    let v29: [[Float]] = v7.p0 in
    let v12: s0 = f17(v19) in
    let v70: s0 = f12(v19) in
    let v33: [[Float]] = v70.p0 in
    let v39: s2 = v0[0] in
    var v45: [[Float]] = v29 in
    let v52: [Float] = v33[0] in
    var v41: [Float] = v52 in
    v19.p1 = v45 in
    let v74: s0 = v39.p1 in
    let v47: [[Float]] = v74.p0 in
    var v99: [Float] = v41 in
    v41[0] = v14 in
    var v62: s0 = v19 in
    v19.p0 = v45 in
    let v122: [[Float]] = v12.p0 in
    v62.p0 = v122 in
    let v87: Float = v41[0] in
    v62.p1 = v47 in
    let v148: [Float] = [v87, v14] in
    v45[2] = v99 in
    let v108: Float = v148[1] in
    v19 = v62 in
    v108
  } in
  fun loop(i: Int, v0: [s2], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([[s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]])], [s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])]], s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])), s2([[s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])], [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])]], s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]))] in
    let v1: Float = 36.0 in
    let initialResult: Float = 36.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()