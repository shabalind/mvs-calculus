  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: s1
    var p1: s1
  } in
  struct s3 {
    var p0: [s0]
    var p1: s0
  } in
  struct s6 {
    var p0: [s3]
    var p1: s0
  } in
  struct s10 {
    var p0: s2
    var p1: s6
  } in
  let f32: (Float, s0) -> Float = (v0: Float, v1: s0) -> Float {
    let v8: [[Float]] = v1.p0 in
    var v4: [[Float]] = v8 in
    let v3: [Float] = v4[0] in
    let v2: [[Float]] = v1.p1 in
    let v5: Float = v3[0] in
    let v7: [Float] = v2[2] in
    let v17: [[Float]] = v1.p0 in
    let v18: [[Float]] = v1.p1 in
    let v20: [Float] = v18[0] in
    v4[0] = v7 in
    v4[0] = v20 in
    let v12: [Float] = v17[1] in
    let v16: Float = v12[0] in
    let v26: Float = v5 - v16 in
    v4[0] = v3 in
    v26
  } in
  let noinline_f0: ([[s10]], s3, Float) -> Float = (v0: [[s10]], v1: s3, v2: Float) -> Float {
    var v7: s3 = v1 in
    let v5: [s0] = v7.p0 in
    let v10: [s0] = v7.p0 in
    let v22: s0 = v10[0] in
    let v60: Float = f32(v2, v22) in
    v7.p0 = v5 in
    let v62: Float = f32(v60, v22) in
    v62
  } in
  fun loop(i: Int, v0: [[s10]], v1: s3, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s10]] = [[s10(s2(s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), [[s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])]]), s1(s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), [[s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]])]])), s6([s3([s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])], s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]]))], s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]])))], [s10(s2(s1(s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), [[s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]])]]), s1(s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]]), [[s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]])]])), s6([s3([s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]])], s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]]))], s0([[65.0], [66.0]], [[67.0], [68.0], [69.0]])))]] in
    let v1: s3 = s3([s0([[70.0], [71.0]], [[72.0], [73.0], [74.0]])], s0([[75.0], [76.0]], [[77.0], [78.0], [79.0]])) in
    let v2: Float = 80.0 in
    let initialResult: Float = 80.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()