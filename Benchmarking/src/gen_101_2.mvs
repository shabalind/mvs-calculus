  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s0]]
  } in
  let f86: (s2) -> s2 = (v0: s2) -> s2 {
    var v1: s2 = v0 in
    var v8: s2 = v0 in
    let v3: [[s0]] = v8.p1 in
    v1 = v8 in
    let v5: [s2] = [v0] in
    var v6: [s2] = v5 in
    let v7: [[s0]] = v8.p1 in
    let v11: [s1] = v1.p0 in
    v1.p0 = v11 in
    v6[0] = v1 in
    let v4: [s1] = v8.p0 in
    var v9: [[s0]] = v7 in
    v8.p1 = v9 in
    v1.p0 = v4 in
    let v43: s2 = v6[0] in
    v8.p1 = v3 in
    v43
  } in
  let f85: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [[Float]] = v0.p0 in
    let v2: [[Float]] = v0.p1 in
    let v1: [Float] = v3[0] in
    var v6: s0 = v0 in
    v6.p1 = v2 in
    var v5: [[Float]] = v3 in
    var v4: [Float] = v1 in
    var v9: [[Float]] = v5 in
    var v8: s0 = v0 in
    let v12: [Float] = v2[2] in
    let v10: [[Float]] = v0.p0 in
    let v7: [[Float]] = v6.p1 in
    v5[0] = v12 in
    v5[0] = v4 in
    let v11: [Float] = v10[0] in
    let v17: [Float] = v5[0] in
    let v14: [[[Float]]] = [v10, v9, v10, v5, v9] in
    let v24: [[Float]] = v0.p1 in
    let v16: [[[Float]]] = [v9, v5, v5, v3, v9, v5] in
    var v29: [[[Float]]] = v16 in
    v6.p1 = v24 in
    let v23: [[Float]] = v14[1] in
    var v22: [[[Float]]] = v16 in
    v29[0] = v5 in
    let v19: [[Float]] = v0.p0 in
    v22[3] = v10 in
    v6.p0 = v3 in
    let v31: [[Float]] = v22[0] in
    let v21: [[Float]] = v0.p0 in
    v8.p0 = v23 in
    v8.p0 = v23 in
    let v32: [[Float]] = v14[4] in
    var v47: [[Float]] = v7 in
    let v72: [[Float]] = v22[0] in
    let v20: [[[[Float]]]] = [v14, v14, v14, v14, v14] in
    let v46: [[Float]] = v0.p1 in
    let v27: s0 = s0(v21, v7) in
    v6.p0 = v5 in
    v6.p1 = v7 in
    let v33: [[Float]] = v8.p0 in
    v6.p1 = v47 in
    let v41: [[Float]] = v8.p0 in
    var v28: [[[Float]]] = v14 in
    v8.p0 = v9 in
    v6.p0 = v9 in
    v29[3] = v41 in
    let v40: [[Float]] = v28[2] in
    v29[3] = v21 in
    var v39: [[[Float]]] = v28 in
    let v36: [[Float]] = v6.p1 in
    let v42: [[Float]] = v27.p1 in
    v6.p1 = v2 in
    let v35: [Float] = v36[2] in
    let v53: [[Float]] = v39[4] in
    let v38: [[Float]] = v29[1] in
    v47[2] = v1 in
    let v43: [[Float]] = v27.p0 in
    let v51: [[Float]] = v0.p1 in
    v9[0] = v11 in
    v6.p1 = v46 in
    let v60: [[Float]] = v0.p1 in
    v8.p1 = v7 in
    v9 = v38 in
    v39[1] = v23 in
    let v104: [[Float]] = v6.p0 in
    var v94: s0 = v0 in
    v94.p1 = v2 in
    v8.p0 = v19 in
    v47 = v42 in
    v8.p0 = v104 in
    var v77: s0 = v6 in
    var v172: [[Float]] = v53 in
    let v106: [[Float]] = v6.p1 in
    v77.p1 = v42 in
    let v164: [[[Float]]] = v20[3] in
    let v129: [[Float]] = v0.p1 in
    let v134: [[Float]] = v94.p1 in
    v8.p0 = v5 in
    v9[0] = v17 in
    v77.p1 = v134 in
    v94.p1 = v106 in
    v39[4] = v43 in
    v6.p1 = v46 in
    v6.p0 = v33 in
    v94.p0 = v32 in
    v6.p1 = v129 in
    let v170: [[Float]] = v77.p1 in
    v94.p1 = v60 in
    let v109: [[Float]] = v164[1] in
    v5[0] = v35 in
    v77.p0 = v172 in
    v6.p1 = v51 in
    let v124: [[Float]] = v6.p0 in
    let v160: s0 = s0(v72, v42) in
    var v143: s0 = v160 in
    v77.p1 = v36 in
    v39[2] = v109 in
    v77.p0 = v31 in
    v6.p0 = v40 in
    v143.p1 = v36 in
    v143.p1 = v129 in
    v22[0] = v124 in
    v143.p1 = v170 in
    v143.p1 = v134 in
    v22[5] = v109 in
    v143
  } in
  let f84: (s2) -> s2 = (v0: s2) -> s2 {
    let v2: s2 = f86(v0) in
    let v8: s2 = f86(v2) in
    let v16: [[s0]] = v8.p1 in
    let v21: [s1] = v0.p0 in
    let v54: s2 = s2(v21, v16) in
    let v35: s2 = f86(v54) in
    let v49: s2 = f86(v2) in
    let v85: s2 = f86(v8) in
    let v58: s2 = f86(v85) in
    let v98: [s2] = [v58, v49, v85, v58, v35] in
    let v161: s2 = v98[1] in
    let v205: s2 = f86(v161) in
    v205
  } in
  let f59: (s2, s0) -> s0 = (v0: s2, v1: s0) -> s0 {
    let v2: [[Float]] = v1.p1 in
    let v4: s0 = f85(v1) in
    var v6: s0 = v4 in
    var v5: [[Float]] = v2 in
    v6.p1 = v2 in
    v5 = v2 in
    v6.p1 = v2 in
    let v18: [Float] = v5[2] in
    v5[0] = v18 in
    v6.p1 = v2 in
    let v19: [[Float]] = v6.p0 in
    v6.p1 = v5 in
    let v66: s0 = s0(v19, v5) in
    v66
  } in
  let f25: (s2, s2) -> s2 = (v0: s2, v1: s2) -> s2 {
    let v7: [[s0]] = v0.p1 in
    var v5: s2 = v1 in
    let v4: [s0] = v7[0] in
    v5.p1 = v7 in
    let v3: [s0] = v7[0] in
    var v2: [[s0]] = v7 in
    let v8: [[s0]] = v0.p1 in
    let v12: [s0] = v8[0] in
    v2[0] = v4 in
    v2[0] = v3 in
    v2[0] = v12 in
    v5.p1 = v2 in
    let v30: s2 = f84(v5) in
    v30
  } in
  let f22: (Float, [[s0]], s2) -> Float = (v0: Float, v1: [[s0]], v2: s2) -> Float {
    let v13: s2 = f25(v2, v2) in
    let v9: [s1] = v13.p0 in
    let v17: s1 = v9[0] in
    let v15: [[s0]] = v17.p0 in
    let v18: [s0] = v15[1] in
    let v34: s0 = v18[0] in
    let v16: s0 = f85(v34) in
    let v36: [[Float]] = v16.p1 in
    let v58: [Float] = v36[0] in
    let v76: Float = v58[0] in
    v76
  } in
  let noinline_f0: (s0, s1, s2, [[s0]], Float) -> Float = (v0: s0, v1: s1, v2: s2, v3: [[s0]], v4: Float) -> Float {
    let v6: [[Float]] = v0.p0 in
    var v9: [[Float]] = v6 in
    let v7: s0 = v1.p1 in
    let v20: s0 = f59(v2, v7) in
    let v13: s2 = f25(v2, v2) in
    let v16: s2 = f84(v13) in
    let v19: [Float] = v9[0] in
    var v30: Float = v4 in
    v9[0] = v19 in
    v30 = v4 in
    v30 = v4 in
    var v34: [Float] = v19 in
    let v32: Float = v34[0] in
    let v31: [[Float]] = v20.p1 in
    let v45: [Float] = v9[0] in
    v9[0] = v19 in
    let v66: [Float] = v31[0] in
    let v84: Float = f22(v32, v3, v16) in
    let v46: Float = v4 + v84 in
    v9[0] = v34 in
    var v72: Float = v46 in
    v34 = v45 in
    let v138: Float = v46 / v72 in
    v34[0] = v30 in
    v9[0] = v66 in
    v34[0] = v84 in
    v34[0] = v72 in
    v138
  } in
  fun loop(i: Int, v0: s0, v1: s1, v2: s2, v3: [[s0]], v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0], [2.0], [3.0]]) in
    let v1: s1 = s1([[s0([[4.0]], [[5.0], [6.0], [7.0]])], [s0([[8.0]], [[9.0], [10.0], [11.0]])]], s0([[12.0]], [[13.0], [14.0], [15.0]])) in
    let v2: s2 = s2([s1([[s0([[16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0]], [[21.0], [22.0], [23.0]])]], s0([[24.0]], [[25.0], [26.0], [27.0]])), s1([[s0([[28.0]], [[29.0], [30.0], [31.0]])], [s0([[32.0]], [[33.0], [34.0], [35.0]])]], s0([[36.0]], [[37.0], [38.0], [39.0]]))], [[s0([[40.0]], [[41.0], [42.0], [43.0]])]]) in
    let v3: [[s0]] = [[s0([[44.0]], [[45.0], [46.0], [47.0]])]] in
    let v4: Float = 48.0 in
    let initialResult: Float = 48.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()