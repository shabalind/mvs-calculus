  let f21: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    v0
  } in
  let f19: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v1: [Float] = v0[1] in
    var v3: [[Float]] = v0 in
    v3[0] = v1 in
    let v6: [Float] = v3[0] in
    let v8: [Float] = v3[0] in
    let v5: [[Float]] = f21(v0) in
    let v13: [[Float]] = [v1, v8] in
    v3[1] = v6 in
    let v14: [[Float]] = f21(v5) in
    v3[1] = v6 in
    var v100: [[Float]] = v13 in
    let v60: [Float] = v14[0] in
    v3[0] = v60 in
    v100
  } in
  let f18: ([[Float]], [[Float]]) -> [[Float]] = (v0: [[Float]], v1: [[Float]]) -> [[Float]] {
    let v7: [[[Float]]] = [v1, v0, v1] in
    var v5: [[Float]] = v0 in
    var v4: [[Float]] = v1 in
    let v3: [[Float]] = f19(v4) in
    let v6: [[[Float]]] = [v3] in
    let v2: [[Float]] = f21(v5) in
    var v11: [[Float]] = v3 in
    let v15: [[Float]] = f21(v4) in
    var v8: [[[Float]]] = v7 in
    let v9: [Float] = v0[0] in
    var v24: [Float] = v9 in
    v5[0] = v24 in
    v8[0] = v11 in
    let v10: Float = v24[0] in
    let v23: [Float] = v15[0] in
    v11[0] = v23 in
    var v34: [Float] = v23 in
    var v19: [[[Float]]] = v8 in
    let v41: Float = v10 + v10 in
    v5[1] = v34 in
    var v28: Float = v41 in
    v8[1] = v2 in
    let v22: [[Float]] = f21(v2) in
    v24[0] = v10 in
    var v81: [[[Float]]] = v6 in
    let v50: [[Float]] = v81[0] in
    let v52: [Float] = v22[0] in
    v4[1] = v23 in
    let v49: [Float] = v50[0] in
    v4[0] = v9 in
    v11[0] = v34 in
    v24[0] = v28 in
    var v76: [[[Float]]] = v19 in
    let v101: [[[[Float]]]] = [v76, v19, v76, v8, v76, v8, v7] in
    let v75: [[[Float]]] = v101[5] in
    v76[1] = v11 in
    v81 = v6 in
    v5[1] = v52 in
    let v149: [[Float]] = v75[0] in
    v5[1] = v49 in
    v149
  } in
  let f16: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    var v4: [[Float]] = v0 in
    let v7: [Float] = v0[1] in
    var v6: [[Float]] = v4 in
    var v5: [[Float]] = v6 in
    let v1: [[Float]] = f18(v5, v5) in
    v4[1] = v7 in
    let v2: [[Float]] = f19(v6) in
    let v13: [[Float]] = f19(v4) in
    let v22: [[Float]] = f19(v6) in
    let v35: [[Float]] = f18(v13, v2) in
    v5[0] = v7 in
    let v41: [[Float]] = f21(v13) in
    let v34: [Float] = v41[1] in
    let v36: [[Float]] = f18(v22, v1) in
    let v30: [[Float]] = f19(v5) in
    let v19: [[Float]] = f19(v13) in
    let v32: [[[Float]]] = [v35, v35, v19, v36, v6, v19, v5] in
    let v37: [[Float]] = v32[4] in
    var v92: [[[Float]]] = v32 in
    v92[3] = v37 in
    var v121: [[[Float]]] = v32 in
    var v210: [[[Float]]] = v121 in
    var v97: [[[Float]]] = v92 in
    let v86: [[[[Float]]]] = [v97, v92, v210, v97, v92, v210, v97] in
    v210[0] = v6 in
    let v131: [[[Float]]] = v86[1] in
    let v212: [[Float]] = v131[0] in
    v6[0] = v34 in
    v210[2] = v30 in
    v212
  } in
  let noinline_f0: ([[Float]], Float) -> Float = (v0: [[Float]], v1: Float) -> Float {
    let v6: [[Float]] = f16(v0) in
    let v5: [Float] = v0[0] in
    var v4: Float = v1 in
    let v7: [Float] = v6[1] in
    var v2: [Float] = v5 in
    let v10: Float = v5[0] in
    let v8: Float = v5[0] in
    v2[0] = v8 in
    v2[0] = v10 in
    v2[0] = v10 in
    var v21: [[Float]] = v0 in
    let v28: [[Float]] = f16(v21) in
    v2 = v5 in
    var v26: [[Float]] = v28 in
    v2[0] = v4 in
    v21[0] = v7 in
    let v56: [Float] = v26[1] in
    let v41: Float = v56[0] in
    v26[1] = v2 in
    var v114: [[Float]] = v28 in
    v26 = v114 in
    v41
  } in
  fun loop(i: Int, v0: [[Float]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0], [1.0]] in
    let v1: Float = 2.0 in
    let initialResult: Float = 2.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()