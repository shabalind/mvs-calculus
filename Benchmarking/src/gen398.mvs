  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f2: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v6: [[Float]] = v5.p1 in
    v5.p1 = v6 in
    v5.p1 = v6 in
    v5.p1 = v6 in
    let v10: [[Float]] = v0.p1 in
    var v9: [[Float]] = v10 in
    v5.p1 = v9 in
    v5
  } in
  let noinline_f0: (s0, Float) -> Float = (v0: s0, v1: Float) -> Float {
    let v3: [[Float]] = v0.p1 in
    var v7: Float = v1 in
    var v6: s0 = v0 in
    var v5: Float = v7 in
    v6.p1 = v3 in
    let v4: s0 = f2(v6) in
    let v8: s0 = f2(v0) in
    let v12: [Float] = v3[1] in
    let v10: [[Float]] = v4.p0 in
    let v15: s0 = f2(v6) in
    let v13: s0 = f2(v8) in
    let v17: [[Float]] = v4.p0 in
    let v9: s0 = f2(v13) in
    var v16: [Float] = v12 in
    let v24: [Float] = v17[0] in
    let v19: s0 = f2(v4) in
    v5 = v7 in
    v6.p0 = v10 in
    let v18: s0 = f2(v8) in
    var v21: [[Float]] = v3 in
    v6.p0 = v17 in
    v6.p0 = v17 in
    let v23: [[Float]] = v8.p1 in
    let v36: Float = v24[0] in
    v21[2] = v16 in
    let v46: Float = v24[0] in
    let v44: s0 = f2(v15) in
    v21[0] = v16 in
    let v31: [Float] = v10[0] in
    v21[2] = v24 in
    let v47: [Float] = v17[0] in
    var v35: [Float] = v16 in
    let v20: [[Float]] = v4.p1 in
    v21[1] = v35 in
    let v42: [[Float]] = v13.p1 in
    var v25: [[Float]] = v3 in
    v6.p1 = v25 in
    let v41: [[[Float]]] = [v3, v23, v20, v20, v3, v3] in
    let v26: [[Float]] = v19.p1 in
    v6.p0 = v10 in
    let v50: [Float] = v25[0] in
    v6 = v44 in
    let v56: [[Float]] = v9.p0 in
    var v62: [Float] = v12 in
    v25[1] = v62 in
    let v105: [[Float]] = v15.p0 in
    let v58: [[[Float]]] = [v42] in
    let v54: [[Float]] = v41[5] in
    v16[0] = v7 in
    v6.p0 = v56 in
    v35[0] = v7 in
    v62[0] = v1 in
    let v197: s0 = f2(v18) in
    let v33: [[Float]] = v58[0] in
    v21[2] = v50 in
    v21 = v54 in
    let v149: [Float] = v23[1] in
    var v71: [[Float]] = v25 in
    let v83: s0 = s0(v10, v54) in
    let v69: s0 = f2(v18) in
    let v185: [[Float]] = v83.p0 in
    v6 = v69 in
    v21[0] = v149 in
    let v161: [[Float]] = v197.p0 in
    let v78: [Float] = v26[1] in
    var v82: Float = v1 in
    v62[0] = v46 in
    v6.p0 = v161 in
    let v311: [Float] = [v82, v1, v36, v5, v46, v36, v36] in
    let v183: s0 = s0(v185, v21) in
    v16[0] = v36 in
    v6.p0 = v105 in
    v25[0] = v78 in
    let v72: [[Float]] = v183.p1 in
    v25[2] = v47 in
    let v178: Float = v311[5] in
    v6.p1 = v72 in
    v6.p0 = v185 in
    v71[0] = v31 in
    v6.p1 = v33 in
    v6.p1 = v71 in
    v6.p0 = v161 in
    v178
  } in
  fun loop(i: Int, v0: s0, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0], [2.0], [3.0]]) in
    let v1: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()