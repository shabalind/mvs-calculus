  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s0]]
  } in
  struct s3 {
    var p0: [s2]
  } in
  struct s4 {
    var p0: s1
    var p1: [[s3]]
  } in
  let f42: (s0, s3) -> s3 = (v0: s0, v1: s3) -> s3 {
    var v17: s3 = v1 in
    v17
  } in
  let f39: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [s0] = [v0] in
    let v13: s0 = v1[0] in
    let v10: s1 = s1(v1, v13) in
    var v36: s1 = v10 in
    let v71: [s1] = [v36, v36, v10, v10, v10, v36] in
    let v28: s1 = v71[4] in
    let v38: s0 = v28.p1 in
    v38
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    var v2: s0 = v3 in
    let v1: s0 = f39(v3) in
    var v9: s0 = v1 in
    let v5: s0 = f39(v0) in
    let v4: s0 = f39(v5) in
    let v12: s0 = f39(v2) in
    let v13: [[Float]] = v12.p1 in
    let v26: [s0] = [v9, v0, v5, v0, v4, v0] in
    let v17: s0 = v26[2] in
    let v27: [[Float]] = v3.p1 in
    let v30: [[Float]] = v9.p0 in
    let v32: [[Float]] = v5.p0 in
    var v51: [s0] = v26 in
    v2.p0 = v27 in
    v2.p1 = v30 in
    let v44: [[Float]] = v4.p0 in
    v2.p0 = v44 in
    v51 = v26 in
    let v62: [[Float]] = v17.p1 in
    v51[3] = v12 in
    v2.p0 = v13 in
    let v117: [[s0]] = [v26, v26, v51, v51, v26, v26] in
    let v40: [[Float]] = v3.p1 in
    v3.p0 = v62 in
    let v122: [s0] = v117[0] in
    v9.p0 = v44 in
    v3.p0 = v32 in
    v2.p0 = v40 in
    v3.p1 = v30 in
    let v78: s0 = v122[3] in
    v78
  } in
  let f12: (Float, s3) -> Float = (v0: Float, v1: s3) -> Float {
    var v4: s3 = v1 in
    v4 = v1 in
    let v2: [s2] = v4.p0 in
    var v6: [s2] = v2 in
    v4.p0 = v6 in
    let v7: [s2] = v4.p0 in
    let v8: [s2] = v4.p0 in
    let v13: s2 = v7[0] in
    v4.p0 = v7 in
    let v9: s2 = v8[0] in
    v6[0] = v13 in
    v6[0] = v9 in
    let v14: s2 = v6[0] in
    let v26: [s2] = v4.p0 in
    let v18: [s2] = v4.p0 in
    let v15: [s2] = v1.p0 in
    let v10: s2 = v26[0] in
    v4.p0 = v26 in
    v6[0] = v14 in
    let v20: s2 = v2[0] in
    let v21: s3 = s3(v18) in
    let v34: s2 = v18[0] in
    let v33: s2 = v18[0] in
    var v19: [s2] = v18 in
    let v27: s2 = v6[0] in
    var v30: s2 = v10 in
    var v16: s3 = v4 in
    let v54: s3 = s3(v6) in
    v4.p0 = v26 in
    let v29: [[s0]] = v27.p1 in
    v30.p1 = v29 in
    let v50: [[s2]] = [v6] in
    let v43: s2 = v18[0] in
    v19[0] = v20 in
    let v28: [[s0]] = v9.p1 in
    v6[0] = v20 in
    var v17: s3 = v16 in
    v19[0] = v9 in
    var v24: [[s0]] = v29 in
    var v35: [s2] = v19 in
    let v38: [s2] = v50[0] in
    let v36: [s1] = v34.p0 in
    let v66: s2 = v35[0] in
    let v45: [s2] = v17.p0 in
    let v65: s2 = v19[0] in
    v16.p0 = v15 in
    v30.p1 = v28 in
    var v49: s2 = v30 in
    let v59: [s1] = v49.p0 in
    let v37: [s2] = v21.p0 in
    var v68: [s1] = v36 in
    let v39: [s2] = v54.p0 in
    let v67: s3 = s3(v39) in
    let v61: [s1] = v49.p0 in
    v19[0] = v33 in
    v6[0] = v33 in
    v17.p0 = v38 in
    v35[0] = v13 in
    v4.p0 = v39 in
    v49.p1 = v28 in
    v6[0] = v66 in
    let v53: s1 = v68[2] in
    let v85: s1 = v59[1] in
    let v41: [s0] = v53.p0 in
    v16.p0 = v2 in
    v30.p0 = v59 in
    let v130: [s1] = v27.p0 in
    v49.p0 = v61 in
    v17 = v67 in
    let v90: s1 = v59[0] in
    v4.p0 = v38 in
    let v122: s2 = v38[0] in
    let v120: s0 = v85.p1 in
    v17.p0 = v35 in
    v4.p0 = v45 in
    let v69: s0 = v90.p1 in
    v24[0] = v41 in
    let v71: s0 = f22(v69) in
    v35[0] = v43 in
    let v104: s1 = v130[1] in
    v68[1] = v104 in
    v30.p0 = v130 in
    let v72: s0 = f22(v120) in
    v19[0] = v10 in
    let v142: s3 = f42(v72, v67) in
    v16.p0 = v45 in
    v30.p1 = v24 in
    let v113: [[Float]] = v71.p1 in
    v19[0] = v122 in
    v4.p0 = v37 in
    v68[0] = v104 in
    let v134: [[s0]] = v13.p1 in
    v30.p1 = v134 in
    v30.p0 = v59 in
    let v105: [Float] = v113[0] in
    v6[0] = v65 in
    v17 = v142 in
    let v402: Float = v105[0] in
    v402
  } in
  let noinline_f0: ([s4], [s0], Float) -> Float = (v0: [s4], v1: [s0], v2: Float) -> Float {
    let v6: s0 = v1[0] in
    let v7: [[Float]] = v6.p0 in
    let v23: [Float] = v7[0] in
    let v14: Float = v23[0] in
    let v21: s4 = v0[0] in
    let v27: [[s3]] = v21.p1 in
    let v77: [s3] = v27[0] in
    let v44: s3 = v77[0] in
    let v40: Float = f12(v14, v44) in
    v40
  } in
  fun loop(i: Int, v0: [s4], v1: [s0], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s4] = [s4(s1([s0([[0.0]], [[1.0]])], s0([[2.0]], [[3.0]])), [[s3([s2([s1([s0([[4.0]], [[5.0]])], s0([[6.0]], [[7.0]])), s1([s0([[8.0]], [[9.0]])], s0([[10.0]], [[11.0]])), s1([s0([[12.0]], [[13.0]])], s0([[14.0]], [[15.0]]))], [[s0([[16.0]], [[17.0]])], [s0([[18.0]], [[19.0]])]])])], [s3([s2([s1([s0([[20.0]], [[21.0]])], s0([[22.0]], [[23.0]])), s1([s0([[24.0]], [[25.0]])], s0([[26.0]], [[27.0]])), s1([s0([[28.0]], [[29.0]])], s0([[30.0]], [[31.0]]))], [[s0([[32.0]], [[33.0]])], [s0([[34.0]], [[35.0]])]])])]]), s4(s1([s0([[36.0]], [[37.0]])], s0([[38.0]], [[39.0]])), [[s3([s2([s1([s0([[40.0]], [[41.0]])], s0([[42.0]], [[43.0]])), s1([s0([[44.0]], [[45.0]])], s0([[46.0]], [[47.0]])), s1([s0([[48.0]], [[49.0]])], s0([[50.0]], [[51.0]]))], [[s0([[52.0]], [[53.0]])], [s0([[54.0]], [[55.0]])]])])], [s3([s2([s1([s0([[56.0]], [[57.0]])], s0([[58.0]], [[59.0]])), s1([s0([[60.0]], [[61.0]])], s0([[62.0]], [[63.0]])), s1([s0([[64.0]], [[65.0]])], s0([[66.0]], [[67.0]]))], [[s0([[68.0]], [[69.0]])], [s0([[70.0]], [[71.0]])]])])]])] in
    let v1: [s0] = [s0([[72.0]], [[73.0]])] in
    let v2: Float = 74.0 in
    let initialResult: Float = 74.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()