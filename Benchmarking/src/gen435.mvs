  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  let f18: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    let v4: [[Float]] = v0.p2 in
    let v6: [Float] = v4[2] in
    let v2: [Float] = v4[1] in
    var v5: s0 = v7 in
    v5.p1 = v4 in
    v5.p2 = v4 in
    v5.p2 = v4 in
    var v3: s0 = v5 in
    let v8: [Float] = v4[1] in
    let v1: [[Float]] = v7.p2 in
    var v15: [[Float]] = v1 in
    let v13: [Float] = v1[2] in
    var v20: [[Float]] = v1 in
    let v9: [[Float]] = v0.p1 in
    var v12: [[Float]] = v9 in
    var v11: [[Float]] = v12 in
    var v17: [Float] = v13 in
    let v14: [[Float]] = v0.p2 in
    let v28: [[Float]] = v3.p2 in
    v15[0] = v13 in
    var v21: [[Float]] = v1 in
    let v18: [[Float]] = v3.p2 in
    v21[2] = v2 in
    v21[1] = v6 in
    v21[0] = v6 in
    let v36: [[Float]] = v7.p0 in
    v20 = v11 in
    v5.p2 = v9 in
    v11[0] = v6 in
    v5.p2 = v11 in
    let v19: [[Float]] = v7.p0 in
    var v25: [[Float]] = v19 in
    var v26: [[Float]] = v25 in
    v7.p1 = v15 in
    let v50: [[Float]] = v7.p0 in
    v7.p0 = v50 in
    v3.p1 = v14 in
    let v41: s0 = s0(v26, v28, v21) in
    v15[2] = v17 in
    v3.p0 = v26 in
    v7.p0 = v36 in
    var v38: [Float] = v2 in
    v25[0] = v13 in
    v26[0] = v8 in
    v5.p2 = v18 in
    let v61: [[Float]] = v5.p0 in
    let v120: Float = v6[0] in
    var v93: [Float] = v38 in
    let v47: [Float] = v20[0] in
    let v46: Float = v47[0] in
    let v49: [[Float]] = v3.p2 in
    v3.p0 = v61 in
    v26[1] = v93 in
    v3.p0 = v50 in
    let v69: [[Float]] = v41.p0 in
    var v62: s0 = v41 in
    v38[0] = v120 in
    v38[0] = v46 in
    var v65: s0 = v62 in
    v5.p2 = v12 in
    v62.p1 = v49 in
    v65.p0 = v69 in
    v65
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    var v6: s1 = v0 in
    var v4: s1 = v6 in
    let v2: s0 = v4.p0 in
    let v5: s0 = f18(v2) in
    let v8: [[Float]] = v5.p0 in
    let v9: [Float] = v8[0] in
    let v15: Float = v9[0] in
    let v27: Float = v9[0] in
    let v22: [s0] = v6.p1 in
    let v28: Float = v1 + v15 in
    var v59: [Float] = v9 in
    let v41: s0 = v22[0] in
    v59[0] = v27 in
    let v123: [[Float]] = v5.p1 in
    let v54: [Float] = v123[2] in
    let v52: Float = v54[0] in
    v4.p1 = v22 in
    v59[0] = v52 in
    var v39: [s0] = v22 in
    v59[0] = v1 in
    let v61: Float = v59[0] in
    v59[0] = v27 in
    let v45: Float = v61 / v28 in
    let v135: s0 = v39[1] in
    v59[0] = v27 in
    v6.p0 = v41 in
    v4.p0 = v135 in
    v45
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]], [[5.0], [6.0], [7.0]]), [s0([[8.0], [9.0]], [[10.0], [11.0], [12.0]], [[13.0], [14.0], [15.0]]), s0([[16.0], [17.0]], [[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]]), s0([[24.0], [25.0]], [[26.0], [27.0], [28.0]], [[29.0], [30.0], [31.0]])]) in
    let v1: Float = 32.0 in
    let initialResult: Float = 32.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()