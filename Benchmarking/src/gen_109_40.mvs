  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [[s1]]
    var p1: s0
  } in
  let f44: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v4: [[Float]] = v5.p0 in
    let v6: [[Float]] = v5.p1 in
    v5.p0 = v4 in
    var v11: s0 = v0 in
    v5.p0 = v4 in
    v11.p1 = v6 in
    let v12: [[Float]] = v11.p1 in
    var v14: [[Float]] = v12 in
    let v29: [Float] = v6[0] in
    let v17: s0 = s0(v4, v12) in
    v14[1] = v29 in
    let v16: [[Float]] = v0.p1 in
    let v21: [[Float]] = v17.p0 in
    let v35: [Float] = v16[0] in
    v11.p0 = v4 in
    let v19: [[Float]] = v11.p1 in
    var v32: [[Float]] = v4 in
    let v44: s0 = s0(v32, v14) in
    let v70: [[Float]] = v44.p0 in
    let v25: [[Float]] = v11.p1 in
    let v39: [Float] = v25[0] in
    var v47: [[Float]] = v21 in
    let v54: [Float] = v19[1] in
    v47[0] = v39 in
    v11.p1 = v14 in
    var v66: [[Float]] = v47 in
    v32[0] = v54 in
    v14[1] = v54 in
    let v76: [Float] = v4[2] in
    let v125: [[[Float]]] = [v70, v66] in
    v11.p0 = v66 in
    let v60: [[Float]] = v125[0] in
    let v78: [[Float]] = v17.p0 in
    v14[0] = v76 in
    var v42: s0 = v0 in
    v11.p0 = v21 in
    let v91: [[Float]] = v5.p1 in
    v66[1] = v35 in
    let v145: s0 = s0(v60, v91) in
    v11.p0 = v21 in
    v5 = v42 in
    v11.p0 = v70 in
    v42.p0 = v21 in
    v42.p0 = v78 in
    v145
  } in
  let f40: (s1) -> s1 = (v0: s1) -> s1 {
    v0
  } in
  let f39: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: [s0] = v0.p1 in
    let v5: s0 = v6[0] in
    let v4: s1 = f40(v0) in
    let v14: s1 = f40(v4) in
    let v1: [s0] = v4.p1 in
    let v31: s1 = s1(v5, v6) in
    let v12: s1 = f40(v31) in
    let v28: s1 = f40(v12) in
    var v100: s1 = v14 in
    v100.p1 = v1 in
    v100.p1 = v6 in
    v100 = v28 in
    v100
  } in
  let f38: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v6: [[Float]] = v0.p1 in
    let v5: [[Float]] = v0.p0 in
    var v9: s0 = v0 in
    let v7: s0 = f44(v3) in
    var v2: [[Float]] = v5 in
    let v4: [Float] = v2[0] in
    var v8: [[Float]] = v6 in
    let v11: [Float] = v8[0] in
    let v12: [Float] = v8[0] in
    let v13: [Float] = v5[1] in
    var v17: [[Float]] = v8 in
    v3.p0 = v5 in
    v17[0] = v11 in
    v9.p1 = v17 in
    v2[0] = v13 in
    let v15: s0 = f44(v9) in
    let v10: [Float] = v8[1] in
    let v14: [[Float]] = v7.p0 in
    v17[1] = v12 in
    v3.p1 = v17 in
    let v18: [[Float]] = v15.p1 in
    v2[2] = v4 in
    let v28: [[Float]] = v7.p0 in
    let v33: [[Float]] = v3.p0 in
    let v50: [Float] = v33[1] in
    var v58: [[Float]] = v6 in
    v17[1] = v4 in
    var v19: [[Float]] = v2 in
    let v38: [[Float]] = v0.p0 in
    let v23: s0 = f44(v3) in
    v8[1] = v10 in
    v3.p0 = v28 in
    var v69: s0 = v23 in
    v69.p0 = v28 in
    v9.p0 = v38 in
    v19[2] = v10 in
    v58[1] = v4 in
    v2[0] = v50 in
    v69.p0 = v14 in
    v69.p1 = v18 in
    let v68: s0 = f44(v15) in
    let v76: [Float] = v58[1] in
    v2[1] = v76 in
    let v67: [[Float]] = v68.p1 in
    v8[0] = v12 in
    v3.p0 = v19 in
    var v96: s0 = v69 in
    v9.p1 = v67 in
    v96
  } in
  let f25: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: s0 = v0.p0 in
    let v3: s0 = f38(v6) in
    var v17: s1 = v0 in
    let v94: s1 = f39(v17) in
    var v53: s1 = v94 in
    let v131: [s0] = v53.p1 in
    let v114: s1 = s1(v3, v131) in
    v114
  } in
  let f18: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    let v9: s0 = v0.p0 in
    let v13: s1 = f39(v0) in
    var v18: s1 = v13 in
    var v36: s1 = v13 in
    v36 = v18 in
    let v39: s1 = f25(v36) in
    v36.p0 = v9 in
    let v422: s1 = f39(v39) in
    v422
  } in
  let f15: (s1) -> s1 = (v0: s1) -> s1 {
    var v5: s1 = v0 in
    var v6: s1 = v0 in
    let v7: s0 = v6.p0 in
    let v11: s0 = f44(v7) in
    v6 = v0 in
    var v13: s1 = v5 in
    let v2: [s0] = v6.p1 in
    v13.p0 = v7 in
    v6.p1 = v2 in
    let v54: s1 = f40(v13) in
    v13.p0 = v11 in
    v54
  } in
  let f13: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    let v4: s1 = f15(v1) in
    let v19: s1 = f18(v4, v4) in
    v19
  } in
  let f10: (s1) -> s1 = (v0: s1) -> s1 {
    var v6: s1 = v0 in
    let v3: [s0] = v6.p1 in
    v6.p1 = v3 in
    let v7: [s0] = v0.p1 in
    let v5: s0 = v7[2] in
    var v2: s0 = v5 in
    let v4: s0 = v3[2] in
    var v1: [s0] = v7 in
    v6.p1 = v3 in
    let v11: s1 = f15(v0) in
    var v14: s0 = v2 in
    let v12: s0 = v11.p0 in
    v1[1] = v14 in
    let v17: s1 = f40(v6) in
    let v28: s1 = f39(v6) in
    let v22: s0 = v1[0] in
    let v46: s1 = f18(v28, v17) in
    let v27: s0 = f38(v2) in
    let v19: [[Float]] = v4.p1 in
    let v36: [[[Float]]] = [v19, v19, v19] in
    let v60: [[Float]] = v36[1] in
    v6.p0 = v5 in
    var v37: s0 = v27 in
    v37.p1 = v60 in
    var v70: s0 = v12 in
    let v48: [[Float]] = v36[1] in
    v1[2] = v70 in
    let v39: s1 = f15(v46) in
    v6.p0 = v27 in
    v6.p0 = v37 in
    v70.p1 = v60 in
    var v84: [[Float]] = v48 in
    let v184: s1 = f13(v39, v46) in
    v6.p0 = v22 in
    let v127: s1 = f15(v184) in
    v14.p1 = v84 in
    v127
  } in
  let noinline_f0: ([[s1]], [[s2]], Float) -> Float = (v0: [[s1]], v1: [[s2]], v2: Float) -> Float {
    let v3: [s2] = v1[0] in
    let v14: s2 = v3[0] in
    let v9: [[s1]] = v14.p0 in
    let v20: [s1] = v9[2] in
    let v19: s1 = v20[0] in
    let v17: s1 = f10(v19) in
    let v18: [s0] = v17.p1 in
    let v31: s0 = v18[0] in
    let v41: [[Float]] = v31.p1 in
    var v32: [[Float]] = v41 in
    let v83: [Float] = v32[0] in
    v32[1] = v83 in
    let v99: [[Float]] = v31.p1 in
    v32[0] = v83 in
    var v103: [Float] = v83 in
    let v69: Float = v103[0] in
    v32 = v99 in
    var v71: [[Float]] = v41 in
    let v112: [Float] = v71[0] in
    let v134: Float = v112[0] in
    var v169: Float = v2 in
    let v132: Float = v134 + v169 in
    let v215: Float = v132 - v69 in
    v215
  } in
  fun loop(i: Int, v0: [[s1]], v1: [[s2]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s1]] = [[s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), [s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]]), s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]), s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]])])], [s1(s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]]), [s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]]), s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])])]] in
    let v1: [[s2]] = [[s2([[s1(s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]]), [s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]]), s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]]), s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]])])], [s1(s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]]), [s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]]), s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]]), s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]])])], [s1(s0([[80.0], [81.0], [82.0]], [[83.0], [84.0]]), [s0([[85.0], [86.0], [87.0]], [[88.0], [89.0]]), s0([[90.0], [91.0], [92.0]], [[93.0], [94.0]]), s0([[95.0], [96.0], [97.0]], [[98.0], [99.0]])])]], s0([[100.0], [101.0], [102.0]], [[103.0], [104.0]]))]] in
    let v2: Float = 105.0 in
    let initialResult: Float = 105.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()