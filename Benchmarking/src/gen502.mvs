  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let noinline_f0: ([[s0]], Float) -> Float = (v0: [[s0]], v1: Float) -> Float {
    let v9: [Float] = [v1, v1, v1, v1] in
    let v2: Float = v9[0] in
    var v18: Float = v2 in
    var v16: [Float] = v9 in
    v16[1] = v1 in
    v18 = v2 in
    let v33: Float = v16[3] in
    v16[0] = v18 in
    var v32: Float = v33 in
    v16[3] = v33 in
    v18 = v33 in
    v32
  } in
  fun loop(i: Int, v0: [[s0]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]])]] in
    let v1: Float = 5.0 in
    let initialResult: Float = 5.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()