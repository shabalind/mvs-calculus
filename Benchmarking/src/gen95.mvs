  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s0
    var p1: [s1]
  } in
  struct s4 {
    var p0: [[s1]]
    var p1: s2
  } in
  struct s5 {
    var p0: [s2]
    var p1: s3
  } in
  struct s8 {
    var p0: s2
    var p1: [s3]
  } in
  struct s10 {
    var p0: [s8]
    var p1: s4
  } in
  let noinline_f0: ([[s5]], Float, [s2], [s10]) -> Float = (v0: [[s5]], v1: Float, v2: [s2], v3: [s10]) -> Float {
    let v4: [s5] = v0[0] in
    let v8: s5 = v4[0] in
    let v10: [s2] = v8.p0 in
    let v14: s2 = v10[0] in
    let v17: [s1] = v14.p0 in
    let v29: s1 = v17[1] in
    let v45: s0 = v29.p0 in
    let v80: [[Float]] = v45.p0 in
    let v127: [Float] = v80[0] in
    let v147: Float = v127[0] in
    v147
  } in
  fun loop(i: Int, v0: [[s5]], v1: Float, v2: [s2], v3: [s10], result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s5]] = [[s5([s2([s1(s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]])), s1(s0([[4.0]], [[5.0]]), s0([[6.0]], [[7.0]]))], [[s1(s0([[8.0]], [[9.0]]), s0([[10.0]], [[11.0]]))], [s1(s0([[12.0]], [[13.0]]), s0([[14.0]], [[15.0]]))], [s1(s0([[16.0]], [[17.0]]), s0([[18.0]], [[19.0]]))]])], s3(s0([[20.0]], [[21.0]]), [s1(s0([[22.0]], [[23.0]]), s0([[24.0]], [[25.0]])), s1(s0([[26.0]], [[27.0]]), s0([[28.0]], [[29.0]])), s1(s0([[30.0]], [[31.0]]), s0([[32.0]], [[33.0]]))]))], [s5([s2([s1(s0([[34.0]], [[35.0]]), s0([[36.0]], [[37.0]])), s1(s0([[38.0]], [[39.0]]), s0([[40.0]], [[41.0]]))], [[s1(s0([[42.0]], [[43.0]]), s0([[44.0]], [[45.0]]))], [s1(s0([[46.0]], [[47.0]]), s0([[48.0]], [[49.0]]))], [s1(s0([[50.0]], [[51.0]]), s0([[52.0]], [[53.0]]))]])], s3(s0([[54.0]], [[55.0]]), [s1(s0([[56.0]], [[57.0]]), s0([[58.0]], [[59.0]])), s1(s0([[60.0]], [[61.0]]), s0([[62.0]], [[63.0]])), s1(s0([[64.0]], [[65.0]]), s0([[66.0]], [[67.0]]))]))], [s5([s2([s1(s0([[68.0]], [[69.0]]), s0([[70.0]], [[71.0]])), s1(s0([[72.0]], [[73.0]]), s0([[74.0]], [[75.0]]))], [[s1(s0([[76.0]], [[77.0]]), s0([[78.0]], [[79.0]]))], [s1(s0([[80.0]], [[81.0]]), s0([[82.0]], [[83.0]]))], [s1(s0([[84.0]], [[85.0]]), s0([[86.0]], [[87.0]]))]])], s3(s0([[88.0]], [[89.0]]), [s1(s0([[90.0]], [[91.0]]), s0([[92.0]], [[93.0]])), s1(s0([[94.0]], [[95.0]]), s0([[96.0]], [[97.0]])), s1(s0([[98.0]], [[99.0]]), s0([[100.0]], [[101.0]]))]))]] in
    let v1: Float = 102.0 in
    let v2: [s2] = [s2([s1(s0([[103.0]], [[104.0]]), s0([[105.0]], [[106.0]])), s1(s0([[107.0]], [[108.0]]), s0([[109.0]], [[110.0]]))], [[s1(s0([[111.0]], [[112.0]]), s0([[113.0]], [[114.0]]))], [s1(s0([[115.0]], [[116.0]]), s0([[117.0]], [[118.0]]))], [s1(s0([[119.0]], [[120.0]]), s0([[121.0]], [[122.0]]))]]), s2([s1(s0([[123.0]], [[124.0]]), s0([[125.0]], [[126.0]])), s1(s0([[127.0]], [[128.0]]), s0([[129.0]], [[130.0]]))], [[s1(s0([[131.0]], [[132.0]]), s0([[133.0]], [[134.0]]))], [s1(s0([[135.0]], [[136.0]]), s0([[137.0]], [[138.0]]))], [s1(s0([[139.0]], [[140.0]]), s0([[141.0]], [[142.0]]))]])] in
    let v3: [s10] = [s10([s8(s2([s1(s0([[143.0]], [[144.0]]), s0([[145.0]], [[146.0]])), s1(s0([[147.0]], [[148.0]]), s0([[149.0]], [[150.0]]))], [[s1(s0([[151.0]], [[152.0]]), s0([[153.0]], [[154.0]]))], [s1(s0([[155.0]], [[156.0]]), s0([[157.0]], [[158.0]]))], [s1(s0([[159.0]], [[160.0]]), s0([[161.0]], [[162.0]]))]]), [s3(s0([[163.0]], [[164.0]]), [s1(s0([[165.0]], [[166.0]]), s0([[167.0]], [[168.0]])), s1(s0([[169.0]], [[170.0]]), s0([[171.0]], [[172.0]])), s1(s0([[173.0]], [[174.0]]), s0([[175.0]], [[176.0]]))]), s3(s0([[177.0]], [[178.0]]), [s1(s0([[179.0]], [[180.0]]), s0([[181.0]], [[182.0]])), s1(s0([[183.0]], [[184.0]]), s0([[185.0]], [[186.0]])), s1(s0([[187.0]], [[188.0]]), s0([[189.0]], [[190.0]]))])]), s8(s2([s1(s0([[191.0]], [[192.0]]), s0([[193.0]], [[194.0]])), s1(s0([[195.0]], [[196.0]]), s0([[197.0]], [[198.0]]))], [[s1(s0([[199.0]], [[200.0]]), s0([[201.0]], [[202.0]]))], [s1(s0([[203.0]], [[204.0]]), s0([[205.0]], [[206.0]]))], [s1(s0([[207.0]], [[208.0]]), s0([[209.0]], [[210.0]]))]]), [s3(s0([[211.0]], [[212.0]]), [s1(s0([[213.0]], [[214.0]]), s0([[215.0]], [[216.0]])), s1(s0([[217.0]], [[218.0]]), s0([[219.0]], [[220.0]])), s1(s0([[221.0]], [[222.0]]), s0([[223.0]], [[224.0]]))]), s3(s0([[225.0]], [[226.0]]), [s1(s0([[227.0]], [[228.0]]), s0([[229.0]], [[230.0]])), s1(s0([[231.0]], [[232.0]]), s0([[233.0]], [[234.0]])), s1(s0([[235.0]], [[236.0]]), s0([[237.0]], [[238.0]]))])])], s4([[s1(s0([[239.0]], [[240.0]]), s0([[241.0]], [[242.0]]))], [s1(s0([[243.0]], [[244.0]]), s0([[245.0]], [[246.0]]))], [s1(s0([[247.0]], [[248.0]]), s0([[249.0]], [[250.0]]))]], s2([s1(s0([[251.0]], [[252.0]]), s0([[253.0]], [[254.0]])), s1(s0([[255.0]], [[256.0]]), s0([[257.0]], [[258.0]]))], [[s1(s0([[259.0]], [[260.0]]), s0([[261.0]], [[262.0]]))], [s1(s0([[263.0]], [[264.0]]), s0([[265.0]], [[266.0]]))], [s1(s0([[267.0]], [[268.0]]), s0([[269.0]], [[270.0]]))]]))), s10([s8(s2([s1(s0([[271.0]], [[272.0]]), s0([[273.0]], [[274.0]])), s1(s0([[275.0]], [[276.0]]), s0([[277.0]], [[278.0]]))], [[s1(s0([[279.0]], [[280.0]]), s0([[281.0]], [[282.0]]))], [s1(s0([[283.0]], [[284.0]]), s0([[285.0]], [[286.0]]))], [s1(s0([[287.0]], [[288.0]]), s0([[289.0]], [[290.0]]))]]), [s3(s0([[291.0]], [[292.0]]), [s1(s0([[293.0]], [[294.0]]), s0([[295.0]], [[296.0]])), s1(s0([[297.0]], [[298.0]]), s0([[299.0]], [[300.0]])), s1(s0([[301.0]], [[302.0]]), s0([[303.0]], [[304.0]]))]), s3(s0([[305.0]], [[306.0]]), [s1(s0([[307.0]], [[308.0]]), s0([[309.0]], [[310.0]])), s1(s0([[311.0]], [[312.0]]), s0([[313.0]], [[314.0]])), s1(s0([[315.0]], [[316.0]]), s0([[317.0]], [[318.0]]))])]), s8(s2([s1(s0([[319.0]], [[320.0]]), s0([[321.0]], [[322.0]])), s1(s0([[323.0]], [[324.0]]), s0([[325.0]], [[326.0]]))], [[s1(s0([[327.0]], [[328.0]]), s0([[329.0]], [[330.0]]))], [s1(s0([[331.0]], [[332.0]]), s0([[333.0]], [[334.0]]))], [s1(s0([[335.0]], [[336.0]]), s0([[337.0]], [[338.0]]))]]), [s3(s0([[339.0]], [[340.0]]), [s1(s0([[341.0]], [[342.0]]), s0([[343.0]], [[344.0]])), s1(s0([[345.0]], [[346.0]]), s0([[347.0]], [[348.0]])), s1(s0([[349.0]], [[350.0]]), s0([[351.0]], [[352.0]]))]), s3(s0([[353.0]], [[354.0]]), [s1(s0([[355.0]], [[356.0]]), s0([[357.0]], [[358.0]])), s1(s0([[359.0]], [[360.0]]), s0([[361.0]], [[362.0]])), s1(s0([[363.0]], [[364.0]]), s0([[365.0]], [[366.0]]))])])], s4([[s1(s0([[367.0]], [[368.0]]), s0([[369.0]], [[370.0]]))], [s1(s0([[371.0]], [[372.0]]), s0([[373.0]], [[374.0]]))], [s1(s0([[375.0]], [[376.0]]), s0([[377.0]], [[378.0]]))]], s2([s1(s0([[379.0]], [[380.0]]), s0([[381.0]], [[382.0]])), s1(s0([[383.0]], [[384.0]]), s0([[385.0]], [[386.0]]))], [[s1(s0([[387.0]], [[388.0]]), s0([[389.0]], [[390.0]]))], [s1(s0([[391.0]], [[392.0]]), s0([[393.0]], [[394.0]]))], [s1(s0([[395.0]], [[396.0]]), s0([[397.0]], [[398.0]]))]])))] in
    let initialResult: Float = [s10([s8(s2([s1(s0([[143.0]], [[144.0]]), s0([[145.0]], [[146.0]])), s1(s0([[147.0]], [[148.0]]), s0([[149.0]], [[150.0]]))], [[s1(s0([[151.0]], [[152.0]]), s0([[153.0]], [[154.0]]))], [s1(s0([[155.0]], [[156.0]]), s0([[157.0]], [[158.0]]))], [s1(s0([[159.0]], [[160.0]]), s0([[161.0]], [[162.0]]))]]), [s3(s0([[163.0]], [[164.0]]), [s1(s0([[165.0]], [[166.0]]), s0([[167.0]], [[168.0]])), s1(s0([[169.0]], [[170.0]]), s0([[171.0]], [[172.0]])), s1(s0([[173.0]], [[174.0]]), s0([[175.0]], [[176.0]]))]), s3(s0([[177.0]], [[178.0]]), [s1(s0([[179.0]], [[180.0]]), s0([[181.0]], [[182.0]])), s1(s0([[183.0]], [[184.0]]), s0([[185.0]], [[186.0]])), s1(s0([[187.0]], [[188.0]]), s0([[189.0]], [[190.0]]))])]), s8(s2([s1(s0([[191.0]], [[192.0]]), s0([[193.0]], [[194.0]])), s1(s0([[195.0]], [[196.0]]), s0([[197.0]], [[198.0]]))], [[s1(s0([[199.0]], [[200.0]]), s0([[201.0]], [[202.0]]))], [s1(s0([[203.0]], [[204.0]]), s0([[205.0]], [[206.0]]))], [s1(s0([[207.0]], [[208.0]]), s0([[209.0]], [[210.0]]))]]), [s3(s0([[211.0]], [[212.0]]), [s1(s0([[213.0]], [[214.0]]), s0([[215.0]], [[216.0]])), s1(s0([[217.0]], [[218.0]]), s0([[219.0]], [[220.0]])), s1(s0([[221.0]], [[222.0]]), s0([[223.0]], [[224.0]]))]), s3(s0([[225.0]], [[226.0]]), [s1(s0([[227.0]], [[228.0]]), s0([[229.0]], [[230.0]])), s1(s0([[231.0]], [[232.0]]), s0([[233.0]], [[234.0]])), s1(s0([[235.0]], [[236.0]]), s0([[237.0]], [[238.0]]))])])], s4([[s1(s0([[239.0]], [[240.0]]), s0([[241.0]], [[242.0]]))], [s1(s0([[243.0]], [[244.0]]), s0([[245.0]], [[246.0]]))], [s1(s0([[247.0]], [[248.0]]), s0([[249.0]], [[250.0]]))]], s2([s1(s0([[251.0]], [[252.0]]), s0([[253.0]], [[254.0]])), s1(s0([[255.0]], [[256.0]]), s0([[257.0]], [[258.0]]))], [[s1(s0([[259.0]], [[260.0]]), s0([[261.0]], [[262.0]]))], [s1(s0([[263.0]], [[264.0]]), s0([[265.0]], [[266.0]]))], [s1(s0([[267.0]], [[268.0]]), s0([[269.0]], [[270.0]]))]]))), s10([s8(s2([s1(s0([[271.0]], [[272.0]]), s0([[273.0]], [[274.0]])), s1(s0([[275.0]], [[276.0]]), s0([[277.0]], [[278.0]]))], [[s1(s0([[279.0]], [[280.0]]), s0([[281.0]], [[282.0]]))], [s1(s0([[283.0]], [[284.0]]), s0([[285.0]], [[286.0]]))], [s1(s0([[287.0]], [[288.0]]), s0([[289.0]], [[290.0]]))]]), [s3(s0([[291.0]], [[292.0]]), [s1(s0([[293.0]], [[294.0]]), s0([[295.0]], [[296.0]])), s1(s0([[297.0]], [[298.0]]), s0([[299.0]], [[300.0]])), s1(s0([[301.0]], [[302.0]]), s0([[303.0]], [[304.0]]))]), s3(s0([[305.0]], [[306.0]]), [s1(s0([[307.0]], [[308.0]]), s0([[309.0]], [[310.0]])), s1(s0([[311.0]], [[312.0]]), s0([[313.0]], [[314.0]])), s1(s0([[315.0]], [[316.0]]), s0([[317.0]], [[318.0]]))])]), s8(s2([s1(s0([[319.0]], [[320.0]]), s0([[321.0]], [[322.0]])), s1(s0([[323.0]], [[324.0]]), s0([[325.0]], [[326.0]]))], [[s1(s0([[327.0]], [[328.0]]), s0([[329.0]], [[330.0]]))], [s1(s0([[331.0]], [[332.0]]), s0([[333.0]], [[334.0]]))], [s1(s0([[335.0]], [[336.0]]), s0([[337.0]], [[338.0]]))]]), [s3(s0([[339.0]], [[340.0]]), [s1(s0([[341.0]], [[342.0]]), s0([[343.0]], [[344.0]])), s1(s0([[345.0]], [[346.0]]), s0([[347.0]], [[348.0]])), s1(s0([[349.0]], [[350.0]]), s0([[351.0]], [[352.0]]))]), s3(s0([[353.0]], [[354.0]]), [s1(s0([[355.0]], [[356.0]]), s0([[357.0]], [[358.0]])), s1(s0([[359.0]], [[360.0]]), s0([[361.0]], [[362.0]])), s1(s0([[363.0]], [[364.0]]), s0([[365.0]], [[366.0]]))])])], s4([[s1(s0([[367.0]], [[368.0]]), s0([[369.0]], [[370.0]]))], [s1(s0([[371.0]], [[372.0]]), s0([[373.0]], [[374.0]]))], [s1(s0([[375.0]], [[376.0]]), s0([[377.0]], [[378.0]]))]], s2([s1(s0([[379.0]], [[380.0]]), s0([[381.0]], [[382.0]])), s1(s0([[383.0]], [[384.0]]), s0([[385.0]], [[386.0]]))], [[s1(s0([[387.0]], [[388.0]]), s0([[389.0]], [[390.0]]))], [s1(s0([[391.0]], [[392.0]]), s0([[393.0]], [[394.0]]))], [s1(s0([[395.0]], [[396.0]]), s0([[397.0]], [[398.0]]))]])))] in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()