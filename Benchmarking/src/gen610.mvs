  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
    var p2: [[Float]]
    var p3: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  let f37: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p3 in
    let v1: [[Float]] = v0.p0 in
    var v6: s0 = v0 in
    let v4: [[Float]] = v6.p2 in
    let v3: [[Float]] = v6.p3 in
    let v5: [Float] = v7[0] in
    v6.p3 = v3 in
    v6.p1 = v5 in
    var v15: [[Float]] = v4 in
    v6 = v0 in
    let v10: [[Float]] = v6.p3 in
    let v21: [Float] = v4[0] in
    v6 = v0 in
    let v31: [Float] = v15[1] in
    v6.p1 = v31 in
    let v22: [s0] = [v6, v6, v0] in
    v6.p1 = v21 in
    let v56: [[Float]] = v0.p0 in
    let v28: s0 = v22[2] in
    var v79: [[Float]] = v10 in
    v6.p0 = v79 in
    v6.p0 = v1 in
    v6.p0 = v56 in
    v28
  } in
  let f27: (s1) -> s1 = (v0: s1) -> s1 {
    var v5: s1 = v0 in
    let v1: s0 = v0.p0 in
    let v6: s0 = f37(v1) in
    let v4: s0 = f37(v6) in
    v5.p0 = v4 in
    var v7: s0 = v4 in
    v7 = v4 in
    var v8: s0 = v6 in
    var v14: s1 = v0 in
    v5.p0 = v8 in
    let v11: [Float] = v7.p1 in
    let v2: [[Float]] = v1.p3 in
    v8.p1 = v11 in
    v7.p0 = v2 in
    let v21: [Float] = v2[0] in
    let v36: Float = v21[0] in
    let v18: [[s0]] = v14.p1 in
    let v20: [[Float]] = v4.p0 in
    let v51: s0 = f37(v1) in
    var v41: s0 = v1 in
    let v30: [s0] = v18[2] in
    let v42: s0 = v0.p0 in
    let v32: s0 = v30[0] in
    v7 = v6 in
    let v46: [[s0]] = v0.p1 in
    var v57: [Float] = v21 in
    let v141: [[Float]] = v7.p3 in
    let v61: [[Float]] = v41.p2 in
    let v26: [[s0]] = v5.p1 in
    let v59: [Float] = v61[0] in
    var v44: s1 = v14 in
    let v83: s0 = v44.p0 in
    let v27: Float = v59[0] in
    v14.p1 = v26 in
    v41.p2 = v61 in
    let v39: [[s0]] = v44.p1 in
    let v80: s0 = f37(v83) in
    v41 = v51 in
    let v94: s0 = f37(v4) in
    v44.p0 = v94 in
    let v78: [Float] = v61[1] in
    v7.p1 = v78 in
    let v47: [[s0]] = v14.p1 in
    var v50: s1 = v44 in
    v50.p0 = v6 in
    v44.p0 = v80 in
    let v85: s0 = v50.p0 in
    let v99: [[s0]] = v5.p1 in
    let v53: [[s0]] = v50.p1 in
    let v91: [s1] = [v44, v50, v50, v5, v14, v14] in
    let v102: s0 = f37(v8) in
    let v137: s1 = v91[5] in
    var v205: [[Float]] = v61 in
    let v132: s0 = v137.p0 in
    v7 = v85 in
    v8.p3 = v20 in
    v50.p0 = v80 in
    v44.p0 = v32 in
    v57[0] = v36 in
    let v100: [Float] = v61[1] in
    let v281: s0 = v50.p0 in
    v14.p0 = v281 in
    v57[0] = v27 in
    v14.p0 = v102 in
    v5.p1 = v46 in
    v5.p1 = v53 in
    v8.p1 = v57 in
    v205[1] = v100 in
    v5.p0 = v42 in
    var v114: [[s0]] = v99 in
    v8.p3 = v141 in
    v44.p1 = v39 in
    v7.p2 = v205 in
    v5.p0 = v85 in
    v44.p0 = v132 in
    v14.p1 = v47 in
    v7.p0 = v20 in
    v44.p1 = v114 in
    var v164: s1 = v14 in
    var v177: s1 = v137 in
    v164.p1 = v46 in
    v177 = v164 in
    v177
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    let v7: s1 = f27(v0) in
    let v8: s1 = f27(v7) in
    let v6: s1 = f27(v0) in
    let v10: s1 = f27(v6) in
    let v4: [[s0]] = v8.p1 in
    var v9: [[s0]] = v4 in
    let v49: [s0] = v9[0] in
    let v39: s0 = v10.p0 in
    let v53: Float = v1 * v1 in
    var v65: [s0] = v49 in
    v9[1] = v65 in
    let v63: s0 = f37(v39) in
    var v55: s0 = v63 in
    let v59: [[Float]] = v55.p0 in
    var v57: [[Float]] = v59 in
    let v136: [[[Float]]] = [v57, v57] in
    var v81: [[[Float]]] = v136 in
    let v31: [[Float]] = v136[1] in
    v55.p0 = v31 in
    let v62: s0 = v49[0] in
    v81 = v136 in
    let v54: [Float] = v59[0] in
    let v122: [[Float]] = v62.p3 in
    var v86: [[Float]] = v122 in
    let v95: Float = v1 / v53 in
    let v88: [[Float]] = v81[0] in
    let v93: [Float] = v86[0] in
    var v165: [Float] = v54 in
    v55.p0 = v88 in
    v165 = v93 in
    v86[0] = v93 in
    v9[1] = v65 in
    v86[0] = v165 in
    v86[0] = v54 in
    v165[0] = v95 in
    let v77: Float = v165[0] in
    v77
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0]], [1.0], [[2.0], [3.0]], [[4.0]]), [[s0([[5.0]], [6.0], [[7.0], [8.0]], [[9.0]])], [s0([[10.0]], [11.0], [[12.0], [13.0]], [[14.0]])], [s0([[15.0]], [16.0], [[17.0], [18.0]], [[19.0]])]]) in
    let v1: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()