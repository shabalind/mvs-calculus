  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s1]
  } in
  struct s8 {
    var p0: s2
    var p1: [s2]
  } in
  struct s9 {
    var p0: [s0]
    var p1: [s0]
  } in
  let noinline_f0: (s9, s8, Float) -> Float = (v0: s9, v1: s8, v2: Float) -> Float {
    let v5: s2 = v1.p0 in
    let v4: [s0] = v0.p1 in
    let v7: s0 = v4[0] in
    var v3: s0 = v7 in
    let v10: [s0] = v0.p1 in
    let v8: [[Float]] = v3.p0 in
    let v23: s0 = v10[0] in
    v3.p0 = v8 in
    let v12: [Float] = v8[1] in
    let v14: [s0] = v5.p0 in
    let v15: [s0] = v0.p1 in
    var v21: [s0] = v14 in
    v3.p0 = v8 in
    v21[0] = v7 in
    v21[0] = v3 in
    v21[0] = v23 in
    v21[0] = v3 in
    let v29: [[Float]] = v7.p0 in
    let v68: s0 = v15[0] in
    let v44: s0 = v21[0] in
    v21[0] = v7 in
    let v57: [[Float]] = v7.p0 in
    let v37: [s0] = [v23, v23] in
    v3.p1 = v29 in
    let v116: [[Float]] = v44.p0 in
    v21[0] = v68 in
    let v154: Float = v12[0] in
    v3.p1 = v8 in
    var v89: [s0] = v37 in
    v3.p0 = v116 in
    let v135: s0 = v89[0] in
    let v218: [[Float]] = v135.p0 in
    v3.p1 = v57 in
    v3.p1 = v218 in
    v154
  } in
  fun loop(i: Int, v0: s9, v1: s8, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9([s0([[0.0], [1.0]], [[2.0], [3.0]]), s0([[4.0], [5.0]], [[6.0], [7.0]]), s0([[8.0], [9.0]], [[10.0], [11.0]])], [s0([[12.0], [13.0]], [[14.0], [15.0]])]) in
    let v1: s8 = s8(s2([s0([[16.0], [17.0]], [[18.0], [19.0]])], [s1(s0([[20.0], [21.0]], [[22.0], [23.0]]), s0([[24.0], [25.0]], [[26.0], [27.0]])), s1(s0([[28.0], [29.0]], [[30.0], [31.0]]), s0([[32.0], [33.0]], [[34.0], [35.0]]))]), [s2([s0([[36.0], [37.0]], [[38.0], [39.0]])], [s1(s0([[40.0], [41.0]], [[42.0], [43.0]]), s0([[44.0], [45.0]], [[46.0], [47.0]])), s1(s0([[48.0], [49.0]], [[50.0], [51.0]]), s0([[52.0], [53.0]], [[54.0], [55.0]]))]), s2([s0([[56.0], [57.0]], [[58.0], [59.0]])], [s1(s0([[60.0], [61.0]], [[62.0], [63.0]]), s0([[64.0], [65.0]], [[66.0], [67.0]])), s1(s0([[68.0], [69.0]], [[70.0], [71.0]]), s0([[72.0], [73.0]], [[74.0], [75.0]]))])]) in
    let v2: Float = 76.0 in
    let initialResult: Float = 76.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()