  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
    var p2: s0
  } in
  struct s2 {
    var p0: s1
  } in
  let f102: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    let v6: [[Float]] = v0.p1 in
    let v8: [[Float]] = v0.p1 in
    var v15: s0 = v0 in
    let v7: [[Float]] = v15.p1 in
    v15.p0 = v6 in
    v15.p1 = v4 in
    let v2: [[Float]] = v15.p0 in
    v15.p0 = v2 in
    let v12: [[Float]] = v15.p0 in
    v15.p0 = v12 in
    let v13: [[Float]] = v0.p1 in
    var v21: s0 = v0 in
    let v9: [[Float]] = v15.p0 in
    v21.p0 = v4 in
    let v18: [Float] = v9[0] in
    var v20: s0 = v15 in
    v21.p0 = v6 in
    var v33: [[Float]] = v4 in
    v33[0] = v18 in
    v33[0] = v18 in
    v15.p0 = v33 in
    v15 = v21 in
    let v32: [[Float]] = v21.p0 in
    let v41: [[Float]] = v21.p0 in
    v15.p1 = v8 in
    v15.p0 = v41 in
    v15.p0 = v7 in
    v21.p0 = v8 in
    let v49: [[Float]] = v20.p1 in
    let v104: [Float] = v32[0] in
    let v46: [[Float]] = v15.p1 in
    v21.p0 = v6 in
    v15.p0 = v49 in
    var v34: s0 = v0 in
    let v95: [[Float]] = v20.p0 in
    v21.p0 = v13 in
    v34.p1 = v46 in
    let v77: [[Float]] = v15.p0 in
    v33[0] = v104 in
    v15.p1 = v41 in
    v20.p0 = v95 in
    v15.p1 = v77 in
    v34
  } in
  let f89: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    let v5: s0 = f102(v2) in
    v5
  } in
  let f74: (s0) -> s0 = (v0: s0) -> s0 {
    let v8: s0 = f89(v0) in
    let v1: s0 = f102(v8) in
    let v5: s0 = f102(v1) in
    let v3: s0 = f102(v5) in
    let v10: [[Float]] = v8.p0 in
    let v14: s0 = f102(v3) in
    var v25: s0 = v14 in
    v25.p1 = v10 in
    let v36: [[Float]] = v3.p1 in
    v25.p1 = v36 in
    v25
  } in
  let noinline_f0: (s1, s2, Float) -> Float = (v0: s1, v1: s2, v2: Float) -> Float {
    let v3: s0 = v0.p2 in
    let v11: s0 = f74(v3) in
    let v49: Float = v2 / v2 in
    let v36: [[Float]] = v11.p1 in
    var v59: Float = v49 in
    let v71: [Float] = v36[0] in
    var v137: [Float] = v71 in
    v137[0] = v59 in
    v137[0] = v2 in
    let v177: Float = v137[0] in
    v177
  } in
  fun loop(i: Int, v0: s1, v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([[s0([[0.0]], [[1.0]])], [s0([[2.0]], [[3.0]])], [s0([[4.0]], [[5.0]])]], s0([[6.0]], [[7.0]]), s0([[8.0]], [[9.0]])) in
    let v1: s2 = s2(s1([[s0([[10.0]], [[11.0]])], [s0([[12.0]], [[13.0]])], [s0([[14.0]], [[15.0]])]], s0([[16.0]], [[17.0]]), s0([[18.0]], [[19.0]]))) in
    let v2: Float = 20.0 in
    let initialResult: Float = 20.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()