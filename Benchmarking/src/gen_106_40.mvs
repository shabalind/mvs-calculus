  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[Float]]
    var p2: [[s0]]
    var p3: s0
    var p4: [[s1]]
  } in
  struct s4 {
    var p0: [[s1]]
    var p1: s0
  } in
  struct s6 {
    var p0: s2
    var p1: s1
  } in
  let f52: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v4: Float = v7 in
    let v6: [Float] = [v0, v7, v4, v0, v4] in
    var v11: [Float] = v6 in
    let v2: Float = v11[2] in
    v7 = v2 in
    v11 = v6 in
    v11[4] = v7 in
    v11[1] = v2 in
    let v17: Float = v11[4] in
    v11[3] = v7 in
    v17
  } in
  let f48: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    let v2: s0 = v0[0] in
    var v5: [s0] = v0 in
    let v7: s0 = v0[0] in
    v5[1] = v7 in
    var v14: [s0] = v0 in
    let v12: s0 = v14[1] in
    v14 = v5 in
    v5[1] = v2 in
    let v61: s1 = s1(v5, v12) in
    let v126: [s0] = v61.p0 in
    v126
  } in
  let f42: (s0, s1) -> s1 = (v0: s0, v1: s1) -> s1 {
    let v8: [s1] = [v1, v1, v1, v1] in
    var v6: [s1] = v8 in
    v6[1] = v1 in
    let v9: s1 = v6[1] in
    v6 = v8 in
    v6[3] = v1 in
    var v18: [s1] = v6 in
    v18[1] = v1 in
    v6 = v8 in
    v6 = v18 in
    v6[0] = v1 in
    v18[2] = v1 in
    v9
  } in
  let f40: (s1) -> s1 = (v0: s1) -> s1 {
    var v7: s1 = v0 in
    var v8: s1 = v7 in
    let v1: [s0] = v7.p0 in
    let v2: [s0] = f48(v1) in
    let v3: s0 = v1[0] in
    let v4: s0 = v2[0] in
    v8 = v7 in
    let v11: [s1] = [v0, v8, v7] in
    let v5: s1 = f42(v3, v0) in
    let v18: s0 = v0.p1 in
    var v14: [s1] = v11 in
    let v17: [s0] = [v4] in
    v7.p1 = v18 in
    v8.p0 = v1 in
    let v24: s1 = v14[0] in
    v14[2] = v5 in
    v8 = v7 in
    let v49: [s1] = [v24, v5, v5] in
    let v27: s1 = v14[0] in
    let v35: s0 = v17[0] in
    var v43: [s1] = v49 in
    let v38: s1 = f42(v35, v27) in
    v43[2] = v0 in
    v43[2] = v38 in
    let v90: s1 = v43[1] in
    v90
  } in
  let noinline_f0: (s6, s1, [s4], Float) -> Float = (v0: s6, v1: s1, v2: [s4], v3: Float) -> Float {
    let v4: s1 = f40(v1) in
    let v17: [s0] = v4.p0 in
    let v23: [s0] = f48(v17) in
    let v35: [s0] = f48(v23) in
    let v26: s0 = v35[1] in
    let v43: [[Float]] = v26.p1 in
    let v51: [Float] = v43[0] in
    let v31: Float = v51[0] in
    let v41: Float = f52(v31) in
    v41
  } in
  fun loop(i: Int, v0: s6, v1: s1, v2: [s4], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s6 = s6(s2([s1([s0([0.0], [[1.0]]), s0([2.0], [[3.0]])], s0([4.0], [[5.0]])), s1([s0([6.0], [[7.0]]), s0([8.0], [[9.0]])], s0([10.0], [[11.0]]))], [[12.0], [13.0], [14.0]], [[s0([15.0], [[16.0]])], [s0([17.0], [[18.0]])], [s0([19.0], [[20.0]])]], s0([21.0], [[22.0]]), [[s1([s0([23.0], [[24.0]]), s0([25.0], [[26.0]])], s0([27.0], [[28.0]]))]]), s1([s0([29.0], [[30.0]]), s0([31.0], [[32.0]])], s0([33.0], [[34.0]]))) in
    let v1: s1 = s1([s0([35.0], [[36.0]]), s0([37.0], [[38.0]])], s0([39.0], [[40.0]])) in
    let v2: [s4] = [s4([[s1([s0([41.0], [[42.0]]), s0([43.0], [[44.0]])], s0([45.0], [[46.0]]))], [s1([s0([47.0], [[48.0]]), s0([49.0], [[50.0]])], s0([51.0], [[52.0]]))], [s1([s0([53.0], [[54.0]]), s0([55.0], [[56.0]])], s0([57.0], [[58.0]]))]], s0([59.0], [[60.0]]))] in
    let v3: Float = 61.0 in
    let initialResult: Float = 61.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()