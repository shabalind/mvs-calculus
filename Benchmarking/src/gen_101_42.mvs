  let noinline_f0: ([Float], Float) -> Float = (v0: [Float], v1: Float) -> Float {
    var v3: Float = v1 in
    var v7: Float = v3 in
    var v2: Float = v1 in
    var v4: [Float] = v0 in
    var v9: [Float] = v0 in
    v9[0] = v2 in
    let v6: Float = v9[0] in
    v4[0] = v6 in
    var v5: Float = v7 in
    v9[0] = v3 in
    var v11: [Float] = v9 in
    var v8: Float = v5 in
    var v14: [Float] = v0 in
    v4[0] = v1 in
    var v20: [Float] = v4 in
    let v10: Float = v20[0] in
    v14 = v9 in
    v7 = v5 in
    let v13: Float = v4[0] in
    let v34: Float = v0[0] in
    var v15: Float = v3 in
    let v17: Float = v11[0] in
    v9[0] = v2 in
    var v18: [Float] = v4 in
    let v12: Float = v14[0] in
    v14[0] = v1 in
    let v31: Float = v13 + v17 in
    let v23: Float = v0[0] in
    v11[0] = v8 in
    var v24: Float = v31 in
    v11[0] = v3 in
    v18[0] = v34 in
    v14[0] = v23 in
    let v32: Float = v18[0] in
    v18[0] = v8 in
    v4[0] = v15 in
    v9[0] = v34 in
    var v124: Float = v8 in
    v14[0] = v24 in
    let v58: [Float] = [v31, v124, v10] in
    v124 = v12 in
    let v56: Float = v11[0] in
    var v44: [Float] = v58 in
    v8 = v32 in
    v44[0] = v5 in
    var v59: [Float] = v44 in
    v15 = v56 in
    let v106: Float = v59[2] in
    v106
  } in
  fun loop(i: Int, v0: [Float], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [Float] = [0.0] in
    let v1: Float = 1.0 in
    let initialResult: Float = 1.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()