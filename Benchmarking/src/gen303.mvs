  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: Float
    var p1: s0
  } in
  struct s3 {
    var p0: [[s2]]
    var p1: s2
  } in
  let f100: ([s2], s0) -> s0 = (v0: [s2], v1: s0) -> s0 {
    let v4: [[Float]] = v1.p1 in
    let v3: [[Float]] = v1.p0 in
    var v7: [s2] = v0 in
    let v2: [Float] = v3[0] in
    var v5: [Float] = v2 in
    let v11: [[Float]] = v1.p1 in
    let v6: s2 = v7[0] in
    let v9: [[Float]] = v1.p0 in
    v7[0] = v6 in
    let v18: s0 = v6.p1 in
    var v59: s0 = v18 in
    var v15: [Float] = v5 in
    var v49: s2 = v6 in
    let v32: Float = v15[0] in
    v5[0] = v32 in
    var v35: [[Float]] = v4 in
    let v30: s0 = v49.p1 in
    v59.p0 = v9 in
    v59.p1 = v11 in
    v49.p1 = v59 in
    v49.p0 = v32 in
    v7[0] = v49 in
    var v21: s0 = v30 in
    v21.p1 = v35 in
    v49.p0 = v32 in
    v35[1] = v15 in
    v21
  } in
  let f87: ([s2]) -> [s2] = (v0: [s2]) -> [s2] {
    let v4: [[s2]] = [v0] in
    let v7: s2 = v0[0] in
    var v3: [s2] = v0 in
    let v1: [s2] = v4[0] in
    var v8: s2 = v7 in
    let v2: s0 = v8.p1 in
    var v10: s0 = v2 in
    let v19: [s2] = v4[0] in
    let v5: s0 = f100(v1, v10) in
    let v14: s2 = v19[0] in
    var v24: [s2] = v3 in
    let v12: s0 = f100(v19, v10) in
    let v26: s2 = v1[0] in
    let v30: [s2] = [v14, v7, v8, v8, v26] in
    v8.p1 = v12 in
    let v20: [[Float]] = v12.p0 in
    let v21: s0 = f100(v24, v5) in
    let v45: s0 = f100(v24, v10) in
    v8.p1 = v21 in
    let v41: Float = v7.p0 in
    let v46: s2 = v30[2] in
    v10.p0 = v20 in
    v8.p1 = v10 in
    v3[0] = v7 in
    var v198: [s2] = v0 in
    v198[0] = v46 in
    v8.p1 = v45 in
    v8.p0 = v41 in
    v198
  } in
  let f73: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v5: [[Float]] = v3.p0 in
    let v7: [Float] = v5[0] in
    let v2: Float = v7[0] in
    let v13: [Float] = v5[0] in
    v3.p0 = v5 in
    v3.p0 = v5 in
    v3.p0 = v5 in
    var v14: [[Float]] = v5 in
    v14[0] = v13 in
    let v4: [Float] = v14[0] in
    var v8: [[Float]] = v5 in
    let v9: [[Float]] = v3.p1 in
    v14[0] = v7 in
    let v23: [[Float]] = v0.p1 in
    var v19: [[Float]] = v23 in
    let v11: [Float] = v14[0] in
    let v34: [[Float]] = v3.p0 in
    v3.p1 = v9 in
    let v20: [[Float]] = v0.p1 in
    let v15: [[Float]] = v0.p1 in
    v14[0] = v4 in
    let v26: [[Float]] = v3.p1 in
    let v31: [Float] = v14[0] in
    v3.p0 = v34 in
    v3.p1 = v19 in
    v3.p0 = v5 in
    var v28: [[Float]] = v20 in
    var v27: [Float] = v13 in
    v3 = v0 in
    var v64: s0 = v0 in
    var v37: [[Float]] = v5 in
    let v38: [Float] = v37[0] in
    v19[1] = v38 in
    var v41: s0 = v64 in
    v3.p1 = v28 in
    v3.p0 = v14 in
    v14[0] = v31 in
    v64.p1 = v15 in
    var v40: [Float] = v27 in
    var v110: [[Float]] = v14 in
    v37[0] = v11 in
    v64.p1 = v26 in
    let v33: [[Float]] = v0.p0 in
    let v103: [Float] = v19[1] in
    var v52: [Float] = v13 in
    v19[1] = v52 in
    let v50: [Float] = v110[0] in
    v64.p0 = v8 in
    v41.p1 = v9 in
    v28[0] = v50 in
    v37[0] = v40 in
    v14 = v33 in
    v28[1] = v40 in
    v19[1] = v103 in
    v40[0] = v2 in
    let v53: [[Float]] = v3.p1 in
    v64.p1 = v53 in
    v64.p1 = v20 in
    v19[1] = v7 in
    v41
  } in
  let f32: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    let v6: [Float] = [v2, v0, v0, v0, v2, v0, v0] in
    let v7: Float = v6[4] in
    var v8: [Float] = v6 in
    v8[0] = v7 in
    let v11: Float = v6[5] in
    var v9: Float = v2 in
    let v10: Float = v6[2] in
    let v1: Float = v8[2] in
    v8[4] = v9 in
    v8[1] = v10 in
    v8[0] = v11 in
    v8[2] = v2 in
    v8[5] = v11 in
    v8[5] = v0 in
    v8[2] = v1 in
    var v86: [Float] = v8 in
    let v19: Float = v86[3] in
    v19
  } in
  let noinline_f0: (s3, Float) -> Float = (v0: s3, v1: Float) -> Float {
    let v4: [[s2]] = v0.p0 in
    let v6: [s2] = v4[0] in
    let v3: s2 = v0.p1 in
    let v11: Float = f32(v1) in
    let v7: s2 = v0.p1 in
    let v8: Float = v1 + v11 in
    let v10: Float = f32(v8) in
    let v16: [s2] = f87(v6) in
    let v12: s2 = v0.p1 in
    let v19: s0 = v3.p1 in
    let v22: s0 = v7.p1 in
    let v24: s2 = v16[0] in
    var v34: s2 = v12 in
    var v69: s2 = v34 in
    let v44: Float = v69.p0 in
    v69.p1 = v22 in
    v69.p0 = v10 in
    let v54: s0 = f73(v19) in
    v69 = v24 in
    v34.p1 = v22 in
    let v97: s0 = v3.p1 in
    v34.p1 = v97 in
    v69.p1 = v54 in
    v44
  } in
  fun loop(i: Int, v0: s3, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([[s2(0.0, s0([[1.0]], [[2.0], [3.0]]))]], s2(4.0, s0([[5.0]], [[6.0], [7.0]]))) in
    let v1: Float = 8.0 in
    let initialResult: Float = 8.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()