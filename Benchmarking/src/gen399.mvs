  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
    var p4: [[Float]]
    var p5: [[Float]]
    var p6: [[Float]]
    var p7: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: s0
    var p1: s1
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    var v1: s0 = v0 in
    let v3: [[Float]] = v0.p7 in
    let v4: [Float] = v3[0] in
    let v11: [Float] = v3[0] in
    let v8: [[Float]] = v0.p0 in
    let v14: [[Float]] = v0.p3 in
    let v9: [[Float]] = v0.p3 in
    let v15: [[Float]] = v0.p5 in
    v1.p3 = v14 in
    var v10: [[Float]] = v8 in
    let v7: [[Float]] = v0.p5 in
    v10[0] = v4 in
    let v13: [[Float]] = v0.p1 in
    var v12: [[Float]] = v10 in
    v1.p5 = v7 in
    let v19: [Float] = v10[0] in
    v10 = v8 in
    v1.p4 = v15 in
    let v22: [[Float]] = v1.p7 in
    v1.p5 = v9 in
    var v28: s0 = v0 in
    let v50: [[Float]] = v28.p5 in
    var v21: [[Float]] = v12 in
    v1.p1 = v13 in
    v28.p7 = v7 in
    let v16: [[Float]] = v0.p0 in
    let v54: [Float] = v50[1] in
    let v20: [[Float]] = v1.p6 in
    v21[0] = v54 in
    v10 = v16 in
    let v27: [Float] = v21[0] in
    v12[0] = v19 in
    v28.p2 = v22 in
    let v43: [Float] = v20[0] in
    v28.p7 = v3 in
    v1.p3 = v50 in
    v12[0] = v11 in
    v10[0] = v43 in
    v28.p0 = v21 in
    let v88: [[Float]] = v1.p7 in
    v12[0] = v27 in
    v28.p4 = v88 in
    var v91: s0 = v28 in
    v91
  } in
  let f2: (s1) -> s1 = (v0: s1) -> s1 {
    var v4: s1 = v0 in
    let v1: [s0] = v4.p0 in
    let v2: [s0] = v0.p0 in
    var v5: s1 = v0 in
    v4 = v0 in
    var v8: [s0] = v1 in
    let v9: [s0] = v4.p0 in
    v5.p0 = v8 in
    let v6: s0 = v5.p1 in
    let v13: [s0] = v5.p0 in
    let v10: s0 = v2[0] in
    let v15: s0 = f4(v6) in
    let v25: s1 = s1(v9, v15) in
    let v40: s0 = v4.p1 in
    v8[1] = v40 in
    v8[0] = v6 in
    let v29: s1 = s1(v13, v40) in
    v5.p0 = v13 in
    let v41: s0 = v5.p1 in
    var v39: s1 = v25 in
    var v86: s0 = v41 in
    let v56: s0 = v13[0] in
    v39.p1 = v10 in
    v39.p0 = v1 in
    let v30: s0 = f4(v56) in
    var v54: s0 = v86 in
    let v78: s0 = f4(v40) in
    v8[0] = v30 in
    let v113: [s0] = v29.p0 in
    v39.p0 = v113 in
    v4.p1 = v41 in
    v8[1] = v78 in
    var v125: s1 = v39 in
    var v111: [s0] = v13 in
    v4.p1 = v54 in
    v4.p0 = v111 in
    v125
  } in
  let noinline_f0: ([s3], [s1], s0, [s0], Float) -> Float = (v0: [s3], v1: [s1], v2: s0, v3: [s0], v4: Float) -> Float {
    let v6: s3 = v0[0] in
    let v8: s0 = f4(v2) in
    let v11: s0 = f4(v2) in
    let v10: s0 = v3[1] in
    var v9: s3 = v6 in
    let v18: [[Float]] = v10.p5 in
    v9.p0 = v11 in
    let v22: s1 = v9.p1 in
    v9.p0 = v8 in
    var v13: s1 = v22 in
    let v29: s1 = f2(v13) in
    let v23: s0 = v9.p0 in
    v13 = v29 in
    let v28: s0 = f4(v23) in
    v13.p0 = v3 in
    let v16: [Float] = v18[0] in
    let v26: s0 = f4(v28) in
    v9.p1 = v13 in
    var v35: [Float] = v16 in
    let v52: Float = v16[0] in
    let v49: s0 = f4(v26) in
    let v36: s0 = v13.p1 in
    v35[0] = v52 in
    let v43: s3 = s3(v49, v13) in
    let v42: s0 = f4(v49) in
    let v56: [[Float]] = [v16, v16, v35, v16, v35] in
    v13.p1 = v23 in
    let v57: [[Float]] = v42.p0 in
    let v111: [Float] = v57[0] in
    let v138: s3 = v0[0] in
    v9 = v43 in
    var v128: [[Float]] = v56 in
    let v69: [Float] = v56[4] in
    v128 = v56 in
    let v125: [Float] = v128[0] in
    v9 = v138 in
    let v89: [[Float]] = [v69, v125, v125] in
    var v77: [[Float]] = v89 in
    let v150: s0 = f4(v36) in
    let v196: [Float] = v77[0] in
    let v135: Float = v111[0] in
    let v221: Float = v196[0] in
    let v136: Float = v135 + v221 in
    v9.p0 = v150 in
    v13.p1 = v42 in
    v35[0] = v135 in
    v136
  } in
  fun loop(i: Int, v0: [s3], v1: [s1], v2: s0, v3: [s0], v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3(s0([[0.0]], [[1.0], [2.0], [3.0]], [[4.0], [5.0]], [[6.0], [7.0]], [[8.0], [9.0]], [[10.0], [11.0]], [[12.0]], [[13.0], [14.0]]), s1([s0([[15.0]], [[16.0], [17.0], [18.0]], [[19.0], [20.0]], [[21.0], [22.0]], [[23.0], [24.0]], [[25.0], [26.0]], [[27.0]], [[28.0], [29.0]]), s0([[30.0]], [[31.0], [32.0], [33.0]], [[34.0], [35.0]], [[36.0], [37.0]], [[38.0], [39.0]], [[40.0], [41.0]], [[42.0]], [[43.0], [44.0]])], s0([[45.0]], [[46.0], [47.0], [48.0]], [[49.0], [50.0]], [[51.0], [52.0]], [[53.0], [54.0]], [[55.0], [56.0]], [[57.0]], [[58.0], [59.0]])))] in
    let v1: [s1] = [s1([s0([[60.0]], [[61.0], [62.0], [63.0]], [[64.0], [65.0]], [[66.0], [67.0]], [[68.0], [69.0]], [[70.0], [71.0]], [[72.0]], [[73.0], [74.0]]), s0([[75.0]], [[76.0], [77.0], [78.0]], [[79.0], [80.0]], [[81.0], [82.0]], [[83.0], [84.0]], [[85.0], [86.0]], [[87.0]], [[88.0], [89.0]])], s0([[90.0]], [[91.0], [92.0], [93.0]], [[94.0], [95.0]], [[96.0], [97.0]], [[98.0], [99.0]], [[100.0], [101.0]], [[102.0]], [[103.0], [104.0]])), s1([s0([[105.0]], [[106.0], [107.0], [108.0]], [[109.0], [110.0]], [[111.0], [112.0]], [[113.0], [114.0]], [[115.0], [116.0]], [[117.0]], [[118.0], [119.0]]), s0([[120.0]], [[121.0], [122.0], [123.0]], [[124.0], [125.0]], [[126.0], [127.0]], [[128.0], [129.0]], [[130.0], [131.0]], [[132.0]], [[133.0], [134.0]])], s0([[135.0]], [[136.0], [137.0], [138.0]], [[139.0], [140.0]], [[141.0], [142.0]], [[143.0], [144.0]], [[145.0], [146.0]], [[147.0]], [[148.0], [149.0]])), s1([s0([[150.0]], [[151.0], [152.0], [153.0]], [[154.0], [155.0]], [[156.0], [157.0]], [[158.0], [159.0]], [[160.0], [161.0]], [[162.0]], [[163.0], [164.0]]), s0([[165.0]], [[166.0], [167.0], [168.0]], [[169.0], [170.0]], [[171.0], [172.0]], [[173.0], [174.0]], [[175.0], [176.0]], [[177.0]], [[178.0], [179.0]])], s0([[180.0]], [[181.0], [182.0], [183.0]], [[184.0], [185.0]], [[186.0], [187.0]], [[188.0], [189.0]], [[190.0], [191.0]], [[192.0]], [[193.0], [194.0]]))] in
    let v2: s0 = s0([[195.0]], [[196.0], [197.0], [198.0]], [[199.0], [200.0]], [[201.0], [202.0]], [[203.0], [204.0]], [[205.0], [206.0]], [[207.0]], [[208.0], [209.0]]) in
    let v3: [s0] = [s0([[210.0]], [[211.0], [212.0], [213.0]], [[214.0], [215.0]], [[216.0], [217.0]], [[218.0], [219.0]], [[220.0], [221.0]], [[222.0]], [[223.0], [224.0]]), s0([[225.0]], [[226.0], [227.0], [228.0]], [[229.0], [230.0]], [[231.0], [232.0]], [[233.0], [234.0]], [[235.0], [236.0]], [[237.0]], [[238.0], [239.0]])] in
    let v4: Float = 240.0 in
    let initialResult: Float = 240.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()