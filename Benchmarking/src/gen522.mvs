  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
    var p2: [s0]
  } in
  struct s11 {
    var p0: s2
    var p1: [[s1]]
  } in
  let f85: (s2) -> s2 = (v0: s2) -> s2 {
    var v4: s2 = v0 in
    let v3: s0 = v0.p0 in
    var v7: s0 = v3 in
    v4.p0 = v7 in
    v4.p0 = v7 in
    v4 = v0 in
    v4 = v0 in
    let v9: [[Float]] = v7.p0 in
    var v1: s0 = v7 in
    var v2: s2 = v0 in
    let v6: [Float] = v9[0] in
    var v18: [Float] = v6 in
    v4.p0 = v1 in
    let v35: [[Float]] = [v6] in
    let v19: [[Float]] = v1.p1 in
    var v27: [[Float]] = v19 in
    let v16: [Float] = v35[0] in
    let v24: Float = v16[0] in
    let v44: [Float] = v19[0] in
    v2.p0 = v7 in
    let v20: [[s1]] = v2.p1 in
    v27[0] = v18 in
    var v41: [[s1]] = v20 in
    let v23: [s0] = v4.p2 in
    var v105: s2 = v2 in
    v105.p2 = v23 in
    v2.p2 = v23 in
    var v70: s0 = v1 in
    let v28: [[Float]] = v70.p0 in
    v1.p1 = v27 in
    v2.p1 = v41 in
    let v66: s0 = v23[0] in
    v27[0] = v44 in
    v18[0] = v24 in
    let v67: [[s1]] = v2.p1 in
    v27[0] = v44 in
    v7.p0 = v28 in
    v2.p1 = v67 in
    v2.p0 = v66 in
    v105
  } in
  let f79: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: [s0] = v0.p1 in
    var v8: s1 = v0 in
    v8.p1 = v6 in
    let v7: s0 = v8.p0 in
    let v3: [[Float]] = v7.p0 in
    var v1: s0 = v7 in
    v1.p0 = v3 in
    let v13: [[Float]] = v1.p0 in
    var v2: [[Float]] = v13 in
    v2 = v3 in
    var v12: [s0] = v6 in
    v12[2] = v7 in
    let v14: [Float] = v13[0] in
    let v10: s0 = v12[1] in
    var v18: [s0] = v6 in
    var v20: s1 = v8 in
    var v36: [Float] = v14 in
    let v21: s0 = v18[1] in
    let v17: [s0] = v20.p1 in
    let v26: s0 = v6[1] in
    v8.p0 = v1 in
    v20.p1 = v18 in
    v1.p0 = v2 in
    let v31: s1 = s1(v21, v17) in
    let v46: Float = v36[0] in
    v18[1] = v26 in
    v2[1] = v36 in
    v8.p0 = v10 in
    let v43: Float = v46 - v46 in
    var v32: s1 = v31 in
    let v84: Float = v46 * v43 in
    v32.p0 = v21 in
    v36[0] = v84 in
    v32
  } in
  let f68: (s2, s1) -> s1 = (v0: s2, v1: s1) -> s1 {
    let v4: [[s1]] = v0.p1 in
    var v7: s2 = v0 in
    let v22: s2 = f85(v7) in
    var v8: s2 = v0 in
    v8.p1 = v4 in
    let v26: s0 = v8.p0 in
    v8.p1 = v4 in
    let v28: [[Float]] = v26.p1 in
    var v54: s0 = v26 in
    let v38: [[Float]] = v54.p0 in
    let v84: [s0] = v1.p1 in
    let v69: s1 = s1(v54, v84) in
    v8 = v22 in
    v54.p1 = v28 in
    let v98: [[Float]] = v26.p1 in
    v54.p0 = v38 in
    v54.p0 = v38 in
    v54.p1 = v98 in
    v69
  } in
  let f21: (s2) -> s2 = (v0: s2) -> s2 {
    let v1: [s0] = v0.p2 in
    let v6: s0 = v1[0] in
    let v4: s0 = v1[0] in
    let v19: s2 = f85(v0) in
    let v9: [s0] = v19.p2 in
    let v18: s2 = f85(v19) in
    let v13: s2 = f85(v19) in
    var v14: s2 = v19 in
    let v30: [s0] = v19.p2 in
    let v15: [s0] = v18.p2 in
    v14.p2 = v1 in
    let v51: s2 = f85(v14) in
    let v16: s0 = v9[0] in
    v14.p2 = v1 in
    v14.p0 = v4 in
    v14.p0 = v6 in
    v14.p2 = v1 in
    let v27: [s0] = v19.p2 in
    v14.p0 = v4 in
    v14.p0 = v4 in
    let v44: [[s1]] = v13.p1 in
    v14.p0 = v6 in
    v14 = v18 in
    var v76: [[s1]] = v44 in
    let v38: s11 = s11(v14, v76) in
    let v58: s2 = f85(v51) in
    let v42: s0 = v27[0] in
    var v50: s2 = v58 in
    v50.p2 = v15 in
    v14.p0 = v42 in
    v14.p0 = v16 in
    let v177: [[s1]] = v38.p1 in
    v50.p1 = v177 in
    v50.p2 = v30 in
    v50
  } in
  let f16: (s11, [s1]) -> [s1] = (v0: s11, v1: [s1]) -> [s1] {
    let v8: [[s1]] = v0.p1 in
    var v72: [[s1]] = v8 in
    let v156: [s1] = v72[0] in
    v156
  } in
  let f14: (s2, s1, s11) -> s1 = (v0: s2, v1: s1, v2: s11) -> s1 {
    var v4: s2 = v0 in
    var v7: s1 = v1 in
    var v3: s1 = v7 in
    var v9: s2 = v0 in
    let v16: s2 = f85(v4) in
    let v18: s0 = v3.p0 in
    v4.p0 = v18 in
    let v12: s2 = v2.p0 in
    let v20: s2 = f21(v9) in
    let v43: s1 = f68(v20, v3) in
    let v112: s1 = f68(v12, v43) in
    let v106: s1 = f68(v16, v112) in
    v106
  } in
  let f6: (s2, s11) -> s11 = (v0: s2, v1: s11) -> s11 {
    var v2: s11 = v1 in
    v2.p0 = v0 in
    let v3: s2 = f21(v0) in
    var v6: s2 = v0 in
    let v7: [[s1]] = v1.p1 in
    let v5: [s1] = v7[0] in
    var v18: s11 = v2 in
    v6.p1 = v7 in
    v6.p1 = v7 in
    let v4: [s1] = v7[0] in
    let v8: [[s1]] = v1.p1 in
    var v9: s11 = v18 in
    let v12: s1 = v4[0] in
    let v15: [s1] = v7[0] in
    let v14: [s1] = v8[0] in
    v2.p0 = v0 in
    let v11: s2 = f21(v6) in
    let v20: s1 = f68(v11, v12) in
    let v25: s1 = f14(v0, v20, v9) in
    var v13: [[s1]] = v7 in
    let v34: s1 = f79(v25) in
    v18.p1 = v13 in
    let v31: s11 = s11(v3, v7) in
    let v35: s0 = v34.p0 in
    let v41: [s1] = f16(v31, v15) in
    var v27: s0 = v35 in
    let v36: [s0] = v25.p1 in
    v13[0] = v5 in
    v6.p0 = v27 in
    v2.p0 = v3 in
    v13[0] = v14 in
    let v102: s2 = f85(v0) in
    let v49: s0 = v36[2] in
    let v51: s2 = v1.p0 in
    v2 = v18 in
    var v40: s2 = v102 in
    v13[0] = v41 in
    let v78: s0 = v36[0] in
    v40.p0 = v78 in
    let v131: s2 = f85(v11) in
    let v67: [s2] = [v51, v102, v3, v131, v40, v6, v51] in
    let v62: s2 = v67[6] in
    let v128: s11 = s11(v62, v13) in
    let v91: s2 = v1.p0 in
    let v227: s2 = f21(v91) in
    let v266: s2 = v67[1] in
    v18.p0 = v227 in
    let v155: [[Float]] = v49.p1 in
    v27.p1 = v155 in
    v9.p0 = v266 in
    v128
  } in
  let noinline_f0: ([s11], Float) -> Float = (v0: [s11], v1: Float) -> Float {
    var v4: [s11] = v0 in
    let v2: s11 = v0[2] in
    let v11: s11 = v4[0] in
    v4[2] = v2 in
    let v13: s11 = v4[2] in
    let v15: s2 = v11.p0 in
    let v23: s11 = f6(v15, v2) in
    let v24: s2 = f85(v15) in
    v4[1] = v23 in
    let v43: s11 = v4[0] in
    let v42: s0 = v24.p0 in
    v4[0] = v13 in
    v4[2] = v13 in
    let v35: [[Float]] = v42.p1 in
    let v73: [Float] = v35[0] in
    let v103: Float = v73[0] in
    v4[1] = v43 in
    v103
  } in
  fun loop(i: Int, v0: [s11], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s11] = [s11(s2(s0([[0.0], [1.0], [2.0]], [[3.0]]), [[s1(s0([[4.0], [5.0], [6.0]], [[7.0]]), [s0([[8.0], [9.0], [10.0]], [[11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0]]), s0([[16.0], [17.0], [18.0]], [[19.0]])])]], [s0([[20.0], [21.0], [22.0]], [[23.0]])]), [[s1(s0([[24.0], [25.0], [26.0]], [[27.0]]), [s0([[28.0], [29.0], [30.0]], [[31.0]]), s0([[32.0], [33.0], [34.0]], [[35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0]])])]]), s11(s2(s0([[40.0], [41.0], [42.0]], [[43.0]]), [[s1(s0([[44.0], [45.0], [46.0]], [[47.0]]), [s0([[48.0], [49.0], [50.0]], [[51.0]]), s0([[52.0], [53.0], [54.0]], [[55.0]]), s0([[56.0], [57.0], [58.0]], [[59.0]])])]], [s0([[60.0], [61.0], [62.0]], [[63.0]])]), [[s1(s0([[64.0], [65.0], [66.0]], [[67.0]]), [s0([[68.0], [69.0], [70.0]], [[71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0]]), s0([[76.0], [77.0], [78.0]], [[79.0]])])]]), s11(s2(s0([[80.0], [81.0], [82.0]], [[83.0]]), [[s1(s0([[84.0], [85.0], [86.0]], [[87.0]]), [s0([[88.0], [89.0], [90.0]], [[91.0]]), s0([[92.0], [93.0], [94.0]], [[95.0]]), s0([[96.0], [97.0], [98.0]], [[99.0]])])]], [s0([[100.0], [101.0], [102.0]], [[103.0]])]), [[s1(s0([[104.0], [105.0], [106.0]], [[107.0]]), [s0([[108.0], [109.0], [110.0]], [[111.0]]), s0([[112.0], [113.0], [114.0]], [[115.0]]), s0([[116.0], [117.0], [118.0]], [[119.0]])])]])] in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()