  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: Float
    var p1: [s0]
  } in
  struct s4 {
    var p0: [s0]
    var p1: s2
  } in
  struct s9 {
    var p0: Float
    var p1: [s4]
  } in
  struct s12 {
    var p0: s0
    var p1: s4
  } in
  let f119: (s4) -> s4 = (v0: s4) -> s4 {
    var v1: s4 = v0 in
    var v6: s4 = v0 in
    let v7: s2 = v6.p1 in
    var v2: s2 = v7 in
    var v4: s2 = v7 in
    var v8: s4 = v1 in
    let v3: [s0] = v4.p1 in
    var v10: [s0] = v3 in
    let v11: [s0] = v4.p1 in
    let v5: Float = v4.p0 in
    let v12: s0 = v3[1] in
    v6.p1 = v2 in
    let v16: s2 = v8.p1 in
    v4 = v2 in
    v4 = v7 in
    v2.p0 = v5 in
    v6.p1 = v4 in
    let v43: [s0] = v16.p1 in
    v8.p1 = v2 in
    v8.p1 = v4 in
    let v34: Float = v4.p0 in
    v10 = v11 in
    let v24: s0 = v43[0] in
    v1.p1 = v16 in
    v10[0] = v12 in
    v4.p1 = v3 in
    v2.p1 = v3 in
    v4.p1 = v10 in
    v4.p1 = v10 in
    var v37: s4 = v0 in
    v4.p0 = v34 in
    v37.p1 = v7 in
    v10[1] = v24 in
    let v203: s12 = s12(v24, v37) in
    let v129: s4 = v203.p1 in
    v10[1] = v24 in
    v2.p0 = v34 in
    v1.p1 = v7 in
    v129
  } in
  let f109: ([s4]) -> [s4] = (v0: [s4]) -> [s4] {
    let v2: s4 = v0[0] in
    let v6: s4 = f119(v2) in
    let v8: s4 = f119(v6) in
    let v1: s4 = v0[0] in
    let v10: s4 = f119(v1) in
    var v9: [s4] = v0 in
    v9[0] = v2 in
    let v26: s4 = f119(v1) in
    var v23: [s4] = v0 in
    v9[0] = v8 in
    v9[0] = v26 in
    let v87: s4 = f119(v10) in
    var v121: [s4] = v9 in
    v23[0] = v87 in
    var v78: [s4] = v23 in
    v23 = v121 in
    v23[0] = v1 in
    v78
  } in
  let f75: (s9) -> s9 = (v0: s9) -> s9 {
    var v4: s9 = v0 in
    var v2: s9 = v4 in
    let v5: [s4] = v4.p1 in
    v4 = v2 in
    let v1: [s4] = f109(v5) in
    let v8: [s4] = f109(v5) in
    let v6: Float = v2.p0 in
    let v9: s9 = s9(v6, v8) in
    var v11: [s4] = v1 in
    let v3: [s4] = v4.p1 in
    let v7: [s4] = f109(v3) in
    v4.p0 = v6 in
    let v17: s4 = v11[0] in
    let v21: s4 = v5[0] in
    v11[0] = v21 in
    v11[0] = v17 in
    v11[0] = v17 in
    v11[0] = v17 in
    let v26: s4 = f119(v17) in
    var v12: [s4] = v7 in
    v11[0] = v17 in
    let v37: Float = v4.p0 in
    v12[0] = v26 in
    v11[0] = v21 in
    v12[0] = v26 in
    let v59: s9 = s9(v6, v8) in
    var v20: s4 = v17 in
    let v42: [s4] = f109(v12) in
    let v19: s9 = s9(v37, v1) in
    var v34: s9 = v9 in
    let v24: s4 = f119(v20) in
    let v46: [s4] = v34.p1 in
    v4 = v19 in
    v34.p1 = v42 in
    v4 = v59 in
    let v54: [s0] = v21.p0 in
    v2.p1 = v46 in
    let v58: s4 = f119(v24) in
    v12[0] = v58 in
    v34.p0 = v37 in
    v11[0] = v26 in
    let v48: Float = v0.p0 in
    v4.p0 = v6 in
    v4.p0 = v48 in
    v2.p1 = v5 in
    v20.p0 = v54 in
    v20.p0 = v54 in
    v34
  } in
  let noinline_f0: (s9, Float) -> Float = (v0: s9, v1: Float) -> Float {
    let v5: s9 = f75(v0) in
    let v11: [s4] = v5.p1 in
    let v13: [s4] = f109(v11) in
    let v18: s4 = v13[0] in
    let v20: s2 = v18.p1 in
    let v44: Float = v20.p0 in
    var v53: Float = v44 in
    var v179: Float = v53 in
    v179
  } in
  fun loop(i: Int, v0: s9, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9(0.0, [s4([s0([[1.0]], [[2.0], [3.0], [4.0]])], s2(5.0, [s0([[6.0]], [[7.0], [8.0], [9.0]]), s0([[10.0]], [[11.0], [12.0], [13.0]])]))]) in
    let v1: Float = 14.0 in
    let initialResult: Float = 14.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()