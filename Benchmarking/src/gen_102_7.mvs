  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s4 {
    var p0: [s0]
    var p1: s2
  } in
  struct s8 {
    var p0: [s2]
    var p1: s4
  } in
  let f101: (s2) -> s2 = (v0: s2) -> s2 {
    v0
  } in
  let f85: (s2) -> s2 = (v0: s2) -> s2 {
    let v14: s2 = f101(v0) in
    let v19: s2 = f101(v14) in
    let v12: s2 = f101(v19) in
    v12
  } in
  let f81: (s8) -> s8 = (v0: s8) -> s8 {
    let v1: [s2] = v0.p0 in
    let v7: s2 = v1[0] in
    var v8: [s2] = v1 in
    var v3: [s2] = v1 in
    let v4: s2 = f101(v7) in
    var v2: [s2] = v3 in
    let v12: s2 = f85(v7) in
    v3 = v8 in
    v8[0] = v7 in
    var v43: s8 = v0 in
    v2[0] = v4 in
    let v28: s2 = f101(v12) in
    v43.p0 = v2 in
    let v75: s2 = f85(v28) in
    let v69: s4 = v43.p1 in
    v43.p1 = v69 in
    v3[0] = v75 in
    v43
  } in
  let f76: (s8) -> s8 = (v0: s8) -> s8 {
    let v7: [s2] = v0.p0 in
    var v1: [s2] = v7 in
    let v6: s8 = f81(v0) in
    let v3: s2 = v7[0] in
    let v4: s2 = v7[0] in
    let v9: s2 = v7[0] in
    var v10: s2 = v3 in
    var v8: s8 = v6 in
    var v2: [s2] = v7 in
    let v24: s2 = f85(v10) in
    let v29: s2 = f101(v10) in
    v8.p0 = v2 in
    var v12: s8 = v8 in
    let v18: s2 = f85(v9) in
    let v32: s2 = v7[0] in
    let v15: [s0] = v24.p1 in
    var v33: [s2] = v7 in
    v10.p1 = v15 in
    let v17: s4 = v12.p1 in
    v33[0] = v18 in
    v8.p1 = v17 in
    let v59: [s0] = v17.p0 in
    var v28: s4 = v17 in
    v12.p0 = v33 in
    v8 = v0 in
    var v65: [s0] = v59 in
    let v19: s2 = f85(v3) in
    v33[0] = v3 in
    let v69: s2 = f101(v32) in
    let v37: [s0] = v4.p0 in
    v28.p1 = v29 in
    var v137: [s2] = v2 in
    v33[0] = v29 in
    var v58: [s2] = v137 in
    var v48: [s2] = v58 in
    let v74: s2 = v58[0] in
    v28.p0 = v65 in
    v8.p0 = v1 in
    var v86: [s0] = v37 in
    v2[0] = v29 in
    v58[0] = v19 in
    v28.p1 = v3 in
    v137 = v58 in
    v1[0] = v69 in
    v2[0] = v18 in
    v12 = v8 in
    let v191: s8 = s8(v48, v28) in
    v10.p0 = v86 in
    v33[0] = v74 in
    v191
  } in
  let f44: (s8) -> s8 = (v0: s8) -> s8 {
    let v1: s8 = f81(v0) in
    let v4: [s2] = v0.p0 in
    let v5: s8 = f76(v1) in
    let v3: s2 = v4[0] in
    let v8: [s0] = v3.p1 in
    var v17: s2 = v3 in
    var v2: [s2] = v4 in
    let v9: s0 = v8[1] in
    var v23: s0 = v9 in
    var v10: s2 = v17 in
    var v15: s2 = v10 in
    let v13: s2 = v2[0] in
    let v12: s2 = v4[0] in
    var v11: s2 = v12 in
    v11 = v15 in
    v10.p1 = v8 in
    var v18: s0 = v23 in
    let v21: s0 = v8[1] in
    v2[0] = v13 in
    var v41: s8 = v5 in
    v15.p1 = v8 in
    v2[0] = v11 in
    v11.p1 = v8 in
    let v28: s2 = v2[0] in
    v41.p0 = v2 in
    let v36: s0 = v8[0] in
    var v51: [s0] = v8 in
    let v54: [[Float]] = v21.p0 in
    let v25: s0 = v8[1] in
    var v34: [s0] = v8 in
    var v38: [[Float]] = v54 in
    let v40: s0 = v51[2] in
    var v30: s0 = v36 in
    let v47: s0 = v51[2] in
    let v52: s4 = v1.p1 in
    v34[1] = v30 in
    let v89: [Float] = v54[1] in
    v34[1] = v36 in
    var v102: [s0] = v34 in
    v51[2] = v40 in
    var v77: s0 = v18 in
    v102[1] = v47 in
    v10.p1 = v102 in
    var v114: s4 = v52 in
    v102[1] = v25 in
    v2[0] = v10 in
    v23.p0 = v54 in
    v38[0] = v89 in
    v102[2] = v25 in
    v30.p0 = v38 in
    v34[0] = v77 in
    var v190: s0 = v30 in
    var v104: s4 = v114 in
    v15.p1 = v51 in
    var v234: s8 = v41 in
    v34[2] = v9 in
    v51[2] = v190 in
    v234.p1 = v104 in
    v17.p1 = v102 in
    v114.p1 = v28 in
    let v250: [s0] = v15.p0 in
    v11.p0 = v250 in
    v234
  } in
  let f24: (s8) -> s8 = (v0: s8) -> s8 {
    let v5: [s2] = v0.p0 in
    var v8: [s2] = v5 in
    var v1: [s2] = v5 in
    let v6: [s2] = v0.p0 in
    let v2: s2 = v6[0] in
    var v14: s8 = v0 in
    v14.p0 = v1 in
    let v3: s2 = f85(v2) in
    let v11: s4 = v14.p1 in
    let v25: s8 = f44(v14) in
    var v10: s4 = v11 in
    var v18: s8 = v25 in
    v8[0] = v3 in
    v14.p0 = v6 in
    let v12: s2 = v11.p1 in
    let v63: s2 = v8[0] in
    v10 = v11 in
    v1[0] = v12 in
    let v43: [s0] = v10.p0 in
    let v87: s8 = f44(v14) in
    v10.p0 = v43 in
    v18.p1 = v11 in
    v1[0] = v63 in
    v18.p1 = v11 in
    v14.p1 = v10 in
    let v46: s4 = v87.p1 in
    let v118: s2 = v8[0] in
    let v117: s4 = v0.p1 in
    v1[0] = v118 in
    v18.p1 = v10 in
    v14.p1 = v46 in
    v1[0] = v2 in
    v18.p1 = v117 in
    v18
  } in
  let f15: (s4, s8) -> s4 = (v0: s4, v1: s8) -> s4 {
    let v32: [s0] = v0.p0 in
    let v46: s4 = v1.p1 in
    var v139: s4 = v46 in
    v139.p0 = v32 in
    v139
  } in
  let noinline_f0: ([s8], Float) -> Float = (v0: [s8], v1: Float) -> Float {
    let v7: [Float] = [v1, v1, v1, v1, v1, v1] in
    var v3: [s8] = v0 in
    let v9: s8 = v3[1] in
    let v6: Float = v7[2] in
    let v8: s4 = v9.p1 in
    v3 = v0 in
    var v11: [s8] = v0 in
    v3 = v0 in
    v11[0] = v9 in
    let v5: s4 = f15(v8, v9) in
    v11[0] = v9 in
    let v17: s8 = v0[0] in
    let v34: s8 = f24(v9) in
    let v21: [s2] = v17.p0 in
    let v32: s8 = f24(v34) in
    v3[0] = v34 in
    var v38: s8 = v32 in
    let v39: [s2] = v32.p0 in
    v11[1] = v9 in
    let v60: s4 = v38.p1 in
    let v41: s8 = v0[0] in
    v11[1] = v34 in
    v11[0] = v32 in
    let v50: s8 = v11[0] in
    v38.p1 = v5 in
    v38.p1 = v60 in
    let v69: [s0] = v5.p0 in
    v3[0] = v17 in
    v3[0] = v50 in
    let v90: s0 = v69[0] in
    var v56: [s2] = v21 in
    let v63: s8 = f24(v34) in
    let v101: [[Float]] = v90.p0 in
    v38.p1 = v8 in
    v11[1] = v41 in
    v11[1] = v50 in
    let v87: [Float] = v101[0] in
    v38.p0 = v39 in
    v11[0] = v38 in
    v11[1] = v63 in
    v38.p0 = v56 in
    let v107: Float = v87[0] in
    let v296: Float = v107 * v6 in
    v3[1] = v32 in
    v296
  } in
  fun loop(i: Int, v0: [s8], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s8] = [s8([s2([s0([[0.0], [1.0]], [[2.0]]), s0([[3.0], [4.0]], [[5.0]])], [s0([[6.0], [7.0]], [[8.0]]), s0([[9.0], [10.0]], [[11.0]]), s0([[12.0], [13.0]], [[14.0]])])], s4([s0([[15.0], [16.0]], [[17.0]])], s2([s0([[18.0], [19.0]], [[20.0]]), s0([[21.0], [22.0]], [[23.0]])], [s0([[24.0], [25.0]], [[26.0]]), s0([[27.0], [28.0]], [[29.0]]), s0([[30.0], [31.0]], [[32.0]])]))), s8([s2([s0([[33.0], [34.0]], [[35.0]]), s0([[36.0], [37.0]], [[38.0]])], [s0([[39.0], [40.0]], [[41.0]]), s0([[42.0], [43.0]], [[44.0]]), s0([[45.0], [46.0]], [[47.0]])])], s4([s0([[48.0], [49.0]], [[50.0]])], s2([s0([[51.0], [52.0]], [[53.0]]), s0([[54.0], [55.0]], [[56.0]])], [s0([[57.0], [58.0]], [[59.0]]), s0([[60.0], [61.0]], [[62.0]]), s0([[63.0], [64.0]], [[65.0]])])))] in
    let v1: Float = 66.0 in
    let initialResult: Float = 66.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()