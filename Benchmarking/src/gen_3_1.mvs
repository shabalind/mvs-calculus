  struct s0 {
    var p0: Float
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  let f8: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    v6 = v0 in
    v6 = v0 in
    var v9: Float = v0 in
    var v2: Float = v9 in
    var v7: Float = v6 in
    var v5: Float = v7 in
    let v3: [Float] = [v6, v5, v5, v5, v0, v5, v6] in
    var v21: [Float] = v3 in
    v21[5] = v0 in
    let v12: Float = v21[4] in
    v21[1] = v0 in
    v21[2] = v6 in
    var v14: [Float] = v21 in
    var v13: Float = v2 in
    var v20: [Float] = v21 in
    v20[0] = v6 in
    var v35: Float = v0 in
    let v18: Float = v14[2] in
    var v22: [Float] = v3 in
    var v19: Float = v13 in
    v14 = v3 in
    var v36: Float = v35 in
    v20[1] = v9 in
    let v25: Float = v20[4] in
    v14[4] = v12 in
    var v76: [Float] = v21 in
    v22[4] = v25 in
    var v43: Float = v18 in
    v22[6] = v7 in
    var v15: Float = v13 in
    let v26: Float = v76[5] in
    var v23: Float = v12 in
    let v27: Float = v22[5] in
    v22[2] = v15 in
    let v40: [Float] = [v5, v25, v27, v26] in
    v76 = v22 in
    var v31: Float = v35 in
    var v38: [Float] = v40 in
    let v29: Float = v21[2] in
    let v48: [Float] = [v43, v36, v36, v25, v29] in
    v22[6] = v27 in
    let v55: Float = v48[2] in
    let v32: Float = v3[3] in
    let v39: Float = v3[0] in
    let v171: Float = v21[4] in
    var v69: Float = v55 in
    var v56: [Float] = v48 in
    v38[3] = v15 in
    v14[0] = v23 in
    let v79: Float = v56[4] in
    v76[3] = v19 in
    let v58: Float = v48[2] in
    v19 = v32 in
    v69 = v171 in
    let v118: Float = v38[3] in
    v38[3] = v0 in
    v38[2] = v31 in
    let v143: Float = v38[2] in
    v20[6] = v58 in
    v69 = v143 in
    v38[2] = v39 in
    v22[1] = v79 in
    v20[2] = v118 in
    v69
  } in
  let noinline_f0: ([[s1]], Float) -> Float = (v0: [[s1]], v1: Float) -> Float {
    let v8: Float = f8(v1) in
    var v19: Float = v8 in
    v19
  } in
  fun loop(i: Int, v0: [[s1]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s1]] = [[s1(s0(0.0, [[1.0], [2.0]]), [[s0(3.0, [[4.0], [5.0]])], [s0(6.0, [[7.0], [8.0]])], [s0(9.0, [[10.0], [11.0]])]])]] in
    let v1: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()