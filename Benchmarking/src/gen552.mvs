  let f45: (Float) -> Float = (v0: Float) -> Float {
    var v8: Float = v0 in
    var v5: Float = v8 in
    var v2: Float = v0 in
    var v12: Float = v5 in
    var v9: Float = v12 in
    var v7: Float = v9 in
    let v38: [Float] = [v7, v2] in
    var v31: [Float] = v38 in
    let v34: Float = v31[0] in
    v34
  } in
  let noinline_f0: ([Float], Float, Float) -> Float = (v0: [Float], v1: Float, v2: Float) -> Float {
    let v7: Float = v0[1] in
    let v6: Float = f45(v1) in
    var v8: [Float] = v0 in
    v8[1] = v6 in
    let v4: Float = f45(v7) in
    v8 = v0 in
    var v10: [Float] = v0 in
    var v5: Float = v2 in
    v8[2] = v2 in
    let v3: Float = v0[1] in
    v10[1] = v3 in
    let v16: Float = v10[2] in
    var v12: [Float] = v10 in
    v10[1] = v7 in
    let v22: Float = v0[0] in
    let v23: Float = v0[2] in
    v8[0] = v16 in
    let v21: Float = f45(v4) in
    let v41: Float = f45(v23) in
    v12[0] = v23 in
    let v36: Float = f45(v22) in
    let v31: Float = f45(v41) in
    v8[0] = v21 in
    v8[2] = v4 in
    var v43: [Float] = v12 in
    let v28: Float = v10[0] in
    var v19: Float = v31 in
    let v95: Float = f45(v5) in
    let v60: Float = f45(v36) in
    let v27: Float = f45(v41) in
    v10[0] = v19 in
    var v83: Float = v28 in
    var v105: [Float] = v8 in
    let v44: Float = v105[1] in
    let v58: Float = f45(v60) in
    v105[0] = v83 in
    v105 = v43 in
    let v141: Float = f45(v58) in
    v10[1] = v27 in
    v12[0] = v141 in
    v12[0] = v4 in
    v8[0] = v95 in
    let v176: Float = f45(v44) in
    v176
  } in
  fun loop(i: Int, v0: [Float], v1: Float, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [Float] = [0.0, 1.0, 2.0] in
    let v1: Float = 3.0 in
    let v2: Float = 4.0 in
    let initialResult: Float = 4.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()