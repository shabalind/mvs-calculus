  struct s0 {
    var p0: [[Float]]
    var p1: Float
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: [s1]
    var p1: s2
    var p2: s2
  } in
  struct s5 {
    var p0: Float
    var p1: s3
  } in
  struct s6 {
    var p0: s3
    var p1: s0
    var p2: [s3]
    var p3: [s0]
    var p4: [s3]
  } in
  struct s8 {
    var p0: [s0]
    var p1: Float
  } in
  struct s10 {
    var p0: s1
    var p1: s3
  } in
  struct s12 {
    var p0: [s8]
    var p1: [s6]
  } in
  let f25: (s1) -> s1 = (v0: s1) -> s1 {
    var v7: s1 = v0 in
    let v5: s0 = v0.p1 in
    v7.p1 = v5 in
    let v40: s0 = v0.p1 in
    let v17: s0 = v7.p0 in
    var v21: s1 = v7 in
    let v30: s0 = v7.p1 in
    v7.p0 = v5 in
    v7.p1 = v17 in
    let v68: s1 = s1(v17, v40) in
    var v67: s1 = v68 in
    var v81: s1 = v67 in
    let v119: s0 = v0.p0 in
    let v64: s0 = v67.p1 in
    var v60: s1 = v21 in
    v67.p1 = v30 in
    v67.p0 = v64 in
    v81.p1 = v119 in
    v60 = v81 in
    v60
  } in
  let f24: (s6, s3) -> s3 = (v0: s6, v1: s3) -> s3 {
    var v7: s3 = v1 in
    let v2: [s1] = v7.p0 in
    var v14: s3 = v7 in
    v7 = v14 in
    v14.p0 = v2 in
    v7.p0 = v2 in
    v14.p0 = v2 in
    let v20: s1 = v2[0] in
    let v24: s2 = v14.p2 in
    v7.p1 = v24 in
    v7.p1 = v24 in
    v7 = v1 in
    let v38: s1 = f25(v20) in
    var v39: [s1] = v2 in
    let v82: s3 = s3(v39, v24, v24) in
    v39[0] = v38 in
    v7.p0 = v2 in
    v82
  } in
  let f15: (s6) -> s6 = (v0: s6) -> s6 {
    v0
  } in
  let f14: (s3) -> s3 = (v0: s3) -> s3 {
    let v2: s2 = v0.p2 in
    let v3: s0 = v2.p1 in
    let v5: [s0] = v2.p0 in
    var v6: s3 = v0 in
    let v1: [s0] = v2.p0 in
    let v7: s0 = v5[0] in
    let v8: s0 = v1[0] in
    let v9: s0 = v5[0] in
    v6.p2 = v2 in
    var v27: [s0] = v1 in
    let v13: s0 = v27[0] in
    var v18: s0 = v13 in
    let v36: s0 = v2.p1 in
    var v30: s2 = v2 in
    let v21: s2 = v0.p1 in
    v30.p0 = v1 in
    let v10: s0 = v5[0] in
    v27[0] = v13 in
    let v41: s0 = v1[0] in
    v27[0] = v7 in
    var v12: s2 = v30 in
    v12.p1 = v13 in
    v18 = v10 in
    v30.p1 = v10 in
    var v24: s3 = v6 in
    let v28: s0 = v27[0] in
    var v17: s0 = v18 in
    var v55: [s0] = v5 in
    let v44: s0 = v5[0] in
    v24.p1 = v2 in
    var v76: [s0] = v27 in
    v76[0] = v10 in
    v55[0] = v28 in
    var v98: [s0] = v76 in
    let v48: s0 = v98[0] in
    v76[0] = v41 in
    let v38: [[Float]] = v17.p0 in
    v27[0] = v44 in
    let v80: [s0] = [v17, v17] in
    v98[0] = v28 in
    let v40: [Float] = v38[0] in
    let v39: Float = v40[0] in
    v18 = v28 in
    v27[0] = v36 in
    v24.p2 = v21 in
    v18 = v8 in
    v18.p0 = v38 in
    var v32: s2 = v12 in
    let v29: s0 = v80[0] in
    let v51: Float = v48.p1 in
    let v54: Float = v39 / v51 in
    v27 = v55 in
    v6.p2 = v32 in
    v98[0] = v29 in
    v18.p1 = v54 in
    v30.p0 = v76 in
    let v99: s2 = v24.p1 in
    v55[0] = v9 in
    v98[0] = v3 in
    v18.p0 = v38 in
    let v74: [[Float]] = v9.p0 in
    v30.p0 = v27 in
    v98[0] = v18 in
    let v68: s5 = s5(v54, v24) in
    var v71: s5 = v68 in
    let v90: s0 = v80[1] in
    v17.p0 = v74 in
    v55[0] = v10 in
    v6.p2 = v99 in
    v24.p1 = v2 in
    let v119: s3 = v71.p1 in
    v76[0] = v90 in
    v119
  } in
  let f13: ([s6], [[s10]], s0) -> s0 = (v0: [s6], v1: [[s10]], v2: s0) -> s0 {
    let v3: [[Float]] = v2.p0 in
    let v10: s6 = v0[0] in
    let v9: s6 = f15(v10) in
    let v12: s3 = v9.p0 in
    var v13: s3 = v12 in
    let v18: s3 = f24(v10, v13) in
    let v19: [Float] = v3[0] in
    let v11: s2 = v13.p2 in
    let v16: [s1] = v12.p0 in
    let v21: s6 = f15(v10) in
    let v32: s1 = v16[0] in
    let v44: Float = v19[0] in
    let v53: [s2] = [v11, v11, v11, v11, v11, v11] in
    v13.p1 = v11 in
    var v33: s1 = v32 in
    let v28: s3 = f14(v18) in
    var v27: s2 = v11 in
    let v34: s2 = v53[1] in
    let v61: s2 = v53[1] in
    let v56: s0 = v33.p0 in
    v27.p1 = v56 in
    let v78: [[Float]] = v56.p0 in
    let v48: [s0] = v27.p0 in
    v13.p1 = v34 in
    let v96: [s1] = v28.p0 in
    v13.p2 = v34 in
    let v91: s0 = v21.p1 in
    v33.p0 = v91 in
    let v86: s0 = v48[0] in
    var v88: s0 = v56 in
    v88.p0 = v78 in
    v27.p0 = v48 in
    v13.p2 = v61 in
    v88.p1 = v44 in
    v33.p1 = v88 in
    v13.p0 = v96 in
    v86
  } in
  let f7: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: Float = v0.p1 in
    let v5: Float = v4 * v4 in
    var v7: Float = v4 in
    let v6: s1 = s1(v0, v0) in
    let v1: s1 = f25(v6) in
    let v8: s0 = v1.p0 in
    var v13: Float = v5 in
    let v2: s1 = f25(v6) in
    let v14: s0 = v2.p1 in
    let v36: [Float] = [v4, v13, v7, v4, v4, v7] in
    var v16: [Float] = v36 in
    let v21: Float = v16[5] in
    v16[0] = v5 in
    var v40: Float = v4 in
    v16[3] = v5 in
    let v24: Float = v16[3] in
    var v26: Float = v40 in
    var v30: Float = v24 in
    var v27: [Float] = v16 in
    var v35: s0 = v8 in
    v27[0] = v26 in
    let v32: Float = v27[1] in
    v16[3] = v7 in
    let v50: Float = v14.p1 in
    v35.p1 = v30 in
    v27[1] = v32 in
    v35.p1 = v32 in
    v35.p1 = v21 in
    v35.p1 = v50 in
    v35
  } in
  let noinline_f0: ([[s10]], s1, s5, s12, [[s1]], Float) -> Float = (v0: [[s10]], v1: s1, v2: s5, v3: s12, v4: [[s1]], v5: Float) -> Float {
    let v11: [s1] = v4[0] in
    let v9: s1 = f25(v1) in
    let v8: [s6] = v3.p1 in
    let v21: s0 = v9.p0 in
    let v15: s0 = f13(v8, v0, v21) in
    let v29: s0 = f7(v15) in
    let v20: s1 = v11[0] in
    let v39: Float = v29.p1 in
    let v37: s0 = v20.p0 in
    let v88: Float = v37.p1 in
    let v54: Float = v39 * v88 in
    v54
  } in
  fun loop(i: Int, v0: [[s10]], v1: s1, v2: s5, v3: s12, v4: [[s1]], v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s10]] = [[s10(s1(s0([[0.0]], 1.0), s0([[2.0]], 3.0)), s3([s1(s0([[4.0]], 5.0), s0([[6.0]], 7.0))], s2([s0([[8.0]], 9.0)], s0([[10.0]], 11.0)), s2([s0([[12.0]], 13.0)], s0([[14.0]], 15.0))))]] in
    let v1: s1 = s1(s0([[16.0]], 17.0), s0([[18.0]], 19.0)) in
    let v2: s5 = s5(20.0, s3([s1(s0([[21.0]], 22.0), s0([[23.0]], 24.0))], s2([s0([[25.0]], 26.0)], s0([[27.0]], 28.0)), s2([s0([[29.0]], 30.0)], s0([[31.0]], 32.0)))) in
    let v3: s12 = s12([s8([s0([[33.0]], 34.0)], 35.0), s8([s0([[36.0]], 37.0)], 38.0)], [s6(s3([s1(s0([[39.0]], 40.0), s0([[41.0]], 42.0))], s2([s0([[43.0]], 44.0)], s0([[45.0]], 46.0)), s2([s0([[47.0]], 48.0)], s0([[49.0]], 50.0))), s0([[51.0]], 52.0), [s3([s1(s0([[53.0]], 54.0), s0([[55.0]], 56.0))], s2([s0([[57.0]], 58.0)], s0([[59.0]], 60.0)), s2([s0([[61.0]], 62.0)], s0([[63.0]], 64.0))), s3([s1(s0([[65.0]], 66.0), s0([[67.0]], 68.0))], s2([s0([[69.0]], 70.0)], s0([[71.0]], 72.0)), s2([s0([[73.0]], 74.0)], s0([[75.0]], 76.0)))], [s0([[77.0]], 78.0), s0([[79.0]], 80.0)], [s3([s1(s0([[81.0]], 82.0), s0([[83.0]], 84.0))], s2([s0([[85.0]], 86.0)], s0([[87.0]], 88.0)), s2([s0([[89.0]], 90.0)], s0([[91.0]], 92.0))), s3([s1(s0([[93.0]], 94.0), s0([[95.0]], 96.0))], s2([s0([[97.0]], 98.0)], s0([[99.0]], 100.0)), s2([s0([[101.0]], 102.0)], s0([[103.0]], 104.0))), s3([s1(s0([[105.0]], 106.0), s0([[107.0]], 108.0))], s2([s0([[109.0]], 110.0)], s0([[111.0]], 112.0)), s2([s0([[113.0]], 114.0)], s0([[115.0]], 116.0)))]), s6(s3([s1(s0([[117.0]], 118.0), s0([[119.0]], 120.0))], s2([s0([[121.0]], 122.0)], s0([[123.0]], 124.0)), s2([s0([[125.0]], 126.0)], s0([[127.0]], 128.0))), s0([[129.0]], 130.0), [s3([s1(s0([[131.0]], 132.0), s0([[133.0]], 134.0))], s2([s0([[135.0]], 136.0)], s0([[137.0]], 138.0)), s2([s0([[139.0]], 140.0)], s0([[141.0]], 142.0))), s3([s1(s0([[143.0]], 144.0), s0([[145.0]], 146.0))], s2([s0([[147.0]], 148.0)], s0([[149.0]], 150.0)), s2([s0([[151.0]], 152.0)], s0([[153.0]], 154.0)))], [s0([[155.0]], 156.0), s0([[157.0]], 158.0)], [s3([s1(s0([[159.0]], 160.0), s0([[161.0]], 162.0))], s2([s0([[163.0]], 164.0)], s0([[165.0]], 166.0)), s2([s0([[167.0]], 168.0)], s0([[169.0]], 170.0))), s3([s1(s0([[171.0]], 172.0), s0([[173.0]], 174.0))], s2([s0([[175.0]], 176.0)], s0([[177.0]], 178.0)), s2([s0([[179.0]], 180.0)], s0([[181.0]], 182.0))), s3([s1(s0([[183.0]], 184.0), s0([[185.0]], 186.0))], s2([s0([[187.0]], 188.0)], s0([[189.0]], 190.0)), s2([s0([[191.0]], 192.0)], s0([[193.0]], 194.0)))])]) in
    let v4: [[s1]] = [[s1(s0([[195.0]], 196.0), s0([[197.0]], 198.0))], [s1(s0([[199.0]], 200.0), s0([[201.0]], 202.0))], [s1(s0([[203.0]], 204.0), s0([[205.0]], 206.0))]] in
    let v5: Float = 207.0 in
    let initialResult: Float = 207.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()