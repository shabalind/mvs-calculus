  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [s1]
    var p1: [[s0]]
  } in
  let f96: (s0) -> s0 = (v0: s0) -> s0 {
    let v2: [[Float]] = v0.p0 in
    let v4: [Float] = v2[0] in
    var v1: [[Float]] = v2 in
    let v7: [Float] = v2[0] in
    v1[0] = v7 in
    var v5: s0 = v0 in
    let v8: [[Float]] = v0.p1 in
    let v6: [Float] = v1[0] in
    var v13: s0 = v5 in
    var v9: s0 = v13 in
    var v10: s0 = v0 in
    v10 = v0 in
    let v14: Float = v4[0] in
    var v11: s0 = v5 in
    var v18: [Float] = v7 in
    let v16: [[Float]] = v10.p1 in
    let v21: [Float] = v1[1] in
    v11.p0 = v1 in
    let v15: Float = v21[0] in
    var v25: [Float] = v21 in
    v5.p1 = v8 in
    let v40: Float = v18[0] in
    v1[1] = v21 in
    let v36: Float = v40 + v15 in
    v18[0] = v40 in
    let v68: [[Float]] = v9.p0 in
    let v43: [[Float]] = v9.p0 in
    var v47: s0 = v11 in
    let v26: [Float] = v68[1] in
    v25[0] = v14 in
    v1[0] = v6 in
    let v39: [[Float]] = v13.p0 in
    let v49: [s0] = [v47, v10, v47, v5] in
    var v38: [s0] = v49 in
    var v56: [s0] = v49 in
    v1[1] = v26 in
    let v59: [[Float]] = v47.p1 in
    v25[0] = v36 in
    let v58: s0 = s0(v68, v59) in
    let v77: [[Float]] = v11.p1 in
    v38[3] = v58 in
    let v89: s0 = s0(v1, v16) in
    let v32: [[Float]] = v13.p0 in
    let v62: s0 = v56[3] in
    var v28: [s0] = v38 in
    let v75: s0 = v28[3] in
    let v57: s0 = s0(v39, v77) in
    var v106: [[Float]] = v77 in
    var v92: s0 = v89 in
    v28[0] = v57 in
    v10.p0 = v32 in
    let v125: [[Float]] = v62.p1 in
    v10.p1 = v125 in
    let v84: [[Float]] = v92.p0 in
    let v86: s0 = s0(v43, v8) in
    v106[0] = v25 in
    let v123: [[Float]] = v86.p1 in
    var v78: [[Float]] = v106 in
    v10.p0 = v43 in
    v92.p1 = v123 in
    v11.p0 = v84 in
    v56[3] = v89 in
    v5.p1 = v78 in
    v75
  } in
  let f50: (s1) -> s1 = (v0: s1) -> s1 {
    var v5: s1 = v0 in
    let v7: s0 = v0.p0 in
    v5.p0 = v7 in
    let v1: [s0] = [v7, v7, v7, v7] in
    var v4: s0 = v7 in
    var v3: s0 = v4 in
    let v6: s0 = f96(v3) in
    let v11: s0 = f96(v6) in
    let v17: s0 = f96(v4) in
    let v15: s0 = f96(v4) in
    let v10: s0 = f96(v4) in
    var v20: s1 = v5 in
    v20.p0 = v11 in
    let v30: [s0] = v20.p1 in
    let v33: [[Float]] = v17.p0 in
    let v28: s0 = f96(v10) in
    v4.p0 = v33 in
    let v14: s0 = f96(v3) in
    v20.p0 = v28 in
    let v51: s0 = v1[2] in
    var v43: s1 = v20 in
    let v42: s0 = f96(v15) in
    let v186: s0 = f96(v42) in
    let v78: [s0] = v43.p1 in
    v43.p1 = v78 in
    v43.p1 = v78 in
    v5.p0 = v17 in
    v43.p1 = v30 in
    v43.p1 = v30 in
    v5.p0 = v14 in
    v43.p0 = v15 in
    let v159: [[Float]] = v51.p1 in
    v43.p1 = v78 in
    v5.p1 = v78 in
    v3.p1 = v159 in
    let v224: [s0] = v43.p1 in
    let v258: s1 = s1(v186, v224) in
    v258
  } in
  let f29: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: s0 = v0.p0 in
    let v7: s1 = f50(v0) in
    let v2: s1 = f50(v7) in
    let v5: s0 = v0.p0 in
    let v14: [s0] = v0.p1 in
    let v8: s0 = f96(v5) in
    let v6: s1 = f50(v2) in
    var v1: s0 = v8 in
    let v3: s1 = s1(v1, v14) in
    let v9: s1 = f50(v2) in
    var v10: s1 = v3 in
    var v29: s0 = v5 in
    var v15: s0 = v29 in
    var v11: [s0] = v14 in
    var v19: s1 = v9 in
    var v23: [s0] = v11 in
    let v12: s0 = v23[1] in
    v11[0] = v12 in
    v19.p0 = v4 in
    let v18: s0 = f96(v29) in
    v1 = v18 in
    var v33: s0 = v4 in
    let v36: s1 = s1(v4, v23) in
    var v21: s0 = v8 in
    let v17: [[Float]] = v33.p0 in
    let v22: s0 = v36.p0 in
    let v25: s0 = f96(v18) in
    var v28: [[Float]] = v17 in
    let v44: s0 = v11[0] in
    let v37: [[Float]] = v21.p0 in
    v23[1] = v22 in
    let v57: [s0] = v36.p1 in
    let v62: s1 = f50(v6) in
    v23[1] = v44 in
    v15.p0 = v37 in
    let v48: [s1] = [v9, v36, v0, v10, v19, v0, v10] in
    v11[1] = v1 in
    let v60: s0 = f96(v8) in
    v21.p0 = v28 in
    var v39: [s1] = v48 in
    v21 = v25 in
    let v104: [s0] = v62.p1 in
    v19.p1 = v104 in
    v19.p0 = v15 in
    let v94: s1 = v39[0] in
    v19.p1 = v57 in
    let v121: [[Float]] = v60.p1 in
    v19.p0 = v60 in
    v21.p1 = v121 in
    v94
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    let v8: [s1] = v0.p0 in
    let v9: s1 = v8[1] in
    let v43: s1 = f29(v9) in
    let v22: Float = v1 * v1 in
    let v44: s0 = v43.p0 in
    let v33: s0 = f96(v44) in
    let v34: [[Float]] = v33.p0 in
    let v32: [Float] = v34[0] in
    let v59: Float = v32[0] in
    let v298: Float = v22 - v59 in
    v298
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s1(s0([[0.0], [1.0]], [[2.0]]), [s0([[3.0], [4.0]], [[5.0]]), s0([[6.0], [7.0]], [[8.0]])]), s1(s0([[9.0], [10.0]], [[11.0]]), [s0([[12.0], [13.0]], [[14.0]]), s0([[15.0], [16.0]], [[17.0]])]), s1(s0([[18.0], [19.0]], [[20.0]]), [s0([[21.0], [22.0]], [[23.0]]), s0([[24.0], [25.0]], [[26.0]])])], [[s0([[27.0], [28.0]], [[29.0]])], [s0([[30.0], [31.0]], [[32.0]])]]) in
    let v1: Float = 33.0 in
    let initialResult: Float = 33.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()