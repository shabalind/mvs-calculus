  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  let f22: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p0 in
    var v6: s0 = v0 in
    v6.p0 = v5 in
    let v4: [[Float]] = v0.p0 in
    v6 = v0 in
    let v7: [[Float]] = v6.p0 in
    let v1: [[Float]] = v0.p0 in
    v6.p0 = v4 in
    let v3: [Float] = v7[0] in
    let v10: [[Float]] = v6.p1 in
    let v9: [[Float]] = v0.p0 in
    var v18: s0 = v0 in
    let v13: [[Float]] = v6.p0 in
    v6.p0 = v1 in
    var v8: [[Float]] = v10 in
    var v11: s0 = v0 in
    v6.p1 = v10 in
    let v25: [Float] = v8[1] in
    var v23: [Float] = v25 in
    v8[1] = v3 in
    var v12: [[Float]] = v10 in
    v6.p0 = v13 in
    let v31: [Float] = v12[0] in
    v12[0] = v3 in
    v12[0] = v23 in
    var v20: s0 = v6 in
    let v17: [[Float]] = v0.p0 in
    var v44: [Float] = v3 in
    v20.p0 = v17 in
    let v26: [[Float]] = v0.p1 in
    v11.p1 = v8 in
    v20.p0 = v9 in
    let v36: [[Float]] = v0.p0 in
    v20 = v0 in
    let v27: s0 = s0(v1, v12) in
    let v24: [[Float]] = v18.p0 in
    let v21: Float = v31[0] in
    v11.p0 = v24 in
    v20 = v11 in
    let v60: [[Float]] = v18.p1 in
    v11 = v0 in
    var v38: [Float] = v3 in
    v12[0] = v44 in
    var v54: Float = v21 in
    let v98: [[Float]] = v0.p0 in
    v44[0] = v54 in
    v44[0] = v54 in
    v11.p1 = v26 in
    v23[0] = v21 in
    v6.p0 = v98 in
    var v65: [Float] = v44 in
    var v58: Float = v54 in
    v65[0] = v58 in
    v12[1] = v31 in
    v12[1] = v65 in
    let v50: [s0] = [v11] in
    var v78: s0 = v27 in
    v12[0] = v25 in
    var v99: s0 = v78 in
    let v101: s0 = v50[0] in
    let v86: [[Float]] = v20.p0 in
    let v105: [[Float]] = v18.p1 in
    var v118: [s0] = v50 in
    v11.p0 = v24 in
    v11.p0 = v36 in
    v18.p0 = v86 in
    v20.p0 = v1 in
    let v144: Float = v38[0] in
    var v69: s0 = v20 in
    let v100: [[Float]] = v20.p1 in
    v99 = v101 in
    v20.p1 = v60 in
    v11.p1 = v105 in
    let v87: s0 = v118[0] in
    let v67: s0 = v50[0] in
    v18.p1 = v60 in
    v6.p1 = v26 in
    let v113: [[Float]] = v99.p0 in
    v20.p1 = v26 in
    let v103: [s0] = [v87, v11, v69] in
    v118[0] = v6 in
    v65[0] = v144 in
    v118[0] = v67 in
    v69.p1 = v100 in
    v6.p0 = v113 in
    var v194: [s0] = v103 in
    var v110: [s0] = v194 in
    let v135: s0 = v110[2] in
    v135
  } in
  let f19: (s0) -> s0 = (v0: s0) -> s0 {
    let v18: s0 = f22(v0) in
    let v9: s0 = f22(v18) in
    let v22: s0 = f22(v9) in
    let v70: s0 = f22(v22) in
    v70
  } in
  let f16: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: s0 = f22(v0) in
    let v2: s0 = f22(v5) in
    let v3: s0 = f22(v2) in
    let v6: [[Float]] = v2.p1 in
    let v8: [[Float]] = v2.p1 in
    let v4: s0 = f19(v3) in
    let v1: [Float] = v8[0] in
    var v14: [[Float]] = v8 in
    let v20: [[Float]] = v4.p0 in
    var v12: s0 = v5 in
    v12.p0 = v20 in
    v12.p1 = v14 in
    var v13: [[Float]] = v20 in
    v14[0] = v1 in
    v12.p1 = v6 in
    let v18: s0 = s0(v20, v6) in
    let v29: [[Float]] = v12.p1 in
    let v21: s0 = s0(v13, v14) in
    let v26: s0 = f22(v5) in
    var v30: s0 = v18 in
    let v48: [[Float]] = v30.p1 in
    let v33: [Float] = v13[1] in
    let v73: [[Float]] = v21.p1 in
    let v22: [[Float]] = v30.p0 in
    v12.p1 = v73 in
    v13[0] = v33 in
    var v55: s0 = v26 in
    let v39: s0 = f22(v55) in
    v55.p1 = v29 in
    var v90: [[Float]] = v8 in
    v55.p0 = v22 in
    let v76: s0 = f19(v39) in
    let v102: [[Float]] = v21.p1 in
    v30.p1 = v48 in
    v55.p1 = v90 in
    v30.p1 = v102 in
    v76
  } in
  let noinline_f0: (s1, [s1], s1, Float) -> Float = (v0: s1, v1: [s1], v2: s1, v3: Float) -> Float {
    let v4: [s0] = v2.p0 in
    let v10: s1 = v1[0] in
    var v11: s1 = v10 in
    let v13: [s0] = v10.p0 in
    let v20: s0 = v11.p1 in
    v11.p0 = v13 in
    v11.p0 = v4 in
    let v44: s0 = f16(v20) in
    let v70: [[Float]] = v44.p1 in
    let v56: [Float] = v70[0] in
    var v128: [Float] = v56 in
    let v48: Float = v128[0] in
    v48
  } in
  fun loop(i: Int, v0: s1, v1: [s1], v2: s1, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])], s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])) in
    let v1: [s1] = [s1([s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])], s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]))] in
    let v2: s1 = s1([s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]]), s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])], s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]])) in
    let v3: Float = 45.0 in
    let initialResult: Float = 45.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()