  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f35: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v6: Float = v0 in
    let v1: Float = v7 * v0 in
    var v8: Float = v1 in
    var v3: Float = v1 in
    var v5: Float = v8 in
    var v12: Float = v8 in
    v8 = v12 in
    var v13: Float = v3 in
    var v9: Float = v5 in
    var v14: Float = v12 in
    var v29: Float = v5 in
    var v21: Float = v12 in
    var v27: Float = v8 in
    var v15: Float = v6 in
    var v45: Float = v13 in
    var v39: Float = v0 in
    var v32: Float = v3 in
    let v43: [Float] = [v32, v8, v14, v45, v9, v14] in
    var v42: Float = v21 in
    var v30: [Float] = v43 in
    v30[5] = v6 in
    let v20: Float = v43[2] in
    var v19: [Float] = v30 in
    var v22: Float = v39 in
    var v46: [Float] = v19 in
    var v54: Float = v20 in
    var v31: [Float] = v46 in
    var v71: [Float] = v46 in
    let v66: Float = v31[0] in
    v46[2] = v3 in
    let v38: [[Float]] = [v30, v31, v71] in
    v3 = v27 in
    let v41: [Float] = v38[2] in
    v19[5] = v42 in
    var v26: [[Float]] = v38 in
    v31[4] = v15 in
    v46[0] = v14 in
    v71[5] = v21 in
    var v115: [[Float]] = v26 in
    v26[2] = v30 in
    var v85: [[Float]] = v26 in
    var v124: [[Float]] = v115 in
    var v90: Float = v45 in
    v71[0] = v66 in
    let v80: [Float] = v26[0] in
    v71 = v43 in
    v85[2] = v80 in
    let v57: [[[Float]]] = [v124, v26, v85, v85, v124, v85, v38] in
    var v169: Float = v22 in
    v46[4] = v29 in
    v26[1] = v30 in
    v30[2] = v90 in
    let v123: [[Float]] = v57[0] in
    v71[2] = v169 in
    let v107: [Float] = v123[1] in
    v46[0] = v54 in
    let v93: Float = v41[0] in
    v71[4] = v93 in
    let v105: Float = v107[5] in
    v105
  } in
  let noinline_f0: ([s0], [[s0]], Float) -> Float = (v0: [s0], v1: [[s0]], v2: Float) -> Float {
    let v9: [Float] = [v2, v2, v2, v2] in
    let v50: Float = v9[0] in
    var v21: [Float] = v9 in
    var v16: [Float] = v21 in
    v21[3] = v50 in
    let v104: Float = v16[1] in
    let v102: Float = f35(v104) in
    v102
  } in
  fun loop(i: Int, v0: [s0], v1: [[s0]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0]], [[1.0], [2.0], [3.0]]), s0([[4.0]], [[5.0], [6.0], [7.0]]), s0([[8.0]], [[9.0], [10.0], [11.0]])] in
    let v1: [[s0]] = [[s0([[12.0]], [[13.0], [14.0], [15.0]])], [s0([[16.0]], [[17.0], [18.0], [19.0]])], [s0([[20.0]], [[21.0], [22.0], [23.0]])]] in
    let v2: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()