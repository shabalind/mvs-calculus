  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  let f18: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p0 in
    let v8: [[Float]] = v0.p0 in
    let v6: [[Float]] = v0.p0 in
    let v2: s0 = s0(v8, v6, v7) in
    let v17: [[Float]] = v0.p2 in
    let v11: [[Float]] = v0.p0 in
    let v40: [[Float]] = v0.p1 in
    let v26: s0 = s0(v17, v11, v6) in
    var v56: s0 = v26 in
    let v51: s1 = s1(v2, v56) in
    var v52: s1 = v51 in
    v56.p0 = v40 in
    let v62: s0 = v52.p1 in
    v56.p0 = v7 in
    let v100: s0 = v52.p0 in
    v52.p0 = v62 in
    v100
  } in
  let f15: (s1, [s0]) -> [s0] = (v0: s1, v1: [s0]) -> [s0] {
    let v3: s0 = v0.p1 in
    var v44: [s0] = v1 in
    v44[0] = v3 in
    v44 = v1 in
    v44
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v6: s0 = f18(v0) in
    let v7: s0 = f18(v6) in
    var v1: s0 = v6 in
    let v4: [[Float]] = v6.p0 in
    let v8: s1 = s1(v0, v0) in
    let v9: [[Float]] = v6.p1 in
    let v5: [[Float]] = v1.p1 in
    var v13: s0 = v7 in
    let v11: s0 = f18(v7) in
    let v14: s0 = f18(v7) in
    let v18: s1 = s1(v1, v6) in
    let v16: s0 = v8.p0 in
    let v20: s0 = f18(v14) in
    var v21: s1 = v18 in
    let v23: [[Float]] = v1.p0 in
    v1.p1 = v23 in
    var v35: s1 = v18 in
    let v36: [[Float]] = v20.p0 in
    let v44: [[Float]] = v14.p0 in
    v1.p2 = v5 in
    var v42: s1 = v21 in
    v1.p1 = v44 in
    v3.p2 = v9 in
    v3.p2 = v5 in
    v42.p1 = v16 in
    let v58: [s0] = [v3] in
    v35.p1 = v11 in
    let v37: s0 = v18.p1 in
    v1.p2 = v4 in
    v35.p1 = v7 in
    var v68: s1 = v42 in
    let v96: [s0] = f15(v68, v58) in
    let v27: [s0] = f15(v21, v96) in
    let v29: s0 = v27[0] in
    var v52: s1 = v18 in
    let v65: s0 = v52.p1 in
    v1.p1 = v36 in
    var v66: s1 = v35 in
    let v118: [s0] = f15(v8, v96) in
    let v64: s0 = v68.p0 in
    let v98: s0 = v66.p0 in
    v1 = v65 in
    let v82: s0 = v118[0] in
    v66.p0 = v6 in
    let v117: s1 = s1(v65, v13) in
    v66.p0 = v29 in
    v52.p0 = v20 in
    v52 = v117 in
    v42.p0 = v37 in
    let v95: s0 = f18(v82) in
    v68.p1 = v95 in
    v35.p0 = v64 in
    v35.p1 = v3 in
    v98
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    let v6: s0 = v0.p0 in
    let v3: s0 = f12(v6) in
    var v2: s1 = v0 in
    var v10: s1 = v2 in
    v2.p0 = v3 in
    let v15: s0 = v10.p1 in
    let v20: s0 = v0.p0 in
    v10.p1 = v20 in
    let v39: [[Float]] = v15.p2 in
    let v16: s0 = f12(v3) in
    v10.p0 = v16 in
    let v14: [Float] = v39[0] in
    let v50: Float = v14[0] in
    v50
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1(s0([[0.0]], [[1.0]], [[2.0]]), s0([[3.0]], [[4.0]], [[5.0]])) in
    let v1: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()