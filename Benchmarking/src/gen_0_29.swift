  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
    var p2: [[Double]]
    var p3: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  }
  struct s2 {
    var p0: [s1]
    var p1: [[s1]]
  }
  struct s3 {
    var p0: [s0]
    var p1: s2
  }
  struct s5 {
    var p0: s1
    var p1: s2
  }
  struct s6 {
    var p0: [s5]
    var p1: [s0]
    var p2: s3
  }
  struct s9 {
    var p0: [s6]
    var p1: s1
  }
  struct s11 {
    var p0: [[s9]]
    var p1: [s5]
  }
  @inline(never)
  func f0(_ v0: s11, _ v1: Double) -> Double {
    var v2: Double = v1
    v2 = v1
    let v4: [[s9]] = v0.p0
    let v5: [s9] = v4[1]
    let v6: s9 = v5[0]
    let v8: s1 = v6.p1
    let v14: [s0] = v8.p0
    let v9: s0 = v14[0]
    let v13: [[Double]] = v9.p3
    let v35: [Double] = v13[0]
    let v61: Double = v35[0]
    let v72: Double = v2 * v61
    let v171: Double = v1 + v72
    return v171
  }
  func benchmark() {
    let v0: s11 = s11(p0: [[s9(p0: [s6(p0: [s5(p0: s1(p0: [s0(p0: [[0.0], [1.0]], p1: [[2.0], [3.0], [4.0]], p2: [[5.0], [6.0]], p3: [[7.0], [8.0], [9.0]])], p1: [s0(p0: [[10.0], [11.0]], p1: [[12.0], [13.0], [14.0]], p2: [[15.0], [16.0]], p3: [[17.0], [18.0], [19.0]]), s0(p0: [[20.0], [21.0]], p1: [[22.0], [23.0], [24.0]], p2: [[25.0], [26.0]], p3: [[27.0], [28.0], [29.0]])]), p1: s2(p0: [s1(p0: [s0(p0: [[30.0], [31.0]], p1: [[32.0], [33.0], [34.0]], p2: [[35.0], [36.0]], p3: [[37.0], [38.0], [39.0]])], p1: [s0(p0: [[40.0], [41.0]], p1: [[42.0], [43.0], [44.0]], p2: [[45.0], [46.0]], p3: [[47.0], [48.0], [49.0]]), s0(p0: [[50.0], [51.0]], p1: [[52.0], [53.0], [54.0]], p2: [[55.0], [56.0]], p3: [[57.0], [58.0], [59.0]])]), s1(p0: [s0(p0: [[60.0], [61.0]], p1: [[62.0], [63.0], [64.0]], p2: [[65.0], [66.0]], p3: [[67.0], [68.0], [69.0]])], p1: [s0(p0: [[70.0], [71.0]], p1: [[72.0], [73.0], [74.0]], p2: [[75.0], [76.0]], p3: [[77.0], [78.0], [79.0]]), s0(p0: [[80.0], [81.0]], p1: [[82.0], [83.0], [84.0]], p2: [[85.0], [86.0]], p3: [[87.0], [88.0], [89.0]])])], p1: [[s1(p0: [s0(p0: [[90.0], [91.0]], p1: [[92.0], [93.0], [94.0]], p2: [[95.0], [96.0]], p3: [[97.0], [98.0], [99.0]])], p1: [s0(p0: [[100.0], [101.0]], p1: [[102.0], [103.0], [104.0]], p2: [[105.0], [106.0]], p3: [[107.0], [108.0], [109.0]]), s0(p0: [[110.0], [111.0]], p1: [[112.0], [113.0], [114.0]], p2: [[115.0], [116.0]], p3: [[117.0], [118.0], [119.0]])])], [s1(p0: [s0(p0: [[120.0], [121.0]], p1: [[122.0], [123.0], [124.0]], p2: [[125.0], [126.0]], p3: [[127.0], [128.0], [129.0]])], p1: [s0(p0: [[130.0], [131.0]], p1: [[132.0], [133.0], [134.0]], p2: [[135.0], [136.0]], p3: [[137.0], [138.0], [139.0]]), s0(p0: [[140.0], [141.0]], p1: [[142.0], [143.0], [144.0]], p2: [[145.0], [146.0]], p3: [[147.0], [148.0], [149.0]])])]]))], p1: [s0(p0: [[150.0], [151.0]], p1: [[152.0], [153.0], [154.0]], p2: [[155.0], [156.0]], p3: [[157.0], [158.0], [159.0]])], p2: s3(p0: [s0(p0: [[160.0], [161.0]], p1: [[162.0], [163.0], [164.0]], p2: [[165.0], [166.0]], p3: [[167.0], [168.0], [169.0]]), s0(p0: [[170.0], [171.0]], p1: [[172.0], [173.0], [174.0]], p2: [[175.0], [176.0]], p3: [[177.0], [178.0], [179.0]])], p1: s2(p0: [s1(p0: [s0(p0: [[180.0], [181.0]], p1: [[182.0], [183.0], [184.0]], p2: [[185.0], [186.0]], p3: [[187.0], [188.0], [189.0]])], p1: [s0(p0: [[190.0], [191.0]], p1: [[192.0], [193.0], [194.0]], p2: [[195.0], [196.0]], p3: [[197.0], [198.0], [199.0]]), s0(p0: [[200.0], [201.0]], p1: [[202.0], [203.0], [204.0]], p2: [[205.0], [206.0]], p3: [[207.0], [208.0], [209.0]])]), s1(p0: [s0(p0: [[210.0], [211.0]], p1: [[212.0], [213.0], [214.0]], p2: [[215.0], [216.0]], p3: [[217.0], [218.0], [219.0]])], p1: [s0(p0: [[220.0], [221.0]], p1: [[222.0], [223.0], [224.0]], p2: [[225.0], [226.0]], p3: [[227.0], [228.0], [229.0]]), s0(p0: [[230.0], [231.0]], p1: [[232.0], [233.0], [234.0]], p2: [[235.0], [236.0]], p3: [[237.0], [238.0], [239.0]])])], p1: [[s1(p0: [s0(p0: [[240.0], [241.0]], p1: [[242.0], [243.0], [244.0]], p2: [[245.0], [246.0]], p3: [[247.0], [248.0], [249.0]])], p1: [s0(p0: [[250.0], [251.0]], p1: [[252.0], [253.0], [254.0]], p2: [[255.0], [256.0]], p3: [[257.0], [258.0], [259.0]]), s0(p0: [[260.0], [261.0]], p1: [[262.0], [263.0], [264.0]], p2: [[265.0], [266.0]], p3: [[267.0], [268.0], [269.0]])])], [s1(p0: [s0(p0: [[270.0], [271.0]], p1: [[272.0], [273.0], [274.0]], p2: [[275.0], [276.0]], p3: [[277.0], [278.0], [279.0]])], p1: [s0(p0: [[280.0], [281.0]], p1: [[282.0], [283.0], [284.0]], p2: [[285.0], [286.0]], p3: [[287.0], [288.0], [289.0]]), s0(p0: [[290.0], [291.0]], p1: [[292.0], [293.0], [294.0]], p2: [[295.0], [296.0]], p3: [[297.0], [298.0], [299.0]])])]])))], p1: s1(p0: [s0(p0: [[300.0], [301.0]], p1: [[302.0], [303.0], [304.0]], p2: [[305.0], [306.0]], p3: [[307.0], [308.0], [309.0]])], p1: [s0(p0: [[310.0], [311.0]], p1: [[312.0], [313.0], [314.0]], p2: [[315.0], [316.0]], p3: [[317.0], [318.0], [319.0]]), s0(p0: [[320.0], [321.0]], p1: [[322.0], [323.0], [324.0]], p2: [[325.0], [326.0]], p3: [[327.0], [328.0], [329.0]])]))], [s9(p0: [s6(p0: [s5(p0: s1(p0: [s0(p0: [[330.0], [331.0]], p1: [[332.0], [333.0], [334.0]], p2: [[335.0], [336.0]], p3: [[337.0], [338.0], [339.0]])], p1: [s0(p0: [[340.0], [341.0]], p1: [[342.0], [343.0], [344.0]], p2: [[345.0], [346.0]], p3: [[347.0], [348.0], [349.0]]), s0(p0: [[350.0], [351.0]], p1: [[352.0], [353.0], [354.0]], p2: [[355.0], [356.0]], p3: [[357.0], [358.0], [359.0]])]), p1: s2(p0: [s1(p0: [s0(p0: [[360.0], [361.0]], p1: [[362.0], [363.0], [364.0]], p2: [[365.0], [366.0]], p3: [[367.0], [368.0], [369.0]])], p1: [s0(p0: [[370.0], [371.0]], p1: [[372.0], [373.0], [374.0]], p2: [[375.0], [376.0]], p3: [[377.0], [378.0], [379.0]]), s0(p0: [[380.0], [381.0]], p1: [[382.0], [383.0], [384.0]], p2: [[385.0], [386.0]], p3: [[387.0], [388.0], [389.0]])]), s1(p0: [s0(p0: [[390.0], [391.0]], p1: [[392.0], [393.0], [394.0]], p2: [[395.0], [396.0]], p3: [[397.0], [398.0], [399.0]])], p1: [s0(p0: [[400.0], [401.0]], p1: [[402.0], [403.0], [404.0]], p2: [[405.0], [406.0]], p3: [[407.0], [408.0], [409.0]]), s0(p0: [[410.0], [411.0]], p1: [[412.0], [413.0], [414.0]], p2: [[415.0], [416.0]], p3: [[417.0], [418.0], [419.0]])])], p1: [[s1(p0: [s0(p0: [[420.0], [421.0]], p1: [[422.0], [423.0], [424.0]], p2: [[425.0], [426.0]], p3: [[427.0], [428.0], [429.0]])], p1: [s0(p0: [[430.0], [431.0]], p1: [[432.0], [433.0], [434.0]], p2: [[435.0], [436.0]], p3: [[437.0], [438.0], [439.0]]), s0(p0: [[440.0], [441.0]], p1: [[442.0], [443.0], [444.0]], p2: [[445.0], [446.0]], p3: [[447.0], [448.0], [449.0]])])], [s1(p0: [s0(p0: [[450.0], [451.0]], p1: [[452.0], [453.0], [454.0]], p2: [[455.0], [456.0]], p3: [[457.0], [458.0], [459.0]])], p1: [s0(p0: [[460.0], [461.0]], p1: [[462.0], [463.0], [464.0]], p2: [[465.0], [466.0]], p3: [[467.0], [468.0], [469.0]]), s0(p0: [[470.0], [471.0]], p1: [[472.0], [473.0], [474.0]], p2: [[475.0], [476.0]], p3: [[477.0], [478.0], [479.0]])])]]))], p1: [s0(p0: [[480.0], [481.0]], p1: [[482.0], [483.0], [484.0]], p2: [[485.0], [486.0]], p3: [[487.0], [488.0], [489.0]])], p2: s3(p0: [s0(p0: [[490.0], [491.0]], p1: [[492.0], [493.0], [494.0]], p2: [[495.0], [496.0]], p3: [[497.0], [498.0], [499.0]]), s0(p0: [[500.0], [501.0]], p1: [[502.0], [503.0], [504.0]], p2: [[505.0], [506.0]], p3: [[507.0], [508.0], [509.0]])], p1: s2(p0: [s1(p0: [s0(p0: [[510.0], [511.0]], p1: [[512.0], [513.0], [514.0]], p2: [[515.0], [516.0]], p3: [[517.0], [518.0], [519.0]])], p1: [s0(p0: [[520.0], [521.0]], p1: [[522.0], [523.0], [524.0]], p2: [[525.0], [526.0]], p3: [[527.0], [528.0], [529.0]]), s0(p0: [[530.0], [531.0]], p1: [[532.0], [533.0], [534.0]], p2: [[535.0], [536.0]], p3: [[537.0], [538.0], [539.0]])]), s1(p0: [s0(p0: [[540.0], [541.0]], p1: [[542.0], [543.0], [544.0]], p2: [[545.0], [546.0]], p3: [[547.0], [548.0], [549.0]])], p1: [s0(p0: [[550.0], [551.0]], p1: [[552.0], [553.0], [554.0]], p2: [[555.0], [556.0]], p3: [[557.0], [558.0], [559.0]]), s0(p0: [[560.0], [561.0]], p1: [[562.0], [563.0], [564.0]], p2: [[565.0], [566.0]], p3: [[567.0], [568.0], [569.0]])])], p1: [[s1(p0: [s0(p0: [[570.0], [571.0]], p1: [[572.0], [573.0], [574.0]], p2: [[575.0], [576.0]], p3: [[577.0], [578.0], [579.0]])], p1: [s0(p0: [[580.0], [581.0]], p1: [[582.0], [583.0], [584.0]], p2: [[585.0], [586.0]], p3: [[587.0], [588.0], [589.0]]), s0(p0: [[590.0], [591.0]], p1: [[592.0], [593.0], [594.0]], p2: [[595.0], [596.0]], p3: [[597.0], [598.0], [599.0]])])], [s1(p0: [s0(p0: [[600.0], [601.0]], p1: [[602.0], [603.0], [604.0]], p2: [[605.0], [606.0]], p3: [[607.0], [608.0], [609.0]])], p1: [s0(p0: [[610.0], [611.0]], p1: [[612.0], [613.0], [614.0]], p2: [[615.0], [616.0]], p3: [[617.0], [618.0], [619.0]]), s0(p0: [[620.0], [621.0]], p1: [[622.0], [623.0], [624.0]], p2: [[625.0], [626.0]], p3: [[627.0], [628.0], [629.0]])])]])))], p1: s1(p0: [s0(p0: [[630.0], [631.0]], p1: [[632.0], [633.0], [634.0]], p2: [[635.0], [636.0]], p3: [[637.0], [638.0], [639.0]])], p1: [s0(p0: [[640.0], [641.0]], p1: [[642.0], [643.0], [644.0]], p2: [[645.0], [646.0]], p3: [[647.0], [648.0], [649.0]]), s0(p0: [[650.0], [651.0]], p1: [[652.0], [653.0], [654.0]], p2: [[655.0], [656.0]], p3: [[657.0], [658.0], [659.0]])]))]], p1: [s5(p0: s1(p0: [s0(p0: [[660.0], [661.0]], p1: [[662.0], [663.0], [664.0]], p2: [[665.0], [666.0]], p3: [[667.0], [668.0], [669.0]])], p1: [s0(p0: [[670.0], [671.0]], p1: [[672.0], [673.0], [674.0]], p2: [[675.0], [676.0]], p3: [[677.0], [678.0], [679.0]]), s0(p0: [[680.0], [681.0]], p1: [[682.0], [683.0], [684.0]], p2: [[685.0], [686.0]], p3: [[687.0], [688.0], [689.0]])]), p1: s2(p0: [s1(p0: [s0(p0: [[690.0], [691.0]], p1: [[692.0], [693.0], [694.0]], p2: [[695.0], [696.0]], p3: [[697.0], [698.0], [699.0]])], p1: [s0(p0: [[700.0], [701.0]], p1: [[702.0], [703.0], [704.0]], p2: [[705.0], [706.0]], p3: [[707.0], [708.0], [709.0]]), s0(p0: [[710.0], [711.0]], p1: [[712.0], [713.0], [714.0]], p2: [[715.0], [716.0]], p3: [[717.0], [718.0], [719.0]])]), s1(p0: [s0(p0: [[720.0], [721.0]], p1: [[722.0], [723.0], [724.0]], p2: [[725.0], [726.0]], p3: [[727.0], [728.0], [729.0]])], p1: [s0(p0: [[730.0], [731.0]], p1: [[732.0], [733.0], [734.0]], p2: [[735.0], [736.0]], p3: [[737.0], [738.0], [739.0]]), s0(p0: [[740.0], [741.0]], p1: [[742.0], [743.0], [744.0]], p2: [[745.0], [746.0]], p3: [[747.0], [748.0], [749.0]])])], p1: [[s1(p0: [s0(p0: [[750.0], [751.0]], p1: [[752.0], [753.0], [754.0]], p2: [[755.0], [756.0]], p3: [[757.0], [758.0], [759.0]])], p1: [s0(p0: [[760.0], [761.0]], p1: [[762.0], [763.0], [764.0]], p2: [[765.0], [766.0]], p3: [[767.0], [768.0], [769.0]]), s0(p0: [[770.0], [771.0]], p1: [[772.0], [773.0], [774.0]], p2: [[775.0], [776.0]], p3: [[777.0], [778.0], [779.0]])])], [s1(p0: [s0(p0: [[780.0], [781.0]], p1: [[782.0], [783.0], [784.0]], p2: [[785.0], [786.0]], p3: [[787.0], [788.0], [789.0]])], p1: [s0(p0: [[790.0], [791.0]], p1: [[792.0], [793.0], [794.0]], p2: [[795.0], [796.0]], p3: [[797.0], [798.0], [799.0]]), s0(p0: [[800.0], [801.0]], p1: [[802.0], [803.0], [804.0]], p2: [[805.0], [806.0]], p3: [[807.0], [808.0], [809.0]])])]])), s5(p0: s1(p0: [s0(p0: [[810.0], [811.0]], p1: [[812.0], [813.0], [814.0]], p2: [[815.0], [816.0]], p3: [[817.0], [818.0], [819.0]])], p1: [s0(p0: [[820.0], [821.0]], p1: [[822.0], [823.0], [824.0]], p2: [[825.0], [826.0]], p3: [[827.0], [828.0], [829.0]]), s0(p0: [[830.0], [831.0]], p1: [[832.0], [833.0], [834.0]], p2: [[835.0], [836.0]], p3: [[837.0], [838.0], [839.0]])]), p1: s2(p0: [s1(p0: [s0(p0: [[840.0], [841.0]], p1: [[842.0], [843.0], [844.0]], p2: [[845.0], [846.0]], p3: [[847.0], [848.0], [849.0]])], p1: [s0(p0: [[850.0], [851.0]], p1: [[852.0], [853.0], [854.0]], p2: [[855.0], [856.0]], p3: [[857.0], [858.0], [859.0]]), s0(p0: [[860.0], [861.0]], p1: [[862.0], [863.0], [864.0]], p2: [[865.0], [866.0]], p3: [[867.0], [868.0], [869.0]])]), s1(p0: [s0(p0: [[870.0], [871.0]], p1: [[872.0], [873.0], [874.0]], p2: [[875.0], [876.0]], p3: [[877.0], [878.0], [879.0]])], p1: [s0(p0: [[880.0], [881.0]], p1: [[882.0], [883.0], [884.0]], p2: [[885.0], [886.0]], p3: [[887.0], [888.0], [889.0]]), s0(p0: [[890.0], [891.0]], p1: [[892.0], [893.0], [894.0]], p2: [[895.0], [896.0]], p3: [[897.0], [898.0], [899.0]])])], p1: [[s1(p0: [s0(p0: [[900.0], [901.0]], p1: [[902.0], [903.0], [904.0]], p2: [[905.0], [906.0]], p3: [[907.0], [908.0], [909.0]])], p1: [s0(p0: [[910.0], [911.0]], p1: [[912.0], [913.0], [914.0]], p2: [[915.0], [916.0]], p3: [[917.0], [918.0], [919.0]]), s0(p0: [[920.0], [921.0]], p1: [[922.0], [923.0], [924.0]], p2: [[925.0], [926.0]], p3: [[927.0], [928.0], [929.0]])])], [s1(p0: [s0(p0: [[930.0], [931.0]], p1: [[932.0], [933.0], [934.0]], p2: [[935.0], [936.0]], p3: [[937.0], [938.0], [939.0]])], p1: [s0(p0: [[940.0], [941.0]], p1: [[942.0], [943.0], [944.0]], p2: [[945.0], [946.0]], p3: [[947.0], [948.0], [949.0]]), s0(p0: [[950.0], [951.0]], p1: [[952.0], [953.0], [954.0]], p2: [[955.0], [956.0]], p3: [[957.0], [958.0], [959.0]])])]])), s5(p0: s1(p0: [s0(p0: [[960.0], [961.0]], p1: [[962.0], [963.0], [964.0]], p2: [[965.0], [966.0]], p3: [[967.0], [968.0], [969.0]])], p1: [s0(p0: [[970.0], [971.0]], p1: [[972.0], [973.0], [974.0]], p2: [[975.0], [976.0]], p3: [[977.0], [978.0], [979.0]]), s0(p0: [[980.0], [981.0]], p1: [[982.0], [983.0], [984.0]], p2: [[985.0], [986.0]], p3: [[987.0], [988.0], [989.0]])]), p1: s2(p0: [s1(p0: [s0(p0: [[990.0], [991.0]], p1: [[992.0], [993.0], [994.0]], p2: [[995.0], [996.0]], p3: [[997.0], [998.0], [999.0]])], p1: [s0(p0: [[1000.0], [1001.0]], p1: [[1002.0], [1003.0], [1004.0]], p2: [[1005.0], [1006.0]], p3: [[1007.0], [1008.0], [1009.0]]), s0(p0: [[1010.0], [1011.0]], p1: [[1012.0], [1013.0], [1014.0]], p2: [[1015.0], [1016.0]], p3: [[1017.0], [1018.0], [1019.0]])]), s1(p0: [s0(p0: [[1020.0], [1021.0]], p1: [[1022.0], [1023.0], [1024.0]], p2: [[1025.0], [1026.0]], p3: [[1027.0], [1028.0], [1029.0]])], p1: [s0(p0: [[1030.0], [1031.0]], p1: [[1032.0], [1033.0], [1034.0]], p2: [[1035.0], [1036.0]], p3: [[1037.0], [1038.0], [1039.0]]), s0(p0: [[1040.0], [1041.0]], p1: [[1042.0], [1043.0], [1044.0]], p2: [[1045.0], [1046.0]], p3: [[1047.0], [1048.0], [1049.0]])])], p1: [[s1(p0: [s0(p0: [[1050.0], [1051.0]], p1: [[1052.0], [1053.0], [1054.0]], p2: [[1055.0], [1056.0]], p3: [[1057.0], [1058.0], [1059.0]])], p1: [s0(p0: [[1060.0], [1061.0]], p1: [[1062.0], [1063.0], [1064.0]], p2: [[1065.0], [1066.0]], p3: [[1067.0], [1068.0], [1069.0]]), s0(p0: [[1070.0], [1071.0]], p1: [[1072.0], [1073.0], [1074.0]], p2: [[1075.0], [1076.0]], p3: [[1077.0], [1078.0], [1079.0]])])], [s1(p0: [s0(p0: [[1080.0], [1081.0]], p1: [[1082.0], [1083.0], [1084.0]], p2: [[1085.0], [1086.0]], p3: [[1087.0], [1088.0], [1089.0]])], p1: [s0(p0: [[1090.0], [1091.0]], p1: [[1092.0], [1093.0], [1094.0]], p2: [[1095.0], [1096.0]], p3: [[1097.0], [1098.0], [1099.0]]), s0(p0: [[1100.0], [1101.0]], p1: [[1102.0], [1103.0], [1104.0]], p2: [[1105.0], [1106.0]], p3: [[1107.0], [1108.0], [1109.0]])])]]))])
    let v1: Double = 1110.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1110.0
    for _ in 1...1000 {
      result = f0(v0, v1)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
