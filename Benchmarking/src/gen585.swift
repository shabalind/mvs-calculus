  import Dispatch
  struct s0 {
    var p0: [Double]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
    var p2: s0
  }
  struct s2 {
    var p0: s1
    var p1: [[s0]]
  }
  struct s3 {
    var p0: Double
    var p1: [s0]
  }
  struct s4 {
    var p0: s0
    var p1: s1
  }
  struct s5 {
    var p0: s2
    var p1: s3
  }
  struct s6 {
    var p0: s4
    var p1: s0
  }
  struct s7 {
    var p0: [[s1]]
    var p1: [[s2]]
  }
  struct s8 {
    var p0: [s6]
    var p1: s7
  }
  struct s10 {
    var p0: [s8]
    var p1: [[s5]]
  }
  func f13(_ v0: Double) -> Double {
    var v7: Double = v0
    var v3: Double = v7
    v3 = v7
    var v5: Double = v3
    let v2: Double = v3 - v0
    var v1: Double = v2
    var v4: Double = v1
    let v15: [Double] = [v5, v1, v4, v4, v5]
    var v6: [Double] = v15
    v6[2] = v4
    let v30: Double = v6[0]
    v6[2] = v30
    v6[4] = v2
    return v30
  }
  @inline(never)
  func f0(_ v0: [[s10]], _ v1: Double) -> Double {
    var v4: Double = v1
    var v2: Double = v4
    let v8: Double = v1 - v2
    let v5: Double = f13(v8)
    let v6: Double = f13(v8)
    var v15: Double = v6
    let v44: Double = v15 * v5
    return v44
  }
  func benchmark() {
    let v0: [[s10]] = [[s10(p0: [s8(p0: [s6(p0: s4(p0: s0(p0: [0.0, 1.0, 2.0], p1: [[3.0]]), p1: s1(p0: [s0(p0: [4.0, 5.0, 6.0], p1: [[7.0]]), s0(p0: [8.0, 9.0, 10.0], p1: [[11.0]])], p1: [[s0(p0: [12.0, 13.0, 14.0], p1: [[15.0]])], [s0(p0: [16.0, 17.0, 18.0], p1: [[19.0]])], [s0(p0: [20.0, 21.0, 22.0], p1: [[23.0]])]], p2: s0(p0: [24.0, 25.0, 26.0], p1: [[27.0]]))), p1: s0(p0: [28.0, 29.0, 30.0], p1: [[31.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [32.0, 33.0, 34.0], p1: [[35.0]]), s0(p0: [36.0, 37.0, 38.0], p1: [[39.0]])], p1: [[s0(p0: [40.0, 41.0, 42.0], p1: [[43.0]])], [s0(p0: [44.0, 45.0, 46.0], p1: [[47.0]])], [s0(p0: [48.0, 49.0, 50.0], p1: [[51.0]])]], p2: s0(p0: [52.0, 53.0, 54.0], p1: [[55.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [56.0, 57.0, 58.0], p1: [[59.0]]), s0(p0: [60.0, 61.0, 62.0], p1: [[63.0]])], p1: [[s0(p0: [64.0, 65.0, 66.0], p1: [[67.0]])], [s0(p0: [68.0, 69.0, 70.0], p1: [[71.0]])], [s0(p0: [72.0, 73.0, 74.0], p1: [[75.0]])]], p2: s0(p0: [76.0, 77.0, 78.0], p1: [[79.0]])), p1: [[s0(p0: [80.0, 81.0, 82.0], p1: [[83.0]])], [s0(p0: [84.0, 85.0, 86.0], p1: [[87.0]])], [s0(p0: [88.0, 89.0, 90.0], p1: [[91.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [92.0, 93.0, 94.0], p1: [[95.0]]), p1: s1(p0: [s0(p0: [96.0, 97.0, 98.0], p1: [[99.0]]), s0(p0: [100.0, 101.0, 102.0], p1: [[103.0]])], p1: [[s0(p0: [104.0, 105.0, 106.0], p1: [[107.0]])], [s0(p0: [108.0, 109.0, 110.0], p1: [[111.0]])], [s0(p0: [112.0, 113.0, 114.0], p1: [[115.0]])]], p2: s0(p0: [116.0, 117.0, 118.0], p1: [[119.0]]))), p1: s0(p0: [120.0, 121.0, 122.0], p1: [[123.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [124.0, 125.0, 126.0], p1: [[127.0]]), s0(p0: [128.0, 129.0, 130.0], p1: [[131.0]])], p1: [[s0(p0: [132.0, 133.0, 134.0], p1: [[135.0]])], [s0(p0: [136.0, 137.0, 138.0], p1: [[139.0]])], [s0(p0: [140.0, 141.0, 142.0], p1: [[143.0]])]], p2: s0(p0: [144.0, 145.0, 146.0], p1: [[147.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [148.0, 149.0, 150.0], p1: [[151.0]]), s0(p0: [152.0, 153.0, 154.0], p1: [[155.0]])], p1: [[s0(p0: [156.0, 157.0, 158.0], p1: [[159.0]])], [s0(p0: [160.0, 161.0, 162.0], p1: [[163.0]])], [s0(p0: [164.0, 165.0, 166.0], p1: [[167.0]])]], p2: s0(p0: [168.0, 169.0, 170.0], p1: [[171.0]])), p1: [[s0(p0: [172.0, 173.0, 174.0], p1: [[175.0]])], [s0(p0: [176.0, 177.0, 178.0], p1: [[179.0]])], [s0(p0: [180.0, 181.0, 182.0], p1: [[183.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [184.0, 185.0, 186.0], p1: [[187.0]]), p1: s1(p0: [s0(p0: [188.0, 189.0, 190.0], p1: [[191.0]]), s0(p0: [192.0, 193.0, 194.0], p1: [[195.0]])], p1: [[s0(p0: [196.0, 197.0, 198.0], p1: [[199.0]])], [s0(p0: [200.0, 201.0, 202.0], p1: [[203.0]])], [s0(p0: [204.0, 205.0, 206.0], p1: [[207.0]])]], p2: s0(p0: [208.0, 209.0, 210.0], p1: [[211.0]]))), p1: s0(p0: [212.0, 213.0, 214.0], p1: [[215.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [216.0, 217.0, 218.0], p1: [[219.0]]), s0(p0: [220.0, 221.0, 222.0], p1: [[223.0]])], p1: [[s0(p0: [224.0, 225.0, 226.0], p1: [[227.0]])], [s0(p0: [228.0, 229.0, 230.0], p1: [[231.0]])], [s0(p0: [232.0, 233.0, 234.0], p1: [[235.0]])]], p2: s0(p0: [236.0, 237.0, 238.0], p1: [[239.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [240.0, 241.0, 242.0], p1: [[243.0]]), s0(p0: [244.0, 245.0, 246.0], p1: [[247.0]])], p1: [[s0(p0: [248.0, 249.0, 250.0], p1: [[251.0]])], [s0(p0: [252.0, 253.0, 254.0], p1: [[255.0]])], [s0(p0: [256.0, 257.0, 258.0], p1: [[259.0]])]], p2: s0(p0: [260.0, 261.0, 262.0], p1: [[263.0]])), p1: [[s0(p0: [264.0, 265.0, 266.0], p1: [[267.0]])], [s0(p0: [268.0, 269.0, 270.0], p1: [[271.0]])], [s0(p0: [272.0, 273.0, 274.0], p1: [[275.0]])]])]]))], p1: [[s5(p0: s2(p0: s1(p0: [s0(p0: [276.0, 277.0, 278.0], p1: [[279.0]]), s0(p0: [280.0, 281.0, 282.0], p1: [[283.0]])], p1: [[s0(p0: [284.0, 285.0, 286.0], p1: [[287.0]])], [s0(p0: [288.0, 289.0, 290.0], p1: [[291.0]])], [s0(p0: [292.0, 293.0, 294.0], p1: [[295.0]])]], p2: s0(p0: [296.0, 297.0, 298.0], p1: [[299.0]])), p1: [[s0(p0: [300.0, 301.0, 302.0], p1: [[303.0]])], [s0(p0: [304.0, 305.0, 306.0], p1: [[307.0]])], [s0(p0: [308.0, 309.0, 310.0], p1: [[311.0]])]]), p1: s3(p0: 312.0, p1: [s0(p0: [313.0, 314.0, 315.0], p1: [[316.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [317.0, 318.0, 319.0], p1: [[320.0]]), s0(p0: [321.0, 322.0, 323.0], p1: [[324.0]])], p1: [[s0(p0: [325.0, 326.0, 327.0], p1: [[328.0]])], [s0(p0: [329.0, 330.0, 331.0], p1: [[332.0]])], [s0(p0: [333.0, 334.0, 335.0], p1: [[336.0]])]], p2: s0(p0: [337.0, 338.0, 339.0], p1: [[340.0]])), p1: [[s0(p0: [341.0, 342.0, 343.0], p1: [[344.0]])], [s0(p0: [345.0, 346.0, 347.0], p1: [[348.0]])], [s0(p0: [349.0, 350.0, 351.0], p1: [[352.0]])]]), p1: s3(p0: 353.0, p1: [s0(p0: [354.0, 355.0, 356.0], p1: [[357.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [358.0, 359.0, 360.0], p1: [[361.0]]), s0(p0: [362.0, 363.0, 364.0], p1: [[365.0]])], p1: [[s0(p0: [366.0, 367.0, 368.0], p1: [[369.0]])], [s0(p0: [370.0, 371.0, 372.0], p1: [[373.0]])], [s0(p0: [374.0, 375.0, 376.0], p1: [[377.0]])]], p2: s0(p0: [378.0, 379.0, 380.0], p1: [[381.0]])), p1: [[s0(p0: [382.0, 383.0, 384.0], p1: [[385.0]])], [s0(p0: [386.0, 387.0, 388.0], p1: [[389.0]])], [s0(p0: [390.0, 391.0, 392.0], p1: [[393.0]])]]), p1: s3(p0: 394.0, p1: [s0(p0: [395.0, 396.0, 397.0], p1: [[398.0]])]))]])], [s10(p0: [s8(p0: [s6(p0: s4(p0: s0(p0: [399.0, 400.0, 401.0], p1: [[402.0]]), p1: s1(p0: [s0(p0: [403.0, 404.0, 405.0], p1: [[406.0]]), s0(p0: [407.0, 408.0, 409.0], p1: [[410.0]])], p1: [[s0(p0: [411.0, 412.0, 413.0], p1: [[414.0]])], [s0(p0: [415.0, 416.0, 417.0], p1: [[418.0]])], [s0(p0: [419.0, 420.0, 421.0], p1: [[422.0]])]], p2: s0(p0: [423.0, 424.0, 425.0], p1: [[426.0]]))), p1: s0(p0: [427.0, 428.0, 429.0], p1: [[430.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [431.0, 432.0, 433.0], p1: [[434.0]]), s0(p0: [435.0, 436.0, 437.0], p1: [[438.0]])], p1: [[s0(p0: [439.0, 440.0, 441.0], p1: [[442.0]])], [s0(p0: [443.0, 444.0, 445.0], p1: [[446.0]])], [s0(p0: [447.0, 448.0, 449.0], p1: [[450.0]])]], p2: s0(p0: [451.0, 452.0, 453.0], p1: [[454.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [455.0, 456.0, 457.0], p1: [[458.0]]), s0(p0: [459.0, 460.0, 461.0], p1: [[462.0]])], p1: [[s0(p0: [463.0, 464.0, 465.0], p1: [[466.0]])], [s0(p0: [467.0, 468.0, 469.0], p1: [[470.0]])], [s0(p0: [471.0, 472.0, 473.0], p1: [[474.0]])]], p2: s0(p0: [475.0, 476.0, 477.0], p1: [[478.0]])), p1: [[s0(p0: [479.0, 480.0, 481.0], p1: [[482.0]])], [s0(p0: [483.0, 484.0, 485.0], p1: [[486.0]])], [s0(p0: [487.0, 488.0, 489.0], p1: [[490.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [491.0, 492.0, 493.0], p1: [[494.0]]), p1: s1(p0: [s0(p0: [495.0, 496.0, 497.0], p1: [[498.0]]), s0(p0: [499.0, 500.0, 501.0], p1: [[502.0]])], p1: [[s0(p0: [503.0, 504.0, 505.0], p1: [[506.0]])], [s0(p0: [507.0, 508.0, 509.0], p1: [[510.0]])], [s0(p0: [511.0, 512.0, 513.0], p1: [[514.0]])]], p2: s0(p0: [515.0, 516.0, 517.0], p1: [[518.0]]))), p1: s0(p0: [519.0, 520.0, 521.0], p1: [[522.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [523.0, 524.0, 525.0], p1: [[526.0]]), s0(p0: [527.0, 528.0, 529.0], p1: [[530.0]])], p1: [[s0(p0: [531.0, 532.0, 533.0], p1: [[534.0]])], [s0(p0: [535.0, 536.0, 537.0], p1: [[538.0]])], [s0(p0: [539.0, 540.0, 541.0], p1: [[542.0]])]], p2: s0(p0: [543.0, 544.0, 545.0], p1: [[546.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [547.0, 548.0, 549.0], p1: [[550.0]]), s0(p0: [551.0, 552.0, 553.0], p1: [[554.0]])], p1: [[s0(p0: [555.0, 556.0, 557.0], p1: [[558.0]])], [s0(p0: [559.0, 560.0, 561.0], p1: [[562.0]])], [s0(p0: [563.0, 564.0, 565.0], p1: [[566.0]])]], p2: s0(p0: [567.0, 568.0, 569.0], p1: [[570.0]])), p1: [[s0(p0: [571.0, 572.0, 573.0], p1: [[574.0]])], [s0(p0: [575.0, 576.0, 577.0], p1: [[578.0]])], [s0(p0: [579.0, 580.0, 581.0], p1: [[582.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [583.0, 584.0, 585.0], p1: [[586.0]]), p1: s1(p0: [s0(p0: [587.0, 588.0, 589.0], p1: [[590.0]]), s0(p0: [591.0, 592.0, 593.0], p1: [[594.0]])], p1: [[s0(p0: [595.0, 596.0, 597.0], p1: [[598.0]])], [s0(p0: [599.0, 600.0, 601.0], p1: [[602.0]])], [s0(p0: [603.0, 604.0, 605.0], p1: [[606.0]])]], p2: s0(p0: [607.0, 608.0, 609.0], p1: [[610.0]]))), p1: s0(p0: [611.0, 612.0, 613.0], p1: [[614.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [615.0, 616.0, 617.0], p1: [[618.0]]), s0(p0: [619.0, 620.0, 621.0], p1: [[622.0]])], p1: [[s0(p0: [623.0, 624.0, 625.0], p1: [[626.0]])], [s0(p0: [627.0, 628.0, 629.0], p1: [[630.0]])], [s0(p0: [631.0, 632.0, 633.0], p1: [[634.0]])]], p2: s0(p0: [635.0, 636.0, 637.0], p1: [[638.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [639.0, 640.0, 641.0], p1: [[642.0]]), s0(p0: [643.0, 644.0, 645.0], p1: [[646.0]])], p1: [[s0(p0: [647.0, 648.0, 649.0], p1: [[650.0]])], [s0(p0: [651.0, 652.0, 653.0], p1: [[654.0]])], [s0(p0: [655.0, 656.0, 657.0], p1: [[658.0]])]], p2: s0(p0: [659.0, 660.0, 661.0], p1: [[662.0]])), p1: [[s0(p0: [663.0, 664.0, 665.0], p1: [[666.0]])], [s0(p0: [667.0, 668.0, 669.0], p1: [[670.0]])], [s0(p0: [671.0, 672.0, 673.0], p1: [[674.0]])]])]]))], p1: [[s5(p0: s2(p0: s1(p0: [s0(p0: [675.0, 676.0, 677.0], p1: [[678.0]]), s0(p0: [679.0, 680.0, 681.0], p1: [[682.0]])], p1: [[s0(p0: [683.0, 684.0, 685.0], p1: [[686.0]])], [s0(p0: [687.0, 688.0, 689.0], p1: [[690.0]])], [s0(p0: [691.0, 692.0, 693.0], p1: [[694.0]])]], p2: s0(p0: [695.0, 696.0, 697.0], p1: [[698.0]])), p1: [[s0(p0: [699.0, 700.0, 701.0], p1: [[702.0]])], [s0(p0: [703.0, 704.0, 705.0], p1: [[706.0]])], [s0(p0: [707.0, 708.0, 709.0], p1: [[710.0]])]]), p1: s3(p0: 711.0, p1: [s0(p0: [712.0, 713.0, 714.0], p1: [[715.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [716.0, 717.0, 718.0], p1: [[719.0]]), s0(p0: [720.0, 721.0, 722.0], p1: [[723.0]])], p1: [[s0(p0: [724.0, 725.0, 726.0], p1: [[727.0]])], [s0(p0: [728.0, 729.0, 730.0], p1: [[731.0]])], [s0(p0: [732.0, 733.0, 734.0], p1: [[735.0]])]], p2: s0(p0: [736.0, 737.0, 738.0], p1: [[739.0]])), p1: [[s0(p0: [740.0, 741.0, 742.0], p1: [[743.0]])], [s0(p0: [744.0, 745.0, 746.0], p1: [[747.0]])], [s0(p0: [748.0, 749.0, 750.0], p1: [[751.0]])]]), p1: s3(p0: 752.0, p1: [s0(p0: [753.0, 754.0, 755.0], p1: [[756.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [757.0, 758.0, 759.0], p1: [[760.0]]), s0(p0: [761.0, 762.0, 763.0], p1: [[764.0]])], p1: [[s0(p0: [765.0, 766.0, 767.0], p1: [[768.0]])], [s0(p0: [769.0, 770.0, 771.0], p1: [[772.0]])], [s0(p0: [773.0, 774.0, 775.0], p1: [[776.0]])]], p2: s0(p0: [777.0, 778.0, 779.0], p1: [[780.0]])), p1: [[s0(p0: [781.0, 782.0, 783.0], p1: [[784.0]])], [s0(p0: [785.0, 786.0, 787.0], p1: [[788.0]])], [s0(p0: [789.0, 790.0, 791.0], p1: [[792.0]])]]), p1: s3(p0: 793.0, p1: [s0(p0: [794.0, 795.0, 796.0], p1: [[797.0]])]))]])], [s10(p0: [s8(p0: [s6(p0: s4(p0: s0(p0: [798.0, 799.0, 800.0], p1: [[801.0]]), p1: s1(p0: [s0(p0: [802.0, 803.0, 804.0], p1: [[805.0]]), s0(p0: [806.0, 807.0, 808.0], p1: [[809.0]])], p1: [[s0(p0: [810.0, 811.0, 812.0], p1: [[813.0]])], [s0(p0: [814.0, 815.0, 816.0], p1: [[817.0]])], [s0(p0: [818.0, 819.0, 820.0], p1: [[821.0]])]], p2: s0(p0: [822.0, 823.0, 824.0], p1: [[825.0]]))), p1: s0(p0: [826.0, 827.0, 828.0], p1: [[829.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [830.0, 831.0, 832.0], p1: [[833.0]]), s0(p0: [834.0, 835.0, 836.0], p1: [[837.0]])], p1: [[s0(p0: [838.0, 839.0, 840.0], p1: [[841.0]])], [s0(p0: [842.0, 843.0, 844.0], p1: [[845.0]])], [s0(p0: [846.0, 847.0, 848.0], p1: [[849.0]])]], p2: s0(p0: [850.0, 851.0, 852.0], p1: [[853.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [854.0, 855.0, 856.0], p1: [[857.0]]), s0(p0: [858.0, 859.0, 860.0], p1: [[861.0]])], p1: [[s0(p0: [862.0, 863.0, 864.0], p1: [[865.0]])], [s0(p0: [866.0, 867.0, 868.0], p1: [[869.0]])], [s0(p0: [870.0, 871.0, 872.0], p1: [[873.0]])]], p2: s0(p0: [874.0, 875.0, 876.0], p1: [[877.0]])), p1: [[s0(p0: [878.0, 879.0, 880.0], p1: [[881.0]])], [s0(p0: [882.0, 883.0, 884.0], p1: [[885.0]])], [s0(p0: [886.0, 887.0, 888.0], p1: [[889.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [890.0, 891.0, 892.0], p1: [[893.0]]), p1: s1(p0: [s0(p0: [894.0, 895.0, 896.0], p1: [[897.0]]), s0(p0: [898.0, 899.0, 900.0], p1: [[901.0]])], p1: [[s0(p0: [902.0, 903.0, 904.0], p1: [[905.0]])], [s0(p0: [906.0, 907.0, 908.0], p1: [[909.0]])], [s0(p0: [910.0, 911.0, 912.0], p1: [[913.0]])]], p2: s0(p0: [914.0, 915.0, 916.0], p1: [[917.0]]))), p1: s0(p0: [918.0, 919.0, 920.0], p1: [[921.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [922.0, 923.0, 924.0], p1: [[925.0]]), s0(p0: [926.0, 927.0, 928.0], p1: [[929.0]])], p1: [[s0(p0: [930.0, 931.0, 932.0], p1: [[933.0]])], [s0(p0: [934.0, 935.0, 936.0], p1: [[937.0]])], [s0(p0: [938.0, 939.0, 940.0], p1: [[941.0]])]], p2: s0(p0: [942.0, 943.0, 944.0], p1: [[945.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [946.0, 947.0, 948.0], p1: [[949.0]]), s0(p0: [950.0, 951.0, 952.0], p1: [[953.0]])], p1: [[s0(p0: [954.0, 955.0, 956.0], p1: [[957.0]])], [s0(p0: [958.0, 959.0, 960.0], p1: [[961.0]])], [s0(p0: [962.0, 963.0, 964.0], p1: [[965.0]])]], p2: s0(p0: [966.0, 967.0, 968.0], p1: [[969.0]])), p1: [[s0(p0: [970.0, 971.0, 972.0], p1: [[973.0]])], [s0(p0: [974.0, 975.0, 976.0], p1: [[977.0]])], [s0(p0: [978.0, 979.0, 980.0], p1: [[981.0]])]])]])), s8(p0: [s6(p0: s4(p0: s0(p0: [982.0, 983.0, 984.0], p1: [[985.0]]), p1: s1(p0: [s0(p0: [986.0, 987.0, 988.0], p1: [[989.0]]), s0(p0: [990.0, 991.0, 992.0], p1: [[993.0]])], p1: [[s0(p0: [994.0, 995.0, 996.0], p1: [[997.0]])], [s0(p0: [998.0, 999.0, 1000.0], p1: [[1001.0]])], [s0(p0: [1002.0, 1003.0, 1004.0], p1: [[1005.0]])]], p2: s0(p0: [1006.0, 1007.0, 1008.0], p1: [[1009.0]]))), p1: s0(p0: [1010.0, 1011.0, 1012.0], p1: [[1013.0]]))], p1: s7(p0: [[s1(p0: [s0(p0: [1014.0, 1015.0, 1016.0], p1: [[1017.0]]), s0(p0: [1018.0, 1019.0, 1020.0], p1: [[1021.0]])], p1: [[s0(p0: [1022.0, 1023.0, 1024.0], p1: [[1025.0]])], [s0(p0: [1026.0, 1027.0, 1028.0], p1: [[1029.0]])], [s0(p0: [1030.0, 1031.0, 1032.0], p1: [[1033.0]])]], p2: s0(p0: [1034.0, 1035.0, 1036.0], p1: [[1037.0]]))]], p1: [[s2(p0: s1(p0: [s0(p0: [1038.0, 1039.0, 1040.0], p1: [[1041.0]]), s0(p0: [1042.0, 1043.0, 1044.0], p1: [[1045.0]])], p1: [[s0(p0: [1046.0, 1047.0, 1048.0], p1: [[1049.0]])], [s0(p0: [1050.0, 1051.0, 1052.0], p1: [[1053.0]])], [s0(p0: [1054.0, 1055.0, 1056.0], p1: [[1057.0]])]], p2: s0(p0: [1058.0, 1059.0, 1060.0], p1: [[1061.0]])), p1: [[s0(p0: [1062.0, 1063.0, 1064.0], p1: [[1065.0]])], [s0(p0: [1066.0, 1067.0, 1068.0], p1: [[1069.0]])], [s0(p0: [1070.0, 1071.0, 1072.0], p1: [[1073.0]])]])]]))], p1: [[s5(p0: s2(p0: s1(p0: [s0(p0: [1074.0, 1075.0, 1076.0], p1: [[1077.0]]), s0(p0: [1078.0, 1079.0, 1080.0], p1: [[1081.0]])], p1: [[s0(p0: [1082.0, 1083.0, 1084.0], p1: [[1085.0]])], [s0(p0: [1086.0, 1087.0, 1088.0], p1: [[1089.0]])], [s0(p0: [1090.0, 1091.0, 1092.0], p1: [[1093.0]])]], p2: s0(p0: [1094.0, 1095.0, 1096.0], p1: [[1097.0]])), p1: [[s0(p0: [1098.0, 1099.0, 1100.0], p1: [[1101.0]])], [s0(p0: [1102.0, 1103.0, 1104.0], p1: [[1105.0]])], [s0(p0: [1106.0, 1107.0, 1108.0], p1: [[1109.0]])]]), p1: s3(p0: 1110.0, p1: [s0(p0: [1111.0, 1112.0, 1113.0], p1: [[1114.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [1115.0, 1116.0, 1117.0], p1: [[1118.0]]), s0(p0: [1119.0, 1120.0, 1121.0], p1: [[1122.0]])], p1: [[s0(p0: [1123.0, 1124.0, 1125.0], p1: [[1126.0]])], [s0(p0: [1127.0, 1128.0, 1129.0], p1: [[1130.0]])], [s0(p0: [1131.0, 1132.0, 1133.0], p1: [[1134.0]])]], p2: s0(p0: [1135.0, 1136.0, 1137.0], p1: [[1138.0]])), p1: [[s0(p0: [1139.0, 1140.0, 1141.0], p1: [[1142.0]])], [s0(p0: [1143.0, 1144.0, 1145.0], p1: [[1146.0]])], [s0(p0: [1147.0, 1148.0, 1149.0], p1: [[1150.0]])]]), p1: s3(p0: 1151.0, p1: [s0(p0: [1152.0, 1153.0, 1154.0], p1: [[1155.0]])]))], [s5(p0: s2(p0: s1(p0: [s0(p0: [1156.0, 1157.0, 1158.0], p1: [[1159.0]]), s0(p0: [1160.0, 1161.0, 1162.0], p1: [[1163.0]])], p1: [[s0(p0: [1164.0, 1165.0, 1166.0], p1: [[1167.0]])], [s0(p0: [1168.0, 1169.0, 1170.0], p1: [[1171.0]])], [s0(p0: [1172.0, 1173.0, 1174.0], p1: [[1175.0]])]], p2: s0(p0: [1176.0, 1177.0, 1178.0], p1: [[1179.0]])), p1: [[s0(p0: [1180.0, 1181.0, 1182.0], p1: [[1183.0]])], [s0(p0: [1184.0, 1185.0, 1186.0], p1: [[1187.0]])], [s0(p0: [1188.0, 1189.0, 1190.0], p1: [[1191.0]])]]), p1: s3(p0: 1192.0, p1: [s0(p0: [1193.0, 1194.0, 1195.0], p1: [[1196.0]])]))]])]]
    let v1: Double = 1197.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1197.0
    for _ in 1...1000 {
      result = f0(v0, v1)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
