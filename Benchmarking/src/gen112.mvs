  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f111: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p0 in
    let v5: [[Float]] = v0.p1 in
    let v6: [Float] = v5[0] in
    var v7: [[Float]] = v4 in
    let v2: s0 = s0(v4, v7) in
    var v10: s0 = v0 in
    let v1: [[Float]] = v2.p1 in
    v10.p1 = v1 in
    v7[0] = v6 in
    let v25: [[Float]] = v0.p0 in
    let v22: [[Float]] = v2.p0 in
    let v73: [[Float]] = v2.p1 in
    v10.p1 = v25 in
    let v32: [s0] = [v0, v10, v2, v10, v0, v2, v10] in
    var v41: [s0] = v32 in
    let v33: s0 = v41[0] in
    let v71: [Float] = v22[0] in
    v7[0] = v71 in
    v10.p1 = v73 in
    v33
  } in
  let f109: (s0, [s0]) -> s0 = (v0: s0, v1: [s0]) -> s0 {
    let v3: s0 = v1[0] in
    let v6: [[Float]] = v0.p1 in
    var v5: [[Float]] = v6 in
    v5 = v6 in
    let v4: [[Float]] = v3.p0 in
    let v2: s0 = s0(v4, v5) in
    let v11: [[Float]] = v0.p0 in
    let v13: s0 = f111(v2) in
    let v23: s0 = f111(v3) in
    let v35: s0 = v1[0] in
    let v21: s0 = f111(v13) in
    let v16: [[Float]] = v23.p0 in
    let v15: [[Float]] = v35.p0 in
    let v24: [Float] = v11[0] in
    v5[0] = v24 in
    var v17: [Float] = v24 in
    var v42: s0 = v21 in
    v42.p1 = v6 in
    v5[0] = v24 in
    let v50: [Float] = v16[0] in
    v42.p1 = v6 in
    let v68: [Float] = v15[0] in
    v5[0] = v50 in
    v5[0] = v17 in
    let v92: Float = v68[0] in
    v17[0] = v92 in
    v42
  } in
  let f101: (Float, s0) -> Float = (v0: Float, v1: s0) -> Float {
    let v8: [[Float]] = v1.p0 in
    let v4: [Float] = v8[0] in
    let v11: Float = v4[0] in
    let v3: s0 = f111(v1) in
    var v6: [Float] = v4 in
    let v9: Float = v4[0] in
    let v12: s0 = f111(v3) in
    let v19: [[Float]] = v12.p1 in
    v6 = v4 in
    let v56: Float = v9 + v11 in
    let v39: [Float] = v19[0] in
    v6[0] = v0 in
    let v80: Float = v6[0] in
    v6 = v4 in
    v6 = v39 in
    let v140: Float = v80 - v56 in
    v140
  } in
  let f95: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [s0] = [v0] in
    let v8: s0 = f109(v0, v1) in
    let v9: s0 = f109(v8, v1) in
    v9
  } in
  let f90: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p1 in
    var v7: s0 = v0 in
    var v6: s0 = v7 in
    let v3: [[[Float]]] = [v5, v5, v5] in
    var v4: [[Float]] = v5 in
    let v10: [[Float]] = v0.p0 in
    v7.p0 = v5 in
    var v2: s0 = v7 in
    let v8: s0 = f111(v6) in
    let v1: s0 = f111(v2) in
    let v9: s0 = f111(v1) in
    let v15: [[Float]] = v3[2] in
    v2.p0 = v10 in
    var v16: [[Float]] = v15 in
    var v12: [[Float]] = v16 in
    let v14: [[Float]] = v1.p1 in
    let v22: s0 = f111(v2) in
    v7 = v1 in
    v6.p0 = v12 in
    let v38: [[Float]] = v9.p1 in
    let v17: [[Float]] = v3[2] in
    v7.p1 = v38 in
    let v19: s0 = f111(v8) in
    let v28: [[Float]] = v8.p0 in
    v7.p0 = v28 in
    var v60: [[Float]] = v17 in
    v7 = v19 in
    let v43: [[Float]] = v22.p0 in
    v2.p1 = v4 in
    v7.p0 = v60 in
    v6.p1 = v5 in
    v4 = v14 in
    v16 = v12 in
    v6.p0 = v43 in
    var v58: s0 = v1 in
    v58
  } in
  let f83: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v1: [[Float]] = v0.p0 in
    var v4: s0 = v3 in
    var v5: [[Float]] = v1 in
    let v2: [[Float]] = v3.p0 in
    var v12: s0 = v4 in
    var v27: s0 = v12 in
    let v15: [[[Float]]] = [v1, v2] in
    let v13: [[Float]] = v27.p0 in
    let v23: s0 = f90(v12) in
    let v24: s0 = f90(v23) in
    v3 = v24 in
    let v38: [Float] = v13[0] in
    let v42: [[Float]] = v15[1] in
    var v19: [Float] = v38 in
    let v28: [[Float]] = v3.p0 in
    let v31: Float = v19[0] in
    let v22: [[Float]] = v23.p1 in
    let v36: Float = v31 + v31 in
    let v122: s0 = s0(v5, v42) in
    v19[0] = v36 in
    var v50: s0 = v0 in
    let v47: [[Float]] = v50.p1 in
    v19[0] = v36 in
    let v66: s0 = s0(v47, v28) in
    v50.p0 = v22 in
    let v52: [[Float]] = v122.p1 in
    var v78: [Float] = v19 in
    v50.p1 = v52 in
    v50.p1 = v28 in
    v5[0] = v78 in
    let v217: s0 = f111(v66) in
    v217
  } in
  let f81: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p1 in
    let v4: s0 = f90(v0) in
    let v5: [[Float]] = v4.p0 in
    let v6: [[Float]] = v0.p1 in
    let v1: [s0] = [v0, v0, v0, v4, v4, v0, v4] in
    let v2: s0 = v1[6] in
    var v3: s0 = v2 in
    let v9: s0 = v1[6] in
    let v8: s0 = f83(v3) in
    let v18: [[Float]] = v9.p0 in
    let v13: s0 = v1[6] in
    let v14: s0 = f83(v13) in
    let v39: s0 = f95(v8) in
    var v26: s0 = v0 in
    v26.p1 = v5 in
    let v31: [[Float]] = v14.p0 in
    let v33: [[Float]] = v26.p1 in
    var v50: s0 = v39 in
    v50.p0 = v18 in
    v50.p0 = v7 in
    v26.p1 = v31 in
    let v80: [[Float]] = v26.p1 in
    v50.p0 = v33 in
    let v82: [[Float]] = v0.p1 in
    v26.p1 = v31 in
    v50.p0 = v6 in
    v3.p1 = v82 in
    v26.p1 = v80 in
    v50
  } in
  let noinline_f0: ([s0], s0, Float) -> Float = (v0: [s0], v1: s0, v2: Float) -> Float {
    let v4: s0 = v0[2] in
    let v17: s0 = f81(v4) in
    var v23: Float = v2 in
    let v21: s0 = v0[2] in
    var v30: Float = v23 in
    let v20: [[Float]] = v17.p0 in
    let v39: Float = f101(v30, v21) in
    var v29: Float = v23 in
    let v58: [Float] = v20[0] in
    let v61: Float = v58[0] in
    var v54: Float = v29 in
    v29 = v61 in
    let v106: [Float] = [v54, v29, v2, v39, v54, v61, v2] in
    var v195: [Float] = v106 in
    let v114: Float = v195[6] in
    v195[1] = v2 in
    v114
  } in
  fun loop(i: Int, v0: [s0], v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0]], [[1.0]]), s0([[2.0]], [[3.0]]), s0([[4.0]], [[5.0]])] in
    let v1: s0 = s0([[6.0]], [[7.0]]) in
    let v2: Float = 8.0 in
    let initialResult: Float = 8.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()