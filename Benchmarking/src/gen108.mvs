  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s1
  } in
  let f121: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v1: [[Float]] = [v0] in
    var v5: [[Float]] = v1 in
    let v4: Float = v0[0] in
    v5 = v1 in
    var v7: Float = v4 in
    v5[0] = v0 in
    let v14: [Float] = v5[0] in
    var v19: [Float] = v14 in
    var v13: [Float] = v19 in
    v19[0] = v7 in
    var v12: [Float] = v13 in
    v5[0] = v14 in
    v5[0] = v12 in
    v12[0] = v7 in
    var v44: [Float] = v13 in
    v44
  } in
  let f115: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    v7 = v0 in
    var v1: s0 = v7 in
    let v2: [[Float]] = v7.p0 in
    v1 = v7 in
    v7.p0 = v2 in
    let v14: [[Float]] = v0.p0 in
    v1.p0 = v2 in
    let v9: s1 = s1(v7, v0) in
    let v25: [[Float]] = v7.p0 in
    let v32: [s0] = [v1, v7] in
    v1.p0 = v14 in
    let v42: s1 = s1(v0, v1) in
    let v17: [[Float]] = v7.p1 in
    var v46: s1 = v9 in
    let v29: s0 = v46.p0 in
    let v16: s0 = v9.p0 in
    let v22: [s0] = [v29, v16, v7, v1, v7, v0] in
    let v59: s0 = v9.p1 in
    v7.p1 = v17 in
    var v49: s1 = v42 in
    let v47: s0 = v32[0] in
    let v65: [[Float]] = v1.p0 in
    v46.p0 = v7 in
    var v92: [s0] = v32 in
    v1.p0 = v25 in
    v7.p1 = v17 in
    let v71: s0 = v49.p0 in
    v7.p1 = v17 in
    let v67: s0 = v42.p1 in
    let v80: s0 = s0(v65, v17) in
    let v44: s0 = v92[0] in
    let v54: s0 = v46.p0 in
    let v172: s0 = v9.p1 in
    v49.p0 = v47 in
    v49.p0 = v67 in
    v49.p1 = v29 in
    v49 = v9 in
    let v58: [[Float]] = v54.p1 in
    let v123: s0 = v22[5] in
    let v197: [[Float]] = v80.p1 in
    v1.p1 = v197 in
    var v75: [s0] = v22 in
    v46.p0 = v44 in
    v49.p0 = v123 in
    v92[0] = v16 in
    let v124: s0 = v75[5] in
    var v235: s0 = v59 in
    v7 = v71 in
    v49.p0 = v235 in
    v49.p0 = v59 in
    v46.p0 = v172 in
    v235.p1 = v58 in
    v124
  } in
  let f88: (s0) -> s0 = (v0: s0) -> s0 {
    let v7: [[Float]] = v0.p0 in
    var v5: [[Float]] = v7 in
    let v2: [Float] = v5[1] in
    let v1: [Float] = v7[0] in
    v5[2] = v2 in
    let v3: s0 = f115(v0) in
    v5[2] = v1 in
    v5 = v7 in
    var v13: [[Float]] = v7 in
    var v15: s0 = v3 in
    let v12: s0 = f115(v3) in
    let v47: s0 = f115(v0) in
    var v21: [[Float]] = v5 in
    v15.p0 = v21 in
    v15.p0 = v13 in
    let v17: [[Float]] = v12.p1 in
    var v20: [[Float]] = v17 in
    let v48: [[Float]] = v0.p0 in
    var v22: s0 = v3 in
    let v74: [Float] = v20[0] in
    let v38: [Float] = v48[2] in
    v21[0] = v74 in
    let v35: [Float] = f121(v38) in
    v15.p1 = v20 in
    let v68: [[Float]] = v15.p0 in
    v22.p0 = v13 in
    v15.p0 = v68 in
    let v99: s0 = f115(v22) in
    var v59: s0 = v0 in
    v15.p1 = v17 in
    let v55: s0 = f115(v59) in
    let v95: [[Float]] = v3.p1 in
    v59.p1 = v95 in
    let v61: s0 = f115(v3) in
    let v49: [[Float]] = v47.p1 in
    v59.p0 = v21 in
    let v104: [[Float]] = v61.p1 in
    let v94: [Float] = f121(v35) in
    v59.p1 = v49 in
    let v66: [[Float]] = v99.p0 in
    let v129: s1 = s1(v55, v47) in
    v15.p0 = v13 in
    let v93: [[Float]] = v59.p1 in
    let v96: [[Float]] = v61.p0 in
    v21[2] = v94 in
    v15.p1 = v93 in
    v22.p1 = v104 in
    v15.p0 = v66 in
    let v117: [Float] = v104[0] in
    v59.p0 = v68 in
    var v81: s1 = v129 in
    var v100: s1 = v81 in
    let v121: s0 = v100.p1 in
    v5[1] = v117 in
    v15.p0 = v96 in
    v121
  } in
  let f69: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: s0 = v0.p0 in
    let v7: s0 = f88(v4) in
    let v3: s0 = f115(v7) in
    let v8: [[Float]] = v4.p1 in
    let v2: s0 = f115(v4) in
    let v5: s0 = v0.p1 in
    let v17: s0 = f115(v2) in
    var v12: s1 = v0 in
    let v16: s0 = f88(v5) in
    var v15: s0 = v7 in
    let v11: s0 = v0.p1 in
    let v21: s0 = v12.p1 in
    let v41: s0 = f88(v16) in
    let v22: s1 = s1(v17, v41) in
    let v32: [[Float]] = v21.p0 in
    var v29: s1 = v12 in
    v15.p1 = v8 in
    let v36: s0 = f88(v3) in
    let v31: s0 = f88(v41) in
    v12 = v0 in
    v12 = v29 in
    let v25: s0 = f115(v41) in
    let v24: s0 = s0(v32, v8) in
    let v52: s0 = f115(v24) in
    v12.p0 = v31 in
    v12.p0 = v52 in
    v12.p0 = v36 in
    v15 = v41 in
    let v144: s0 = v0.p1 in
    let v50: s0 = v12.p0 in
    v29.p1 = v15 in
    let v71: [[Float]] = v17.p1 in
    v15.p1 = v71 in
    v29.p1 = v4 in
    v12.p0 = v16 in
    var v179: s1 = v12 in
    v15.p1 = v8 in
    v29.p1 = v144 in
    v15 = v11 in
    v29.p0 = v17 in
    v12.p1 = v25 in
    v29 = v22 in
    v179.p0 = v50 in
    let v91: s0 = f115(v24) in
    v15 = v91 in
    v179
  } in
  let noinline_f0: ([s0], s2, Float) -> Float = (v0: [s0], v1: s2, v2: Float) -> Float {
    let v5: s1 = v1.p1 in
    let v8: s0 = v5.p1 in
    let v16: [[Float]] = v8.p0 in
    let v14: s1 = f69(v5) in
    let v26: s0 = v14.p0 in
    let v33: [[Float]] = v26.p1 in
    var v29: [[Float]] = v33 in
    let v25: [Float] = v16[0] in
    v29[1] = v25 in
    let v50: [Float] = v29[1] in
    v29[0] = v50 in
    let v98: Float = v50[0] in
    v98
  } in
  fun loop(i: Int, v0: [s0], v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])] in
    let v1: s2 = s2([s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])], s1(s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]]))) in
    let v2: Float = 25.0 in
    let initialResult: Float = 25.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()