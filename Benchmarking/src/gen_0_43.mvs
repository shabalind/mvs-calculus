  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f49: (Float) -> Float = (v0: Float) -> Float {
    var v4: Float = v0 in
    let v8: Float = v0 / v0 in
    let v3: Float = v8 + v0 in
    v4 = v8 in
    var v5: Float = v3 in
    var v7: Float = v8 in
    var v6: Float = v8 in
    var v1: Float = v6 in
    var v16: Float = v4 in
    var v15: Float = v8 in
    var v10: Float = v3 in
    var v13: Float = v7 in
    var v17: Float = v4 in
    v5 = v0 in
    var v18: Float = v0 in
    var v28: Float = v4 in
    var v11: Float = v1 in
    let v14: [Float] = [v15, v10, v7, v7, v8, v15, v11] in
    var v24: Float = v18 in
    var v21: [Float] = v14 in
    v21[1] = v5 in
    v21[2] = v10 in
    var v20: [Float] = v14 in
    var v12: [Float] = v20 in
    v12[0] = v16 in
    var v22: [Float] = v21 in
    v21[1] = v1 in
    var v29: [Float] = v14 in
    let v35: Float = v12[0] in
    var v53: Float = v3 in
    v20[3] = v17 in
    var v44: [Float] = v22 in
    let v50: [[Float]] = [v44, v14, v44] in
    var v48: [[Float]] = v50 in
    v22[5] = v10 in
    let v30: [Float] = v50[0] in
    let v70: Float = v20[5] in
    var v81: [[Float]] = v48 in
    let v46: [Float] = v81[0] in
    v20[1] = v35 in
    var v49: Float = v3 in
    v81[1] = v46 in
    v21 = v29 in
    v29[3] = v53 in
    v21[3] = v28 in
    v44[2] = v49 in
    var v72: Float = v24 in
    let v93: [Float] = v81[2] in
    v13 = v72 in
    v22[2] = v7 in
    v44[2] = v13 in
    let v130: Float = v93[1] in
    v21[1] = v70 in
    v48[1] = v20 in
    v44[5] = v6 in
    v6 = v8 in
    v12 = v30 in
    v130
  } in
  let f23: (Float) -> Float = (v0: Float) -> Float {
    var v5: Float = v0 in
    let v1: Float = f49(v5) in
    var v10: Float = v1 in
    let v8: [Float] = [v10] in
    let v11: Float = f49(v0) in
    let v24: [[Float]] = [v8, v8, v8, v8, v8, v8] in
    var v16: [[Float]] = v24 in
    v16[3] = v8 in
    v16[4] = v8 in
    let v28: [Float] = v24[1] in
    let v42: [Float] = v16[5] in
    let v180: Float = v42[0] in
    v5 = v11 in
    v16[1] = v28 in
    v180
  } in
  let noinline_f0: (s0, [s0], Float) -> Float = (v0: s0, v1: [s0], v2: Float) -> Float {
    let v5: Float = f23(v2) in
    let v18: Float = f23(v2) in
    let v14: Float = f49(v2) in
    let v17: Float = f49(v5) in
    let v67: Float = v17 * v17 in
    let v24: Float = v2 + v2 in
    let v25: Float = f23(v18) in
    let v57: [Float] = [v5, v67, v14, v2, v25, v14] in
    let v61: Float = v57[3] in
    let v38: Float = v24 * v61 in
    v38
  } in
  fun loop(i: Int, v0: s0, v1: [s0], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]) in
    let v1: [s0] = [s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]), s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])] in
    let v2: Float = 15.0 in
    let initialResult: Float = 15.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()