  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: [[s1]]
  } in
  let f45: (Float) -> Float = (v0: Float) -> Float {
    var v8: Float = v0 in
    v8 = v0 in
    var v5: Float = v8 in
    var v1: Float = v5 in
    v1 = v8 in
    var v7: Float = v1 in
    var v6: Float = v8 in
    var v3: Float = v6 in
    var v10: Float = v3 in
    var v20: Float = v6 in
    var v19: Float = v5 in
    let v17: [Float] = [v5, v0, v19] in
    let v12: Float = v17[1] in
    let v34: Float = v17[0] in
    var v13: [Float] = v17 in
    let v23: Float = v13[0] in
    v13[2] = v7 in
    var v22: Float = v19 in
    let v21: [Float] = [v0, v1, v34, v20, v22, v1] in
    v13[0] = v34 in
    var v15: Float = v12 in
    v20 = v23 in
    var v38: [Float] = v21 in
    let v60: [[Float]] = [v38, v38, v38, v21] in
    v19 = v0 in
    var v55: [[Float]] = v60 in
    let v100: [Float] = v55[1] in
    v19 = v10 in
    var v104: [Float] = v100 in
    v104[4] = v15 in
    v38[2] = v22 in
    let v122: Float = v104[1] in
    v122
  } in
  let f43: (s2) -> s2 = (v0: s2) -> s2 {
    var v6: s2 = v0 in
    v6 = v0 in
    let v4: [s0] = v6.p1 in
    v6.p1 = v4 in
    let v9: [s0] = v0.p1 in
    var v1: s2 = v6 in
    v1.p1 = v9 in
    v1.p1 = v4 in
    v1.p1 = v9 in
    v6.p1 = v9 in
    var v60: s2 = v1 in
    v1.p1 = v4 in
    v1 = v60 in
    let v64: [s0] = v60.p1 in
    v1.p1 = v64 in
    v60
  } in
  let f42: ([s3]) -> [s3] = (v0: [s3]) -> [s3] {
    let v5: s3 = v0[0] in
    var v4: [s3] = v0 in
    let v2: s3 = v4[0] in
    let v6: s3 = v4[0] in
    let v26: s2 = v2.p0 in
    let v15: s3 = v4[0] in
    var v30: [s3] = v4 in
    v4[0] = v15 in
    v4[0] = v15 in
    let v49: s3 = v0[0] in
    let v86: s2 = v49.p0 in
    var v73: [s3] = v30 in
    var v57: s3 = v5 in
    v4[0] = v6 in
    v57.p0 = v86 in
    v30 = v73 in
    v4 = v30 in
    v57.p0 = v26 in
    v73 = v0 in
    v73[0] = v57 in
    var v138: [s3] = v73 in
    v138
  } in
  let f22: (s1, s3) -> s1 = (v0: s1, v1: s3) -> s1 {
    var v2: s3 = v1 in
    let v6: [s3] = [v2, v2, v2] in
    var v4: [s3] = v6 in
    v4[2] = v2 in
    let v3: s3 = v4[0] in
    let v8: s3 = v6[0] in
    var v7: [s3] = v4 in
    v4[1] = v2 in
    v4[2] = v2 in
    let v11: s3 = v6[0] in
    v7[1] = v3 in
    v4[1] = v1 in
    var v10: [s3] = v4 in
    v7[0] = v3 in
    let v28: s3 = v10[2] in
    v10[1] = v11 in
    v10 = v4 in
    let v15: s2 = v28.p0 in
    let v19: s2 = f43(v15) in
    v10 = v7 in
    var v27: s3 = v8 in
    v4[2] = v11 in
    v4[1] = v8 in
    let v82: s1 = v19.p0 in
    v10[0] = v27 in
    var v142: [s3] = v7 in
    v2 = v28 in
    v4 = v142 in
    v82
  } in
  let f21: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: [s0] = v0.p0 in
    let v4: [s0] = v0.p1 in
    var v2: s1 = v0 in
    v2.p1 = v4 in
    var v9: [s0] = v4 in
    v9 = v4 in
    v2.p1 = v4 in
    var v10: s1 = v2 in
    let v16: [s0] = v2.p1 in
    v2.p1 = v16 in
    let v26: [s0] = v2.p0 in
    v10.p1 = v9 in
    let v27: s0 = v6[1] in
    v2.p1 = v9 in
    v9[1] = v27 in
    v2.p1 = v4 in
    v2.p1 = v4 in
    v2.p0 = v26 in
    v10
  } in
  let f10: ([s3]) -> [s3] = (v0: [s3]) -> [s3] {
    let v2: [s3] = f42(v0) in
    let v9: [s3] = f42(v2) in
    var v10: [s3] = v9 in
    v10
  } in
  let noinline_f0: ([[s3]], s3, Float) -> Float = (v0: [[s3]], v1: s3, v2: Float) -> Float {
    let v8: [s3] = v0[0] in
    var v11: [s3] = v8 in
    let v13: s2 = v1.p0 in
    let v9: [s3] = f10(v8) in
    let v14: [s3] = f10(v11) in
    let v17: s3 = v14[0] in
    let v16: s1 = v13.p0 in
    let v15: s3 = v8[0] in
    let v12: s1 = f21(v16) in
    let v20: [s3] = f42(v9) in
    v11[0] = v1 in
    v11[0] = v1 in
    let v28: s1 = f22(v12, v17) in
    let v23: s3 = v20[0] in
    let v46: [s3] = v0[1] in
    v11[0] = v1 in
    v11[0] = v15 in
    v11[0] = v1 in
    let v60: [s3] = f42(v46) in
    let v48: [s3] = f42(v60) in
    let v31: [s0] = v28.p0 in
    v11[0] = v23 in
    let v62: [s3] = f42(v48) in
    let v56: s0 = v31[1] in
    let v116: [[Float]] = v56.p0 in
    let v58: [Float] = v116[2] in
    v11 = v62 in
    let v134: Float = v58[0] in
    let v142: Float = f45(v134) in
    v142
  } in
  fun loop(i: Int, v0: [[s3]], v1: s3, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s3]] = [[s3(s2(s1([s0([[0.0], [1.0], [2.0]], [3.0, 4.0]), s0([[5.0], [6.0], [7.0]], [8.0, 9.0]), s0([[10.0], [11.0], [12.0]], [13.0, 14.0])], [s0([[15.0], [16.0], [17.0]], [18.0, 19.0]), s0([[20.0], [21.0], [22.0]], [23.0, 24.0])]), [s0([[25.0], [26.0], [27.0]], [28.0, 29.0]), s0([[30.0], [31.0], [32.0]], [33.0, 34.0])]), [[s1([s0([[35.0], [36.0], [37.0]], [38.0, 39.0]), s0([[40.0], [41.0], [42.0]], [43.0, 44.0]), s0([[45.0], [46.0], [47.0]], [48.0, 49.0])], [s0([[50.0], [51.0], [52.0]], [53.0, 54.0]), s0([[55.0], [56.0], [57.0]], [58.0, 59.0])])], [s1([s0([[60.0], [61.0], [62.0]], [63.0, 64.0]), s0([[65.0], [66.0], [67.0]], [68.0, 69.0]), s0([[70.0], [71.0], [72.0]], [73.0, 74.0])], [s0([[75.0], [76.0], [77.0]], [78.0, 79.0]), s0([[80.0], [81.0], [82.0]], [83.0, 84.0])])], [s1([s0([[85.0], [86.0], [87.0]], [88.0, 89.0]), s0([[90.0], [91.0], [92.0]], [93.0, 94.0]), s0([[95.0], [96.0], [97.0]], [98.0, 99.0])], [s0([[100.0], [101.0], [102.0]], [103.0, 104.0]), s0([[105.0], [106.0], [107.0]], [108.0, 109.0])])]])], [s3(s2(s1([s0([[110.0], [111.0], [112.0]], [113.0, 114.0]), s0([[115.0], [116.0], [117.0]], [118.0, 119.0]), s0([[120.0], [121.0], [122.0]], [123.0, 124.0])], [s0([[125.0], [126.0], [127.0]], [128.0, 129.0]), s0([[130.0], [131.0], [132.0]], [133.0, 134.0])]), [s0([[135.0], [136.0], [137.0]], [138.0, 139.0]), s0([[140.0], [141.0], [142.0]], [143.0, 144.0])]), [[s1([s0([[145.0], [146.0], [147.0]], [148.0, 149.0]), s0([[150.0], [151.0], [152.0]], [153.0, 154.0]), s0([[155.0], [156.0], [157.0]], [158.0, 159.0])], [s0([[160.0], [161.0], [162.0]], [163.0, 164.0]), s0([[165.0], [166.0], [167.0]], [168.0, 169.0])])], [s1([s0([[170.0], [171.0], [172.0]], [173.0, 174.0]), s0([[175.0], [176.0], [177.0]], [178.0, 179.0]), s0([[180.0], [181.0], [182.0]], [183.0, 184.0])], [s0([[185.0], [186.0], [187.0]], [188.0, 189.0]), s0([[190.0], [191.0], [192.0]], [193.0, 194.0])])], [s1([s0([[195.0], [196.0], [197.0]], [198.0, 199.0]), s0([[200.0], [201.0], [202.0]], [203.0, 204.0]), s0([[205.0], [206.0], [207.0]], [208.0, 209.0])], [s0([[210.0], [211.0], [212.0]], [213.0, 214.0]), s0([[215.0], [216.0], [217.0]], [218.0, 219.0])])]])]] in
    let v1: s3 = s3(s2(s1([s0([[220.0], [221.0], [222.0]], [223.0, 224.0]), s0([[225.0], [226.0], [227.0]], [228.0, 229.0]), s0([[230.0], [231.0], [232.0]], [233.0, 234.0])], [s0([[235.0], [236.0], [237.0]], [238.0, 239.0]), s0([[240.0], [241.0], [242.0]], [243.0, 244.0])]), [s0([[245.0], [246.0], [247.0]], [248.0, 249.0]), s0([[250.0], [251.0], [252.0]], [253.0, 254.0])]), [[s1([s0([[255.0], [256.0], [257.0]], [258.0, 259.0]), s0([[260.0], [261.0], [262.0]], [263.0, 264.0]), s0([[265.0], [266.0], [267.0]], [268.0, 269.0])], [s0([[270.0], [271.0], [272.0]], [273.0, 274.0]), s0([[275.0], [276.0], [277.0]], [278.0, 279.0])])], [s1([s0([[280.0], [281.0], [282.0]], [283.0, 284.0]), s0([[285.0], [286.0], [287.0]], [288.0, 289.0]), s0([[290.0], [291.0], [292.0]], [293.0, 294.0])], [s0([[295.0], [296.0], [297.0]], [298.0, 299.0]), s0([[300.0], [301.0], [302.0]], [303.0, 304.0])])], [s1([s0([[305.0], [306.0], [307.0]], [308.0, 309.0]), s0([[310.0], [311.0], [312.0]], [313.0, 314.0]), s0([[315.0], [316.0], [317.0]], [318.0, 319.0])], [s0([[320.0], [321.0], [322.0]], [323.0, 324.0]), s0([[325.0], [326.0], [327.0]], [328.0, 329.0])])]]) in
    let v2: Float = 330.0 in
    let initialResult: Float = 330.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()