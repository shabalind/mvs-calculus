  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  struct s4 {
    var p0: [[s2]]
    var p1: s2
  } in
  let f121: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p0 in
    let v1: s1 = s1(v0, v0) in
    let v9: [Float] = v6[2] in
    let v4: [[Float]] = v0.p1 in
    let v3: [Float] = v6[0] in
    let v14: [Float] = v4[1] in
    let v11: s0 = s0(v6, v4) in
    let v23: [[Float]] = v11.p0 in
    let v24: [[Float]] = [v3, v14, v3, v3, v14, v9] in
    let v20: s0 = v1.p0 in
    var v17: s1 = v1 in
    let v33: [[Float]] = v11.p0 in
    let v19: [[Float]] = v11.p0 in
    var v41: s0 = v11 in
    let v43: s0 = v17.p1 in
    var v59: s0 = v41 in
    let v52: s0 = v17.p1 in
    var v54: [[Float]] = v24 in
    let v27: s0 = v1.p1 in
    let v32: [[Float]] = v11.p1 in
    v17.p1 = v41 in
    var v77: [[Float]] = v23 in
    let v58: s1 = s1(v27, v20) in
    let v22: [Float] = v54[2] in
    var v56: [[Float]] = v33 in
    v17 = v1 in
    v17.p0 = v52 in
    v41.p1 = v32 in
    v41.p0 = v56 in
    var v45: s1 = v58 in
    v45.p1 = v59 in
    let v97: s0 = s0(v77, v32) in
    let v71: s0 = v45.p0 in
    v45.p0 = v0 in
    v45.p0 = v43 in
    v45.p0 = v97 in
    v17.p1 = v59 in
    v41.p1 = v32 in
    v41.p0 = v19 in
    v77[1] = v22 in
    v71
  } in
  let f6: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    var v3: s0 = v6 in
    let v4: [[Float]] = v3.p1 in
    v3.p1 = v4 in
    var v9: s0 = v3 in
    let v10: [[Float]] = v3.p1 in
    v6.p1 = v4 in
    v9.p1 = v10 in
    v9 = v3 in
    let v60: s0 = f121(v9) in
    v60
  } in
  let noinline_f0: ([s4], Float) -> Float = (v0: [s4], v1: Float) -> Float {
    let v2: s4 = v0[0] in
    let v4: s2 = v2.p1 in
    let v10: s0 = v4.p1 in
    var v18: s0 = v10 in
    let v12: s0 = f6(v18) in
    let v29: s0 = f6(v12) in
    let v24: [[Float]] = v12.p1 in
    v18.p1 = v24 in
    let v36: [[Float]] = v29.p1 in
    let v66: [Float] = v36[1] in
    let v61: Float = v66[0] in
    v61
  } in
  fun loop(i: Int, v0: [s4], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s4] = [s4([[s2([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]])], s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]]))], [s2([s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])], s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]))], [s2([s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])], s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]))]], s2([s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]])], s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]]))), s4([[s2([s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]])], s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]]))], [s2([s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]])], s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]]))], [s2([s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]])], s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]]))]], s2([s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]])], s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]]))), s4([[s2([s0([[80.0], [81.0], [82.0]], [[83.0], [84.0]])], s0([[85.0], [86.0], [87.0]], [[88.0], [89.0]]))], [s2([s0([[90.0], [91.0], [92.0]], [[93.0], [94.0]])], s0([[95.0], [96.0], [97.0]], [[98.0], [99.0]]))], [s2([s0([[100.0], [101.0], [102.0]], [[103.0], [104.0]])], s0([[105.0], [106.0], [107.0]], [[108.0], [109.0]]))]], s2([s0([[110.0], [111.0], [112.0]], [[113.0], [114.0]])], s0([[115.0], [116.0], [117.0]], [[118.0], [119.0]])))] in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()