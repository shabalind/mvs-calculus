  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: Float
  } in
  let f36: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    let v4: [s0] = v1.p0 in
    let v3: [s0] = v1.p0 in
    var v7: s1 = v0 in
    let v9: [s0] = v1.p0 in
    let v6: s0 = v3[0] in
    v7.p0 = v3 in
    let v25: [[Float]] = v6.p0 in
    let v15: Float = v7.p1 in
    let v17: [Float] = v25[0] in
    let v20: [Float] = [v15, v15, v15, v15] in
    let v40: Float = v17[0] in
    var v73: [Float] = v20 in
    v7.p0 = v4 in
    v7.p1 = v40 in
    let v24: Float = v40 * v40 in
    let v28: Float = v20[1] in
    let v46: [s0] = v7.p0 in
    let v37: Float = v24 * v28 in
    v73[1] = v40 in
    let v41: Float = v73[1] in
    let v36: Float = v41 - v37 in
    let v34: Float = v0.p1 in
    v7.p0 = v46 in
    v7.p0 = v46 in
    let v80: s1 = s1(v46, v36) in
    v7.p0 = v9 in
    v73[2] = v34 in
    v80
  } in
  let f27: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: [s0] = v0.p0 in
    let v2: s1 = f36(v0, v0) in
    let v6: s0 = v4[0] in
    let v21: [[Float]] = v6.p0 in
    let v14: [Float] = v21[0] in
    var v18: [[Float]] = v21 in
    v18[0] = v14 in
    let v43: [Float] = v18[0] in
    let v26: Float = v43[0] in
    let v69: [s0] = v2.p0 in
    let v50: s1 = s1(v69, v26) in
    v50
  } in
  let f17: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v7: [[Float]] = v0.p1 in
    let v4: [Float] = v7[1] in
    var v2: s0 = v0 in
    let v5: [[Float]] = v6.p0 in
    v2.p0 = v5 in
    let v1: [[Float]] = v2.p1 in
    var v12: [Float] = v4 in
    let v13: [[Float]] = v2.p0 in
    var v15: s0 = v6 in
    v15.p1 = v1 in
    v6.p0 = v13 in
    let v23: [[Float]] = v6.p0 in
    var v28: [[Float]] = v7 in
    var v16: [[Float]] = v28 in
    v2.p1 = v16 in
    let v22: [[Float]] = v15.p0 in
    var v27: [[Float]] = v13 in
    v28[0] = v12 in
    v15.p0 = v27 in
    v15.p0 = v23 in
    var v39: s0 = v6 in
    let v61: [[Float]] = v6.p0 in
    var v32: [[Float]] = v22 in
    v2.p0 = v32 in
    v15.p0 = v22 in
    v6.p0 = v61 in
    v39
  } in
  let f14: (s1) -> s1 = (v0: s1) -> s1 {
    var v4: s1 = v0 in
    var v7: s1 = v4 in
    let v2: Float = v4.p1 in
    let v6: s1 = f27(v7) in
    let v3: s1 = f27(v0) in
    var v14: s1 = v3 in
    let v1: [s0] = v7.p0 in
    let v8: Float = v7.p1 in
    let v11: Float = v14.p1 in
    v7.p1 = v2 in
    let v9: s0 = v1[0] in
    let v15: Float = v11 / v8 in
    var v13: Float = v2 in
    let v10: s0 = v1[0] in
    v7.p1 = v2 in
    let v16: [[Float]] = v10.p0 in
    let v20: [s0] = v14.p0 in
    let v25: Float = v6.p1 in
    var v29: [s0] = v20 in
    var v36: [[Float]] = v16 in
    let v30: [Float] = v36[0] in
    v14.p1 = v13 in
    v4.p0 = v1 in
    let v24: s0 = v29[0] in
    let v23: Float = v30[0] in
    v14.p1 = v23 in
    let v19: [Float] = v36[0] in
    v7.p0 = v1 in
    v29[0] = v24 in
    let v39: [Float] = v16[0] in
    v36[0] = v39 in
    let v48: s0 = f17(v9) in
    v14.p0 = v29 in
    v4.p0 = v1 in
    v7.p1 = v25 in
    v14.p0 = v1 in
    let v87: s1 = f36(v14, v7) in
    v7.p1 = v23 in
    v36[0] = v19 in
    v29[0] = v48 in
    v4.p1 = v15 in
    v4.p0 = v1 in
    v87
  } in
  let f9: (s0, [s0]) -> [s0] = (v0: s0, v1: [s0]) -> [s0] {
    v1
  } in
  let noinline_f0: ([[s0]], s0, Float) -> Float = (v0: [[s0]], v1: s0, v2: Float) -> Float {
    let v4: [[Float]] = v1.p0 in
    var v6: Float = v2 in
    let v5: [s0] = v0[0] in
    let v8: [Float] = v4[0] in
    var v7: [Float] = v8 in
    v7[0] = v2 in
    v6 = v2 in
    let v14: Float = v7[0] in
    let v3: [s0] = f9(v1, v5) in
    let v10: s0 = f17(v1) in
    let v12: [s0] = f9(v10, v5) in
    let v24: [s0] = f9(v1, v3) in
    v7[0] = v6 in
    v7[0] = v2 in
    let v18: Float = v6 + v6 in
    var v36: Float = v14 in
    let v33: Float = v18 + v18 in
    let v57: s0 = v24[0] in
    var v31: [s0] = v5 in
    v7[0] = v33 in
    let v60: Float = v8[0] in
    let v39: s1 = s1(v12, v33) in
    v31[0] = v1 in
    let v32: s1 = f14(v39) in
    let v48: [s0] = f9(v57, v5) in
    let v87: s0 = v48[0] in
    let v52: Float = v32.p1 in
    v31[0] = v10 in
    let v112: s1 = s1(v31, v14) in
    v7[0] = v60 in
    let v261: Float = v112.p1 in
    let v110: Float = v36 * v261 in
    v31[0] = v87 in
    v7[0] = v52 in
    var v215: Float = v110 in
    v215
  } in
  fun loop(i: Int, v0: [[s0]], v1: s0, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s0]] = [[s0([[0.0]], [[1.0], [2.0]])], [s0([[3.0]], [[4.0], [5.0]])], [s0([[6.0]], [[7.0], [8.0]])]] in
    let v1: s0 = s0([[9.0]], [[10.0], [11.0]]) in
    let v2: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()