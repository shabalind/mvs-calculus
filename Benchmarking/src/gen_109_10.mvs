  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s2 {
    var p0: s1
    var p1: s0
  } in
  struct s3 {
    var p0: s2
    var p1: [[s1]]
    var p2: s0
  } in
  struct s4 {
    var p0: s1
    var p1: [s3]
  } in
  struct s5 {
    var p0: [[s1]]
    var p1: s2
  } in
  struct s6 {
    var p0: [[s5]]
    var p1: s4
  } in
  struct s11 {
    var p0: [[s2]]
    var p1: [s6]
  } in
  let f15: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v8: Float = v1 in
    var v5: Float = v0 in
    var v3: Float = v5 in
    var v6: Float = v3 in
    var v7: Float = v1 in
    var v2: Float = v3 in
    v2 = v3 in
    var v15: Float = v7 in
    var v4: Float = v8 in
    let v11: Float = v0 * v1 in
    var v14: Float = v4 in
    var v36: Float = v14 in
    var v13: Float = v7 in
    var v12: Float = v13 in
    var v17: Float = v7 in
    var v25: Float = v6 in
    var v10: Float = v2 in
    let v19: Float = v36 / v3 in
    var v23: Float = v14 in
    var v20: Float = v15 in
    var v22: Float = v15 in
    var v26: Float = v6 in
    var v31: Float = v25 in
    var v47: Float = v12 in
    var v53: Float = v12 in
    var v28: Float = v23 in
    let v32: [Float] = [v31, v4] in
    var v44: [Float] = v32 in
    v44[1] = v26 in
    v44[1] = v19 in
    var v57: Float = v22 in
    var v30: [Float] = v44 in
    v30[0] = v20 in
    let v63: Float = v30[1] in
    var v40: [Float] = v44 in
    var v61: Float = v11 in
    v44[0] = v17 in
    var v89: [Float] = v40 in
    var v33: Float = v53 in
    v44[1] = v33 in
    var v54: Float = v15 in
    var v65: [Float] = v30 in
    var v85: [Float] = v89 in
    let v84: [[Float]] = [v32] in
    v30[1] = v54 in
    let v49: [Float] = v84[0] in
    var v87: [[Float]] = v84 in
    let v74: [Float] = v87[0] in
    v87[0] = v65 in
    v44[0] = v63 in
    var v70: [[Float]] = v84 in
    var v157: [[Float]] = v70 in
    v70[0] = v74 in
    v30[1] = v47 in
    v40[0] = v28 in
    var v100: [[Float]] = v70 in
    v100[0] = v49 in
    v13 = v28 in
    var v68: [[Float]] = v157 in
    var v116: Float = v61 in
    v68[0] = v85 in
    var v127: [[Float]] = v68 in
    let v92: [Float] = v127[0] in
    v68[0] = v49 in
    v70[0] = v65 in
    v87[0] = v89 in
    v44[1] = v116 in
    var v257: [[Float]] = v100 in
    let v138: Float = v92[0] in
    v28 = v10 in
    v30[1] = v20 in
    v70 = v257 in
    v40[0] = v57 in
    v138
  } in
  let noinline_f0: (s11, Float) -> Float = (v0: s11, v1: Float) -> Float {
    var v3: Float = v1 in
    let v6: Float = f15(v3) in
    let v7: Float = f15(v6) in
    let v11: Float = f15(v3) in
    var v38: Float = v11 in
    let v212: Float = f15(v7) in
    let v145: Float = v38 / v212 in
    v145
  } in
  fun loop(i: Int, v0: s11, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s11 = s11([[s2(s1([[s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]])], [s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])]], [s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]), s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])]), s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]]))], [s2(s1([[s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]])], [s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])]], [s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]]), s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]]), s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]])]), s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]]))], [s2(s1([[s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]])], [s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]])]], [s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]]), s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]]), s0([[80.0], [81.0], [82.0]], [[83.0], [84.0]])]), s0([[85.0], [86.0], [87.0]], [[88.0], [89.0]]))]], [s6([[s5([[s1([[s0([[90.0], [91.0], [92.0]], [[93.0], [94.0]])], [s0([[95.0], [96.0], [97.0]], [[98.0], [99.0]])]], [s0([[100.0], [101.0], [102.0]], [[103.0], [104.0]]), s0([[105.0], [106.0], [107.0]], [[108.0], [109.0]]), s0([[110.0], [111.0], [112.0]], [[113.0], [114.0]])])], [s1([[s0([[115.0], [116.0], [117.0]], [[118.0], [119.0]])], [s0([[120.0], [121.0], [122.0]], [[123.0], [124.0]])]], [s0([[125.0], [126.0], [127.0]], [[128.0], [129.0]]), s0([[130.0], [131.0], [132.0]], [[133.0], [134.0]]), s0([[135.0], [136.0], [137.0]], [[138.0], [139.0]])])]], s2(s1([[s0([[140.0], [141.0], [142.0]], [[143.0], [144.0]])], [s0([[145.0], [146.0], [147.0]], [[148.0], [149.0]])]], [s0([[150.0], [151.0], [152.0]], [[153.0], [154.0]]), s0([[155.0], [156.0], [157.0]], [[158.0], [159.0]]), s0([[160.0], [161.0], [162.0]], [[163.0], [164.0]])]), s0([[165.0], [166.0], [167.0]], [[168.0], [169.0]])))]], s4(s1([[s0([[170.0], [171.0], [172.0]], [[173.0], [174.0]])], [s0([[175.0], [176.0], [177.0]], [[178.0], [179.0]])]], [s0([[180.0], [181.0], [182.0]], [[183.0], [184.0]]), s0([[185.0], [186.0], [187.0]], [[188.0], [189.0]]), s0([[190.0], [191.0], [192.0]], [[193.0], [194.0]])]), [s3(s2(s1([[s0([[195.0], [196.0], [197.0]], [[198.0], [199.0]])], [s0([[200.0], [201.0], [202.0]], [[203.0], [204.0]])]], [s0([[205.0], [206.0], [207.0]], [[208.0], [209.0]]), s0([[210.0], [211.0], [212.0]], [[213.0], [214.0]]), s0([[215.0], [216.0], [217.0]], [[218.0], [219.0]])]), s0([[220.0], [221.0], [222.0]], [[223.0], [224.0]])), [[s1([[s0([[225.0], [226.0], [227.0]], [[228.0], [229.0]])], [s0([[230.0], [231.0], [232.0]], [[233.0], [234.0]])]], [s0([[235.0], [236.0], [237.0]], [[238.0], [239.0]]), s0([[240.0], [241.0], [242.0]], [[243.0], [244.0]]), s0([[245.0], [246.0], [247.0]], [[248.0], [249.0]])])]], s0([[250.0], [251.0], [252.0]], [[253.0], [254.0]])), s3(s2(s1([[s0([[255.0], [256.0], [257.0]], [[258.0], [259.0]])], [s0([[260.0], [261.0], [262.0]], [[263.0], [264.0]])]], [s0([[265.0], [266.0], [267.0]], [[268.0], [269.0]]), s0([[270.0], [271.0], [272.0]], [[273.0], [274.0]]), s0([[275.0], [276.0], [277.0]], [[278.0], [279.0]])]), s0([[280.0], [281.0], [282.0]], [[283.0], [284.0]])), [[s1([[s0([[285.0], [286.0], [287.0]], [[288.0], [289.0]])], [s0([[290.0], [291.0], [292.0]], [[293.0], [294.0]])]], [s0([[295.0], [296.0], [297.0]], [[298.0], [299.0]]), s0([[300.0], [301.0], [302.0]], [[303.0], [304.0]]), s0([[305.0], [306.0], [307.0]], [[308.0], [309.0]])])]], s0([[310.0], [311.0], [312.0]], [[313.0], [314.0]]))])), s6([[s5([[s1([[s0([[315.0], [316.0], [317.0]], [[318.0], [319.0]])], [s0([[320.0], [321.0], [322.0]], [[323.0], [324.0]])]], [s0([[325.0], [326.0], [327.0]], [[328.0], [329.0]]), s0([[330.0], [331.0], [332.0]], [[333.0], [334.0]]), s0([[335.0], [336.0], [337.0]], [[338.0], [339.0]])])], [s1([[s0([[340.0], [341.0], [342.0]], [[343.0], [344.0]])], [s0([[345.0], [346.0], [347.0]], [[348.0], [349.0]])]], [s0([[350.0], [351.0], [352.0]], [[353.0], [354.0]]), s0([[355.0], [356.0], [357.0]], [[358.0], [359.0]]), s0([[360.0], [361.0], [362.0]], [[363.0], [364.0]])])]], s2(s1([[s0([[365.0], [366.0], [367.0]], [[368.0], [369.0]])], [s0([[370.0], [371.0], [372.0]], [[373.0], [374.0]])]], [s0([[375.0], [376.0], [377.0]], [[378.0], [379.0]]), s0([[380.0], [381.0], [382.0]], [[383.0], [384.0]]), s0([[385.0], [386.0], [387.0]], [[388.0], [389.0]])]), s0([[390.0], [391.0], [392.0]], [[393.0], [394.0]])))]], s4(s1([[s0([[395.0], [396.0], [397.0]], [[398.0], [399.0]])], [s0([[400.0], [401.0], [402.0]], [[403.0], [404.0]])]], [s0([[405.0], [406.0], [407.0]], [[408.0], [409.0]]), s0([[410.0], [411.0], [412.0]], [[413.0], [414.0]]), s0([[415.0], [416.0], [417.0]], [[418.0], [419.0]])]), [s3(s2(s1([[s0([[420.0], [421.0], [422.0]], [[423.0], [424.0]])], [s0([[425.0], [426.0], [427.0]], [[428.0], [429.0]])]], [s0([[430.0], [431.0], [432.0]], [[433.0], [434.0]]), s0([[435.0], [436.0], [437.0]], [[438.0], [439.0]]), s0([[440.0], [441.0], [442.0]], [[443.0], [444.0]])]), s0([[445.0], [446.0], [447.0]], [[448.0], [449.0]])), [[s1([[s0([[450.0], [451.0], [452.0]], [[453.0], [454.0]])], [s0([[455.0], [456.0], [457.0]], [[458.0], [459.0]])]], [s0([[460.0], [461.0], [462.0]], [[463.0], [464.0]]), s0([[465.0], [466.0], [467.0]], [[468.0], [469.0]]), s0([[470.0], [471.0], [472.0]], [[473.0], [474.0]])])]], s0([[475.0], [476.0], [477.0]], [[478.0], [479.0]])), s3(s2(s1([[s0([[480.0], [481.0], [482.0]], [[483.0], [484.0]])], [s0([[485.0], [486.0], [487.0]], [[488.0], [489.0]])]], [s0([[490.0], [491.0], [492.0]], [[493.0], [494.0]]), s0([[495.0], [496.0], [497.0]], [[498.0], [499.0]]), s0([[500.0], [501.0], [502.0]], [[503.0], [504.0]])]), s0([[505.0], [506.0], [507.0]], [[508.0], [509.0]])), [[s1([[s0([[510.0], [511.0], [512.0]], [[513.0], [514.0]])], [s0([[515.0], [516.0], [517.0]], [[518.0], [519.0]])]], [s0([[520.0], [521.0], [522.0]], [[523.0], [524.0]]), s0([[525.0], [526.0], [527.0]], [[528.0], [529.0]]), s0([[530.0], [531.0], [532.0]], [[533.0], [534.0]])])]], s0([[535.0], [536.0], [537.0]], [[538.0], [539.0]]))]))]) in
    let v1: Float = 540.0 in
    let initialResult: Float = 540.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()