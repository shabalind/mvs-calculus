  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  let f58: (s1, [s0]) -> s1 = (v0: s1, v1: [s0]) -> s1 {
    let v5: [[s0]] = [v1, v1, v1, v1] in
    let v4: [s0] = v5[0] in
    let v10: s0 = v1[1] in
    let v9: [[s0]] = [v1, v4] in
    let v21: s0 = v4[2] in
    let v46: [s0] = v9[0] in
    let v12: [[Float]] = v10.p0 in
    var v39: [[Float]] = v12 in
    let v14: [[Float]] = v21.p1 in
    var v30: [[Float]] = v39 in
    let v18: [s0] = v0.p1 in
    var v34: [s0] = v18 in
    let v32: [s0] = v0.p1 in
    var v61: [[Float]] = v14 in
    var v31: s1 = v0 in
    let v40: [Float] = v39[0] in
    v31.p0 = v46 in
    let v29: [Float] = v30[0] in
    let v76: s0 = v34[0] in
    let v63: [[Float]] = v76.p0 in
    let v83: s0 = s0(v63, v61) in
    var v51: [s0] = v32 in
    v61[0] = v29 in
    let v170: [s0] = v0.p1 in
    v39[0] = v40 in
    v30[0] = v29 in
    v31.p1 = v170 in
    let v94: [s0] = v31.p1 in
    v31.p0 = v4 in
    var v65: s1 = v31 in
    v51[1] = v83 in
    v65.p1 = v51 in
    v65.p1 = v51 in
    v65.p1 = v94 in
    v31.p1 = v32 in
    v65
  } in
  let f55: (s1) -> s1 = (v0: s1) -> s1 {
    v0
  } in
  let f47: (s1, s0) -> s1 = (v0: s1, v1: s0) -> s1 {
    var v11: s1 = v0 in
    var v12: s1 = v11 in
    v12
  } in
  let f43: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    let v6: [s0] = v1.p0 in
    let v9: s1 = f58(v0, v6) in
    let v22: s1 = f55(v9) in
    let v59: s1 = f55(v22) in
    let v24: [s0] = v59.p0 in
    let v146: s1 = f58(v9, v24) in
    let v101: s1 = f55(v146) in
    v101
  } in
  let f35: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    var v6: s1 = v0 in
    let v7: [s0] = v1.p0 in
    let v5: [s0] = v6.p1 in
    v6.p0 = v7 in
    let v4: s0 = v7[0] in
    var v11: s0 = v4 in
    var v8: [s0] = v7 in
    let v18: [s0] = v6.p0 in
    let v17: [[Float]] = v4.p1 in
    let v15: [[Float]] = v4.p1 in
    var v21: [[Float]] = v17 in
    let v10: s0 = v7[0] in
    var v16: s0 = v10 in
    let v12: s0 = s0(v17, v15) in
    v11.p0 = v15 in
    v6.p0 = v7 in
    let v14: s0 = v18[0] in
    v8[2] = v10 in
    v8[0] = v12 in
    var v34: [[Float]] = v15 in
    v8[0] = v10 in
    let v23: [Float] = v17[0] in
    let v52: s1 = s1(v8, v5) in
    v11.p1 = v34 in
    v11.p1 = v21 in
    let v19: s1 = f43(v0, v6) in
    v21[0] = v23 in
    let v25: [[Float]] = v11.p1 in
    v8[1] = v12 in
    v11.p1 = v21 in
    var v22: [[Float]] = v25 in
    let v42: [[Float]] = v16.p0 in
    let v35: [s0] = v19.p0 in
    let v69: s0 = s0(v42, v21) in
    v22[0] = v23 in
    let v68: [Float] = v17[0] in
    let v50: s1 = f47(v52, v4) in
    v8 = v35 in
    let v54: s1 = f47(v0, v69) in
    v21[0] = v68 in
    v16.p1 = v22 in
    v16.p1 = v34 in
    v11 = v14 in
    let v66: s1 = f43(v50, v54) in
    v8[1] = v69 in
    v66
  } in
  let f12: (s1) -> s1 = (v0: s1) -> s1 {
    let v6: s1 = f35(v0, v0) in
    let v2: [s0] = v6.p1 in
    let v5: s1 = f55(v0) in
    let v8: s1 = f43(v6, v5) in
    let v41: [s0] = v5.p0 in
    let v32: s1 = f43(v8, v5) in
    let v56: s1 = f35(v0, v32) in
    var v126: s1 = v56 in
    v126.p1 = v2 in
    v126.p0 = v41 in
    let v64: s1 = f55(v126) in
    v64
  } in
  let noinline_f0: (s0, [s1], Float) -> Float = (v0: s0, v1: [s1], v2: Float) -> Float {
    let v6: s1 = v1[1] in
    let v9: s1 = f12(v6) in
    let v8: [s0] = v9.p0 in
    let v28: s0 = v8[0] in
    let v24: [[Float]] = v28.p0 in
    let v16: [Float] = v24[0] in
    let v23: Float = v16[0] in
    v23
  } in
  fun loop(i: Int, v0: s0, v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0]]) in
    let v1: [s1] = [s1([s0([[2.0]], [[3.0]]), s0([[4.0]], [[5.0]]), s0([[6.0]], [[7.0]])], [s0([[8.0]], [[9.0]]), s0([[10.0]], [[11.0]])]), s1([s0([[12.0]], [[13.0]]), s0([[14.0]], [[15.0]]), s0([[16.0]], [[17.0]])], [s0([[18.0]], [[19.0]]), s0([[20.0]], [[21.0]])]), s1([s0([[22.0]], [[23.0]]), s0([[24.0]], [[25.0]]), s0([[26.0]], [[27.0]])], [s0([[28.0]], [[29.0]]), s0([[30.0]], [[31.0]])])] in
    let v2: Float = 32.0 in
    let initialResult: Float = 32.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()