  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
  } in
  struct s2 {
    var p0: [s1]
    var p1: s1
  } in
  struct s3 {
    var p0: s0
    var p1: [[s0]]
    var p2: s2
  } in
  struct s4 {
    var p0: [[s3]]
    var p1: [s3]
  } in
  struct s5 {
    var p0: s4
    var p1: s1
  } in
  let f3: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v6: Float = v3 in
    var v1: Float = v6 in
    var v9: Float = v6 in
    var v4: Float = v9 in
    var v7: Float = v9 in
    var v8: Float = v9 in
    var v14: Float = v6 in
    var v12: Float = v9 in
    let v10: Float = v4 * v7 in
    var v2: Float = v7 in
    var v5: Float = v12 in
    let v20: Float = v12 * v2 in
    var v19: Float = v4 in
    v7 = v20 in
    var v13: Float = v8 in
    var v25: Float = v8 in
    let v18: [Float] = [v25, v0, v19, v10, v19, v5] in
    var v15: Float = v19 in
    let v24: Float = v15 - v7 in
    v25 = v10 in
    let v23: Float = v18[4] in
    v19 = v0 in
    let v22: Float = v1 + v1 in
    var v30: [Float] = v18 in
    v30[3] = v20 in
    v30[4] = v24 in
    let v17: Float = v30[2] in
    let v21: Float = v30[4] in
    var v65: Float = v19 in
    v30[3] = v17 in
    let v47: [Float] = [v14, v21, v23, v12] in
    var v54: [Float] = v47 in
    var v76: [Float] = v47 in
    let v55: Float = v54[1] in
    v5 = v65 in
    let v123: Float = v76[1] in
    var v93: [Float] = v47 in
    v30[5] = v123 in
    let v125: [[Float]] = [v93, v47, v76, v76, v93, v54, v76] in
    var v120: [[Float]] = v125 in
    var v85: Float = v20 in
    v120[4] = v76 in
    v76[2] = v23 in
    let v86: [Float] = v120[2] in
    v120[6] = v86 in
    let v56: [Float] = v120[1] in
    let v91: Float = v56[0] in
    v93[3] = v19 in
    var v112: Float = v91 in
    v30[1] = v85 in
    v76[1] = v55 in
    v120[4] = v86 in
    v30[3] = v13 in
    v9 = v22 in
    v112
  } in
  let noinline_f0: ([s5], Float) -> Float = (v0: [s5], v1: Float) -> Float {
    let v21: Float = f3(v1) in
    let v180: Float = v1 / v21 in
    var v146: Float = v180 in
    let v207: Float = v146 * v1 in
    let v116: Float = f3(v180) in
    let v295: Float = v116 / v207 in
    v295
  } in
  fun loop(i: Int, v0: [s5], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5(s4([[s3(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), [[s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])], [s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]])], [s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]])]], s2([s1([s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])]), s1([s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]])]), s1([s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]])])], s1([s0([[35.0], [36.0], [37.0]], [[38.0], [39.0]])])))]], [s3(s0([[40.0], [41.0], [42.0]], [[43.0], [44.0]]), [[s0([[45.0], [46.0], [47.0]], [[48.0], [49.0]])], [s0([[50.0], [51.0], [52.0]], [[53.0], [54.0]])], [s0([[55.0], [56.0], [57.0]], [[58.0], [59.0]])]], s2([s1([s0([[60.0], [61.0], [62.0]], [[63.0], [64.0]])]), s1([s0([[65.0], [66.0], [67.0]], [[68.0], [69.0]])]), s1([s0([[70.0], [71.0], [72.0]], [[73.0], [74.0]])])], s1([s0([[75.0], [76.0], [77.0]], [[78.0], [79.0]])])))]), s1([s0([[80.0], [81.0], [82.0]], [[83.0], [84.0]])])), s5(s4([[s3(s0([[85.0], [86.0], [87.0]], [[88.0], [89.0]]), [[s0([[90.0], [91.0], [92.0]], [[93.0], [94.0]])], [s0([[95.0], [96.0], [97.0]], [[98.0], [99.0]])], [s0([[100.0], [101.0], [102.0]], [[103.0], [104.0]])]], s2([s1([s0([[105.0], [106.0], [107.0]], [[108.0], [109.0]])]), s1([s0([[110.0], [111.0], [112.0]], [[113.0], [114.0]])]), s1([s0([[115.0], [116.0], [117.0]], [[118.0], [119.0]])])], s1([s0([[120.0], [121.0], [122.0]], [[123.0], [124.0]])])))]], [s3(s0([[125.0], [126.0], [127.0]], [[128.0], [129.0]]), [[s0([[130.0], [131.0], [132.0]], [[133.0], [134.0]])], [s0([[135.0], [136.0], [137.0]], [[138.0], [139.0]])], [s0([[140.0], [141.0], [142.0]], [[143.0], [144.0]])]], s2([s1([s0([[145.0], [146.0], [147.0]], [[148.0], [149.0]])]), s1([s0([[150.0], [151.0], [152.0]], [[153.0], [154.0]])]), s1([s0([[155.0], [156.0], [157.0]], [[158.0], [159.0]])])], s1([s0([[160.0], [161.0], [162.0]], [[163.0], [164.0]])])))]), s1([s0([[165.0], [166.0], [167.0]], [[168.0], [169.0]])]))] in
    let v1: Float = 170.0 in
    let initialResult: Float = 170.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()