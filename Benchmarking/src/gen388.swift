  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: Double
  }
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  }
  struct s2 {
    var p0: [s0]
    var p1: [s1]
  }
  struct s3 {
    var p0: [[s0]]
    var p1: [[s2]]
  }
  struct s4 {
    var p0: s2
    var p1: [s3]
  }
  struct s5 {
    var p0: Double
    var p1: [s0]
  }
  struct s6 {
    var p0: s2
    var p1: s0
    var p2: [s4]
    var p3: [s3]
    var p4: s1
    var p5: [[s0]]
  }
  struct s7 {
    var p0: s1
    var p1: s2
  }
  struct s10 {
    var p0: s4
    var p1: [s2]
  }
  struct s11 {
    var p0: s5
    var p1: [[s6]]
  }
  func f4(_ v0: Double) -> Double {
    var v2: Double = v0
    var v1: Double = v2
    let v5: [Double] = [v2, v2, v0, v2, v1]
    let v4: Double = v2 - v1
    v1 = v4
    let v9: [Double] = [v4]
    var v3: Double = v2
    let v20: Double = v9[0]
    let v11: Double = v5[3]
    var v17: [Double] = v5
    var v15: [Double] = v17
    let v19: Double = v17[3]
    v15[3] = v11
    var v25: Double = v4
    var v14: [Double] = v17
    let v36: [Double] = [v19, v20]
    let v46: Double = v36[1]
    v14[3] = v2
    var v69: [Double] = v15
    v15[3] = v19
    v69[4] = v3
    v14[2] = v25
    var v58: [Double] = v14
    let v49: Double = v58[2]
    v14[2] = v46
    let v70: Double = v69[3]
    let v147: Double = v70 - v49
    return v147
  }
  @inline(never)
  func f0(_ v0: [s7], _ v1: [s2], _ v2: s11, _ v3: [[s10]], _ v4: Double) -> Double {
    let v9: Double = f4(v4)
    let v8: Double = f4(v9)
    let v16: Double = f4(v4)
    let v17: Double = v8 - v16
    let v15: Double = f4(v17)
    let v19: Double = f4(v15)
    let v54: Double = v17 - v19
    let v147: Double = f4(v54)
    let v102: Double = f4(v147)
    return v102
  }
  func benchmark() {
    let v0: [s7] = [s7(p0: s1(p0: [[s0(p0: [[0.0], [1.0], [2.0]], p1: 3.0)], [s0(p0: [[4.0], [5.0], [6.0]], p1: 7.0)], [s0(p0: [[8.0], [9.0], [10.0]], p1: 11.0)]], p1: s0(p0: [[12.0], [13.0], [14.0]], p1: 15.0)), p1: s2(p0: [s0(p0: [[16.0], [17.0], [18.0]], p1: 19.0)], p1: [s1(p0: [[s0(p0: [[20.0], [21.0], [22.0]], p1: 23.0)], [s0(p0: [[24.0], [25.0], [26.0]], p1: 27.0)], [s0(p0: [[28.0], [29.0], [30.0]], p1: 31.0)]], p1: s0(p0: [[32.0], [33.0], [34.0]], p1: 35.0)), s1(p0: [[s0(p0: [[36.0], [37.0], [38.0]], p1: 39.0)], [s0(p0: [[40.0], [41.0], [42.0]], p1: 43.0)], [s0(p0: [[44.0], [45.0], [46.0]], p1: 47.0)]], p1: s0(p0: [[48.0], [49.0], [50.0]], p1: 51.0)), s1(p0: [[s0(p0: [[52.0], [53.0], [54.0]], p1: 55.0)], [s0(p0: [[56.0], [57.0], [58.0]], p1: 59.0)], [s0(p0: [[60.0], [61.0], [62.0]], p1: 63.0)]], p1: s0(p0: [[64.0], [65.0], [66.0]], p1: 67.0))]))]
    let v1: [s2] = [s2(p0: [s0(p0: [[68.0], [69.0], [70.0]], p1: 71.0)], p1: [s1(p0: [[s0(p0: [[72.0], [73.0], [74.0]], p1: 75.0)], [s0(p0: [[76.0], [77.0], [78.0]], p1: 79.0)], [s0(p0: [[80.0], [81.0], [82.0]], p1: 83.0)]], p1: s0(p0: [[84.0], [85.0], [86.0]], p1: 87.0)), s1(p0: [[s0(p0: [[88.0], [89.0], [90.0]], p1: 91.0)], [s0(p0: [[92.0], [93.0], [94.0]], p1: 95.0)], [s0(p0: [[96.0], [97.0], [98.0]], p1: 99.0)]], p1: s0(p0: [[100.0], [101.0], [102.0]], p1: 103.0)), s1(p0: [[s0(p0: [[104.0], [105.0], [106.0]], p1: 107.0)], [s0(p0: [[108.0], [109.0], [110.0]], p1: 111.0)], [s0(p0: [[112.0], [113.0], [114.0]], p1: 115.0)]], p1: s0(p0: [[116.0], [117.0], [118.0]], p1: 119.0))])]
    let v2: s11 = s11(p0: s5(p0: 120.0, p1: [s0(p0: [[121.0], [122.0], [123.0]], p1: 124.0), s0(p0: [[125.0], [126.0], [127.0]], p1: 128.0), s0(p0: [[129.0], [130.0], [131.0]], p1: 132.0)]), p1: [[s6(p0: s2(p0: [s0(p0: [[133.0], [134.0], [135.0]], p1: 136.0)], p1: [s1(p0: [[s0(p0: [[137.0], [138.0], [139.0]], p1: 140.0)], [s0(p0: [[141.0], [142.0], [143.0]], p1: 144.0)], [s0(p0: [[145.0], [146.0], [147.0]], p1: 148.0)]], p1: s0(p0: [[149.0], [150.0], [151.0]], p1: 152.0)), s1(p0: [[s0(p0: [[153.0], [154.0], [155.0]], p1: 156.0)], [s0(p0: [[157.0], [158.0], [159.0]], p1: 160.0)], [s0(p0: [[161.0], [162.0], [163.0]], p1: 164.0)]], p1: s0(p0: [[165.0], [166.0], [167.0]], p1: 168.0)), s1(p0: [[s0(p0: [[169.0], [170.0], [171.0]], p1: 172.0)], [s0(p0: [[173.0], [174.0], [175.0]], p1: 176.0)], [s0(p0: [[177.0], [178.0], [179.0]], p1: 180.0)]], p1: s0(p0: [[181.0], [182.0], [183.0]], p1: 184.0))]), p1: s0(p0: [[185.0], [186.0], [187.0]], p1: 188.0), p2: [s4(p0: s2(p0: [s0(p0: [[189.0], [190.0], [191.0]], p1: 192.0)], p1: [s1(p0: [[s0(p0: [[193.0], [194.0], [195.0]], p1: 196.0)], [s0(p0: [[197.0], [198.0], [199.0]], p1: 200.0)], [s0(p0: [[201.0], [202.0], [203.0]], p1: 204.0)]], p1: s0(p0: [[205.0], [206.0], [207.0]], p1: 208.0)), s1(p0: [[s0(p0: [[209.0], [210.0], [211.0]], p1: 212.0)], [s0(p0: [[213.0], [214.0], [215.0]], p1: 216.0)], [s0(p0: [[217.0], [218.0], [219.0]], p1: 220.0)]], p1: s0(p0: [[221.0], [222.0], [223.0]], p1: 224.0)), s1(p0: [[s0(p0: [[225.0], [226.0], [227.0]], p1: 228.0)], [s0(p0: [[229.0], [230.0], [231.0]], p1: 232.0)], [s0(p0: [[233.0], [234.0], [235.0]], p1: 236.0)]], p1: s0(p0: [[237.0], [238.0], [239.0]], p1: 240.0))]), p1: [s3(p0: [[s0(p0: [[241.0], [242.0], [243.0]], p1: 244.0)]], p1: [[s2(p0: [s0(p0: [[245.0], [246.0], [247.0]], p1: 248.0)], p1: [s1(p0: [[s0(p0: [[249.0], [250.0], [251.0]], p1: 252.0)], [s0(p0: [[253.0], [254.0], [255.0]], p1: 256.0)], [s0(p0: [[257.0], [258.0], [259.0]], p1: 260.0)]], p1: s0(p0: [[261.0], [262.0], [263.0]], p1: 264.0)), s1(p0: [[s0(p0: [[265.0], [266.0], [267.0]], p1: 268.0)], [s0(p0: [[269.0], [270.0], [271.0]], p1: 272.0)], [s0(p0: [[273.0], [274.0], [275.0]], p1: 276.0)]], p1: s0(p0: [[277.0], [278.0], [279.0]], p1: 280.0)), s1(p0: [[s0(p0: [[281.0], [282.0], [283.0]], p1: 284.0)], [s0(p0: [[285.0], [286.0], [287.0]], p1: 288.0)], [s0(p0: [[289.0], [290.0], [291.0]], p1: 292.0)]], p1: s0(p0: [[293.0], [294.0], [295.0]], p1: 296.0))])]]), s3(p0: [[s0(p0: [[297.0], [298.0], [299.0]], p1: 300.0)]], p1: [[s2(p0: [s0(p0: [[301.0], [302.0], [303.0]], p1: 304.0)], p1: [s1(p0: [[s0(p0: [[305.0], [306.0], [307.0]], p1: 308.0)], [s0(p0: [[309.0], [310.0], [311.0]], p1: 312.0)], [s0(p0: [[313.0], [314.0], [315.0]], p1: 316.0)]], p1: s0(p0: [[317.0], [318.0], [319.0]], p1: 320.0)), s1(p0: [[s0(p0: [[321.0], [322.0], [323.0]], p1: 324.0)], [s0(p0: [[325.0], [326.0], [327.0]], p1: 328.0)], [s0(p0: [[329.0], [330.0], [331.0]], p1: 332.0)]], p1: s0(p0: [[333.0], [334.0], [335.0]], p1: 336.0)), s1(p0: [[s0(p0: [[337.0], [338.0], [339.0]], p1: 340.0)], [s0(p0: [[341.0], [342.0], [343.0]], p1: 344.0)], [s0(p0: [[345.0], [346.0], [347.0]], p1: 348.0)]], p1: s0(p0: [[349.0], [350.0], [351.0]], p1: 352.0))])]])]), s4(p0: s2(p0: [s0(p0: [[353.0], [354.0], [355.0]], p1: 356.0)], p1: [s1(p0: [[s0(p0: [[357.0], [358.0], [359.0]], p1: 360.0)], [s0(p0: [[361.0], [362.0], [363.0]], p1: 364.0)], [s0(p0: [[365.0], [366.0], [367.0]], p1: 368.0)]], p1: s0(p0: [[369.0], [370.0], [371.0]], p1: 372.0)), s1(p0: [[s0(p0: [[373.0], [374.0], [375.0]], p1: 376.0)], [s0(p0: [[377.0], [378.0], [379.0]], p1: 380.0)], [s0(p0: [[381.0], [382.0], [383.0]], p1: 384.0)]], p1: s0(p0: [[385.0], [386.0], [387.0]], p1: 388.0)), s1(p0: [[s0(p0: [[389.0], [390.0], [391.0]], p1: 392.0)], [s0(p0: [[393.0], [394.0], [395.0]], p1: 396.0)], [s0(p0: [[397.0], [398.0], [399.0]], p1: 400.0)]], p1: s0(p0: [[401.0], [402.0], [403.0]], p1: 404.0))]), p1: [s3(p0: [[s0(p0: [[405.0], [406.0], [407.0]], p1: 408.0)]], p1: [[s2(p0: [s0(p0: [[409.0], [410.0], [411.0]], p1: 412.0)], p1: [s1(p0: [[s0(p0: [[413.0], [414.0], [415.0]], p1: 416.0)], [s0(p0: [[417.0], [418.0], [419.0]], p1: 420.0)], [s0(p0: [[421.0], [422.0], [423.0]], p1: 424.0)]], p1: s0(p0: [[425.0], [426.0], [427.0]], p1: 428.0)), s1(p0: [[s0(p0: [[429.0], [430.0], [431.0]], p1: 432.0)], [s0(p0: [[433.0], [434.0], [435.0]], p1: 436.0)], [s0(p0: [[437.0], [438.0], [439.0]], p1: 440.0)]], p1: s0(p0: [[441.0], [442.0], [443.0]], p1: 444.0)), s1(p0: [[s0(p0: [[445.0], [446.0], [447.0]], p1: 448.0)], [s0(p0: [[449.0], [450.0], [451.0]], p1: 452.0)], [s0(p0: [[453.0], [454.0], [455.0]], p1: 456.0)]], p1: s0(p0: [[457.0], [458.0], [459.0]], p1: 460.0))])]]), s3(p0: [[s0(p0: [[461.0], [462.0], [463.0]], p1: 464.0)]], p1: [[s2(p0: [s0(p0: [[465.0], [466.0], [467.0]], p1: 468.0)], p1: [s1(p0: [[s0(p0: [[469.0], [470.0], [471.0]], p1: 472.0)], [s0(p0: [[473.0], [474.0], [475.0]], p1: 476.0)], [s0(p0: [[477.0], [478.0], [479.0]], p1: 480.0)]], p1: s0(p0: [[481.0], [482.0], [483.0]], p1: 484.0)), s1(p0: [[s0(p0: [[485.0], [486.0], [487.0]], p1: 488.0)], [s0(p0: [[489.0], [490.0], [491.0]], p1: 492.0)], [s0(p0: [[493.0], [494.0], [495.0]], p1: 496.0)]], p1: s0(p0: [[497.0], [498.0], [499.0]], p1: 500.0)), s1(p0: [[s0(p0: [[501.0], [502.0], [503.0]], p1: 504.0)], [s0(p0: [[505.0], [506.0], [507.0]], p1: 508.0)], [s0(p0: [[509.0], [510.0], [511.0]], p1: 512.0)]], p1: s0(p0: [[513.0], [514.0], [515.0]], p1: 516.0))])]])])], p3: [s3(p0: [[s0(p0: [[517.0], [518.0], [519.0]], p1: 520.0)]], p1: [[s2(p0: [s0(p0: [[521.0], [522.0], [523.0]], p1: 524.0)], p1: [s1(p0: [[s0(p0: [[525.0], [526.0], [527.0]], p1: 528.0)], [s0(p0: [[529.0], [530.0], [531.0]], p1: 532.0)], [s0(p0: [[533.0], [534.0], [535.0]], p1: 536.0)]], p1: s0(p0: [[537.0], [538.0], [539.0]], p1: 540.0)), s1(p0: [[s0(p0: [[541.0], [542.0], [543.0]], p1: 544.0)], [s0(p0: [[545.0], [546.0], [547.0]], p1: 548.0)], [s0(p0: [[549.0], [550.0], [551.0]], p1: 552.0)]], p1: s0(p0: [[553.0], [554.0], [555.0]], p1: 556.0)), s1(p0: [[s0(p0: [[557.0], [558.0], [559.0]], p1: 560.0)], [s0(p0: [[561.0], [562.0], [563.0]], p1: 564.0)], [s0(p0: [[565.0], [566.0], [567.0]], p1: 568.0)]], p1: s0(p0: [[569.0], [570.0], [571.0]], p1: 572.0))])]]), s3(p0: [[s0(p0: [[573.0], [574.0], [575.0]], p1: 576.0)]], p1: [[s2(p0: [s0(p0: [[577.0], [578.0], [579.0]], p1: 580.0)], p1: [s1(p0: [[s0(p0: [[581.0], [582.0], [583.0]], p1: 584.0)], [s0(p0: [[585.0], [586.0], [587.0]], p1: 588.0)], [s0(p0: [[589.0], [590.0], [591.0]], p1: 592.0)]], p1: s0(p0: [[593.0], [594.0], [595.0]], p1: 596.0)), s1(p0: [[s0(p0: [[597.0], [598.0], [599.0]], p1: 600.0)], [s0(p0: [[601.0], [602.0], [603.0]], p1: 604.0)], [s0(p0: [[605.0], [606.0], [607.0]], p1: 608.0)]], p1: s0(p0: [[609.0], [610.0], [611.0]], p1: 612.0)), s1(p0: [[s0(p0: [[613.0], [614.0], [615.0]], p1: 616.0)], [s0(p0: [[617.0], [618.0], [619.0]], p1: 620.0)], [s0(p0: [[621.0], [622.0], [623.0]], p1: 624.0)]], p1: s0(p0: [[625.0], [626.0], [627.0]], p1: 628.0))])]]), s3(p0: [[s0(p0: [[629.0], [630.0], [631.0]], p1: 632.0)]], p1: [[s2(p0: [s0(p0: [[633.0], [634.0], [635.0]], p1: 636.0)], p1: [s1(p0: [[s0(p0: [[637.0], [638.0], [639.0]], p1: 640.0)], [s0(p0: [[641.0], [642.0], [643.0]], p1: 644.0)], [s0(p0: [[645.0], [646.0], [647.0]], p1: 648.0)]], p1: s0(p0: [[649.0], [650.0], [651.0]], p1: 652.0)), s1(p0: [[s0(p0: [[653.0], [654.0], [655.0]], p1: 656.0)], [s0(p0: [[657.0], [658.0], [659.0]], p1: 660.0)], [s0(p0: [[661.0], [662.0], [663.0]], p1: 664.0)]], p1: s0(p0: [[665.0], [666.0], [667.0]], p1: 668.0)), s1(p0: [[s0(p0: [[669.0], [670.0], [671.0]], p1: 672.0)], [s0(p0: [[673.0], [674.0], [675.0]], p1: 676.0)], [s0(p0: [[677.0], [678.0], [679.0]], p1: 680.0)]], p1: s0(p0: [[681.0], [682.0], [683.0]], p1: 684.0))])]])], p4: s1(p0: [[s0(p0: [[685.0], [686.0], [687.0]], p1: 688.0)], [s0(p0: [[689.0], [690.0], [691.0]], p1: 692.0)], [s0(p0: [[693.0], [694.0], [695.0]], p1: 696.0)]], p1: s0(p0: [[697.0], [698.0], [699.0]], p1: 700.0)), p5: [[s0(p0: [[701.0], [702.0], [703.0]], p1: 704.0)]])], [s6(p0: s2(p0: [s0(p0: [[705.0], [706.0], [707.0]], p1: 708.0)], p1: [s1(p0: [[s0(p0: [[709.0], [710.0], [711.0]], p1: 712.0)], [s0(p0: [[713.0], [714.0], [715.0]], p1: 716.0)], [s0(p0: [[717.0], [718.0], [719.0]], p1: 720.0)]], p1: s0(p0: [[721.0], [722.0], [723.0]], p1: 724.0)), s1(p0: [[s0(p0: [[725.0], [726.0], [727.0]], p1: 728.0)], [s0(p0: [[729.0], [730.0], [731.0]], p1: 732.0)], [s0(p0: [[733.0], [734.0], [735.0]], p1: 736.0)]], p1: s0(p0: [[737.0], [738.0], [739.0]], p1: 740.0)), s1(p0: [[s0(p0: [[741.0], [742.0], [743.0]], p1: 744.0)], [s0(p0: [[745.0], [746.0], [747.0]], p1: 748.0)], [s0(p0: [[749.0], [750.0], [751.0]], p1: 752.0)]], p1: s0(p0: [[753.0], [754.0], [755.0]], p1: 756.0))]), p1: s0(p0: [[757.0], [758.0], [759.0]], p1: 760.0), p2: [s4(p0: s2(p0: [s0(p0: [[761.0], [762.0], [763.0]], p1: 764.0)], p1: [s1(p0: [[s0(p0: [[765.0], [766.0], [767.0]], p1: 768.0)], [s0(p0: [[769.0], [770.0], [771.0]], p1: 772.0)], [s0(p0: [[773.0], [774.0], [775.0]], p1: 776.0)]], p1: s0(p0: [[777.0], [778.0], [779.0]], p1: 780.0)), s1(p0: [[s0(p0: [[781.0], [782.0], [783.0]], p1: 784.0)], [s0(p0: [[785.0], [786.0], [787.0]], p1: 788.0)], [s0(p0: [[789.0], [790.0], [791.0]], p1: 792.0)]], p1: s0(p0: [[793.0], [794.0], [795.0]], p1: 796.0)), s1(p0: [[s0(p0: [[797.0], [798.0], [799.0]], p1: 800.0)], [s0(p0: [[801.0], [802.0], [803.0]], p1: 804.0)], [s0(p0: [[805.0], [806.0], [807.0]], p1: 808.0)]], p1: s0(p0: [[809.0], [810.0], [811.0]], p1: 812.0))]), p1: [s3(p0: [[s0(p0: [[813.0], [814.0], [815.0]], p1: 816.0)]], p1: [[s2(p0: [s0(p0: [[817.0], [818.0], [819.0]], p1: 820.0)], p1: [s1(p0: [[s0(p0: [[821.0], [822.0], [823.0]], p1: 824.0)], [s0(p0: [[825.0], [826.0], [827.0]], p1: 828.0)], [s0(p0: [[829.0], [830.0], [831.0]], p1: 832.0)]], p1: s0(p0: [[833.0], [834.0], [835.0]], p1: 836.0)), s1(p0: [[s0(p0: [[837.0], [838.0], [839.0]], p1: 840.0)], [s0(p0: [[841.0], [842.0], [843.0]], p1: 844.0)], [s0(p0: [[845.0], [846.0], [847.0]], p1: 848.0)]], p1: s0(p0: [[849.0], [850.0], [851.0]], p1: 852.0)), s1(p0: [[s0(p0: [[853.0], [854.0], [855.0]], p1: 856.0)], [s0(p0: [[857.0], [858.0], [859.0]], p1: 860.0)], [s0(p0: [[861.0], [862.0], [863.0]], p1: 864.0)]], p1: s0(p0: [[865.0], [866.0], [867.0]], p1: 868.0))])]]), s3(p0: [[s0(p0: [[869.0], [870.0], [871.0]], p1: 872.0)]], p1: [[s2(p0: [s0(p0: [[873.0], [874.0], [875.0]], p1: 876.0)], p1: [s1(p0: [[s0(p0: [[877.0], [878.0], [879.0]], p1: 880.0)], [s0(p0: [[881.0], [882.0], [883.0]], p1: 884.0)], [s0(p0: [[885.0], [886.0], [887.0]], p1: 888.0)]], p1: s0(p0: [[889.0], [890.0], [891.0]], p1: 892.0)), s1(p0: [[s0(p0: [[893.0], [894.0], [895.0]], p1: 896.0)], [s0(p0: [[897.0], [898.0], [899.0]], p1: 900.0)], [s0(p0: [[901.0], [902.0], [903.0]], p1: 904.0)]], p1: s0(p0: [[905.0], [906.0], [907.0]], p1: 908.0)), s1(p0: [[s0(p0: [[909.0], [910.0], [911.0]], p1: 912.0)], [s0(p0: [[913.0], [914.0], [915.0]], p1: 916.0)], [s0(p0: [[917.0], [918.0], [919.0]], p1: 920.0)]], p1: s0(p0: [[921.0], [922.0], [923.0]], p1: 924.0))])]])]), s4(p0: s2(p0: [s0(p0: [[925.0], [926.0], [927.0]], p1: 928.0)], p1: [s1(p0: [[s0(p0: [[929.0], [930.0], [931.0]], p1: 932.0)], [s0(p0: [[933.0], [934.0], [935.0]], p1: 936.0)], [s0(p0: [[937.0], [938.0], [939.0]], p1: 940.0)]], p1: s0(p0: [[941.0], [942.0], [943.0]], p1: 944.0)), s1(p0: [[s0(p0: [[945.0], [946.0], [947.0]], p1: 948.0)], [s0(p0: [[949.0], [950.0], [951.0]], p1: 952.0)], [s0(p0: [[953.0], [954.0], [955.0]], p1: 956.0)]], p1: s0(p0: [[957.0], [958.0], [959.0]], p1: 960.0)), s1(p0: [[s0(p0: [[961.0], [962.0], [963.0]], p1: 964.0)], [s0(p0: [[965.0], [966.0], [967.0]], p1: 968.0)], [s0(p0: [[969.0], [970.0], [971.0]], p1: 972.0)]], p1: s0(p0: [[973.0], [974.0], [975.0]], p1: 976.0))]), p1: [s3(p0: [[s0(p0: [[977.0], [978.0], [979.0]], p1: 980.0)]], p1: [[s2(p0: [s0(p0: [[981.0], [982.0], [983.0]], p1: 984.0)], p1: [s1(p0: [[s0(p0: [[985.0], [986.0], [987.0]], p1: 988.0)], [s0(p0: [[989.0], [990.0], [991.0]], p1: 992.0)], [s0(p0: [[993.0], [994.0], [995.0]], p1: 996.0)]], p1: s0(p0: [[997.0], [998.0], [999.0]], p1: 1000.0)), s1(p0: [[s0(p0: [[1001.0], [1002.0], [1003.0]], p1: 1004.0)], [s0(p0: [[1005.0], [1006.0], [1007.0]], p1: 1008.0)], [s0(p0: [[1009.0], [1010.0], [1011.0]], p1: 1012.0)]], p1: s0(p0: [[1013.0], [1014.0], [1015.0]], p1: 1016.0)), s1(p0: [[s0(p0: [[1017.0], [1018.0], [1019.0]], p1: 1020.0)], [s0(p0: [[1021.0], [1022.0], [1023.0]], p1: 1024.0)], [s0(p0: [[1025.0], [1026.0], [1027.0]], p1: 1028.0)]], p1: s0(p0: [[1029.0], [1030.0], [1031.0]], p1: 1032.0))])]]), s3(p0: [[s0(p0: [[1033.0], [1034.0], [1035.0]], p1: 1036.0)]], p1: [[s2(p0: [s0(p0: [[1037.0], [1038.0], [1039.0]], p1: 1040.0)], p1: [s1(p0: [[s0(p0: [[1041.0], [1042.0], [1043.0]], p1: 1044.0)], [s0(p0: [[1045.0], [1046.0], [1047.0]], p1: 1048.0)], [s0(p0: [[1049.0], [1050.0], [1051.0]], p1: 1052.0)]], p1: s0(p0: [[1053.0], [1054.0], [1055.0]], p1: 1056.0)), s1(p0: [[s0(p0: [[1057.0], [1058.0], [1059.0]], p1: 1060.0)], [s0(p0: [[1061.0], [1062.0], [1063.0]], p1: 1064.0)], [s0(p0: [[1065.0], [1066.0], [1067.0]], p1: 1068.0)]], p1: s0(p0: [[1069.0], [1070.0], [1071.0]], p1: 1072.0)), s1(p0: [[s0(p0: [[1073.0], [1074.0], [1075.0]], p1: 1076.0)], [s0(p0: [[1077.0], [1078.0], [1079.0]], p1: 1080.0)], [s0(p0: [[1081.0], [1082.0], [1083.0]], p1: 1084.0)]], p1: s0(p0: [[1085.0], [1086.0], [1087.0]], p1: 1088.0))])]])])], p3: [s3(p0: [[s0(p0: [[1089.0], [1090.0], [1091.0]], p1: 1092.0)]], p1: [[s2(p0: [s0(p0: [[1093.0], [1094.0], [1095.0]], p1: 1096.0)], p1: [s1(p0: [[s0(p0: [[1097.0], [1098.0], [1099.0]], p1: 1100.0)], [s0(p0: [[1101.0], [1102.0], [1103.0]], p1: 1104.0)], [s0(p0: [[1105.0], [1106.0], [1107.0]], p1: 1108.0)]], p1: s0(p0: [[1109.0], [1110.0], [1111.0]], p1: 1112.0)), s1(p0: [[s0(p0: [[1113.0], [1114.0], [1115.0]], p1: 1116.0)], [s0(p0: [[1117.0], [1118.0], [1119.0]], p1: 1120.0)], [s0(p0: [[1121.0], [1122.0], [1123.0]], p1: 1124.0)]], p1: s0(p0: [[1125.0], [1126.0], [1127.0]], p1: 1128.0)), s1(p0: [[s0(p0: [[1129.0], [1130.0], [1131.0]], p1: 1132.0)], [s0(p0: [[1133.0], [1134.0], [1135.0]], p1: 1136.0)], [s0(p0: [[1137.0], [1138.0], [1139.0]], p1: 1140.0)]], p1: s0(p0: [[1141.0], [1142.0], [1143.0]], p1: 1144.0))])]]), s3(p0: [[s0(p0: [[1145.0], [1146.0], [1147.0]], p1: 1148.0)]], p1: [[s2(p0: [s0(p0: [[1149.0], [1150.0], [1151.0]], p1: 1152.0)], p1: [s1(p0: [[s0(p0: [[1153.0], [1154.0], [1155.0]], p1: 1156.0)], [s0(p0: [[1157.0], [1158.0], [1159.0]], p1: 1160.0)], [s0(p0: [[1161.0], [1162.0], [1163.0]], p1: 1164.0)]], p1: s0(p0: [[1165.0], [1166.0], [1167.0]], p1: 1168.0)), s1(p0: [[s0(p0: [[1169.0], [1170.0], [1171.0]], p1: 1172.0)], [s0(p0: [[1173.0], [1174.0], [1175.0]], p1: 1176.0)], [s0(p0: [[1177.0], [1178.0], [1179.0]], p1: 1180.0)]], p1: s0(p0: [[1181.0], [1182.0], [1183.0]], p1: 1184.0)), s1(p0: [[s0(p0: [[1185.0], [1186.0], [1187.0]], p1: 1188.0)], [s0(p0: [[1189.0], [1190.0], [1191.0]], p1: 1192.0)], [s0(p0: [[1193.0], [1194.0], [1195.0]], p1: 1196.0)]], p1: s0(p0: [[1197.0], [1198.0], [1199.0]], p1: 1200.0))])]]), s3(p0: [[s0(p0: [[1201.0], [1202.0], [1203.0]], p1: 1204.0)]], p1: [[s2(p0: [s0(p0: [[1205.0], [1206.0], [1207.0]], p1: 1208.0)], p1: [s1(p0: [[s0(p0: [[1209.0], [1210.0], [1211.0]], p1: 1212.0)], [s0(p0: [[1213.0], [1214.0], [1215.0]], p1: 1216.0)], [s0(p0: [[1217.0], [1218.0], [1219.0]], p1: 1220.0)]], p1: s0(p0: [[1221.0], [1222.0], [1223.0]], p1: 1224.0)), s1(p0: [[s0(p0: [[1225.0], [1226.0], [1227.0]], p1: 1228.0)], [s0(p0: [[1229.0], [1230.0], [1231.0]], p1: 1232.0)], [s0(p0: [[1233.0], [1234.0], [1235.0]], p1: 1236.0)]], p1: s0(p0: [[1237.0], [1238.0], [1239.0]], p1: 1240.0)), s1(p0: [[s0(p0: [[1241.0], [1242.0], [1243.0]], p1: 1244.0)], [s0(p0: [[1245.0], [1246.0], [1247.0]], p1: 1248.0)], [s0(p0: [[1249.0], [1250.0], [1251.0]], p1: 1252.0)]], p1: s0(p0: [[1253.0], [1254.0], [1255.0]], p1: 1256.0))])]])], p4: s1(p0: [[s0(p0: [[1257.0], [1258.0], [1259.0]], p1: 1260.0)], [s0(p0: [[1261.0], [1262.0], [1263.0]], p1: 1264.0)], [s0(p0: [[1265.0], [1266.0], [1267.0]], p1: 1268.0)]], p1: s0(p0: [[1269.0], [1270.0], [1271.0]], p1: 1272.0)), p5: [[s0(p0: [[1273.0], [1274.0], [1275.0]], p1: 1276.0)]])]])
    let v3: [[s10]] = [[s10(p0: s4(p0: s2(p0: [s0(p0: [[1277.0], [1278.0], [1279.0]], p1: 1280.0)], p1: [s1(p0: [[s0(p0: [[1281.0], [1282.0], [1283.0]], p1: 1284.0)], [s0(p0: [[1285.0], [1286.0], [1287.0]], p1: 1288.0)], [s0(p0: [[1289.0], [1290.0], [1291.0]], p1: 1292.0)]], p1: s0(p0: [[1293.0], [1294.0], [1295.0]], p1: 1296.0)), s1(p0: [[s0(p0: [[1297.0], [1298.0], [1299.0]], p1: 1300.0)], [s0(p0: [[1301.0], [1302.0], [1303.0]], p1: 1304.0)], [s0(p0: [[1305.0], [1306.0], [1307.0]], p1: 1308.0)]], p1: s0(p0: [[1309.0], [1310.0], [1311.0]], p1: 1312.0)), s1(p0: [[s0(p0: [[1313.0], [1314.0], [1315.0]], p1: 1316.0)], [s0(p0: [[1317.0], [1318.0], [1319.0]], p1: 1320.0)], [s0(p0: [[1321.0], [1322.0], [1323.0]], p1: 1324.0)]], p1: s0(p0: [[1325.0], [1326.0], [1327.0]], p1: 1328.0))]), p1: [s3(p0: [[s0(p0: [[1329.0], [1330.0], [1331.0]], p1: 1332.0)]], p1: [[s2(p0: [s0(p0: [[1333.0], [1334.0], [1335.0]], p1: 1336.0)], p1: [s1(p0: [[s0(p0: [[1337.0], [1338.0], [1339.0]], p1: 1340.0)], [s0(p0: [[1341.0], [1342.0], [1343.0]], p1: 1344.0)], [s0(p0: [[1345.0], [1346.0], [1347.0]], p1: 1348.0)]], p1: s0(p0: [[1349.0], [1350.0], [1351.0]], p1: 1352.0)), s1(p0: [[s0(p0: [[1353.0], [1354.0], [1355.0]], p1: 1356.0)], [s0(p0: [[1357.0], [1358.0], [1359.0]], p1: 1360.0)], [s0(p0: [[1361.0], [1362.0], [1363.0]], p1: 1364.0)]], p1: s0(p0: [[1365.0], [1366.0], [1367.0]], p1: 1368.0)), s1(p0: [[s0(p0: [[1369.0], [1370.0], [1371.0]], p1: 1372.0)], [s0(p0: [[1373.0], [1374.0], [1375.0]], p1: 1376.0)], [s0(p0: [[1377.0], [1378.0], [1379.0]], p1: 1380.0)]], p1: s0(p0: [[1381.0], [1382.0], [1383.0]], p1: 1384.0))])]]), s3(p0: [[s0(p0: [[1385.0], [1386.0], [1387.0]], p1: 1388.0)]], p1: [[s2(p0: [s0(p0: [[1389.0], [1390.0], [1391.0]], p1: 1392.0)], p1: [s1(p0: [[s0(p0: [[1393.0], [1394.0], [1395.0]], p1: 1396.0)], [s0(p0: [[1397.0], [1398.0], [1399.0]], p1: 1400.0)], [s0(p0: [[1401.0], [1402.0], [1403.0]], p1: 1404.0)]], p1: s0(p0: [[1405.0], [1406.0], [1407.0]], p1: 1408.0)), s1(p0: [[s0(p0: [[1409.0], [1410.0], [1411.0]], p1: 1412.0)], [s0(p0: [[1413.0], [1414.0], [1415.0]], p1: 1416.0)], [s0(p0: [[1417.0], [1418.0], [1419.0]], p1: 1420.0)]], p1: s0(p0: [[1421.0], [1422.0], [1423.0]], p1: 1424.0)), s1(p0: [[s0(p0: [[1425.0], [1426.0], [1427.0]], p1: 1428.0)], [s0(p0: [[1429.0], [1430.0], [1431.0]], p1: 1432.0)], [s0(p0: [[1433.0], [1434.0], [1435.0]], p1: 1436.0)]], p1: s0(p0: [[1437.0], [1438.0], [1439.0]], p1: 1440.0))])]])]), p1: [s2(p0: [s0(p0: [[1441.0], [1442.0], [1443.0]], p1: 1444.0)], p1: [s1(p0: [[s0(p0: [[1445.0], [1446.0], [1447.0]], p1: 1448.0)], [s0(p0: [[1449.0], [1450.0], [1451.0]], p1: 1452.0)], [s0(p0: [[1453.0], [1454.0], [1455.0]], p1: 1456.0)]], p1: s0(p0: [[1457.0], [1458.0], [1459.0]], p1: 1460.0)), s1(p0: [[s0(p0: [[1461.0], [1462.0], [1463.0]], p1: 1464.0)], [s0(p0: [[1465.0], [1466.0], [1467.0]], p1: 1468.0)], [s0(p0: [[1469.0], [1470.0], [1471.0]], p1: 1472.0)]], p1: s0(p0: [[1473.0], [1474.0], [1475.0]], p1: 1476.0)), s1(p0: [[s0(p0: [[1477.0], [1478.0], [1479.0]], p1: 1480.0)], [s0(p0: [[1481.0], [1482.0], [1483.0]], p1: 1484.0)], [s0(p0: [[1485.0], [1486.0], [1487.0]], p1: 1488.0)]], p1: s0(p0: [[1489.0], [1490.0], [1491.0]], p1: 1492.0))])])]]
    let v4: Double = 1493.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1493.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3, v4)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
