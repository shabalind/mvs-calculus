  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
    var p2: [[s0]]
    var p3: s0
  } in
  struct s3 {
    var p0: [[s0]]
  } in
  let f84: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p0 in
    let v2: [[Float]] = v0.p1 in
    let v6: [[Float]] = v0.p0 in
    var v3: s0 = v0 in
    v3 = v0 in
    let v1: [Float] = v2[1] in
    v3.p0 = v6 in
    var v11: [[Float]] = v6 in
    v3.p1 = v2 in
    let v13: [Float] = v2[0] in
    v11[0] = v13 in
    v3.p0 = v5 in
    let v25: [[Float]] = v3.p0 in
    let v14: [[Float]] = v3.p1 in
    let v16: [Float] = v2[2] in
    var v18: s0 = v3 in
    let v36: [Float] = v6[0] in
    v11[0] = v13 in
    var v33: [[Float]] = v25 in
    v3 = v0 in
    let v32: [Float] = v25[0] in
    let v51: [[Float]] = v3.p1 in
    v3.p0 = v11 in
    v3 = v18 in
    var v42: [[Float]] = v51 in
    var v67: s0 = v3 in
    v11[0] = v16 in
    var v35: [[Float]] = v33 in
    var v94: [[Float]] = v11 in
    let v44: [[Float]] = v18.p0 in
    v3.p1 = v2 in
    let v45: [[Float]] = v3.p1 in
    v3.p0 = v6 in
    v18.p0 = v25 in
    v18.p1 = v42 in
    v67.p0 = v11 in
    let v77: [[Float]] = v0.p1 in
    v3.p1 = v77 in
    v35[0] = v36 in
    v18.p0 = v6 in
    v3.p1 = v77 in
    v67.p1 = v45 in
    v67.p1 = v14 in
    let v92: [[Float]] = v3.p0 in
    let v52: [Float] = v35[0] in
    v3.p0 = v92 in
    var v97: [[Float]] = v14 in
    v67 = v3 in
    let v145: [[Float]] = v0.p1 in
    v94[0] = v32 in
    v18.p1 = v97 in
    let v74: [[Float]] = v18.p1 in
    v67.p1 = v74 in
    v11[0] = v52 in
    v42[0] = v1 in
    v18.p0 = v94 in
    let v85: [[Float]] = v3.p1 in
    let v79: [[Float]] = v18.p0 in
    v18.p1 = v145 in
    let v169: [[Float]] = v3.p0 in
    var v189: s0 = v67 in
    v67.p0 = v5 in
    v189.p1 = v14 in
    v3.p0 = v79 in
    let v174: [Float] = v169[0] in
    var v228: [[Float]] = v74 in
    v3.p1 = v85 in
    v11[0] = v174 in
    v18.p1 = v228 in
    v3.p0 = v44 in
    v189
  } in
  let f65: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v2: [[Float]] = v0.p1 in
    let v4: [[Float]] = v1.p0 in
    let v6: [[Float]] = v1.p0 in
    let v3: [[Float]] = v0.p1 in
    let v10: [[Float]] = v0.p1 in
    let v7: [Float] = v4[0] in
    var v9: [[Float]] = v10 in
    let v11: s0 = s0(v6, v9) in
    let v17: s0 = s0(v4, v10) in
    v9[0] = v7 in
    let v16: [[Float]] = v1.p0 in
    v9 = v3 in
    let v26: [[Float]] = v17.p0 in
    let v51: [[Float]] = v0.p0 in
    var v24: s0 = v1 in
    v24.p0 = v16 in
    let v34: [Float] = v2[0] in
    var v36: s0 = v24 in
    v9[1] = v34 in
    v36.p1 = v10 in
    var v45: s0 = v36 in
    let v39: s0 = s0(v51, v2) in
    v24.p1 = v2 in
    let v48: [[Float]] = v39.p1 in
    let v85: s0 = f84(v11) in
    let v137: [[Float]] = v85.p0 in
    v24.p0 = v137 in
    v45.p0 = v137 in
    v36.p1 = v2 in
    let v59: [[Float]] = v45.p0 in
    v36.p1 = v9 in
    v45.p1 = v48 in
    var v178: s0 = v1 in
    v178.p0 = v59 in
    v45.p1 = v3 in
    v24.p0 = v26 in
    v178.p1 = v9 in
    v178.p1 = v48 in
    let v242: s0 = f84(v178) in
    v242
  } in
  let f45: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v2: [[Float]] = v0.p0 in
    let v3: s0 = f65(v1, v1) in
    let v5: [[Float]] = v0.p1 in
    let v6: s0 = s0(v2, v5) in
    var v10: s0 = v0 in
    let v9: [[Float]] = v3.p0 in
    v10.p0 = v9 in
    let v13: s0 = f84(v1) in
    let v12: [[Float]] = v13.p1 in
    v10.p1 = v12 in
    v10.p1 = v5 in
    v10.p0 = v9 in
    let v42: [[Float]] = v6.p0 in
    v10.p1 = v5 in
    v10.p0 = v2 in
    var v29: s0 = v3 in
    v10.p0 = v42 in
    let v23: s0 = f65(v10, v29) in
    v23
  } in
  let f40: (s0, s3) -> s0 = (v0: s0, v1: s3) -> s0 {
    var v3: s0 = v0 in
    let v2: s0 = f45(v3, v0) in
    let v11: s0 = f45(v3, v2) in
    let v4: s0 = f45(v3, v2) in
    let v12: [[Float]] = v3.p0 in
    let v10: [Float] = v12[0] in
    let v16: [Float] = v12[0] in
    var v13: s0 = v3 in
    v3 = v0 in
    var v14: [[Float]] = v12 in
    var v33: [Float] = v16 in
    v14[0] = v16 in
    let v17: [[Float]] = v3.p1 in
    let v25: [Float] = v17[0] in
    v3.p0 = v14 in
    v14[0] = v16 in
    let v26: [[Float]] = v13.p1 in
    let v29: [Float] = v12[0] in
    let v20: Float = v29[0] in
    let v37: [[Float]] = v2.p0 in
    let v31: [[Float]] = v4.p1 in
    let v57: s0 = f65(v0, v3) in
    v14[0] = v25 in
    let v71: s0 = f45(v11, v13) in
    v13.p1 = v31 in
    var v123: [[Float]] = v26 in
    v123[0] = v29 in
    var v101: s0 = v71 in
    v33[0] = v20 in
    v14[0] = v10 in
    var v139: s0 = v13 in
    v139 = v13 in
    v13.p1 = v123 in
    v139.p0 = v12 in
    let v116: s0 = f45(v57, v139) in
    v14[0] = v33 in
    let v175: [[Float]] = v101.p1 in
    v101.p0 = v37 in
    v139.p1 = v175 in
    v116
  } in
  let noinline_f0: (s3, s0, s1, Float) -> Float = (v0: s3, v1: s0, v2: s1, v3: Float) -> Float {
    var v13: s3 = v0 in
    var v16: s0 = v1 in
    let v49: [[s0]] = v13.p0 in
    let v38: s0 = f40(v16, v13) in
    let v47: s0 = f65(v38, v1) in
    v13.p0 = v49 in
    let v77: [[Float]] = v47.p1 in
    let v32: [Float] = v77[0] in
    let v63: Float = v32[0] in
    v63
  } in
  fun loop(i: Int, v0: s3, v1: s0, v2: s1, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3([[s0([[0.0]], [[1.0], [2.0], [3.0]])], [s0([[4.0]], [[5.0], [6.0], [7.0]])], [s0([[8.0]], [[9.0], [10.0], [11.0]])]]) in
    let v1: s0 = s0([[12.0]], [[13.0], [14.0], [15.0]]) in
    let v2: s1 = s1([s0([[16.0]], [[17.0], [18.0], [19.0]])], s0([[20.0]], [[21.0], [22.0], [23.0]]), [[s0([[24.0]], [[25.0], [26.0], [27.0]])], [s0([[28.0]], [[29.0], [30.0], [31.0]])]], s0([[32.0]], [[33.0], [34.0], [35.0]])) in
    let v3: Float = 36.0 in
    let initialResult: Float = 36.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()