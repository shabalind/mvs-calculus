  let f103: ([[Float]], [[Float]]) -> [[Float]] = (v0: [[Float]], v1: [[Float]]) -> [[Float]] {
    let v4: [Float] = v0[0] in
    var v3: [[Float]] = v1 in
    let v2: [Float] = v3[0] in
    var v7: [Float] = v2 in
    v3[0] = v7 in
    let v6: Float = v4[0] in
    v7[0] = v6 in
    var v9: [[Float]] = v3 in
    let v20: [[[Float]]] = [v9, v9, v0, v3, v1, v9, v0] in
    v9[0] = v4 in
    let v13: Float = v4[0] in
    v7[0] = v13 in
    v3 = v1 in
    let v32: Float = v2[0] in
    var v21: [[[Float]]] = v20 in
    var v29: [[[Float]]] = v21 in
    var v41: [[[Float]]] = v29 in
    let v67: [[Float]] = v41[3] in
    v7[0] = v13 in
    v7[0] = v32 in
    v67
  } in
  let f97: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v2: [Float] = v0[0] in
    let v5: [[Float]] = f103(v0, v0) in
    var v7: [[Float]] = v0 in
    var v8: [[Float]] = v7 in
    var v1: [[Float]] = v0 in
    var v4: [[Float]] = v0 in
    v4[0] = v2 in
    let v10: [[Float]] = f103(v7, v0) in
    let v36: [Float] = v4[0] in
    let v18: [[Float]] = f103(v5, v0) in
    let v31: [[[Float]]] = [v18, v18] in
    let v15: [[Float]] = f103(v8, v10) in
    var v92: [[[Float]]] = v31 in
    v92[1] = v18 in
    let v14: [Float] = v18[0] in
    var v26: [[[Float]]] = v92 in
    let v29: [[Float]] = f103(v8, v8) in
    v8[0] = v2 in
    let v55: [[Float]] = f103(v8, v1) in
    let v35: [[Float]] = v26[0] in
    v7[0] = v14 in
    var v47: [[[Float]]] = v31 in
    let v60: [[Float]] = f103(v0, v7) in
    v4[0] = v36 in
    let v50: [[Float]] = f103(v29, v35) in
    v4[0] = v2 in
    let v65: [[Float]] = f103(v50, v60) in
    let v37: [[Float]] = f103(v50, v4) in
    let v84: [[Float]] = v47[0] in
    v1 = v65 in
    let v54: [[[Float]]] = [v55, v37, v84] in
    var v134: [[[Float]]] = v54 in
    let v155: [[Float]] = v134[2] in
    v92[1] = v15 in
    v155
  } in
  let f96: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v6: [[Float]] = f103(v0, v0) in
    let v8: [[Float]] = f103(v0, v6) in
    let v1: [[Float]] = f103(v8, v6) in
    let v4: [[Float]] = f103(v8, v1) in
    let v28: [[Float]] = f97(v1) in
    let v12: [[Float]] = f103(v0, v1) in
    let v11: [[Float]] = f103(v12, v28) in
    let v30: [[Float]] = f103(v8, v4) in
    let v38: [[Float]] = f97(v12) in
    let v46: [[Float]] = f103(v8, v38) in
    let v27: [[Float]] = f103(v30, v46) in
    let v61: [[Float]] = f103(v6, v11) in
    let v48: [[Float]] = f103(v27, v61) in
    v48
  } in
  let f85: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v6: [[Float]] = f96(v0) in
    let v3: [[Float]] = f103(v6, v6) in
    var v4: [[Float]] = v6 in
    let v2: [[[Float]]] = [v0, v0, v4, v4, v4, v3, v3] in
    var v1: [[[Float]]] = v2 in
    var v8: [[[Float]]] = v2 in
    let v17: [[Float]] = f96(v6) in
    v1 = v8 in
    var v11: [[[Float]]] = v1 in
    let v10: [[Float]] = v2[0] in
    v4 = v10 in
    let v20: [[[[Float]]]] = [v8, v8, v11, v2, v11, v8] in
    var v33: [[[Float]]] = v11 in
    var v42: [[[[Float]]]] = v20 in
    var v28: [[[[Float]]]] = v20 in
    v28[2] = v2 in
    let v32: [[[Float]]] = v42[5] in
    var v49: [[[Float]]] = v33 in
    v28[2] = v33 in
    var v98: [[[[Float]]]] = v28 in
    var v38: [[[Float]]] = v49 in
    v42[1] = v38 in
    v28 = v98 in
    let v53: [[[Float]]] = v98[3] in
    let v70: [[Float]] = v32[3] in
    v28[4] = v8 in
    v8[5] = v6 in
    let v104: [[Float]] = f103(v70, v17) in
    v42[4] = v53 in
    v104
  } in
  let noinline_f0: ([[Float]], [[Float]], [[Float]], Float) -> Float = (v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float) -> Float {
    let v7: [[Float]] = f85(v1) in
    let v10: [Float] = v7[0] in
    let v13: Float = v10[0] in
    v13
  } in
  fun loop(i: Int, v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0]] in
    let v1: [[Float]] = [[1.0]] in
    let v2: [[Float]] = [[2.0], [3.0], [4.0]] in
    let v3: Float = 5.0 in
    let initialResult: Float = 5.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()