  struct s0 {
    var p0: [Float]
    var p1: Float
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s1
  } in
  struct s5 {
    var p0: s0
    var p1: s2
  } in
  let f35: (s0, s1) -> s0 = (v0: s0, v1: s1) -> s0 {
    var v8: s1 = v1 in
    var v7: s0 = v0 in
    let v3: s0 = v1.p1 in
    v8.p1 = v7 in
    v8.p1 = v0 in
    let v2: [s1] = [v1, v8, v1, v8, v1, v1] in
    let v5: [[s0]] = v8.p0 in
    let v4: [s0] = v5[1] in
    let v6: [s0] = v5[1] in
    let v20: [Float] = v7.p0 in
    let v14: [Float] = v3.p0 in
    var v10: [[s0]] = v5 in
    v8.p0 = v10 in
    let v26: s1 = s1(v10, v7) in
    v7.p0 = v20 in
    v7.p0 = v14 in
    v10[1] = v4 in
    let v47: s0 = v26.p1 in
    v10[1] = v6 in
    var v85: s0 = v47 in
    let v48: s1 = v2[2] in
    let v46: s0 = v48.p1 in
    var v70: s0 = v46 in
    v10[1] = v6 in
    v85 = v70 in
    v85
  } in
  let f30: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v2: [Float] = v0.p0 in
    let v6: [s0] = [v4, v0, v4, v4] in
    let v7: [Float] = v0.p0 in
    let v1: s0 = v6[2] in
    v4.p0 = v7 in
    v4.p0 = v2 in
    let v5: Float = v4.p1 in
    let v3: [Float] = v4.p0 in
    v4.p1 = v5 in
    var v11: [s0] = v6 in
    v11[2] = v1 in
    let v8: Float = v2[1] in
    var v10: [s0] = v6 in
    var v9: s0 = v0 in
    let v12: Float = v0.p1 in
    let v16: s0 = v11[1] in
    let v14: s0 = v11[2] in
    let v23: [Float] = v14.p0 in
    var v20: [s0] = v6 in
    var v19: [s0] = v10 in
    v20[3] = v0 in
    let v18: Float = v23[1] in
    v4.p1 = v12 in
    v19[1] = v16 in
    v4.p1 = v18 in
    let v24: Float = v14.p1 in
    let v30: [Float] = v1.p0 in
    var v27: [Float] = v7 in
    let v34: [Float] = v4.p0 in
    v20[1] = v0 in
    let v66: [[s0]] = [v19, v6, v19, v20] in
    v4.p0 = v34 in
    let v38: [s0] = v66[3] in
    v9.p1 = v5 in
    let v54: [s0] = v66[1] in
    v9.p1 = v24 in
    var v39: s0 = v9 in
    v4.p0 = v27 in
    let v139: [s0] = v66[1] in
    let v59: [Float] = v1.p0 in
    v4.p1 = v24 in
    v11[1] = v14 in
    v20[1] = v4 in
    v11[2] = v14 in
    let v52: s0 = v54[3] in
    v4.p0 = v23 in
    v20[2] = v39 in
    v10 = v38 in
    v9.p0 = v7 in
    let v58: s0 = v139[1] in
    v9.p1 = v8 in
    let v162: s0 = v54[0] in
    v4.p0 = v30 in
    v20[3] = v1 in
    v39.p0 = v59 in
    var v293: s0 = v162 in
    let v220: Float = v58.p1 in
    v9.p0 = v3 in
    v39.p1 = v220 in
    v11[2] = v52 in
    v20[0] = v52 in
    v293
  } in
  let f26: (s2) -> s2 = (v0: s2) -> s2 {
    var v1: s2 = v0 in
    let v4: s1 = v0.p1 in
    v1.p1 = v4 in
    v1.p1 = v4 in
    var v5: s2 = v1 in
    var v2: s2 = v0 in
    v5.p1 = v4 in
    let v3: [[s0]] = v4.p0 in
    var v9: s2 = v0 in
    v1.p1 = v4 in
    let v10: s1 = v2.p1 in
    var v12: s1 = v4 in
    let v11: [s0] = v3[0] in
    v1.p1 = v10 in
    v5.p1 = v10 in
    let v22: s0 = v11[0] in
    var v14: s2 = v5 in
    let v28: [s1] = v9.p0 in
    v1.p0 = v28 in
    let v34: [s2] = [v2, v14, v9, v0, v2, v5] in
    v12.p1 = v22 in
    v5.p1 = v12 in
    let v18: s1 = v2.p1 in
    var v36: [s1] = v28 in
    var v40: s1 = v18 in
    v5.p1 = v40 in
    let v49: s2 = v34[4] in
    let v39: [s1] = v2.p0 in
    let v33: [s1] = v49.p0 in
    var v69: [s2] = v34 in
    v5.p0 = v36 in
    v14.p0 = v39 in
    let v86: s2 = v69[5] in
    var v50: [s1] = v33 in
    var v101: s2 = v86 in
    let v84: s1 = v28[0] in
    let v52: [[s0]] = v10.p0 in
    v9.p0 = v36 in
    v5.p1 = v84 in
    v12.p0 = v52 in
    v14.p0 = v50 in
    v9.p0 = v36 in
    v14.p0 = v36 in
    v101
  } in
  let f16: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: [[s0]] = v0.p0 in
    let v8: [[s0]] = v0.p0 in
    var v3: [[s0]] = v2 in
    let v9: s0 = v0.p1 in
    let v7: s0 = f35(v9, v0) in
    var v4: s1 = v0 in
    let v11: s0 = f30(v9) in
    var v10: s0 = v9 in
    let v6: Float = v7.p1 in
    let v5: Float = v6 + v6 in
    let v1: s0 = v0.p1 in
    let v17: [Float] = v11.p0 in
    var v12: Float = v5 in
    let v21: [[s0]] = v0.p0 in
    let v35: Float = v6 * v12 in
    let v19: s0 = s0(v17, v35) in
    v10.p1 = v35 in
    v10.p0 = v17 in
    v12 = v5 in
    let v37: [s0] = v2[1] in
    let v15: [s0] = v8[0] in
    v3[0] = v15 in
    let v48: [s0] = v21[1] in
    let v29: [[s0]] = v4.p0 in
    let v24: Float = v17[1] in
    let v31: [s0] = v3[1] in
    let v60: Float = v17[0] in
    let v52: s0 = f30(v9) in
    let v54: s0 = v37[0] in
    var v22: [s0] = v37 in
    v3 = v8 in
    var v45: Float = v60 in
    let v65: [Float] = v54.p0 in
    let v66: s0 = v22[0] in
    let v46: [s0] = v3[1] in
    v3[1] = v22 in
    let v121: s0 = f35(v1, v4) in
    v4.p0 = v29 in
    var v71: [s0] = v48 in
    let v51: [[s0]] = [v46, v22, v31, v71, v31, v71] in
    v4.p0 = v8 in
    let v74: s1 = s1(v21, v10) in
    let v41: s0 = f35(v9, v74) in
    let v59: [s0] = v51[3] in
    v10.p0 = v65 in
    let v80: s0 = f30(v52) in
    v4.p1 = v52 in
    let v73: [s1] = [v0] in
    v4.p1 = v121 in
    v4.p1 = v19 in
    v10.p1 = v60 in
    let v118: [Float] = v19.p0 in
    var v95: s1 = v74 in
    v3[1] = v59 in
    v71[0] = v11 in
    let v120: s0 = f35(v41, v4) in
    v71[0] = v120 in
    v10.p0 = v118 in
    v4.p0 = v2 in
    v22[0] = v66 in
    v45 = v60 in
    v95.p0 = v3 in
    v71[0] = v121 in
    var v215: [s1] = v73 in
    let v235: s1 = v215[0] in
    var v150: s0 = v80 in
    v12 = v45 in
    v10.p1 = v24 in
    v95.p1 = v120 in
    v71[0] = v150 in
    v215[0] = v95 in
    v235
  } in
  let noinline_f0: ([s5], Float) -> Float = (v0: [s5], v1: Float) -> Float {
    let v7: s5 = v0[0] in
    let v5: Float = v1 * v1 in
    let v6: s0 = v7.p0 in
    let v14: s0 = f30(v6) in
    let v3: s2 = v7.p1 in
    var v9: s2 = v3 in
    let v11: [s1] = v3.p0 in
    var v10: s2 = v9 in
    v9 = v10 in
    let v25: s2 = f26(v3) in
    let v59: s2 = f26(v10) in
    v10.p0 = v11 in
    let v19: s1 = v59.p1 in
    let v23: Float = v14.p1 in
    v10.p0 = v11 in
    let v35: s0 = v19.p1 in
    let v62: s1 = v11[1] in
    v10 = v59 in
    let v28: s1 = v11[2] in
    let v31: [Float] = v35.p0 in
    v9.p1 = v62 in
    v9.p0 = v11 in
    let v43: s1 = f16(v62) in
    var v33: [s1] = v11 in
    v33[2] = v43 in
    v33[1] = v19 in
    v33[2] = v28 in
    v10.p0 = v33 in
    var v64: [Float] = v31 in
    v64[1] = v5 in
    v10.p1 = v28 in
    v33[2] = v28 in
    v33[2] = v62 in
    let v116: s1 = v25.p1 in
    let v274: Float = v64[0] in
    v64[1] = v23 in
    v33[1] = v116 in
    v274
  } in
  fun loop(i: Int, v0: [s5], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5(s0([0.0, 1.0], 2.0), s2([s1([[s0([3.0, 4.0], 5.0)], [s0([6.0, 7.0], 8.0)]], s0([9.0, 10.0], 11.0)), s1([[s0([12.0, 13.0], 14.0)], [s0([15.0, 16.0], 17.0)]], s0([18.0, 19.0], 20.0)), s1([[s0([21.0, 22.0], 23.0)], [s0([24.0, 25.0], 26.0)]], s0([27.0, 28.0], 29.0))], s1([[s0([30.0, 31.0], 32.0)], [s0([33.0, 34.0], 35.0)]], s0([36.0, 37.0], 38.0))))] in
    let v1: Float = 39.0 in
    let initialResult: Float = 39.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()