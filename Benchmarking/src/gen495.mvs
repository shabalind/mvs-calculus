  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  let f27: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v3: Float = v7 in
    var v4: Float = v3 in
    let v6: [Float] = [v0, v3] in
    let v2: Float = v6[1] in
    let v12: Float = v6[0] in
    let v15: Float = v6[1] in
    v4 = v15 in
    let v8: [[Float]] = [v6] in
    v4 = v12 in
    let v11: [Float] = v8[0] in
    let v13: [Float] = v8[0] in
    let v34: Float = v13[1] in
    let v48: [Float] = [v4] in
    var v26: [Float] = v48 in
    v26[0] = v15 in
    let v35: Float = v11[0] in
    var v30: [Float] = v48 in
    var v72: [Float] = v30 in
    v72[0] = v35 in
    var v100: [Float] = v72 in
    v30[0] = v12 in
    v100[0] = v34 in
    v100[0] = v2 in
    let v64: [[Float]] = [v26, v100] in
    let v62: [Float] = v64[1] in
    let v142: Float = v62[0] in
    v142
  } in
  let f7: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v6: [s0] = [v1, v1, v1] in
    let v7: [[Float]] = v1.p0 in
    let v2: [[Float]] = v1.p1 in
    let v4: s0 = v6[1] in
    let v19: [[Float]] = v4.p1 in
    var v21: [[Float]] = v19 in
    let v12: [Float] = v2[2] in
    v21[1] = v12 in
    let v45: s0 = s0(v7, v21) in
    v21[0] = v12 in
    let v41: [Float] = v7[0] in
    v21[1] = v41 in
    v45
  } in
  let noinline_f0: (s2, s2, Float) -> Float = (v0: s2, v1: s2, v2: Float) -> Float {
    let v7: s0 = v0.p1 in
    var v8: Float = v2 in
    let v5: s0 = f7(v7, v7) in
    let v10: Float = f27(v2) in
    let v16: [[Float]] = v5.p1 in
    let v12: [Float] = v16[2] in
    v8 = v10 in
    let v144: Float = f27(v2) in
    let v43: Float = f27(v8) in
    let v69: Float = f27(v144) in
    let v88: Float = v12[0] in
    let v74: Float = v43 * v69 in
    let v145: Float = v88 - v74 in
    v145
  } in
  fun loop(i: Int, v0: s2, v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s0([[0.0]], [[1.0], [2.0], [3.0]]), s0([[4.0]], [[5.0], [6.0], [7.0]])], s0([[8.0]], [[9.0], [10.0], [11.0]])) in
    let v1: s2 = s2([s0([[12.0]], [[13.0], [14.0], [15.0]]), s0([[16.0]], [[17.0], [18.0], [19.0]])], s0([[20.0]], [[21.0], [22.0], [23.0]])) in
    let v2: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()