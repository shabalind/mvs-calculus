  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s4 {
    var p0: [s0]
    var p1: [s1]
  } in
  struct s5 {
    var p0: s4
    var p1: s1
  } in
  let f57: (Float) -> Float = (v0: Float) -> Float {
    let v6: [Float] = [v0, v0, v0, v0, v0, v0] in
    var v1: [Float] = v6 in
    let v9: Float = v6[4] in
    v1[4] = v9 in
    let v4: Float = v1[5] in
    var v2: Float = v4 in
    v1[3] = v2 in
    var v3: Float = v0 in
    v1[4] = v3 in
    var v13: [Float] = v6 in
    v13[2] = v2 in
    var v5: [Float] = v13 in
    v5[5] = v4 in
    let v11: Float = v6[1] in
    let v7: Float = v6[3] in
    let v16: Float = v6[5] in
    var v25: Float = v9 in
    var v23: [Float] = v6 in
    v1[5] = v25 in
    v23[5] = v7 in
    var v21: Float = v16 in
    var v27: [Float] = v1 in
    var v17: [Float] = v5 in
    let v19: Float = v13[0] in
    v5[1] = v3 in
    var v37: [Float] = v27 in
    let v22: Float = v37[4] in
    let v46: Float = v17[4] in
    let v50: Float = v6[5] in
    var v43: Float = v50 in
    v13[4] = v22 in
    var v26: Float = v21 in
    var v24: [Float] = v23 in
    var v29: [Float] = v5 in
    let v52: Float = v13[2] in
    v5[2] = v43 in
    let v70: Float = v24[3] in
    var v41: Float = v21 in
    var v55: Float = v22 in
    v24 = v27 in
    var v61: Float = v55 in
    v37[1] = v21 in
    let v33: Float = v29[1] in
    var v59: [Float] = v29 in
    var v42: [Float] = v1 in
    v42[3] = v0 in
    v37[2] = v4 in
    let v32: [[Float]] = [v42, v17, v27] in
    var v77: [[Float]] = v32 in
    v5[4] = v21 in
    let v68: [[[Float]]] = [v77, v32, v77, v77, v77, v32] in
    v23[1] = v16 in
    let v80: [Float] = v77[1] in
    v13[3] = v11 in
    var v86: [Float] = v42 in
    let v89: [[Float]] = v68[0] in
    v77 = v89 in
    v29[2] = v3 in
    v29[0] = v26 in
    v5[0] = v0 in
    v24[4] = v61 in
    v5[4] = v19 in
    v17[5] = v50 in
    let v62: Float = v80[3] in
    var v157: [Float] = v86 in
    v27[1] = v46 in
    v17[5] = v50 in
    v23 = v59 in
    v42[3] = v70 in
    let v159: [Float] = [v41, v50] in
    let v91: Float = v159[0] in
    v157 = v42 in
    var v174: [Float] = v159 in
    let v127: Float = v52 * v33 in
    v174[0] = v11 in
    v23[0] = v91 in
    v17[4] = v127 in
    v1[3] = v46 in
    let v253: Float = v174[1] in
    v13[1] = v21 in
    v13[5] = v253 in
    v77[0] = v157 in
    v62
  } in
  let noinline_f0: ([s5], Float) -> Float = (v0: [s5], v1: Float) -> Float {
    let v8: Float = f57(v1) in
    let v64: Float = f57(v1) in
    let v59: Float = v8 - v64 in
    v59
  } in
  fun loop(i: Int, v0: [s5], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5(s4([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]])], [s1([[s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], [s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]], [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])]), s1([[s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])], [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])], [s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]])]], [s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]]), s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])]), s1([[s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])], [s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]])], [s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]])]], [s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]]), s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]]), s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]])])]), s1([[s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]])], [s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]])], [s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]])]], [s0([[132.0], [133.0], [134.0]], [[135.0], [136.0], [137.0]]), s0([[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]]), s0([[144.0], [145.0], [146.0]], [[147.0], [148.0], [149.0]])]))] in
    let v1: Float = 150.0 in
    let initialResult: Float = 150.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()