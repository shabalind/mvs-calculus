  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
    var p2: [[Double]]
    var p3: [[Double]]
    var p4: [[Double]]
  }
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  }
  struct s2 {
    var p0: [[s1]]
    var p1: [[s0]]
  }
  struct s3 {
    var p0: s0
    var p1: s1
  }
  struct s7 {
    var p0: [s2]
    var p1: [s2]
  }
  struct s9 {
    var p0: [s3]
    var p1: [s2]
  }
  @inline(never)
  func f0(_ v0: s7, _ v1: [[s9]], _ v2: [s9], _ v3: Double) -> Double {
    var v9: Double = v3
    let v12: [s2] = v0.p0
    let v26: s2 = v12[1]
    let v15: [[s0]] = v26.p1
    let v50: [s0] = v15[0]
    let v70: s0 = v50[0]
    let v56: [[Double]] = v70.p3
    var v67: [[Double]] = v56
    let v132: [Double] = v67[0]
    let v63: Double = v132[0]
    let v219: Double = v63 - v9
    return v219
  }
  func benchmark() {
    let v0: s7 = s7(p0: [s2(p0: [[s1(p0: s0(p0: [[0.0], [1.0], [2.0]], p1: [[3.0], [4.0]], p2: [[5.0]], p3: [[6.0], [7.0]], p4: [[8.0]]), p1: [[s0(p0: [[9.0], [10.0], [11.0]], p1: [[12.0], [13.0]], p2: [[14.0]], p3: [[15.0], [16.0]], p4: [[17.0]])], [s0(p0: [[18.0], [19.0], [20.0]], p1: [[21.0], [22.0]], p2: [[23.0]], p3: [[24.0], [25.0]], p4: [[26.0]])], [s0(p0: [[27.0], [28.0], [29.0]], p1: [[30.0], [31.0]], p2: [[32.0]], p3: [[33.0], [34.0]], p4: [[35.0]])]])]], p1: [[s0(p0: [[36.0], [37.0], [38.0]], p1: [[39.0], [40.0]], p2: [[41.0]], p3: [[42.0], [43.0]], p4: [[44.0]])], [s0(p0: [[45.0], [46.0], [47.0]], p1: [[48.0], [49.0]], p2: [[50.0]], p3: [[51.0], [52.0]], p4: [[53.0]])], [s0(p0: [[54.0], [55.0], [56.0]], p1: [[57.0], [58.0]], p2: [[59.0]], p3: [[60.0], [61.0]], p4: [[62.0]])]]), s2(p0: [[s1(p0: s0(p0: [[63.0], [64.0], [65.0]], p1: [[66.0], [67.0]], p2: [[68.0]], p3: [[69.0], [70.0]], p4: [[71.0]]), p1: [[s0(p0: [[72.0], [73.0], [74.0]], p1: [[75.0], [76.0]], p2: [[77.0]], p3: [[78.0], [79.0]], p4: [[80.0]])], [s0(p0: [[81.0], [82.0], [83.0]], p1: [[84.0], [85.0]], p2: [[86.0]], p3: [[87.0], [88.0]], p4: [[89.0]])], [s0(p0: [[90.0], [91.0], [92.0]], p1: [[93.0], [94.0]], p2: [[95.0]], p3: [[96.0], [97.0]], p4: [[98.0]])]])]], p1: [[s0(p0: [[99.0], [100.0], [101.0]], p1: [[102.0], [103.0]], p2: [[104.0]], p3: [[105.0], [106.0]], p4: [[107.0]])], [s0(p0: [[108.0], [109.0], [110.0]], p1: [[111.0], [112.0]], p2: [[113.0]], p3: [[114.0], [115.0]], p4: [[116.0]])], [s0(p0: [[117.0], [118.0], [119.0]], p1: [[120.0], [121.0]], p2: [[122.0]], p3: [[123.0], [124.0]], p4: [[125.0]])]])], p1: [s2(p0: [[s1(p0: s0(p0: [[126.0], [127.0], [128.0]], p1: [[129.0], [130.0]], p2: [[131.0]], p3: [[132.0], [133.0]], p4: [[134.0]]), p1: [[s0(p0: [[135.0], [136.0], [137.0]], p1: [[138.0], [139.0]], p2: [[140.0]], p3: [[141.0], [142.0]], p4: [[143.0]])], [s0(p0: [[144.0], [145.0], [146.0]], p1: [[147.0], [148.0]], p2: [[149.0]], p3: [[150.0], [151.0]], p4: [[152.0]])], [s0(p0: [[153.0], [154.0], [155.0]], p1: [[156.0], [157.0]], p2: [[158.0]], p3: [[159.0], [160.0]], p4: [[161.0]])]])]], p1: [[s0(p0: [[162.0], [163.0], [164.0]], p1: [[165.0], [166.0]], p2: [[167.0]], p3: [[168.0], [169.0]], p4: [[170.0]])], [s0(p0: [[171.0], [172.0], [173.0]], p1: [[174.0], [175.0]], p2: [[176.0]], p3: [[177.0], [178.0]], p4: [[179.0]])], [s0(p0: [[180.0], [181.0], [182.0]], p1: [[183.0], [184.0]], p2: [[185.0]], p3: [[186.0], [187.0]], p4: [[188.0]])]]), s2(p0: [[s1(p0: s0(p0: [[189.0], [190.0], [191.0]], p1: [[192.0], [193.0]], p2: [[194.0]], p3: [[195.0], [196.0]], p4: [[197.0]]), p1: [[s0(p0: [[198.0], [199.0], [200.0]], p1: [[201.0], [202.0]], p2: [[203.0]], p3: [[204.0], [205.0]], p4: [[206.0]])], [s0(p0: [[207.0], [208.0], [209.0]], p1: [[210.0], [211.0]], p2: [[212.0]], p3: [[213.0], [214.0]], p4: [[215.0]])], [s0(p0: [[216.0], [217.0], [218.0]], p1: [[219.0], [220.0]], p2: [[221.0]], p3: [[222.0], [223.0]], p4: [[224.0]])]])]], p1: [[s0(p0: [[225.0], [226.0], [227.0]], p1: [[228.0], [229.0]], p2: [[230.0]], p3: [[231.0], [232.0]], p4: [[233.0]])], [s0(p0: [[234.0], [235.0], [236.0]], p1: [[237.0], [238.0]], p2: [[239.0]], p3: [[240.0], [241.0]], p4: [[242.0]])], [s0(p0: [[243.0], [244.0], [245.0]], p1: [[246.0], [247.0]], p2: [[248.0]], p3: [[249.0], [250.0]], p4: [[251.0]])]])])
    let v1: [[s9]] = [[s9(p0: [s3(p0: s0(p0: [[252.0], [253.0], [254.0]], p1: [[255.0], [256.0]], p2: [[257.0]], p3: [[258.0], [259.0]], p4: [[260.0]]), p1: s1(p0: s0(p0: [[261.0], [262.0], [263.0]], p1: [[264.0], [265.0]], p2: [[266.0]], p3: [[267.0], [268.0]], p4: [[269.0]]), p1: [[s0(p0: [[270.0], [271.0], [272.0]], p1: [[273.0], [274.0]], p2: [[275.0]], p3: [[276.0], [277.0]], p4: [[278.0]])], [s0(p0: [[279.0], [280.0], [281.0]], p1: [[282.0], [283.0]], p2: [[284.0]], p3: [[285.0], [286.0]], p4: [[287.0]])], [s0(p0: [[288.0], [289.0], [290.0]], p1: [[291.0], [292.0]], p2: [[293.0]], p3: [[294.0], [295.0]], p4: [[296.0]])]])), s3(p0: s0(p0: [[297.0], [298.0], [299.0]], p1: [[300.0], [301.0]], p2: [[302.0]], p3: [[303.0], [304.0]], p4: [[305.0]]), p1: s1(p0: s0(p0: [[306.0], [307.0], [308.0]], p1: [[309.0], [310.0]], p2: [[311.0]], p3: [[312.0], [313.0]], p4: [[314.0]]), p1: [[s0(p0: [[315.0], [316.0], [317.0]], p1: [[318.0], [319.0]], p2: [[320.0]], p3: [[321.0], [322.0]], p4: [[323.0]])], [s0(p0: [[324.0], [325.0], [326.0]], p1: [[327.0], [328.0]], p2: [[329.0]], p3: [[330.0], [331.0]], p4: [[332.0]])], [s0(p0: [[333.0], [334.0], [335.0]], p1: [[336.0], [337.0]], p2: [[338.0]], p3: [[339.0], [340.0]], p4: [[341.0]])]]))], p1: [s2(p0: [[s1(p0: s0(p0: [[342.0], [343.0], [344.0]], p1: [[345.0], [346.0]], p2: [[347.0]], p3: [[348.0], [349.0]], p4: [[350.0]]), p1: [[s0(p0: [[351.0], [352.0], [353.0]], p1: [[354.0], [355.0]], p2: [[356.0]], p3: [[357.0], [358.0]], p4: [[359.0]])], [s0(p0: [[360.0], [361.0], [362.0]], p1: [[363.0], [364.0]], p2: [[365.0]], p3: [[366.0], [367.0]], p4: [[368.0]])], [s0(p0: [[369.0], [370.0], [371.0]], p1: [[372.0], [373.0]], p2: [[374.0]], p3: [[375.0], [376.0]], p4: [[377.0]])]])]], p1: [[s0(p0: [[378.0], [379.0], [380.0]], p1: [[381.0], [382.0]], p2: [[383.0]], p3: [[384.0], [385.0]], p4: [[386.0]])], [s0(p0: [[387.0], [388.0], [389.0]], p1: [[390.0], [391.0]], p2: [[392.0]], p3: [[393.0], [394.0]], p4: [[395.0]])], [s0(p0: [[396.0], [397.0], [398.0]], p1: [[399.0], [400.0]], p2: [[401.0]], p3: [[402.0], [403.0]], p4: [[404.0]])]]), s2(p0: [[s1(p0: s0(p0: [[405.0], [406.0], [407.0]], p1: [[408.0], [409.0]], p2: [[410.0]], p3: [[411.0], [412.0]], p4: [[413.0]]), p1: [[s0(p0: [[414.0], [415.0], [416.0]], p1: [[417.0], [418.0]], p2: [[419.0]], p3: [[420.0], [421.0]], p4: [[422.0]])], [s0(p0: [[423.0], [424.0], [425.0]], p1: [[426.0], [427.0]], p2: [[428.0]], p3: [[429.0], [430.0]], p4: [[431.0]])], [s0(p0: [[432.0], [433.0], [434.0]], p1: [[435.0], [436.0]], p2: [[437.0]], p3: [[438.0], [439.0]], p4: [[440.0]])]])]], p1: [[s0(p0: [[441.0], [442.0], [443.0]], p1: [[444.0], [445.0]], p2: [[446.0]], p3: [[447.0], [448.0]], p4: [[449.0]])], [s0(p0: [[450.0], [451.0], [452.0]], p1: [[453.0], [454.0]], p2: [[455.0]], p3: [[456.0], [457.0]], p4: [[458.0]])], [s0(p0: [[459.0], [460.0], [461.0]], p1: [[462.0], [463.0]], p2: [[464.0]], p3: [[465.0], [466.0]], p4: [[467.0]])]]), s2(p0: [[s1(p0: s0(p0: [[468.0], [469.0], [470.0]], p1: [[471.0], [472.0]], p2: [[473.0]], p3: [[474.0], [475.0]], p4: [[476.0]]), p1: [[s0(p0: [[477.0], [478.0], [479.0]], p1: [[480.0], [481.0]], p2: [[482.0]], p3: [[483.0], [484.0]], p4: [[485.0]])], [s0(p0: [[486.0], [487.0], [488.0]], p1: [[489.0], [490.0]], p2: [[491.0]], p3: [[492.0], [493.0]], p4: [[494.0]])], [s0(p0: [[495.0], [496.0], [497.0]], p1: [[498.0], [499.0]], p2: [[500.0]], p3: [[501.0], [502.0]], p4: [[503.0]])]])]], p1: [[s0(p0: [[504.0], [505.0], [506.0]], p1: [[507.0], [508.0]], p2: [[509.0]], p3: [[510.0], [511.0]], p4: [[512.0]])], [s0(p0: [[513.0], [514.0], [515.0]], p1: [[516.0], [517.0]], p2: [[518.0]], p3: [[519.0], [520.0]], p4: [[521.0]])], [s0(p0: [[522.0], [523.0], [524.0]], p1: [[525.0], [526.0]], p2: [[527.0]], p3: [[528.0], [529.0]], p4: [[530.0]])]])])], [s9(p0: [s3(p0: s0(p0: [[531.0], [532.0], [533.0]], p1: [[534.0], [535.0]], p2: [[536.0]], p3: [[537.0], [538.0]], p4: [[539.0]]), p1: s1(p0: s0(p0: [[540.0], [541.0], [542.0]], p1: [[543.0], [544.0]], p2: [[545.0]], p3: [[546.0], [547.0]], p4: [[548.0]]), p1: [[s0(p0: [[549.0], [550.0], [551.0]], p1: [[552.0], [553.0]], p2: [[554.0]], p3: [[555.0], [556.0]], p4: [[557.0]])], [s0(p0: [[558.0], [559.0], [560.0]], p1: [[561.0], [562.0]], p2: [[563.0]], p3: [[564.0], [565.0]], p4: [[566.0]])], [s0(p0: [[567.0], [568.0], [569.0]], p1: [[570.0], [571.0]], p2: [[572.0]], p3: [[573.0], [574.0]], p4: [[575.0]])]])), s3(p0: s0(p0: [[576.0], [577.0], [578.0]], p1: [[579.0], [580.0]], p2: [[581.0]], p3: [[582.0], [583.0]], p4: [[584.0]]), p1: s1(p0: s0(p0: [[585.0], [586.0], [587.0]], p1: [[588.0], [589.0]], p2: [[590.0]], p3: [[591.0], [592.0]], p4: [[593.0]]), p1: [[s0(p0: [[594.0], [595.0], [596.0]], p1: [[597.0], [598.0]], p2: [[599.0]], p3: [[600.0], [601.0]], p4: [[602.0]])], [s0(p0: [[603.0], [604.0], [605.0]], p1: [[606.0], [607.0]], p2: [[608.0]], p3: [[609.0], [610.0]], p4: [[611.0]])], [s0(p0: [[612.0], [613.0], [614.0]], p1: [[615.0], [616.0]], p2: [[617.0]], p3: [[618.0], [619.0]], p4: [[620.0]])]]))], p1: [s2(p0: [[s1(p0: s0(p0: [[621.0], [622.0], [623.0]], p1: [[624.0], [625.0]], p2: [[626.0]], p3: [[627.0], [628.0]], p4: [[629.0]]), p1: [[s0(p0: [[630.0], [631.0], [632.0]], p1: [[633.0], [634.0]], p2: [[635.0]], p3: [[636.0], [637.0]], p4: [[638.0]])], [s0(p0: [[639.0], [640.0], [641.0]], p1: [[642.0], [643.0]], p2: [[644.0]], p3: [[645.0], [646.0]], p4: [[647.0]])], [s0(p0: [[648.0], [649.0], [650.0]], p1: [[651.0], [652.0]], p2: [[653.0]], p3: [[654.0], [655.0]], p4: [[656.0]])]])]], p1: [[s0(p0: [[657.0], [658.0], [659.0]], p1: [[660.0], [661.0]], p2: [[662.0]], p3: [[663.0], [664.0]], p4: [[665.0]])], [s0(p0: [[666.0], [667.0], [668.0]], p1: [[669.0], [670.0]], p2: [[671.0]], p3: [[672.0], [673.0]], p4: [[674.0]])], [s0(p0: [[675.0], [676.0], [677.0]], p1: [[678.0], [679.0]], p2: [[680.0]], p3: [[681.0], [682.0]], p4: [[683.0]])]]), s2(p0: [[s1(p0: s0(p0: [[684.0], [685.0], [686.0]], p1: [[687.0], [688.0]], p2: [[689.0]], p3: [[690.0], [691.0]], p4: [[692.0]]), p1: [[s0(p0: [[693.0], [694.0], [695.0]], p1: [[696.0], [697.0]], p2: [[698.0]], p3: [[699.0], [700.0]], p4: [[701.0]])], [s0(p0: [[702.0], [703.0], [704.0]], p1: [[705.0], [706.0]], p2: [[707.0]], p3: [[708.0], [709.0]], p4: [[710.0]])], [s0(p0: [[711.0], [712.0], [713.0]], p1: [[714.0], [715.0]], p2: [[716.0]], p3: [[717.0], [718.0]], p4: [[719.0]])]])]], p1: [[s0(p0: [[720.0], [721.0], [722.0]], p1: [[723.0], [724.0]], p2: [[725.0]], p3: [[726.0], [727.0]], p4: [[728.0]])], [s0(p0: [[729.0], [730.0], [731.0]], p1: [[732.0], [733.0]], p2: [[734.0]], p3: [[735.0], [736.0]], p4: [[737.0]])], [s0(p0: [[738.0], [739.0], [740.0]], p1: [[741.0], [742.0]], p2: [[743.0]], p3: [[744.0], [745.0]], p4: [[746.0]])]]), s2(p0: [[s1(p0: s0(p0: [[747.0], [748.0], [749.0]], p1: [[750.0], [751.0]], p2: [[752.0]], p3: [[753.0], [754.0]], p4: [[755.0]]), p1: [[s0(p0: [[756.0], [757.0], [758.0]], p1: [[759.0], [760.0]], p2: [[761.0]], p3: [[762.0], [763.0]], p4: [[764.0]])], [s0(p0: [[765.0], [766.0], [767.0]], p1: [[768.0], [769.0]], p2: [[770.0]], p3: [[771.0], [772.0]], p4: [[773.0]])], [s0(p0: [[774.0], [775.0], [776.0]], p1: [[777.0], [778.0]], p2: [[779.0]], p3: [[780.0], [781.0]], p4: [[782.0]])]])]], p1: [[s0(p0: [[783.0], [784.0], [785.0]], p1: [[786.0], [787.0]], p2: [[788.0]], p3: [[789.0], [790.0]], p4: [[791.0]])], [s0(p0: [[792.0], [793.0], [794.0]], p1: [[795.0], [796.0]], p2: [[797.0]], p3: [[798.0], [799.0]], p4: [[800.0]])], [s0(p0: [[801.0], [802.0], [803.0]], p1: [[804.0], [805.0]], p2: [[806.0]], p3: [[807.0], [808.0]], p4: [[809.0]])]])])], [s9(p0: [s3(p0: s0(p0: [[810.0], [811.0], [812.0]], p1: [[813.0], [814.0]], p2: [[815.0]], p3: [[816.0], [817.0]], p4: [[818.0]]), p1: s1(p0: s0(p0: [[819.0], [820.0], [821.0]], p1: [[822.0], [823.0]], p2: [[824.0]], p3: [[825.0], [826.0]], p4: [[827.0]]), p1: [[s0(p0: [[828.0], [829.0], [830.0]], p1: [[831.0], [832.0]], p2: [[833.0]], p3: [[834.0], [835.0]], p4: [[836.0]])], [s0(p0: [[837.0], [838.0], [839.0]], p1: [[840.0], [841.0]], p2: [[842.0]], p3: [[843.0], [844.0]], p4: [[845.0]])], [s0(p0: [[846.0], [847.0], [848.0]], p1: [[849.0], [850.0]], p2: [[851.0]], p3: [[852.0], [853.0]], p4: [[854.0]])]])), s3(p0: s0(p0: [[855.0], [856.0], [857.0]], p1: [[858.0], [859.0]], p2: [[860.0]], p3: [[861.0], [862.0]], p4: [[863.0]]), p1: s1(p0: s0(p0: [[864.0], [865.0], [866.0]], p1: [[867.0], [868.0]], p2: [[869.0]], p3: [[870.0], [871.0]], p4: [[872.0]]), p1: [[s0(p0: [[873.0], [874.0], [875.0]], p1: [[876.0], [877.0]], p2: [[878.0]], p3: [[879.0], [880.0]], p4: [[881.0]])], [s0(p0: [[882.0], [883.0], [884.0]], p1: [[885.0], [886.0]], p2: [[887.0]], p3: [[888.0], [889.0]], p4: [[890.0]])], [s0(p0: [[891.0], [892.0], [893.0]], p1: [[894.0], [895.0]], p2: [[896.0]], p3: [[897.0], [898.0]], p4: [[899.0]])]]))], p1: [s2(p0: [[s1(p0: s0(p0: [[900.0], [901.0], [902.0]], p1: [[903.0], [904.0]], p2: [[905.0]], p3: [[906.0], [907.0]], p4: [[908.0]]), p1: [[s0(p0: [[909.0], [910.0], [911.0]], p1: [[912.0], [913.0]], p2: [[914.0]], p3: [[915.0], [916.0]], p4: [[917.0]])], [s0(p0: [[918.0], [919.0], [920.0]], p1: [[921.0], [922.0]], p2: [[923.0]], p3: [[924.0], [925.0]], p4: [[926.0]])], [s0(p0: [[927.0], [928.0], [929.0]], p1: [[930.0], [931.0]], p2: [[932.0]], p3: [[933.0], [934.0]], p4: [[935.0]])]])]], p1: [[s0(p0: [[936.0], [937.0], [938.0]], p1: [[939.0], [940.0]], p2: [[941.0]], p3: [[942.0], [943.0]], p4: [[944.0]])], [s0(p0: [[945.0], [946.0], [947.0]], p1: [[948.0], [949.0]], p2: [[950.0]], p3: [[951.0], [952.0]], p4: [[953.0]])], [s0(p0: [[954.0], [955.0], [956.0]], p1: [[957.0], [958.0]], p2: [[959.0]], p3: [[960.0], [961.0]], p4: [[962.0]])]]), s2(p0: [[s1(p0: s0(p0: [[963.0], [964.0], [965.0]], p1: [[966.0], [967.0]], p2: [[968.0]], p3: [[969.0], [970.0]], p4: [[971.0]]), p1: [[s0(p0: [[972.0], [973.0], [974.0]], p1: [[975.0], [976.0]], p2: [[977.0]], p3: [[978.0], [979.0]], p4: [[980.0]])], [s0(p0: [[981.0], [982.0], [983.0]], p1: [[984.0], [985.0]], p2: [[986.0]], p3: [[987.0], [988.0]], p4: [[989.0]])], [s0(p0: [[990.0], [991.0], [992.0]], p1: [[993.0], [994.0]], p2: [[995.0]], p3: [[996.0], [997.0]], p4: [[998.0]])]])]], p1: [[s0(p0: [[999.0], [1000.0], [1001.0]], p1: [[1002.0], [1003.0]], p2: [[1004.0]], p3: [[1005.0], [1006.0]], p4: [[1007.0]])], [s0(p0: [[1008.0], [1009.0], [1010.0]], p1: [[1011.0], [1012.0]], p2: [[1013.0]], p3: [[1014.0], [1015.0]], p4: [[1016.0]])], [s0(p0: [[1017.0], [1018.0], [1019.0]], p1: [[1020.0], [1021.0]], p2: [[1022.0]], p3: [[1023.0], [1024.0]], p4: [[1025.0]])]]), s2(p0: [[s1(p0: s0(p0: [[1026.0], [1027.0], [1028.0]], p1: [[1029.0], [1030.0]], p2: [[1031.0]], p3: [[1032.0], [1033.0]], p4: [[1034.0]]), p1: [[s0(p0: [[1035.0], [1036.0], [1037.0]], p1: [[1038.0], [1039.0]], p2: [[1040.0]], p3: [[1041.0], [1042.0]], p4: [[1043.0]])], [s0(p0: [[1044.0], [1045.0], [1046.0]], p1: [[1047.0], [1048.0]], p2: [[1049.0]], p3: [[1050.0], [1051.0]], p4: [[1052.0]])], [s0(p0: [[1053.0], [1054.0], [1055.0]], p1: [[1056.0], [1057.0]], p2: [[1058.0]], p3: [[1059.0], [1060.0]], p4: [[1061.0]])]])]], p1: [[s0(p0: [[1062.0], [1063.0], [1064.0]], p1: [[1065.0], [1066.0]], p2: [[1067.0]], p3: [[1068.0], [1069.0]], p4: [[1070.0]])], [s0(p0: [[1071.0], [1072.0], [1073.0]], p1: [[1074.0], [1075.0]], p2: [[1076.0]], p3: [[1077.0], [1078.0]], p4: [[1079.0]])], [s0(p0: [[1080.0], [1081.0], [1082.0]], p1: [[1083.0], [1084.0]], p2: [[1085.0]], p3: [[1086.0], [1087.0]], p4: [[1088.0]])]])])]]
    let v2: [s9] = [s9(p0: [s3(p0: s0(p0: [[1089.0], [1090.0], [1091.0]], p1: [[1092.0], [1093.0]], p2: [[1094.0]], p3: [[1095.0], [1096.0]], p4: [[1097.0]]), p1: s1(p0: s0(p0: [[1098.0], [1099.0], [1100.0]], p1: [[1101.0], [1102.0]], p2: [[1103.0]], p3: [[1104.0], [1105.0]], p4: [[1106.0]]), p1: [[s0(p0: [[1107.0], [1108.0], [1109.0]], p1: [[1110.0], [1111.0]], p2: [[1112.0]], p3: [[1113.0], [1114.0]], p4: [[1115.0]])], [s0(p0: [[1116.0], [1117.0], [1118.0]], p1: [[1119.0], [1120.0]], p2: [[1121.0]], p3: [[1122.0], [1123.0]], p4: [[1124.0]])], [s0(p0: [[1125.0], [1126.0], [1127.0]], p1: [[1128.0], [1129.0]], p2: [[1130.0]], p3: [[1131.0], [1132.0]], p4: [[1133.0]])]])), s3(p0: s0(p0: [[1134.0], [1135.0], [1136.0]], p1: [[1137.0], [1138.0]], p2: [[1139.0]], p3: [[1140.0], [1141.0]], p4: [[1142.0]]), p1: s1(p0: s0(p0: [[1143.0], [1144.0], [1145.0]], p1: [[1146.0], [1147.0]], p2: [[1148.0]], p3: [[1149.0], [1150.0]], p4: [[1151.0]]), p1: [[s0(p0: [[1152.0], [1153.0], [1154.0]], p1: [[1155.0], [1156.0]], p2: [[1157.0]], p3: [[1158.0], [1159.0]], p4: [[1160.0]])], [s0(p0: [[1161.0], [1162.0], [1163.0]], p1: [[1164.0], [1165.0]], p2: [[1166.0]], p3: [[1167.0], [1168.0]], p4: [[1169.0]])], [s0(p0: [[1170.0], [1171.0], [1172.0]], p1: [[1173.0], [1174.0]], p2: [[1175.0]], p3: [[1176.0], [1177.0]], p4: [[1178.0]])]]))], p1: [s2(p0: [[s1(p0: s0(p0: [[1179.0], [1180.0], [1181.0]], p1: [[1182.0], [1183.0]], p2: [[1184.0]], p3: [[1185.0], [1186.0]], p4: [[1187.0]]), p1: [[s0(p0: [[1188.0], [1189.0], [1190.0]], p1: [[1191.0], [1192.0]], p2: [[1193.0]], p3: [[1194.0], [1195.0]], p4: [[1196.0]])], [s0(p0: [[1197.0], [1198.0], [1199.0]], p1: [[1200.0], [1201.0]], p2: [[1202.0]], p3: [[1203.0], [1204.0]], p4: [[1205.0]])], [s0(p0: [[1206.0], [1207.0], [1208.0]], p1: [[1209.0], [1210.0]], p2: [[1211.0]], p3: [[1212.0], [1213.0]], p4: [[1214.0]])]])]], p1: [[s0(p0: [[1215.0], [1216.0], [1217.0]], p1: [[1218.0], [1219.0]], p2: [[1220.0]], p3: [[1221.0], [1222.0]], p4: [[1223.0]])], [s0(p0: [[1224.0], [1225.0], [1226.0]], p1: [[1227.0], [1228.0]], p2: [[1229.0]], p3: [[1230.0], [1231.0]], p4: [[1232.0]])], [s0(p0: [[1233.0], [1234.0], [1235.0]], p1: [[1236.0], [1237.0]], p2: [[1238.0]], p3: [[1239.0], [1240.0]], p4: [[1241.0]])]]), s2(p0: [[s1(p0: s0(p0: [[1242.0], [1243.0], [1244.0]], p1: [[1245.0], [1246.0]], p2: [[1247.0]], p3: [[1248.0], [1249.0]], p4: [[1250.0]]), p1: [[s0(p0: [[1251.0], [1252.0], [1253.0]], p1: [[1254.0], [1255.0]], p2: [[1256.0]], p3: [[1257.0], [1258.0]], p4: [[1259.0]])], [s0(p0: [[1260.0], [1261.0], [1262.0]], p1: [[1263.0], [1264.0]], p2: [[1265.0]], p3: [[1266.0], [1267.0]], p4: [[1268.0]])], [s0(p0: [[1269.0], [1270.0], [1271.0]], p1: [[1272.0], [1273.0]], p2: [[1274.0]], p3: [[1275.0], [1276.0]], p4: [[1277.0]])]])]], p1: [[s0(p0: [[1278.0], [1279.0], [1280.0]], p1: [[1281.0], [1282.0]], p2: [[1283.0]], p3: [[1284.0], [1285.0]], p4: [[1286.0]])], [s0(p0: [[1287.0], [1288.0], [1289.0]], p1: [[1290.0], [1291.0]], p2: [[1292.0]], p3: [[1293.0], [1294.0]], p4: [[1295.0]])], [s0(p0: [[1296.0], [1297.0], [1298.0]], p1: [[1299.0], [1300.0]], p2: [[1301.0]], p3: [[1302.0], [1303.0]], p4: [[1304.0]])]]), s2(p0: [[s1(p0: s0(p0: [[1305.0], [1306.0], [1307.0]], p1: [[1308.0], [1309.0]], p2: [[1310.0]], p3: [[1311.0], [1312.0]], p4: [[1313.0]]), p1: [[s0(p0: [[1314.0], [1315.0], [1316.0]], p1: [[1317.0], [1318.0]], p2: [[1319.0]], p3: [[1320.0], [1321.0]], p4: [[1322.0]])], [s0(p0: [[1323.0], [1324.0], [1325.0]], p1: [[1326.0], [1327.0]], p2: [[1328.0]], p3: [[1329.0], [1330.0]], p4: [[1331.0]])], [s0(p0: [[1332.0], [1333.0], [1334.0]], p1: [[1335.0], [1336.0]], p2: [[1337.0]], p3: [[1338.0], [1339.0]], p4: [[1340.0]])]])]], p1: [[s0(p0: [[1341.0], [1342.0], [1343.0]], p1: [[1344.0], [1345.0]], p2: [[1346.0]], p3: [[1347.0], [1348.0]], p4: [[1349.0]])], [s0(p0: [[1350.0], [1351.0], [1352.0]], p1: [[1353.0], [1354.0]], p2: [[1355.0]], p3: [[1356.0], [1357.0]], p4: [[1358.0]])], [s0(p0: [[1359.0], [1360.0], [1361.0]], p1: [[1362.0], [1363.0]], p2: [[1364.0]], p3: [[1365.0], [1366.0]], p4: [[1367.0]])]])])]
    let v3: Double = 1368.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 1368.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
