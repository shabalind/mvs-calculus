  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
    var p2: [[Float]]
    var p3: [[Float]]
    var p4: [[Float]]
    var p5: [[Float]]
    var p6: [[Float]]
  } in
  struct s1 {
    var p0: [Float]
    var p1: Float
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: s1
  } in
  let f89: (s1) -> s1 = (v0: s1) -> s1 {
    var v4: s1 = v0 in
    let v1: Float = v4.p1 in
    let v6: Float = v4.p1 in
    let v3: [Float] = v4.p0 in
    var v2: Float = v1 in
    let v11: Float = v3[1] in
    v4.p1 = v2 in
    var v10: Float = v1 in
    var v8: [Float] = v3 in
    v8[1] = v11 in
    v8[1] = v10 in
    var v24: s1 = v4 in
    v24.p0 = v3 in
    v8[1] = v11 in
    v4.p0 = v8 in
    v4.p1 = v6 in
    v24.p0 = v8 in
    v24
  } in
  let f17: (s1) -> s1 = (v0: s1) -> s1 {
    let v3: s1 = f89(v0) in
    let v6: s1 = f89(v0) in
    let v9: [s1] = [v0, v3, v0, v6, v6, v3] in
    let v13: s1 = v9[5] in
    v13
  } in
  let f9: (s1) -> s1 = (v0: s1) -> s1 {
    var v1: s1 = v0 in
    let v2: s1 = f17(v1) in
    let v3: [s1] = [v0, v0, v0, v2, v1] in
    let v7: [Float] = v0.p0 in
    var v4: [Float] = v7 in
    let v8: Float = v7[1] in
    let v11: s1 = f17(v0) in
    var v9: [s1] = v3 in
    v1.p1 = v8 in
    v1.p0 = v7 in
    let v6: s1 = f17(v1) in
    let v14: s1 = f17(v1) in
    let v5: s1 = f89(v2) in
    v4[0] = v8 in
    let v13: s1 = v3[3] in
    let v16: Float = v6.p1 in
    let v10: s1 = f89(v13) in
    let v32: s1 = f89(v14) in
    let v21: s1 = f89(v10) in
    let v26: Float = v10.p1 in
    let v17: s1 = v9[1] in
    let v33: [Float] = v5.p0 in
    let v19: s1 = f17(v1) in
    let v23: Float = v21.p1 in
    let v36: Float = v33[0] in
    v9[1] = v21 in
    var v28: s1 = v21 in
    let v62: [Float] = v13.p0 in
    let v42: Float = v26 / v26 in
    v9[3] = v17 in
    let v37: s1 = f17(v21) in
    let v25: s1 = f89(v11) in
    let v24: Float = v14.p1 in
    let v43: Float = v1.p1 in
    var v45: [s1] = v3 in
    v1.p0 = v33 in
    let v51: s1 = f17(v11) in
    v45[3] = v51 in
    let v38: [[s1]] = [v3, v45, v9] in
    let v27: s1 = f17(v11) in
    v1.p0 = v62 in
    v45[1] = v19 in
    v4[0] = v16 in
    v9[2] = v27 in
    v9[0] = v25 in
    let v59: Float = v4[0] in
    v1.p1 = v36 in
    v28.p0 = v7 in
    let v49: s1 = f17(v51) in
    let v39: s1 = f89(v14) in
    let v40: Float = v62[0] in
    v9[2] = v27 in
    v4[1] = v43 in
    var v99: s1 = v1 in
    let v53: [Float] = v17.p0 in
    v4[0] = v24 in
    v45[4] = v17 in
    let v71: [s1] = v38[2] in
    v99.p1 = v16 in
    let v56: [Float] = v28.p0 in
    let v65: Float = v53[1] in
    var v73: [[s1]] = v38 in
    v4[0] = v23 in
    v99.p1 = v59 in
    v1.p1 = v40 in
    let v69: [s1] = [v39, v11, v0, v32] in
    var v190: [s1] = v69 in
    var v57: [s1] = v190 in
    v4[0] = v65 in
    v99.p0 = v56 in
    v190[2] = v99 in
    v73[2] = v71 in
    let v167: s1 = v57[3] in
    let v87: s1 = f17(v167) in
    let v116: [s1] = v73[2] in
    v9[1] = v5 in
    v9 = v116 in
    v9[0] = v49 in
    v28.p1 = v42 in
    v45[1] = v19 in
    v190[2] = v37 in
    v87
  } in
  let noinline_f0: (s0, Float, s1, s0, s2) -> Float = (v0: s0, v1: Float, v2: s1, v3: s0, v4: s2) -> Float {
    let v9: s1 = f9(v2) in
    let v13: s1 = f17(v9) in
    let v45: [s1] = [v13, v2, v2, v13] in
    var v35: [s1] = v45 in
    v35 = v45 in
    var v85: [s1] = v35 in
    let v73: s1 = v85[3] in
    var v54: s1 = v73 in
    v35[1] = v73 in
    v35[3] = v9 in
    v85[3] = v54 in
    let v70: Float = v54.p1 in
    v70
  } in
  fun loop(i: Int, v0: s0, v1: Float, v2: s1, v3: s0, v4: s2, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0], [2.0], [3.0]], [[4.0], [5.0], [6.0]], [[7.0]], [[8.0], [9.0], [10.0]], [[11.0], [12.0], [13.0]], [[14.0], [15.0], [16.0]]) in
    let v1: Float = 17.0 in
    let v2: s1 = s1([18.0, 19.0], 20.0) in
    let v3: s0 = s0([[21.0]], [[22.0], [23.0], [24.0]], [[25.0], [26.0], [27.0]], [[28.0]], [[29.0], [30.0], [31.0]], [[32.0], [33.0], [34.0]], [[35.0], [36.0], [37.0]]) in
    let v4: s2 = s2([[s0([[38.0]], [[39.0], [40.0], [41.0]], [[42.0], [43.0], [44.0]], [[45.0]], [[46.0], [47.0], [48.0]], [[49.0], [50.0], [51.0]], [[52.0], [53.0], [54.0]])]], s1([55.0, 56.0], 57.0)) in
    let initialResult: Float = s2([[s0([[38.0]], [[39.0], [40.0], [41.0]], [[42.0], [43.0], [44.0]], [[45.0]], [[46.0], [47.0], [48.0]], [[49.0], [50.0], [51.0]], [[52.0], [53.0], [54.0]])]], s1([55.0, 56.0], 57.0)) in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()