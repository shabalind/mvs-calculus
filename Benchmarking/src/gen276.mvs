  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s1
    var p1: s1
  } in
  struct s5 {
    var p0: s2
    var p1: [s3]
  } in
  struct s6 {
    var p0: [s2]
  } in
  let f56: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v5: Float = v0 in
    var v4: Float = v0 in
    v4 = v3 in
    var v7: Float = v3 in
    var v9: Float = v4 in
    let v2: [Float] = [v5, v5, v4, v0, v3, v9, v9] in
    var v20: [Float] = v2 in
    var v8: [Float] = v2 in
    let v21: Float = v2[4] in
    let v22: Float = v20[3] in
    var v12: [Float] = v8 in
    v12[4] = v7 in
    var v18: [Float] = v2 in
    let v30: Float = v21 / v3 in
    let v27: Float = v2[6] in
    let v33: Float = v18[4] in
    let v44: Float = v30 * v22 in
    var v35: Float = v33 in
    var v24: Float = v4 in
    var v19: [Float] = v12 in
    let v58: Float = v19[2] in
    v12[1] = v44 in
    v8[2] = v35 in
    v12[4] = v24 in
    v7 = v33 in
    var v51: [Float] = v19 in
    v12[4] = v35 in
    v20[5] = v58 in
    v19[2] = v33 in
    let v63: Float = v51[1] in
    v8[3] = v63 in
    v7 = v27 in
    v63
  } in
  let f39: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [Float] = v0.p0 in
    let v6: [[Float]] = v0.p1 in
    let v7: [Float] = v6[0] in
    var v20: s0 = v0 in
    var v45: s0 = v20 in
    v45.p0 = v4 in
    var v19: s0 = v45 in
    var v31: s0 = v19 in
    let v21: [Float] = v31.p0 in
    v45.p0 = v7 in
    let v68: [Float] = v19.p0 in
    v45.p0 = v68 in
    let v32: [[Float]] = v19.p1 in
    v45.p0 = v4 in
    let v89: [[Float]] = v19.p1 in
    let v158: s0 = s0(v21, v32) in
    let v163: [Float] = v89[0] in
    v20.p0 = v163 in
    v158
  } in
  let f38: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p1 in
    var v5: s0 = v0 in
    var v13: s0 = v5 in
    v5.p1 = v1 in
    v5.p1 = v1 in
    v13
  } in
  let f17: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    var v4: [Float] = v0 in
    let v2: Float = v4[0] in
    v4[0] = v2 in
    let v5: Float = f56(v2) in
    var v7: [Float] = v0 in
    v7[0] = v2 in
    let v3: Float = f56(v2) in
    var v6: Float = v5 in
    let v8: Float = f56(v3) in
    let v11: Float = f56(v3) in
    var v14: [Float] = v4 in
    let v16: Float = v7[0] in
    var v9: [Float] = v4 in
    v9[0] = v8 in
    v4[0] = v11 in
    var v1: Float = v6 in
    let v10: Float = v4[0] in
    let v29: Float = v9[0] in
    var v34: [Float] = v0 in
    var v33: Float = v3 in
    var v37: Float = v10 in
    let v17: Float = f56(v37) in
    var v12: [Float] = v34 in
    var v19: Float = v16 in
    v19 = v11 in
    var v27: [Float] = v7 in
    let v28: Float = v12[0] in
    let v25: Float = v14[0] in
    let v40: Float = v34[0] in
    v4[0] = v40 in
    v12[0] = v33 in
    v12[0] = v40 in
    var v23: Float = v25 in
    let v35: [[Float]] = [v14, v14, v12, v27, v0, v0] in
    let v57: [Float] = v35[2] in
    v27[0] = v17 in
    v12[0] = v11 in
    v4[0] = v3 in
    let v43: Float = f56(v1) in
    let v47: Float = f56(v25) in
    v9[0] = v16 in
    v27[0] = v10 in
    v12[0] = v28 in
    v12[0] = v43 in
    let v31: Float = f56(v47) in
    var v54: [Float] = v57 in
    v54[0] = v29 in
    v12[0] = v23 in
    v14[0] = v11 in
    v14[0] = v16 in
    var v71: Float = v40 in
    v34[0] = v19 in
    v54[0] = v31 in
    v9[0] = v71 in
    v23 = v1 in
    v4[0] = v47 in
    var v143: [Float] = v54 in
    v143
  } in
  let f14: (Float, s0) -> Float = (v0: Float, v1: s0) -> Float {
    let v4: [[Float]] = v1.p1 in
    let v2: [Float] = v4[0] in
    var v6: [[Float]] = v4 in
    let v7: [Float] = f17(v2) in
    var v3: s0 = v1 in
    var v10: [[Float]] = v6 in
    let v16: s0 = s0(v7, v4) in
    let v20: [Float] = f17(v7) in
    let v9: s0 = f38(v16) in
    v10[0] = v7 in
    var v12: [Float] = v20 in
    let v11: [[Float]] = v1.p1 in
    let v26: s0 = f39(v3) in
    v3.p0 = v20 in
    let v21: [[Float]] = v9.p1 in
    let v15: [Float] = v11[0] in
    v10[0] = v15 in
    v6[0] = v15 in
    let v17: [[Float]] = v1.p1 in
    let v25: s0 = f39(v9) in
    let v30: [Float] = v26.p0 in
    v3.p0 = v30 in
    let v47: [Float] = v25.p0 in
    v3.p1 = v21 in
    v3.p1 = v10 in
    v3.p0 = v12 in
    v3.p1 = v21 in
    let v34: Float = v30[0] in
    let v53: Float = f56(v34) in
    let v24: Float = v47[0] in
    let v59: Float = f56(v24) in
    let v44: [Float] = v17[0] in
    v3.p0 = v44 in
    let v77: Float = v53 / v59 in
    v77
  } in
  let noinline_f0: (s0, [s6], [[s5]], s2, Float) -> Float = (v0: s0, v1: [s6], v2: [[s5]], v3: s2, v4: Float) -> Float {
    let v10: [Float] = v0.p0 in
    var v7: [Float] = v10 in
    var v8: s0 = v0 in
    v7[0] = v4 in
    let v17: Float = v4 * v4 in
    let v14: Float = v10[0] in
    v8.p0 = v10 in
    v7[0] = v4 in
    v8.p0 = v7 in
    v8.p0 = v7 in
    var v35: [Float] = v10 in
    v8.p0 = v35 in
    v8.p0 = v7 in
    let v60: Float = v7[0] in
    let v29: Float = v4 + v17 in
    let v33: Float = v60 + v60 in
    v35 = v7 in
    let v31: Float = v14 * v33 in
    let v43: [Float] = f17(v35) in
    let v68: Float = v43[0] in
    let v54: Float = v17 / v31 in
    var v51: Float = v29 in
    let v39: [Float] = f17(v7) in
    let v52: Float = v54 * v51 in
    let v56: Float = v39[0] in
    v8.p0 = v35 in
    v35[0] = v56 in
    let v87: Float = v43[0] in
    v35[0] = v68 in
    v7[0] = v60 in
    v35[0] = v87 in
    let v122: Float = v54 * v52 in
    let v221: Float = f14(v68, v8) in
    v7[0] = v221 in
    v122
  } in
  fun loop(i: Int, v0: s0, v1: [s6], v2: [[s5]], v3: s2, v4: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4) in
      loop(i + 1, v0, v1, v2, v3, v4, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([0.0], [[1.0]]) in
    let v1: [s6] = [s6([s2(s0([2.0], [[3.0]]), [[s1([s0([4.0], [[5.0]])], s0([6.0], [[7.0]]))], [s1([s0([8.0], [[9.0]])], s0([10.0], [[11.0]]))]]), s2(s0([12.0], [[13.0]]), [[s1([s0([14.0], [[15.0]])], s0([16.0], [[17.0]]))], [s1([s0([18.0], [[19.0]])], s0([20.0], [[21.0]]))]])])] in
    let v2: [[s5]] = [[s5(s2(s0([22.0], [[23.0]]), [[s1([s0([24.0], [[25.0]])], s0([26.0], [[27.0]]))], [s1([s0([28.0], [[29.0]])], s0([30.0], [[31.0]]))]]), [s3(s1([s0([32.0], [[33.0]])], s0([34.0], [[35.0]])), s1([s0([36.0], [[37.0]])], s0([38.0], [[39.0]]))), s3(s1([s0([40.0], [[41.0]])], s0([42.0], [[43.0]])), s1([s0([44.0], [[45.0]])], s0([46.0], [[47.0]]))), s3(s1([s0([48.0], [[49.0]])], s0([50.0], [[51.0]])), s1([s0([52.0], [[53.0]])], s0([54.0], [[55.0]])))])]] in
    let v3: s2 = s2(s0([56.0], [[57.0]]), [[s1([s0([58.0], [[59.0]])], s0([60.0], [[61.0]]))], [s1([s0([62.0], [[63.0]])], s0([64.0], [[65.0]]))]]) in
    let v4: Float = 66.0 in
    let initialResult: Float = 66.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()