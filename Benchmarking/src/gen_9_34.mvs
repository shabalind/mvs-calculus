  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: s0
    var p1: [s1]
  } in
  struct s3 {
    var p0: [[s2]]
    var p1: s0
  } in
  struct s4 {
    var p0: [[s0]]
    var p1: s3
  } in
  struct s5 {
    var p0: [Float]
    var p1: [[s2]]
  } in
  struct s6 {
    var p0: s1
    var p1: [Float]
  } in
  struct s7 {
    var p0: [s4]
    var p1: s0
    var p2: [[s5]]
  } in
  struct s8 {
    var p0: [s0]
    var p1: s1
  } in
  struct s9 {
    var p0: s6
    var p1: [[s3]]
    var p2: s7
  } in
  struct s10 {
    var p0: [[s1]]
    var p1: [s1]
    var p2: s6
    var p3: s7
  } in
  struct s11 {
    var p0: [s8]
    var p1: s10
  } in
  let f15: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    v7 = v0 in
    var v6: Float = v7 in
    var v2: Float = v7 in
    var v5: Float = v6 in
    var v1: Float = v0 in
    v6 = v1 in
    var v18: Float = v1 in
    var v11: Float = v18 in
    var v3: Float = v6 in
    var v8: Float = v5 in
    var v30: Float = v5 in
    var v13: Float = v7 in
    var v14: Float = v18 in
    var v9: Float = v1 in
    var v20: Float = v3 in
    var v44: Float = v30 in
    var v19: Float = v2 in
    v18 = v13 in
    var v17: Float = v1 in
    var v15: Float = v8 in
    var v25: Float = v44 in
    var v26: Float = v11 in
    v26 = v6 in
    let v21: Float = v6 + v14 in
    var v29: Float = v15 in
    var v34: Float = v14 in
    v34 = v26 in
    let v41: [Float] = [v19, v14, v20, v21, v17, v34] in
    var v22: [Float] = v41 in
    let v39: Float = v41[4] in
    v6 = v25 in
    v17 = v34 in
    var v48: [Float] = v22 in
    let v102: Float = v48[2] in
    var v40: Float = v8 in
    var v54: Float = v1 in
    var v247: Float = v18 in
    v34 = v54 in
    let v61: [Float] = [v247, v102, v5, v34, v29] in
    var v151: [Float] = v61 in
    var v85: [Float] = v61 in
    var v57: [Float] = v85 in
    v57[0] = v9 in
    v151[2] = v39 in
    var v71: [Float] = v57 in
    var v95: [Float] = v151 in
    var v137: [Float] = v71 in
    let v109: [[Float]] = [v85, v137, v61, v57, v95] in
    var v190: [[Float]] = v109 in
    var v123: [[Float]] = v190 in
    var v136: [[Float]] = v123 in
    let v196: [Float] = v136[4] in
    let v171: Float = v196[1] in
    let v89: Float = v171 * v40 in
    v89
  } in
  let noinline_f0: (s9, [s3], s9, s0, [s8], s11, Float) -> Float = (v0: s9, v1: [s3], v2: s9, v3: s0, v4: [s8], v5: s11, v6: Float) -> Float {
    let v7: Float = f15(v6) in
    let v14: Float = f15(v7) in
    let v9: Float = f15(v14) in
    v9
  } in
  fun loop(i: Int, v0: s9, v1: [s3], v2: s9, v3: s0, v4: [s8], v5: s11, v6: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5, v6) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, v6, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9(s6(s1(s0([[0.0], [1.0]], [[2.0]]), [s0([[3.0], [4.0]], [[5.0]])]), [6.0, 7.0]), [[s3([[s2(s0([[8.0], [9.0]], [[10.0]]), [s1(s0([[11.0], [12.0]], [[13.0]]), [s0([[14.0], [15.0]], [[16.0]])]), s1(s0([[17.0], [18.0]], [[19.0]]), [s0([[20.0], [21.0]], [[22.0]])])])], [s2(s0([[23.0], [24.0]], [[25.0]]), [s1(s0([[26.0], [27.0]], [[28.0]]), [s0([[29.0], [30.0]], [[31.0]])]), s1(s0([[32.0], [33.0]], [[34.0]]), [s0([[35.0], [36.0]], [[37.0]])])])], [s2(s0([[38.0], [39.0]], [[40.0]]), [s1(s0([[41.0], [42.0]], [[43.0]]), [s0([[44.0], [45.0]], [[46.0]])]), s1(s0([[47.0], [48.0]], [[49.0]]), [s0([[50.0], [51.0]], [[52.0]])])])]], s0([[53.0], [54.0]], [[55.0]]))], [s3([[s2(s0([[56.0], [57.0]], [[58.0]]), [s1(s0([[59.0], [60.0]], [[61.0]]), [s0([[62.0], [63.0]], [[64.0]])]), s1(s0([[65.0], [66.0]], [[67.0]]), [s0([[68.0], [69.0]], [[70.0]])])])], [s2(s0([[71.0], [72.0]], [[73.0]]), [s1(s0([[74.0], [75.0]], [[76.0]]), [s0([[77.0], [78.0]], [[79.0]])]), s1(s0([[80.0], [81.0]], [[82.0]]), [s0([[83.0], [84.0]], [[85.0]])])])], [s2(s0([[86.0], [87.0]], [[88.0]]), [s1(s0([[89.0], [90.0]], [[91.0]]), [s0([[92.0], [93.0]], [[94.0]])]), s1(s0([[95.0], [96.0]], [[97.0]]), [s0([[98.0], [99.0]], [[100.0]])])])]], s0([[101.0], [102.0]], [[103.0]]))], [s3([[s2(s0([[104.0], [105.0]], [[106.0]]), [s1(s0([[107.0], [108.0]], [[109.0]]), [s0([[110.0], [111.0]], [[112.0]])]), s1(s0([[113.0], [114.0]], [[115.0]]), [s0([[116.0], [117.0]], [[118.0]])])])], [s2(s0([[119.0], [120.0]], [[121.0]]), [s1(s0([[122.0], [123.0]], [[124.0]]), [s0([[125.0], [126.0]], [[127.0]])]), s1(s0([[128.0], [129.0]], [[130.0]]), [s0([[131.0], [132.0]], [[133.0]])])])], [s2(s0([[134.0], [135.0]], [[136.0]]), [s1(s0([[137.0], [138.0]], [[139.0]]), [s0([[140.0], [141.0]], [[142.0]])]), s1(s0([[143.0], [144.0]], [[145.0]]), [s0([[146.0], [147.0]], [[148.0]])])])]], s0([[149.0], [150.0]], [[151.0]]))]], s7([s4([[s0([[152.0], [153.0]], [[154.0]])], [s0([[155.0], [156.0]], [[157.0]])], [s0([[158.0], [159.0]], [[160.0]])]], s3([[s2(s0([[161.0], [162.0]], [[163.0]]), [s1(s0([[164.0], [165.0]], [[166.0]]), [s0([[167.0], [168.0]], [[169.0]])]), s1(s0([[170.0], [171.0]], [[172.0]]), [s0([[173.0], [174.0]], [[175.0]])])])], [s2(s0([[176.0], [177.0]], [[178.0]]), [s1(s0([[179.0], [180.0]], [[181.0]]), [s0([[182.0], [183.0]], [[184.0]])]), s1(s0([[185.0], [186.0]], [[187.0]]), [s0([[188.0], [189.0]], [[190.0]])])])], [s2(s0([[191.0], [192.0]], [[193.0]]), [s1(s0([[194.0], [195.0]], [[196.0]]), [s0([[197.0], [198.0]], [[199.0]])]), s1(s0([[200.0], [201.0]], [[202.0]]), [s0([[203.0], [204.0]], [[205.0]])])])]], s0([[206.0], [207.0]], [[208.0]])))], s0([[209.0], [210.0]], [[211.0]]), [[s5([212.0], [[s2(s0([[213.0], [214.0]], [[215.0]]), [s1(s0([[216.0], [217.0]], [[218.0]]), [s0([[219.0], [220.0]], [[221.0]])]), s1(s0([[222.0], [223.0]], [[224.0]]), [s0([[225.0], [226.0]], [[227.0]])])])]])], [s5([228.0], [[s2(s0([[229.0], [230.0]], [[231.0]]), [s1(s0([[232.0], [233.0]], [[234.0]]), [s0([[235.0], [236.0]], [[237.0]])]), s1(s0([[238.0], [239.0]], [[240.0]]), [s0([[241.0], [242.0]], [[243.0]])])])]])], [s5([244.0], [[s2(s0([[245.0], [246.0]], [[247.0]]), [s1(s0([[248.0], [249.0]], [[250.0]]), [s0([[251.0], [252.0]], [[253.0]])]), s1(s0([[254.0], [255.0]], [[256.0]]), [s0([[257.0], [258.0]], [[259.0]])])])]])]])) in
    let v1: [s3] = [s3([[s2(s0([[260.0], [261.0]], [[262.0]]), [s1(s0([[263.0], [264.0]], [[265.0]]), [s0([[266.0], [267.0]], [[268.0]])]), s1(s0([[269.0], [270.0]], [[271.0]]), [s0([[272.0], [273.0]], [[274.0]])])])], [s2(s0([[275.0], [276.0]], [[277.0]]), [s1(s0([[278.0], [279.0]], [[280.0]]), [s0([[281.0], [282.0]], [[283.0]])]), s1(s0([[284.0], [285.0]], [[286.0]]), [s0([[287.0], [288.0]], [[289.0]])])])], [s2(s0([[290.0], [291.0]], [[292.0]]), [s1(s0([[293.0], [294.0]], [[295.0]]), [s0([[296.0], [297.0]], [[298.0]])]), s1(s0([[299.0], [300.0]], [[301.0]]), [s0([[302.0], [303.0]], [[304.0]])])])]], s0([[305.0], [306.0]], [[307.0]])), s3([[s2(s0([[308.0], [309.0]], [[310.0]]), [s1(s0([[311.0], [312.0]], [[313.0]]), [s0([[314.0], [315.0]], [[316.0]])]), s1(s0([[317.0], [318.0]], [[319.0]]), [s0([[320.0], [321.0]], [[322.0]])])])], [s2(s0([[323.0], [324.0]], [[325.0]]), [s1(s0([[326.0], [327.0]], [[328.0]]), [s0([[329.0], [330.0]], [[331.0]])]), s1(s0([[332.0], [333.0]], [[334.0]]), [s0([[335.0], [336.0]], [[337.0]])])])], [s2(s0([[338.0], [339.0]], [[340.0]]), [s1(s0([[341.0], [342.0]], [[343.0]]), [s0([[344.0], [345.0]], [[346.0]])]), s1(s0([[347.0], [348.0]], [[349.0]]), [s0([[350.0], [351.0]], [[352.0]])])])]], s0([[353.0], [354.0]], [[355.0]]))] in
    let v2: s9 = s9(s6(s1(s0([[356.0], [357.0]], [[358.0]]), [s0([[359.0], [360.0]], [[361.0]])]), [362.0, 363.0]), [[s3([[s2(s0([[364.0], [365.0]], [[366.0]]), [s1(s0([[367.0], [368.0]], [[369.0]]), [s0([[370.0], [371.0]], [[372.0]])]), s1(s0([[373.0], [374.0]], [[375.0]]), [s0([[376.0], [377.0]], [[378.0]])])])], [s2(s0([[379.0], [380.0]], [[381.0]]), [s1(s0([[382.0], [383.0]], [[384.0]]), [s0([[385.0], [386.0]], [[387.0]])]), s1(s0([[388.0], [389.0]], [[390.0]]), [s0([[391.0], [392.0]], [[393.0]])])])], [s2(s0([[394.0], [395.0]], [[396.0]]), [s1(s0([[397.0], [398.0]], [[399.0]]), [s0([[400.0], [401.0]], [[402.0]])]), s1(s0([[403.0], [404.0]], [[405.0]]), [s0([[406.0], [407.0]], [[408.0]])])])]], s0([[409.0], [410.0]], [[411.0]]))], [s3([[s2(s0([[412.0], [413.0]], [[414.0]]), [s1(s0([[415.0], [416.0]], [[417.0]]), [s0([[418.0], [419.0]], [[420.0]])]), s1(s0([[421.0], [422.0]], [[423.0]]), [s0([[424.0], [425.0]], [[426.0]])])])], [s2(s0([[427.0], [428.0]], [[429.0]]), [s1(s0([[430.0], [431.0]], [[432.0]]), [s0([[433.0], [434.0]], [[435.0]])]), s1(s0([[436.0], [437.0]], [[438.0]]), [s0([[439.0], [440.0]], [[441.0]])])])], [s2(s0([[442.0], [443.0]], [[444.0]]), [s1(s0([[445.0], [446.0]], [[447.0]]), [s0([[448.0], [449.0]], [[450.0]])]), s1(s0([[451.0], [452.0]], [[453.0]]), [s0([[454.0], [455.0]], [[456.0]])])])]], s0([[457.0], [458.0]], [[459.0]]))], [s3([[s2(s0([[460.0], [461.0]], [[462.0]]), [s1(s0([[463.0], [464.0]], [[465.0]]), [s0([[466.0], [467.0]], [[468.0]])]), s1(s0([[469.0], [470.0]], [[471.0]]), [s0([[472.0], [473.0]], [[474.0]])])])], [s2(s0([[475.0], [476.0]], [[477.0]]), [s1(s0([[478.0], [479.0]], [[480.0]]), [s0([[481.0], [482.0]], [[483.0]])]), s1(s0([[484.0], [485.0]], [[486.0]]), [s0([[487.0], [488.0]], [[489.0]])])])], [s2(s0([[490.0], [491.0]], [[492.0]]), [s1(s0([[493.0], [494.0]], [[495.0]]), [s0([[496.0], [497.0]], [[498.0]])]), s1(s0([[499.0], [500.0]], [[501.0]]), [s0([[502.0], [503.0]], [[504.0]])])])]], s0([[505.0], [506.0]], [[507.0]]))]], s7([s4([[s0([[508.0], [509.0]], [[510.0]])], [s0([[511.0], [512.0]], [[513.0]])], [s0([[514.0], [515.0]], [[516.0]])]], s3([[s2(s0([[517.0], [518.0]], [[519.0]]), [s1(s0([[520.0], [521.0]], [[522.0]]), [s0([[523.0], [524.0]], [[525.0]])]), s1(s0([[526.0], [527.0]], [[528.0]]), [s0([[529.0], [530.0]], [[531.0]])])])], [s2(s0([[532.0], [533.0]], [[534.0]]), [s1(s0([[535.0], [536.0]], [[537.0]]), [s0([[538.0], [539.0]], [[540.0]])]), s1(s0([[541.0], [542.0]], [[543.0]]), [s0([[544.0], [545.0]], [[546.0]])])])], [s2(s0([[547.0], [548.0]], [[549.0]]), [s1(s0([[550.0], [551.0]], [[552.0]]), [s0([[553.0], [554.0]], [[555.0]])]), s1(s0([[556.0], [557.0]], [[558.0]]), [s0([[559.0], [560.0]], [[561.0]])])])]], s0([[562.0], [563.0]], [[564.0]])))], s0([[565.0], [566.0]], [[567.0]]), [[s5([568.0], [[s2(s0([[569.0], [570.0]], [[571.0]]), [s1(s0([[572.0], [573.0]], [[574.0]]), [s0([[575.0], [576.0]], [[577.0]])]), s1(s0([[578.0], [579.0]], [[580.0]]), [s0([[581.0], [582.0]], [[583.0]])])])]])], [s5([584.0], [[s2(s0([[585.0], [586.0]], [[587.0]]), [s1(s0([[588.0], [589.0]], [[590.0]]), [s0([[591.0], [592.0]], [[593.0]])]), s1(s0([[594.0], [595.0]], [[596.0]]), [s0([[597.0], [598.0]], [[599.0]])])])]])], [s5([600.0], [[s2(s0([[601.0], [602.0]], [[603.0]]), [s1(s0([[604.0], [605.0]], [[606.0]]), [s0([[607.0], [608.0]], [[609.0]])]), s1(s0([[610.0], [611.0]], [[612.0]]), [s0([[613.0], [614.0]], [[615.0]])])])]])]])) in
    let v3: s0 = s0([[616.0], [617.0]], [[618.0]]) in
    let v4: [s8] = [s8([s0([[619.0], [620.0]], [[621.0]]), s0([[622.0], [623.0]], [[624.0]]), s0([[625.0], [626.0]], [[627.0]])], s1(s0([[628.0], [629.0]], [[630.0]]), [s0([[631.0], [632.0]], [[633.0]])]))] in
    let v5: s11 = s11([s8([s0([[634.0], [635.0]], [[636.0]]), s0([[637.0], [638.0]], [[639.0]]), s0([[640.0], [641.0]], [[642.0]])], s1(s0([[643.0], [644.0]], [[645.0]]), [s0([[646.0], [647.0]], [[648.0]])])), s8([s0([[649.0], [650.0]], [[651.0]]), s0([[652.0], [653.0]], [[654.0]]), s0([[655.0], [656.0]], [[657.0]])], s1(s0([[658.0], [659.0]], [[660.0]]), [s0([[661.0], [662.0]], [[663.0]])]))], s10([[s1(s0([[664.0], [665.0]], [[666.0]]), [s0([[667.0], [668.0]], [[669.0]])])]], [s1(s0([[670.0], [671.0]], [[672.0]]), [s0([[673.0], [674.0]], [[675.0]])]), s1(s0([[676.0], [677.0]], [[678.0]]), [s0([[679.0], [680.0]], [[681.0]])])], s6(s1(s0([[682.0], [683.0]], [[684.0]]), [s0([[685.0], [686.0]], [[687.0]])]), [688.0, 689.0]), s7([s4([[s0([[690.0], [691.0]], [[692.0]])], [s0([[693.0], [694.0]], [[695.0]])], [s0([[696.0], [697.0]], [[698.0]])]], s3([[s2(s0([[699.0], [700.0]], [[701.0]]), [s1(s0([[702.0], [703.0]], [[704.0]]), [s0([[705.0], [706.0]], [[707.0]])]), s1(s0([[708.0], [709.0]], [[710.0]]), [s0([[711.0], [712.0]], [[713.0]])])])], [s2(s0([[714.0], [715.0]], [[716.0]]), [s1(s0([[717.0], [718.0]], [[719.0]]), [s0([[720.0], [721.0]], [[722.0]])]), s1(s0([[723.0], [724.0]], [[725.0]]), [s0([[726.0], [727.0]], [[728.0]])])])], [s2(s0([[729.0], [730.0]], [[731.0]]), [s1(s0([[732.0], [733.0]], [[734.0]]), [s0([[735.0], [736.0]], [[737.0]])]), s1(s0([[738.0], [739.0]], [[740.0]]), [s0([[741.0], [742.0]], [[743.0]])])])]], s0([[744.0], [745.0]], [[746.0]])))], s0([[747.0], [748.0]], [[749.0]]), [[s5([750.0], [[s2(s0([[751.0], [752.0]], [[753.0]]), [s1(s0([[754.0], [755.0]], [[756.0]]), [s0([[757.0], [758.0]], [[759.0]])]), s1(s0([[760.0], [761.0]], [[762.0]]), [s0([[763.0], [764.0]], [[765.0]])])])]])], [s5([766.0], [[s2(s0([[767.0], [768.0]], [[769.0]]), [s1(s0([[770.0], [771.0]], [[772.0]]), [s0([[773.0], [774.0]], [[775.0]])]), s1(s0([[776.0], [777.0]], [[778.0]]), [s0([[779.0], [780.0]], [[781.0]])])])]])], [s5([782.0], [[s2(s0([[783.0], [784.0]], [[785.0]]), [s1(s0([[786.0], [787.0]], [[788.0]]), [s0([[789.0], [790.0]], [[791.0]])]), s1(s0([[792.0], [793.0]], [[794.0]]), [s0([[795.0], [796.0]], [[797.0]])])])]])]]))) in
    let v6: Float = 798.0 in
    let initialResult: Float = 798.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, v6, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()