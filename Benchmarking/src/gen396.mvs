  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: [s1]
    var p1: [[s0]]
  } in
  let f72: ([[s0]]) -> [[s0]] = (v0: [[s0]]) -> [[s0]] {
    let v6: [s0] = v0[0] in
    let v7: s0 = v6[0] in
    let v3: [s0] = v0[0] in
    var v9: s0 = v7 in
    let v12: [[Float]] = v7.p0 in
    let v2: [s0] = v0[0] in
    let v1: [[Float]] = v9.p1 in
    var v4: [s0] = v2 in
    let v13: s0 = v3[0] in
    let v10: [[Float]] = v13.p0 in
    var v5: [s0] = v3 in
    let v16: s0 = v6[0] in
    v4[0] = v7 in
    var v20: s0 = v9 in
    v9 = v20 in
    v9.p1 = v12 in
    var v23: s0 = v13 in
    v20.p1 = v12 in
    var v35: s0 = v7 in
    let v29: [[Float]] = v35.p0 in
    let v31: [s0] = v0[0] in
    let v17: s0 = v5[0] in
    v20.p1 = v12 in
    var v43: s0 = v13 in
    var v59: [[Float]] = v29 in
    v35.p1 = v59 in
    let v58: s1 = s1(v4, v23) in
    let v78: [[Float]] = v16.p0 in
    var v66: s1 = v58 in
    let v64: [s0] = v66.p0 in
    let v76: s0 = s0(v1, v59) in
    v4[0] = v43 in
    v9.p1 = v29 in
    let v57: [[Float]] = v76.p0 in
    var v60: [[Float]] = v57 in
    let v97: [s0] = v58.p0 in
    let v51: s0 = v31[0] in
    let v149: s0 = v97[0] in
    v23.p0 = v1 in
    v5[0] = v51 in
    let v68: [Float] = v10[1] in
    v23.p1 = v60 in
    v43.p1 = v1 in
    let v133: [[Float]] = v9.p1 in
    v60 = v57 in
    let v70: [[Float]] = v16.p1 in
    v9.p1 = v133 in
    var v124: [[s0]] = v0 in
    let v55: [[Float]] = v43.p0 in
    let v85: [[Float]] = v149.p0 in
    v5[0] = v35 in
    v20.p0 = v70 in
    let v108: [[Float]] = v76.p1 in
    v20.p0 = v55 in
    v59[2] = v68 in
    v124[1] = v64 in
    v35.p1 = v57 in
    v4[0] = v17 in
    v5[0] = v20 in
    v20.p0 = v85 in
    v35.p0 = v108 in
    v66.p0 = v97 in
    v9.p0 = v108 in
    v23.p1 = v78 in
    v124
  } in
  let f66: ([s1]) -> [s1] = (v0: [s1]) -> [s1] {
    var v5: [s1] = v0 in
    let v8: s1 = v0[0] in
    let v6: s1 = v0[0] in
    var v3: s1 = v6 in
    let v4: [s0] = v3.p0 in
    let v1: s1 = v5[0] in
    var v11: [s1] = v5 in
    let v2: [s0] = v8.p0 in
    v3.p0 = v4 in
    let v10: s0 = v8.p1 in
    let v15: s0 = v1.p1 in
    v11[0] = v1 in
    let v17: s1 = v5[0] in
    v5[0] = v17 in
    let v22: [s1] = [v8] in
    v11[0] = v17 in
    v3.p0 = v2 in
    v5[0] = v3 in
    let v38: s0 = v6.p1 in
    v3.p1 = v38 in
    v3.p1 = v15 in
    v3.p1 = v10 in
    let v34: s1 = v0[0] in
    v5[0] = v3 in
    let v56: s1 = v0[0] in
    let v36: s0 = v34.p1 in
    v3.p1 = v36 in
    v3.p0 = v4 in
    v5 = v22 in
    let v42: s0 = v56.p1 in
    v3.p1 = v36 in
    v5[0] = v8 in
    v3.p1 = v42 in
    v11[0] = v34 in
    v11
  } in
  let f4: (s3) -> s3 = (v0: s3) -> s3 {
    v0
  } in
  let f2: (s3) -> s3 = (v0: s3) -> s3 {
    var v6: s3 = v0 in
    let v1: [s1] = v0.p0 in
    let v4: [s3] = [v6, v6] in
    let v9: s3 = f4(v6) in
    let v7: [s1] = f66(v1) in
    let v3: s1 = v1[0] in
    let v10: [s1] = f66(v7) in
    let v18: s3 = f4(v6) in
    var v2: [s3] = v4 in
    let v8: s1 = v10[0] in
    let v11: [s1] = [v8, v8, v3, v8] in
    let v16: s1 = v11[0] in
    var v12: [s1] = v7 in
    let v19: [[s0]] = v9.p1 in
    var v31: [[s0]] = v19 in
    let v44: [s0] = v16.p0 in
    let v29: s3 = s3(v7, v19) in
    let v50: [s1] = f66(v12) in
    let v33: s0 = v44[0] in
    let v38: [s0] = v31[1] in
    var v43: s1 = v3 in
    let v24: [[s0]] = f72(v19) in
    let v45: [[s0]] = f72(v31) in
    let v32: [s1] = f66(v50) in
    let v85: s3 = v4[0] in
    var v71: s3 = v85 in
    v12[0] = v43 in
    let v36: [s1] = f66(v10) in
    let v39: [[s0]] = f72(v24) in
    v12[0] = v43 in
    let v61: s3 = v2[1] in
    v2[1] = v18 in
    v6.p0 = v12 in
    let v54: [s1] = f66(v7) in
    let v115: [s1] = v29.p0 in
    var v56: [s0] = v38 in
    v2[1] = v9 in
    let v89: [[s0]] = v71.p1 in
    v6.p1 = v89 in
    v6.p0 = v36 in
    v31[0] = v56 in
    let v80: [[s1]] = [v10, v10, v54, v32, v50, v115, v36] in
    let v102: [s1] = v80[5] in
    v71.p0 = v102 in
    v71.p1 = v39 in
    v56[0] = v33 in
    v71.p1 = v45 in
    v61
  } in
  let noinline_f0: ([s3], Float) -> Float = (v0: [s3], v1: Float) -> Float {
    let v3: s3 = v0[1] in
    let v12: Float = v1 * v1 in
    let v8: s3 = f2(v3) in
    let v2: [Float] = [v1, v12, v12, v12] in
    let v13: s3 = f4(v8) in
    let v11: [[s0]] = v13.p1 in
    var v24: Float = v12 in
    var v9: Float = v12 in
    var v30: [Float] = v2 in
    v30[1] = v1 in
    v30[3] = v24 in
    let v10: Float = v30[2] in
    v30[2] = v9 in
    let v43: [s0] = v11[0] in
    let v36: s0 = v43[0] in
    v9 = v10 in
    let v96: [[Float]] = v36.p1 in
    let v69: [Float] = v96[0] in
    let v99: Float = v69[0] in
    v30[2] = v99 in
    v10
  } in
  fun loop(i: Int, v0: [s3], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3([s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]])], s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]))], [[s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], [s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])], [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])]]), s3([s1([s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]])], s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]]))], [[s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])], [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])], [s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]])]]), s3([s1([s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]])], s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]))], [[s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])], [s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])], [s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]])]])] in
    let v1: Float = 90.0 in
    let initialResult: Float = 90.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()