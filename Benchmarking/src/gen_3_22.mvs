  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: [s2]
  } in
  struct s4 {
    var p0: [s3]
    var p1: s3
  } in
  struct s5 {
    var p0: s4
    var p1: [[s2]]
  } in
  let f96: (Float) -> Float = (v0: Float) -> Float {
    var v7: Float = v0 in
    var v6: Float = v7 in
    var v8: Float = v6 in
    var v1: Float = v7 in
    var v5: Float = v6 in
    let v2: [Float] = [v6, v5] in
    v8 = v1 in
    var v3: Float = v7 in
    var v11: [Float] = v2 in
    let v13: Float = v11[1] in
    v8 = v3 in
    v11[0] = v8 in
    v11[0] = v13 in
    let v16: Float = v11[1] in
    v16
  } in
  let f10: (Float) -> Float = (v0: Float) -> Float {
    var v4: Float = v0 in
    let v6: Float = f96(v4) in
    let v3: Float = f96(v4) in
    let v2: Float = f96(v4) in
    var v5: Float = v3 in
    let v9: Float = f96(v5) in
    var v10: Float = v6 in
    var v11: Float = v0 in
    let v1: Float = v2 + v4 in
    let v13: Float = f96(v6) in
    let v17: Float = f96(v0) in
    let v8: Float = f96(v17) in
    var v7: Float = v1 in
    let v15: Float = f96(v1) in
    let v22: Float = f96(v11) in
    var v12: Float = v6 in
    let v36: Float = v0 / v9 in
    let v25: Float = f96(v6) in
    let v30: Float = v15 / v8 in
    var v29: Float = v12 in
    var v14: Float = v4 in
    let v20: Float = f96(v10) in
    let v31: Float = f96(v13) in
    var v26: Float = v29 in
    let v52: Float = f96(v25) in
    let v50: Float = v52 * v20 in
    let v43: Float = v50 / v2 in
    let v73: Float = f96(v50) in
    var v27: Float = v31 in
    let v46: Float = f96(v9) in
    let v34: [Float] = [v46, v13, v7, v73, v30] in
    let v59: Float = v34[4] in
    var v62: [Float] = v34 in
    v62[2] = v59 in
    v62[3] = v8 in
    var v49: Float = v22 in
    let v40: Float = f96(v49) in
    v62[3] = v73 in
    let v56: Float = f96(v40) in
    let v60: Float = v62[2] in
    let v71: Float = f96(v31) in
    var v51: [Float] = v34 in
    v62[0] = v71 in
    v62[1] = v3 in
    let v81: Float = v62[1] in
    let v67: Float = v34[0] in
    v62[1] = v14 in
    let v82: Float = v51[2] in
    var v111: [Float] = v51 in
    v51[2] = v36 in
    v51[3] = v31 in
    var v115: [Float] = v111 in
    let v96: Float = f96(v60) in
    var v45: [Float] = v115 in
    let v120: Float = f96(v5) in
    v111[2] = v82 in
    v45 = v34 in
    v45[4] = v14 in
    let v174: Float = f96(v120) in
    v45[0] = v50 in
    let v86: Float = v45[2] in
    v62[2] = v81 in
    v62[3] = v27 in
    v115[1] = v174 in
    v62[4] = v26 in
    v51[0] = v43 in
    v45[0] = v96 in
    v115[2] = v67 in
    v4 = v3 in
    let v119: Float = f96(v86) in
    v111[3] = v2 in
    v111[1] = v56 in
    v45[4] = v120 in
    v119
  } in
  let noinline_f0: ([s5], Float) -> Float = (v0: [s5], v1: Float) -> Float {
    var v7: Float = v1 in
    v7 = v1 in
    let v2: Float = v7 * v1 in
    let v31: Float = f96(v2) in
    var v37: Float = v31 in
    var v66: Float = v2 in
    let v95: Float = v66 - v1 in
    let v92: Float = v95 + v7 in
    let v61: Float = f10(v92) in
    let v154: Float = v61 * v37 in
    v154
  } in
  fun loop(i: Int, v0: [s5], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5(s4([s3([s2(s0([[0.0]], [[1.0], [2.0], [3.0]]), [[s1(s0([[4.0]], [[5.0], [6.0], [7.0]]), s0([[8.0]], [[9.0], [10.0], [11.0]]))]])]), s3([s2(s0([[12.0]], [[13.0], [14.0], [15.0]]), [[s1(s0([[16.0]], [[17.0], [18.0], [19.0]]), s0([[20.0]], [[21.0], [22.0], [23.0]]))]])]), s3([s2(s0([[24.0]], [[25.0], [26.0], [27.0]]), [[s1(s0([[28.0]], [[29.0], [30.0], [31.0]]), s0([[32.0]], [[33.0], [34.0], [35.0]]))]])])], s3([s2(s0([[36.0]], [[37.0], [38.0], [39.0]]), [[s1(s0([[40.0]], [[41.0], [42.0], [43.0]]), s0([[44.0]], [[45.0], [46.0], [47.0]]))]])])), [[s2(s0([[48.0]], [[49.0], [50.0], [51.0]]), [[s1(s0([[52.0]], [[53.0], [54.0], [55.0]]), s0([[56.0]], [[57.0], [58.0], [59.0]]))]])]]), s5(s4([s3([s2(s0([[60.0]], [[61.0], [62.0], [63.0]]), [[s1(s0([[64.0]], [[65.0], [66.0], [67.0]]), s0([[68.0]], [[69.0], [70.0], [71.0]]))]])]), s3([s2(s0([[72.0]], [[73.0], [74.0], [75.0]]), [[s1(s0([[76.0]], [[77.0], [78.0], [79.0]]), s0([[80.0]], [[81.0], [82.0], [83.0]]))]])]), s3([s2(s0([[84.0]], [[85.0], [86.0], [87.0]]), [[s1(s0([[88.0]], [[89.0], [90.0], [91.0]]), s0([[92.0]], [[93.0], [94.0], [95.0]]))]])])], s3([s2(s0([[96.0]], [[97.0], [98.0], [99.0]]), [[s1(s0([[100.0]], [[101.0], [102.0], [103.0]]), s0([[104.0]], [[105.0], [106.0], [107.0]]))]])])), [[s2(s0([[108.0]], [[109.0], [110.0], [111.0]]), [[s1(s0([[112.0]], [[113.0], [114.0], [115.0]]), s0([[116.0]], [[117.0], [118.0], [119.0]]))]])]])] in
    let v1: Float = 120.0 in
    let initialResult: Float = 120.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()