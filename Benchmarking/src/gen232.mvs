  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: [s0]
  } in
  let f2: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v6: Float = v0 in
    v6 = v0 in
    v3 = v6 in
    let v2: Float = v0 + v6 in
    var v5: Float = v3 in
    let v8: Float = v3 / v2 in
    var v9: Float = v3 in
    let v23: Float = v5 + v8 in
    var v18: Float = v5 in
    var v31: Float = v23 in
    var v15: Float = v31 in
    var v57: Float = v3 in
    var v19: Float = v15 in
    v31 = v57 in
    let v27: [Float] = [v23] in
    v15 = v6 in
    v57 = v5 in
    var v43: Float = v18 in
    let v60: [Float] = [v15, v0, v23, v8] in
    let v52: Float = v60[0] in
    var v42: [Float] = v27 in
    v42[0] = v57 in
    let v70: [[Float]] = [v42, v42, v27, v27, v42] in
    v42[0] = v19 in
    v42[0] = v52 in
    v42[0] = v43 in
    let v162: [Float] = v70[0] in
    var v164: [Float] = v162 in
    v164[0] = v9 in
    let v92: Float = v164[0] in
    v92
  } in
  let noinline_f0: (s0, s2, Float) -> Float = (v0: s0, v1: s2, v2: Float) -> Float {
    let v4: Float = f2(v2) in
    let v3: Float = f2(v2) in
    var v6: Float = v4 in
    let v10: Float = f2(v3) in
    let v86: Float = f2(v10) in
    let v92: Float = v86 + v6 in
    v92
  } in
  fun loop(i: Int, v0: s0, v1: s2, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0]]) in
    let v1: s2 = s2([s0([[4.0], [5.0], [6.0]], [[7.0]]), s0([[8.0], [9.0], [10.0]], [[11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0]]), s0([[16.0], [17.0], [18.0]], [[19.0]]), s0([[20.0], [21.0], [22.0]], [[23.0]])]) in
    let v2: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()