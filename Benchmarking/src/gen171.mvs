  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: s0
  } in
  let f4: ([Float]) -> [Float] = (v0: [Float]) -> [Float] {
    let v6: Float = v0[0] in
    let v5: Float = v0[0] in
    let v2: Float = v0[0] in
    let v1: Float = v0[0] in
    var v9: [Float] = v0 in
    v9 = v0 in
    v9[0] = v5 in
    v9[0] = v6 in
    var v8: Float = v6 in
    v9[0] = v6 in
    var v14: Float = v2 in
    v9 = v0 in
    let v16: Float = v0[0] in
    let v10: Float = v9[0] in
    v8 = v14 in
    var v19: [Float] = v0 in
    v9[0] = v1 in
    var v50: [Float] = v9 in
    var v29: [Float] = v19 in
    let v15: Float = v29[0] in
    var v20: [Float] = v0 in
    v9[0] = v16 in
    let v26: [[Float]] = [v0] in
    var v24: [Float] = v20 in
    v9[0] = v15 in
    let v38: Float = v9[0] in
    let v17: [Float] = v26[0] in
    var v33: [[Float]] = v26 in
    var v39: [Float] = v17 in
    var v58: [[Float]] = v26 in
    v33 = v26 in
    v39[0] = v15 in
    let v44: Float = v19[0] in
    var v27: [Float] = v50 in
    let v23: [Float] = v58[0] in
    var v47: [Float] = v50 in
    let v40: [Float] = v58[0] in
    let v22: [Float] = v33[0] in
    let v31: [Float] = v33[0] in
    var v45: Float = v8 in
    v27[0] = v45 in
    let v46: [Float] = v58[0] in
    v50[0] = v38 in
    let v59: [[Float]] = [v0, v24, v27, v29, v46] in
    let v70: [[Float]] = [v47, v22, v39, v24, v31, v23] in
    let v62: [Float] = v70[1] in
    let v112: Float = v29[0] in
    v39[0] = v14 in
    v27[0] = v112 in
    let v91: [Float] = v59[3] in
    v39[0] = v44 in
    let v28: [[Float]] = [v62, v40, v24, v0, v91, v50, v31] in
    let v109: Float = v46[0] in
    var v88: [[Float]] = v28 in
    let v87: [Float] = v88[4] in
    v19[0] = v10 in
    v47[0] = v109 in
    v87
  } in
  let noinline_f0: ([s2], s0, [s1], Float) -> Float = (v0: [s2], v1: s0, v2: [s1], v3: Float) -> Float {
    var v5: Float = v3 in
    let v6: [[Float]] = v1.p1 in
    let v13: [Float] = v6[0] in
    let v8: [Float] = f4(v13) in
    let v45: [Float] = f4(v8) in
    var v31: Float = v5 in
    let v46: Float = v45[0] in
    let v47: Float = v31 - v46 in
    v47
  } in
  fun loop(i: Int, v0: [s2], v1: s0, v2: [s1], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s0([[5.0], [6.0], [7.0]], [[8.0], [9.0]])], s0([[10.0], [11.0], [12.0]], [[13.0], [14.0]]))] in
    let v1: s0 = s0([[15.0], [16.0], [17.0]], [[18.0], [19.0]]) in
    let v2: [s1] = [s1([s0([[20.0], [21.0], [22.0]], [[23.0], [24.0]])], [[s0([[25.0], [26.0], [27.0]], [[28.0], [29.0]])], [s0([[30.0], [31.0], [32.0]], [[33.0], [34.0]])]])] in
    let v3: Float = 35.0 in
    let initialResult: Float = 35.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()