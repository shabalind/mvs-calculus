  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: s1
    var p1: [[s1]]
  } in
  struct s4 {
    var p0: s0
    var p1: [s2]
  } in
  struct s5 {
    var p0: s1
    var p1: [[s4]]
  } in
  struct s6 {
    var p0: s4
    var p1: [[s0]]
  } in
  struct s12 {
    var p0: s6
    var p1: [[Float]]
  } in
  let f25: (s1, s1) -> s1 = (v0: s1, v1: s1) -> s1 {
    let v7: [[s0]] = v0.p1 in
    let v3: [[s0]] = v1.p0 in
    var v5: [[s0]] = v3 in
    let v9: [s0] = v7[2] in
    var v8: [[s0]] = v7 in
    v5[0] = v9 in
    var v6: s1 = v0 in
    v8[0] = v9 in
    let v13: [s0] = v7[1] in
    let v19: [[s0]] = v0.p1 in
    let v21: [[s0]] = v6.p0 in
    v5[0] = v13 in
    let v11: [[s0]] = v1.p1 in
    let v12: [[s0]] = v1.p1 in
    var v24: [[s0]] = v8 in
    var v10: s1 = v0 in
    let v14: [[[s0]]] = [v12, v8, v24, v12, v8, v24, v24] in
    v24[0] = v13 in
    let v15: [[s0]] = v6.p0 in
    var v18: s1 = v1 in
    v5[0] = v9 in
    v6.p1 = v11 in
    var v35: [[s0]] = v24 in
    var v25: [[s0]] = v5 in
    v18.p1 = v11 in
    v10.p0 = v15 in
    var v29: [s0] = v13 in
    v6.p1 = v35 in
    let v39: [[s0]] = v0.p1 in
    let v27: [[s0]] = v0.p1 in
    let v41: [s1] = [v0] in
    let v33: s1 = v41[0] in
    let v30: [[s0]] = v10.p1 in
    v25[0] = v9 in
    v10.p0 = v3 in
    v8[1] = v13 in
    let v40: [[s0]] = v6.p1 in
    let v26: [[s0]] = v1.p0 in
    v18.p0 = v25 in
    v10.p1 = v40 in
    v5[0] = v9 in
    let v42: [s0] = v35[1] in
    let v34: [[s0]] = v33.p0 in
    let v49: [s0] = v25[0] in
    v25[0] = v29 in
    let v51: s1 = v41[0] in
    let v46: [[s0]] = v14[2] in
    v18.p1 = v30 in
    let v81: [[s0]] = v10.p0 in
    v10.p0 = v25 in
    v6.p0 = v25 in
    let v36: s1 = s1(v15, v46) in
    let v71: [[s0]] = v18.p0 in
    let v155: s1 = s1(v15, v39) in
    v5 = v81 in
    v8[0] = v49 in
    let v38: [s0] = v8[2] in
    let v31: [s0] = v71[0] in
    let v50: [[s0]] = [v38, v38, v49, v49] in
    v25[0] = v9 in
    let v122: [s0] = v50[2] in
    var v58: s1 = v155 in
    v58.p0 = v71 in
    let v64: [s0] = v50[3] in
    v58.p1 = v40 in
    v5[0] = v122 in
    v6 = v58 in
    v10.p0 = v21 in
    v24[0] = v64 in
    v18.p1 = v7 in
    let v67: [[s0]] = v51.p0 in
    v24[1] = v42 in
    v58.p1 = v19 in
    let v161: [s0] = v3[0] in
    v58.p0 = v34 in
    v35[0] = v31 in
    let v60: s0 = v161[0] in
    v29[0] = v60 in
    v6.p1 = v30 in
    v10.p0 = v3 in
    v5[0] = v9 in
    v58.p0 = v26 in
    v6.p0 = v5 in
    v5 = v67 in
    v58.p0 = v5 in
    v24[1] = v29 in
    v58.p0 = v71 in
    v18.p1 = v27 in
    v18.p0 = v15 in
    v36
  } in
  let noinline_f0: ([s5], s12, Float) -> Float = (v0: [s5], v1: s12, v2: Float) -> Float {
    let v6: s5 = v0[1] in
    let v4: s1 = v6.p0 in
    let v5: s1 = f25(v4, v4) in
    let v7: s1 = f25(v5, v5) in
    let v8: [[s0]] = v7.p1 in
    var v22: Float = v2 in
    var v12: Float = v2 in
    let v14: [s0] = v8[2] in
    let v33: s0 = v14[0] in
    let v66: [Float] = [v12, v22, v22] in
    let v49: Float = v22 / v22 in
    var v35: Float = v12 in
    let v51: [[Float]] = v33.p0 in
    let v39: Float = v66[0] in
    let v48: [Float] = v51[1] in
    var v61: [Float] = v48 in
    v61[0] = v39 in
    var v235: [Float] = v61 in
    let v68: Float = v235[0] in
    v235[0] = v22 in
    v61[0] = v49 in
    let v407: Float = v68 + v35 in
    v235[0] = v407 in
    v407
  } in
  fun loop(i: Int, v0: [s5], v1: s12, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5(s1([[s0([[0.0], [1.0]], [[2.0]])]], [[s0([[3.0], [4.0]], [[5.0]])], [s0([[6.0], [7.0]], [[8.0]])], [s0([[9.0], [10.0]], [[11.0]])]]), [[s4(s0([[12.0], [13.0]], [[14.0]]), [s2(s1([[s0([[15.0], [16.0]], [[17.0]])]], [[s0([[18.0], [19.0]], [[20.0]])], [s0([[21.0], [22.0]], [[23.0]])], [s0([[24.0], [25.0]], [[26.0]])]]), [[s1([[s0([[27.0], [28.0]], [[29.0]])]], [[s0([[30.0], [31.0]], [[32.0]])], [s0([[33.0], [34.0]], [[35.0]])], [s0([[36.0], [37.0]], [[38.0]])]])], [s1([[s0([[39.0], [40.0]], [[41.0]])]], [[s0([[42.0], [43.0]], [[44.0]])], [s0([[45.0], [46.0]], [[47.0]])], [s0([[48.0], [49.0]], [[50.0]])]])], [s1([[s0([[51.0], [52.0]], [[53.0]])]], [[s0([[54.0], [55.0]], [[56.0]])], [s0([[57.0], [58.0]], [[59.0]])], [s0([[60.0], [61.0]], [[62.0]])]])]]), s2(s1([[s0([[63.0], [64.0]], [[65.0]])]], [[s0([[66.0], [67.0]], [[68.0]])], [s0([[69.0], [70.0]], [[71.0]])], [s0([[72.0], [73.0]], [[74.0]])]]), [[s1([[s0([[75.0], [76.0]], [[77.0]])]], [[s0([[78.0], [79.0]], [[80.0]])], [s0([[81.0], [82.0]], [[83.0]])], [s0([[84.0], [85.0]], [[86.0]])]])], [s1([[s0([[87.0], [88.0]], [[89.0]])]], [[s0([[90.0], [91.0]], [[92.0]])], [s0([[93.0], [94.0]], [[95.0]])], [s0([[96.0], [97.0]], [[98.0]])]])], [s1([[s0([[99.0], [100.0]], [[101.0]])]], [[s0([[102.0], [103.0]], [[104.0]])], [s0([[105.0], [106.0]], [[107.0]])], [s0([[108.0], [109.0]], [[110.0]])]])]])])], [s4(s0([[111.0], [112.0]], [[113.0]]), [s2(s1([[s0([[114.0], [115.0]], [[116.0]])]], [[s0([[117.0], [118.0]], [[119.0]])], [s0([[120.0], [121.0]], [[122.0]])], [s0([[123.0], [124.0]], [[125.0]])]]), [[s1([[s0([[126.0], [127.0]], [[128.0]])]], [[s0([[129.0], [130.0]], [[131.0]])], [s0([[132.0], [133.0]], [[134.0]])], [s0([[135.0], [136.0]], [[137.0]])]])], [s1([[s0([[138.0], [139.0]], [[140.0]])]], [[s0([[141.0], [142.0]], [[143.0]])], [s0([[144.0], [145.0]], [[146.0]])], [s0([[147.0], [148.0]], [[149.0]])]])], [s1([[s0([[150.0], [151.0]], [[152.0]])]], [[s0([[153.0], [154.0]], [[155.0]])], [s0([[156.0], [157.0]], [[158.0]])], [s0([[159.0], [160.0]], [[161.0]])]])]]), s2(s1([[s0([[162.0], [163.0]], [[164.0]])]], [[s0([[165.0], [166.0]], [[167.0]])], [s0([[168.0], [169.0]], [[170.0]])], [s0([[171.0], [172.0]], [[173.0]])]]), [[s1([[s0([[174.0], [175.0]], [[176.0]])]], [[s0([[177.0], [178.0]], [[179.0]])], [s0([[180.0], [181.0]], [[182.0]])], [s0([[183.0], [184.0]], [[185.0]])]])], [s1([[s0([[186.0], [187.0]], [[188.0]])]], [[s0([[189.0], [190.0]], [[191.0]])], [s0([[192.0], [193.0]], [[194.0]])], [s0([[195.0], [196.0]], [[197.0]])]])], [s1([[s0([[198.0], [199.0]], [[200.0]])]], [[s0([[201.0], [202.0]], [[203.0]])], [s0([[204.0], [205.0]], [[206.0]])], [s0([[207.0], [208.0]], [[209.0]])]])]])])]]), s5(s1([[s0([[210.0], [211.0]], [[212.0]])]], [[s0([[213.0], [214.0]], [[215.0]])], [s0([[216.0], [217.0]], [[218.0]])], [s0([[219.0], [220.0]], [[221.0]])]]), [[s4(s0([[222.0], [223.0]], [[224.0]]), [s2(s1([[s0([[225.0], [226.0]], [[227.0]])]], [[s0([[228.0], [229.0]], [[230.0]])], [s0([[231.0], [232.0]], [[233.0]])], [s0([[234.0], [235.0]], [[236.0]])]]), [[s1([[s0([[237.0], [238.0]], [[239.0]])]], [[s0([[240.0], [241.0]], [[242.0]])], [s0([[243.0], [244.0]], [[245.0]])], [s0([[246.0], [247.0]], [[248.0]])]])], [s1([[s0([[249.0], [250.0]], [[251.0]])]], [[s0([[252.0], [253.0]], [[254.0]])], [s0([[255.0], [256.0]], [[257.0]])], [s0([[258.0], [259.0]], [[260.0]])]])], [s1([[s0([[261.0], [262.0]], [[263.0]])]], [[s0([[264.0], [265.0]], [[266.0]])], [s0([[267.0], [268.0]], [[269.0]])], [s0([[270.0], [271.0]], [[272.0]])]])]]), s2(s1([[s0([[273.0], [274.0]], [[275.0]])]], [[s0([[276.0], [277.0]], [[278.0]])], [s0([[279.0], [280.0]], [[281.0]])], [s0([[282.0], [283.0]], [[284.0]])]]), [[s1([[s0([[285.0], [286.0]], [[287.0]])]], [[s0([[288.0], [289.0]], [[290.0]])], [s0([[291.0], [292.0]], [[293.0]])], [s0([[294.0], [295.0]], [[296.0]])]])], [s1([[s0([[297.0], [298.0]], [[299.0]])]], [[s0([[300.0], [301.0]], [[302.0]])], [s0([[303.0], [304.0]], [[305.0]])], [s0([[306.0], [307.0]], [[308.0]])]])], [s1([[s0([[309.0], [310.0]], [[311.0]])]], [[s0([[312.0], [313.0]], [[314.0]])], [s0([[315.0], [316.0]], [[317.0]])], [s0([[318.0], [319.0]], [[320.0]])]])]])])], [s4(s0([[321.0], [322.0]], [[323.0]]), [s2(s1([[s0([[324.0], [325.0]], [[326.0]])]], [[s0([[327.0], [328.0]], [[329.0]])], [s0([[330.0], [331.0]], [[332.0]])], [s0([[333.0], [334.0]], [[335.0]])]]), [[s1([[s0([[336.0], [337.0]], [[338.0]])]], [[s0([[339.0], [340.0]], [[341.0]])], [s0([[342.0], [343.0]], [[344.0]])], [s0([[345.0], [346.0]], [[347.0]])]])], [s1([[s0([[348.0], [349.0]], [[350.0]])]], [[s0([[351.0], [352.0]], [[353.0]])], [s0([[354.0], [355.0]], [[356.0]])], [s0([[357.0], [358.0]], [[359.0]])]])], [s1([[s0([[360.0], [361.0]], [[362.0]])]], [[s0([[363.0], [364.0]], [[365.0]])], [s0([[366.0], [367.0]], [[368.0]])], [s0([[369.0], [370.0]], [[371.0]])]])]]), s2(s1([[s0([[372.0], [373.0]], [[374.0]])]], [[s0([[375.0], [376.0]], [[377.0]])], [s0([[378.0], [379.0]], [[380.0]])], [s0([[381.0], [382.0]], [[383.0]])]]), [[s1([[s0([[384.0], [385.0]], [[386.0]])]], [[s0([[387.0], [388.0]], [[389.0]])], [s0([[390.0], [391.0]], [[392.0]])], [s0([[393.0], [394.0]], [[395.0]])]])], [s1([[s0([[396.0], [397.0]], [[398.0]])]], [[s0([[399.0], [400.0]], [[401.0]])], [s0([[402.0], [403.0]], [[404.0]])], [s0([[405.0], [406.0]], [[407.0]])]])], [s1([[s0([[408.0], [409.0]], [[410.0]])]], [[s0([[411.0], [412.0]], [[413.0]])], [s0([[414.0], [415.0]], [[416.0]])], [s0([[417.0], [418.0]], [[419.0]])]])]])])]])] in
    let v1: s12 = s12(s6(s4(s0([[420.0], [421.0]], [[422.0]]), [s2(s1([[s0([[423.0], [424.0]], [[425.0]])]], [[s0([[426.0], [427.0]], [[428.0]])], [s0([[429.0], [430.0]], [[431.0]])], [s0([[432.0], [433.0]], [[434.0]])]]), [[s1([[s0([[435.0], [436.0]], [[437.0]])]], [[s0([[438.0], [439.0]], [[440.0]])], [s0([[441.0], [442.0]], [[443.0]])], [s0([[444.0], [445.0]], [[446.0]])]])], [s1([[s0([[447.0], [448.0]], [[449.0]])]], [[s0([[450.0], [451.0]], [[452.0]])], [s0([[453.0], [454.0]], [[455.0]])], [s0([[456.0], [457.0]], [[458.0]])]])], [s1([[s0([[459.0], [460.0]], [[461.0]])]], [[s0([[462.0], [463.0]], [[464.0]])], [s0([[465.0], [466.0]], [[467.0]])], [s0([[468.0], [469.0]], [[470.0]])]])]]), s2(s1([[s0([[471.0], [472.0]], [[473.0]])]], [[s0([[474.0], [475.0]], [[476.0]])], [s0([[477.0], [478.0]], [[479.0]])], [s0([[480.0], [481.0]], [[482.0]])]]), [[s1([[s0([[483.0], [484.0]], [[485.0]])]], [[s0([[486.0], [487.0]], [[488.0]])], [s0([[489.0], [490.0]], [[491.0]])], [s0([[492.0], [493.0]], [[494.0]])]])], [s1([[s0([[495.0], [496.0]], [[497.0]])]], [[s0([[498.0], [499.0]], [[500.0]])], [s0([[501.0], [502.0]], [[503.0]])], [s0([[504.0], [505.0]], [[506.0]])]])], [s1([[s0([[507.0], [508.0]], [[509.0]])]], [[s0([[510.0], [511.0]], [[512.0]])], [s0([[513.0], [514.0]], [[515.0]])], [s0([[516.0], [517.0]], [[518.0]])]])]])]), [[s0([[519.0], [520.0]], [[521.0]])], [s0([[522.0], [523.0]], [[524.0]])]]), [[525.0], [526.0], [527.0]]) in
    let v2: Float = 528.0 in
    let initialResult: Float = 528.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()