  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s2
    var p1: [[s0]]
    var p2: [s1]
  } in
  let f71: (s1) -> s1 = (v0: s1) -> s1 {
    let v4: s0 = v0.p1 in
    var v2: s0 = v4 in
    var v1: s1 = v0 in
    v1.p0 = v2 in
    var v7: s1 = v1 in
    var v3: s0 = v2 in
    let v6: [[Float]] = v4.p1 in
    v2.p1 = v6 in
    v2 = v3 in
    let v18: s0 = v7.p1 in
    v1.p1 = v18 in
    v3.p1 = v6 in
    let v35: [[Float]] = v2.p0 in
    var v26: [[Float]] = v35 in
    v2.p0 = v26 in
    v2.p0 = v35 in
    v7
  } in
  let f70: (s1) -> s1 = (v0: s1) -> s1 {
    let v5: [s1] = [v0, v0, v0, v0, v0] in
    let v7: s1 = f71(v0) in
    var v8: [s1] = v5 in
    var v4: [s1] = v5 in
    let v6: s1 = f71(v7) in
    let v1: s0 = v6.p1 in
    v8 = v4 in
    let v12: s1 = v8[0] in
    var v11: s1 = v12 in
    v11.p1 = v1 in
    let v17: s1 = v4[4] in
    let v9: [[Float]] = v1.p1 in
    v11.p1 = v1 in
    var v10: [[Float]] = v9 in
    var v16: s0 = v1 in
    var v27: [[Float]] = v9 in
    v27 = v9 in
    let v22: [Float] = v27[0] in
    v11.p0 = v1 in
    v16.p1 = v10 in
    v10[2] = v22 in
    let v13: s1 = f71(v17) in
    var v35: [[Float]] = v10 in
    v4[1] = v13 in
    var v20: s0 = v1 in
    let v34: [[Float]] = v20.p0 in
    var v25: [[Float]] = v35 in
    let v41: [Float] = v34[0] in
    let v31: [Float] = v34[0] in
    var v37: [[Float]] = v9 in
    v16.p1 = v37 in
    v25[2] = v22 in
    var v38: [Float] = v41 in
    v16.p1 = v10 in
    v11.p0 = v1 in
    let v57: s1 = f71(v11) in
    v27[0] = v38 in
    v11.p0 = v20 in
    let v64: [[Float]] = v16.p0 in
    v35[1] = v31 in
    v16.p0 = v34 in
    v10[2] = v38 in
    v10[2] = v31 in
    let v62: s0 = s0(v34, v9) in
    v37 = v25 in
    v20.p0 = v34 in
    let v77: [Float] = v64[1] in
    v16 = v62 in
    v20.p0 = v64 in
    let v54: [[Float]] = v20.p0 in
    v27[0] = v77 in
    v35[2] = v31 in
    var v162: [[Float]] = v54 in
    v20.p0 = v162 in
    v35[1] = v31 in
    v57
  } in
  let f65: (s1) -> s1 = (v0: s1) -> s1 {
    let v2: s1 = f70(v0) in
    let v4: s0 = v2.p1 in
    let v10: s0 = v0.p1 in
    var v8: s0 = v10 in
    let v15: [[Float]] = v8.p0 in
    var v13: [[Float]] = v15 in
    let v9: s1 = f70(v0) in
    let v18: [[Float]] = v4.p1 in
    let v11: [[Float]] = v10.p1 in
    let v29: s0 = v2.p1 in
    v8.p1 = v18 in
    var v21: [[Float]] = v13 in
    let v22: [Float] = v21[1] in
    v13[1] = v22 in
    v13[1] = v22 in
    let v27: [Float] = v13[0] in
    let v32: s0 = v9.p1 in
    var v20: s1 = v9 in
    let v37: s0 = v0.p1 in
    let v106: s0 = v2.p1 in
    v13[0] = v22 in
    let v113: s0 = s0(v21, v11) in
    let v159: [[Float]] = v106.p1 in
    v21[1] = v27 in
    let v119: s0 = s0(v15, v159) in
    let v66: s1 = f71(v20) in
    let v110: [s0] = [v119, v32, v37, v29] in
    var v253: [s0] = v110 in
    let v122: s0 = v66.p0 in
    v253[0] = v122 in
    let v157: s0 = v253[2] in
    let v142: s1 = s1(v113, v157) in
    v142
  } in
  let f50: (s1) -> s1 = (v0: s1) -> s1 {
    let v1: s0 = v0.p1 in
    let v4: s0 = v0.p1 in
    let v2: [s0] = [v1] in
    let v9: s0 = v2[0] in
    var v8: s0 = v9 in
    var v36: s0 = v4 in
    let v33: s1 = s1(v36, v8) in
    v33
  } in
  let noinline_f0: ([s3], [s0], Float) -> Float = (v0: [s3], v1: [s0], v2: Float) -> Float {
    let v5: s0 = v1[1] in
    let v4: [[Float]] = v5.p1 in
    let v8: s1 = s1(v5, v5) in
    let v11: s1 = f50(v8) in
    let v9: s1 = f65(v11) in
    let v13: s0 = v9.p1 in
    let v17: [Float] = v4[0] in
    var v30: [Float] = v17 in
    var v38: Float = v2 in
    let v24: [[Float]] = v13.p0 in
    var v28: Float = v38 in
    let v41: [Float] = v24[1] in
    var v116: [Float] = v30 in
    v116 = v41 in
    let v139: Float = v2 + v28 in
    let v112: Float = v116[0] in
    v30[0] = v139 in
    v112
  } in
  fun loop(i: Int, v0: [s3], v1: [s0], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s3] = [s3(s2(s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]])), [[s1(s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]]), s0([[15.0], [16.0]], [[17.0], [18.0], [19.0]]))]]), [[s0([[20.0], [21.0]], [[22.0], [23.0], [24.0]])], [s0([[25.0], [26.0]], [[27.0], [28.0], [29.0]])], [s0([[30.0], [31.0]], [[32.0], [33.0], [34.0]])]], [s1(s0([[35.0], [36.0]], [[37.0], [38.0], [39.0]]), s0([[40.0], [41.0]], [[42.0], [43.0], [44.0]])), s1(s0([[45.0], [46.0]], [[47.0], [48.0], [49.0]]), s0([[50.0], [51.0]], [[52.0], [53.0], [54.0]]))])] in
    let v1: [s0] = [s0([[55.0], [56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0], [64.0]])] in
    let v2: Float = 65.0 in
    let initialResult: Float = 65.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()