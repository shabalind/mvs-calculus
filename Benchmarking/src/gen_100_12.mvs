  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: s1
  } in
  struct s3 {
    var p0: [[s2]]
    var p1: s1
  } in
  struct s4 {
    var p0: s1
    var p1: s1
  } in
  struct s5 {
    var p0: [s3]
    var p1: [s1]
  } in
  struct s7 {
    var p0: s5
    var p1: [s4]
  } in
  struct s9 {
    var p0: [s5]
    var p1: s7
  } in
  let f87: (Float) -> Float = (v0: Float) -> Float {
    var v2: Float = v0 in
    var v4: Float = v0 in
    var v3: Float = v2 in
    var v6: Float = v2 in
    let v5: Float = v3 - v6 in
    var v11: Float = v4 in
    var v10: Float = v3 in
    var v15: Float = v4 in
    let v13: Float = v3 + v0 in
    var v16: Float = v2 in
    var v12: Float = v3 in
    v3 = v15 in
    var v19: Float = v10 in
    var v26: Float = v4 in
    var v29: Float = v19 in
    var v22: Float = v12 in
    let v18: Float = v11 * v16 in
    v10 = v18 in
    var v17: Float = v18 in
    var v20: Float = v4 in
    var v32: Float = v29 in
    var v28: Float = v10 in
    v28 = v4 in
    var v65: Float = v26 in
    var v43: Float = v32 in
    var v39: Float = v11 in
    let v37: [Float] = [v15, v43, v65] in
    let v52: Float = v37[2] in
    let v61: Float = v37[0] in
    var v23: [Float] = v37 in
    v23[1] = v65 in
    let v96: Float = v37[2] in
    v23[2] = v13 in
    let v31: Float = v37[2] in
    v23[0] = v28 in
    v23[2] = v2 in
    v23[0] = v17 in
    let v84: Float = v52 - v32 in
    v23[0] = v19 in
    v23[0] = v39 in
    v23[1] = v0 in
    var v51: [Float] = v23 in
    let v50: [Float] = [v43, v0, v39, v5, v22, v84, v3] in
    v20 = v65 in
    v51[1] = v31 in
    v23[1] = v20 in
    let v106: Float = v50[3] in
    v23[1] = v3 in
    let v40: Float = v51[0] in
    var v58: [Float] = v37 in
    var v101: [Float] = v58 in
    v51[0] = v106 in
    v23[1] = v61 in
    v23[0] = v40 in
    var v150: [Float] = v58 in
    var v191: [Float] = v37 in
    let v141: [[Float]] = [v150, v101, v23, v51, v191] in
    let v209: [Float] = v141[0] in
    let v119: Float = v209[2] in
    v150[0] = v96 in
    v119
  } in
  let noinline_f0: (s9, [[s1]], Float) -> Float = (v0: s9, v1: [[s1]], v2: Float) -> Float {
    let v4: Float = f87(v2) in
    v4
  } in
  fun loop(i: Int, v0: s9, v1: [[s1]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s9 = s9([s5([s3([[s2([[s0([[0.0], [1.0]], [[2.0], [3.0]])]], s1(s0([[4.0], [5.0]], [[6.0], [7.0]]), [s0([[8.0], [9.0]], [[10.0], [11.0]])]))]], s1(s0([[12.0], [13.0]], [[14.0], [15.0]]), [s0([[16.0], [17.0]], [[18.0], [19.0]])])), s3([[s2([[s0([[20.0], [21.0]], [[22.0], [23.0]])]], s1(s0([[24.0], [25.0]], [[26.0], [27.0]]), [s0([[28.0], [29.0]], [[30.0], [31.0]])]))]], s1(s0([[32.0], [33.0]], [[34.0], [35.0]]), [s0([[36.0], [37.0]], [[38.0], [39.0]])]))], [s1(s0([[40.0], [41.0]], [[42.0], [43.0]]), [s0([[44.0], [45.0]], [[46.0], [47.0]])]), s1(s0([[48.0], [49.0]], [[50.0], [51.0]]), [s0([[52.0], [53.0]], [[54.0], [55.0]])])]), s5([s3([[s2([[s0([[56.0], [57.0]], [[58.0], [59.0]])]], s1(s0([[60.0], [61.0]], [[62.0], [63.0]]), [s0([[64.0], [65.0]], [[66.0], [67.0]])]))]], s1(s0([[68.0], [69.0]], [[70.0], [71.0]]), [s0([[72.0], [73.0]], [[74.0], [75.0]])])), s3([[s2([[s0([[76.0], [77.0]], [[78.0], [79.0]])]], s1(s0([[80.0], [81.0]], [[82.0], [83.0]]), [s0([[84.0], [85.0]], [[86.0], [87.0]])]))]], s1(s0([[88.0], [89.0]], [[90.0], [91.0]]), [s0([[92.0], [93.0]], [[94.0], [95.0]])]))], [s1(s0([[96.0], [97.0]], [[98.0], [99.0]]), [s0([[100.0], [101.0]], [[102.0], [103.0]])]), s1(s0([[104.0], [105.0]], [[106.0], [107.0]]), [s0([[108.0], [109.0]], [[110.0], [111.0]])])])], s7(s5([s3([[s2([[s0([[112.0], [113.0]], [[114.0], [115.0]])]], s1(s0([[116.0], [117.0]], [[118.0], [119.0]]), [s0([[120.0], [121.0]], [[122.0], [123.0]])]))]], s1(s0([[124.0], [125.0]], [[126.0], [127.0]]), [s0([[128.0], [129.0]], [[130.0], [131.0]])])), s3([[s2([[s0([[132.0], [133.0]], [[134.0], [135.0]])]], s1(s0([[136.0], [137.0]], [[138.0], [139.0]]), [s0([[140.0], [141.0]], [[142.0], [143.0]])]))]], s1(s0([[144.0], [145.0]], [[146.0], [147.0]]), [s0([[148.0], [149.0]], [[150.0], [151.0]])]))], [s1(s0([[152.0], [153.0]], [[154.0], [155.0]]), [s0([[156.0], [157.0]], [[158.0], [159.0]])]), s1(s0([[160.0], [161.0]], [[162.0], [163.0]]), [s0([[164.0], [165.0]], [[166.0], [167.0]])])]), [s4(s1(s0([[168.0], [169.0]], [[170.0], [171.0]]), [s0([[172.0], [173.0]], [[174.0], [175.0]])]), s1(s0([[176.0], [177.0]], [[178.0], [179.0]]), [s0([[180.0], [181.0]], [[182.0], [183.0]])])), s4(s1(s0([[184.0], [185.0]], [[186.0], [187.0]]), [s0([[188.0], [189.0]], [[190.0], [191.0]])]), s1(s0([[192.0], [193.0]], [[194.0], [195.0]]), [s0([[196.0], [197.0]], [[198.0], [199.0]])])), s4(s1(s0([[200.0], [201.0]], [[202.0], [203.0]]), [s0([[204.0], [205.0]], [[206.0], [207.0]])]), s1(s0([[208.0], [209.0]], [[210.0], [211.0]]), [s0([[212.0], [213.0]], [[214.0], [215.0]])]))])) in
    let v1: [[s1]] = [[s1(s0([[216.0], [217.0]], [[218.0], [219.0]]), [s0([[220.0], [221.0]], [[222.0], [223.0]])])], [s1(s0([[224.0], [225.0]], [[226.0], [227.0]]), [s0([[228.0], [229.0]], [[230.0], [231.0]])])]] in
    let v2: Float = 232.0 in
    let initialResult: Float = 232.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()