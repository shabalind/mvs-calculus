  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s4 {
    var p0: s1
    var p1: [s1]
  } in
  struct s5 {
    var p0: [s2]
    var p1: s0
  } in
  let f60: (Float) -> Float = (v0: Float) -> Float {
    var v6: Float = v0 in
    var v1: Float = v6 in
    var v4: Float = v6 in
    var v3: Float = v6 in
    v3 = v6 in
    let v21: Float = v4 - v6 in
    var v7: Float = v4 in
    let v5: [Float] = [v4] in
    var v17: [Float] = v5 in
    var v16: [Float] = v5 in
    v17 = v5 in
    var v10: Float = v7 in
    let v19: Float = v17[0] in
    let v11: [[Float]] = [v16, v5, v16, v17] in
    let v18: Float = v5[0] in
    v17[0] = v3 in
    v17[0] = v21 in
    var v45: [[Float]] = v11 in
    v17[0] = v7 in
    v17[0] = v6 in
    v7 = v19 in
    v16[0] = v19 in
    let v41: [Float] = v45[3] in
    v45[1] = v17 in
    var v24: Float = v10 in
    var v32: [[Float]] = v45 in
    var v28: [Float] = v5 in
    let v38: [Float] = v45[0] in
    var v26: [[Float]] = v32 in
    let v39: Float = v16[0] in
    v17[0] = v4 in
    var v30: [[Float]] = v26 in
    v26[2] = v38 in
    v16[0] = v4 in
    let v31: Float = v18 / v1 in
    v17 = v28 in
    let v27: Float = v31 + v24 in
    v17[0] = v18 in
    v6 = v24 in
    var v40: [Float] = v41 in
    let v81: [Float] = v30[2] in
    v4 = v27 in
    v28[0] = v39 in
    v32[1] = v40 in
    let v90: Float = v81[0] in
    v90
  } in
  let f18: (Float) -> Float = (v0: Float) -> Float {
    let v5: Float = f60(v0) in
    var v1: Float = v0 in
    var v2: Float = v5 in
    v1 = v5 in
    let v3: Float = v5 + v5 in
    var v4: Float = v2 in
    let v8: Float = f60(v4) in
    let v11: [Float] = [v2, v5, v8, v1, v4, v3] in
    let v9: Float = v11[5] in
    let v13: Float = f60(v9) in
    var v32: [Float] = v11 in
    v32[0] = v13 in
    let v39: [[Float]] = [v32, v11, v32, v32, v11, v11] in
    var v33: [[Float]] = v39 in
    let v43: [Float] = v39[1] in
    var v38: [[Float]] = v33 in
    let v125: [Float] = v38[2] in
    var v57: [Float] = v125 in
    let v124: Float = v57[1] in
    v32 = v43 in
    v57 = v11 in
    let v130: Float = f60(v124) in
    v130
  } in
  let noinline_f0: ([s5], [s5], s1, s5, s4, [s0], [s0], Float) -> Float = (v0: [s5], v1: [s5], v2: s1, v3: s5, v4: s4, v5: [s0], v6: [s0], v7: Float) -> Float {
    let v12: s0 = v6[1] in
    let v9: [[Float]] = v12.p1 in
    let v10: [Float] = v9[1] in
    let v57: Float = v10[0] in
    let v134: Float = f18(v57) in
    var v180: Float = v134 in
    v180
  } in
  fun loop(i: Int, v0: [s5], v1: [s5], v2: s1, v3: s5, v4: s4, v5: [s0], v6: [s0], v7: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5, v6, v7) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, v6, v7, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s5] = [s5([s2(s0([[0.0]], [[1.0], [2.0]]), [s0([[3.0]], [[4.0], [5.0]]), s0([[6.0]], [[7.0], [8.0]]), s0([[9.0]], [[10.0], [11.0]])])], s0([[12.0]], [[13.0], [14.0]])), s5([s2(s0([[15.0]], [[16.0], [17.0]]), [s0([[18.0]], [[19.0], [20.0]]), s0([[21.0]], [[22.0], [23.0]]), s0([[24.0]], [[25.0], [26.0]])])], s0([[27.0]], [[28.0], [29.0]]))] in
    let v1: [s5] = [s5([s2(s0([[30.0]], [[31.0], [32.0]]), [s0([[33.0]], [[34.0], [35.0]]), s0([[36.0]], [[37.0], [38.0]]), s0([[39.0]], [[40.0], [41.0]])])], s0([[42.0]], [[43.0], [44.0]])), s5([s2(s0([[45.0]], [[46.0], [47.0]]), [s0([[48.0]], [[49.0], [50.0]]), s0([[51.0]], [[52.0], [53.0]]), s0([[54.0]], [[55.0], [56.0]])])], s0([[57.0]], [[58.0], [59.0]])), s5([s2(s0([[60.0]], [[61.0], [62.0]]), [s0([[63.0]], [[64.0], [65.0]]), s0([[66.0]], [[67.0], [68.0]]), s0([[69.0]], [[70.0], [71.0]])])], s0([[72.0]], [[73.0], [74.0]]))] in
    let v2: s1 = s1([[s0([[75.0]], [[76.0], [77.0]])], [s0([[78.0]], [[79.0], [80.0]])]], s0([[81.0]], [[82.0], [83.0]])) in
    let v3: s5 = s5([s2(s0([[84.0]], [[85.0], [86.0]]), [s0([[87.0]], [[88.0], [89.0]]), s0([[90.0]], [[91.0], [92.0]]), s0([[93.0]], [[94.0], [95.0]])])], s0([[96.0]], [[97.0], [98.0]])) in
    let v4: s4 = s4(s1([[s0([[99.0]], [[100.0], [101.0]])], [s0([[102.0]], [[103.0], [104.0]])]], s0([[105.0]], [[106.0], [107.0]])), [s1([[s0([[108.0]], [[109.0], [110.0]])], [s0([[111.0]], [[112.0], [113.0]])]], s0([[114.0]], [[115.0], [116.0]]))]) in
    let v5: [s0] = [s0([[117.0]], [[118.0], [119.0]]), s0([[120.0]], [[121.0], [122.0]])] in
    let v6: [s0] = [s0([[123.0]], [[124.0], [125.0]]), s0([[126.0]], [[127.0], [128.0]])] in
    let v7: Float = 129.0 in
    let initialResult: Float = 129.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, v6, v7, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()