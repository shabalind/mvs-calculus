  struct s0 {
    var p0: Float
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
    var p2: [[s0]]
  } in
  let f74: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v7: [[Float]] = v1.p1 in
    let v2: Float = v0.p0 in
    var v4: s0 = v1 in
    var v3: Float = v2 in
    let v8: s0 = s0(v3, v7) in
    let v14: Float = v8.p0 in
    var v11: s0 = v1 in
    v11.p1 = v7 in
    v11.p1 = v7 in
    v4 = v11 in
    var v13: Float = v14 in
    v4.p0 = v13 in
    v4.p1 = v7 in
    v4
  } in
  let f70: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v7: s0 = f74(v0, v1) in
    let v5: s0 = f74(v0, v0) in
    let v4: s0 = f74(v0, v7) in
    let v2: s0 = f74(v1, v5) in
    let v9: s0 = f74(v7, v1) in
    let v13: s0 = f74(v9, v2) in
    let v18: s0 = f74(v13, v4) in
    v18
  } in
  let f67: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s0 = f70(v0, v0) in
    let v6: s0 = f70(v0, v1) in
    let v18: s0 = f74(v6, v6) in
    let v10: s0 = f70(v18, v6) in
    v10
  } in
  let f50: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    let v2: s0 = f70(v0, v1) in
    v2
  } in
  let noinline_f0: ([s0], s1, [s1], Float) -> Float = (v0: [s0], v1: s1, v2: [s1], v3: Float) -> Float {
    let v8: [[s0]] = v1.p0 in
    let v9: [s0] = v8[1] in
    let v48: s0 = v9[0] in
    let v57: s0 = f50(v48, v48) in
    let v76: s0 = f67(v57) in
    let v118: Float = v76.p0 in
    v118
  } in
  fun loop(i: Int, v0: [s0], v1: s1, v2: [s1], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s0] = [s0(0.0, [[1.0], [2.0], [3.0]]), s0(4.0, [[5.0], [6.0], [7.0]])] in
    let v1: s1 = s1([[s0(8.0, [[9.0], [10.0], [11.0]])], [s0(12.0, [[13.0], [14.0], [15.0]])]], s0(16.0, [[17.0], [18.0], [19.0]]), [[s0(20.0, [[21.0], [22.0], [23.0]])]]) in
    let v2: [s1] = [s1([[s0(24.0, [[25.0], [26.0], [27.0]])], [s0(28.0, [[29.0], [30.0], [31.0]])]], s0(32.0, [[33.0], [34.0], [35.0]]), [[s0(36.0, [[37.0], [38.0], [39.0]])]]), s1([[s0(40.0, [[41.0], [42.0], [43.0]])], [s0(44.0, [[45.0], [46.0], [47.0]])]], s0(48.0, [[49.0], [50.0], [51.0]]), [[s0(52.0, [[53.0], [54.0], [55.0]])]]), s1([[s0(56.0, [[57.0], [58.0], [59.0]])], [s0(60.0, [[61.0], [62.0], [63.0]])]], s0(64.0, [[65.0], [66.0], [67.0]]), [[s0(68.0, [[69.0], [70.0], [71.0]])]])] in
    let v3: Float = 72.0 in
    let initialResult: Float = 72.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()