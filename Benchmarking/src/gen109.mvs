  let f81: (Float) -> Float = (v0: Float) -> Float {
    var v3: Float = v0 in
    var v1: Float = v3 in
    var v5: Float = v3 in
    let v2: Float = v1 + v3 in
    var v8: Float = v0 in
    var v7: Float = v8 in
    var v6: Float = v5 in
    var v12: Float = v6 in
    var v11: Float = v12 in
    let v18: [Float] = [v7, v0, v11, v5, v3, v7] in
    let v20: Float = v18[2] in
    var v39: [Float] = v18 in
    v39[5] = v20 in
    v39[0] = v11 in
    v39[3] = v2 in
    let v40: Float = v39[5] in
    v40
  } in
  let f44: ([Float], [Float]) -> [Float] = (v0: [Float], v1: [Float]) -> [Float] {
    let v3: Float = v0[0] in
    let v9: Float = f81(v3) in
    var v13: Float = v9 in
    var v14: [Float] = v0 in
    let v28: Float = v14[0] in
    var v10: [Float] = v0 in
    v10[0] = v28 in
    v10[0] = v13 in
    let v32: Float = v14[0] in
    var v26: [Float] = v10 in
    var v56: [Float] = v26 in
    let v132: Float = v14[0] in
    var v68: [Float] = v56 in
    v10[0] = v32 in
    var v145: [Float] = v68 in
    v26[0] = v132 in
    var v157: [Float] = v10 in
    v10 = v157 in
    v145
  } in
  let noinline_f0: ([[Float]], [[Float]], [[Float]], Float) -> Float = (v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float) -> Float {
    var v6: Float = v3 in
    let v4: [Float] = v1[0] in
    var v13: [Float] = v4 in
    let v10: [Float] = f44(v4, v4) in
    let v9: Float = v13[0] in
    v13[0] = v9 in
    let v21: Float = v6 * v9 in
    v13[0] = v6 in
    let v34: Float = v10[0] in
    let v36: Float = v21 + v34 in
    v36
  } in
  fun loop(i: Int, v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0]] in
    let v1: [[Float]] = [[1.0], [2.0], [3.0]] in
    let v2: [[Float]] = [[4.0], [5.0]] in
    let v3: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()