  #include <vector>
  #include <iostream>
  #include <chrono>
  struct s0 {
    std::vector<std::vector<double>> p0;
    std::vector<std::vector<double>> p1;
    s0(std::vector<std::vector<double>> v0, std::vector<std::vector<double>> v1): p0(v0), p1(v1) { }
  };
  struct s1 {
    s0 p0;
    s0 p1;
    s1(s0 v0, s0 v1): p0(v0), p1(v1) { }
  };
  struct s2 {
    std::vector<s0> p0;
    std::vector<s1> p1;
    s2(std::vector<s0> v0, std::vector<s1> v1): p0(v0), p1(v1) { }
  };
  struct s4 {
    std::vector<s2> p0;
    std::vector<s2> p1;
    s4(std::vector<s2> v0, std::vector<s2> v1): p0(v0), p1(v1) { }
  };
  s2 f63(const s2 &v0) {
    const std::vector<s0> v5 = v0.p0;
    std::vector<s0> v30 = v5;
    s2 v56 = v0;
    const std::vector<s0> v28 = v0.p0;
    v56.p0 = v30;
    v56.p0 = v28;
    s2 v84 = v56;
    const std::vector<s1> v68 = v84.p1;
    s2 v113 = v56;
    v113.p1 = v68;
    return v113;
  }
  s2 f60(const s2 &v0) {
    const s2 v7 = f63(v0);
    const std::vector<s1> v2 = v0.p1;
    const std::vector<s1> v5 = v7.p1;
    const std::vector<std::vector<s1>> v6 { v2, v5, v5, v2, v5, v2 };
    const s2 v4 = f63(v0);
    const s2 v11 = f63(v4);
    std::vector<std::vector<s1>> v8 = v6;
    s2 v9 = v4;
    const std::vector<s1> v3 = v11.p1;
    const std::vector<s1> v13 = v7.p1;
    const std::vector<s1> v10 = v4.p1;
    v8[0] = v3;
    const s1 v12 = v3[1];
    const s0 v15 = v12.p1;
    std::vector<s1> v43 = v10;
    v8[4] = v5;
    const s2 v14 = f63(v0);
    const std::vector<s1> v22 = v8[4];
    const s1 v24 = v13[1];
    std::vector<s1> v25 = v3;
    const std::vector<s1> v42 = v6[4];
    v9.p1 = v43;
    v8 = v6;
    const s2 v61 = f63(v0);
    v8[3] = v13;
    v25 = v2;
    v8[2] = v22;
    s2 v37 = v7;
    s1 v36 = v12;
    v9.p1 = v42;
    const s2 v53 = f63(v61);
    s1 v67 = v36;
    v43[1] = v12;
    s2 v31 = v37;
    v36.p0 = v15;
    const std::vector<s1> v32 = v8[5];
    v8[0] = v32;
    v25[1] = v24;
    const std::vector<s0> v30 = v37.p0;
    v37.p1 = v32;
    v25[1] = v67;
    const s2 v45 = f63(v9);
    v31.p0 = v30;
    v25[1] = v12;
    v25[0] = v67;
    const s2 v108 = f63(v31);
    const s2 v121 = f63(v45);
    const std::vector<s2> v131 { v7, v11, v53, v121, v108, v14 };
    const s2 v103 = v131[4];
    v9.p1 = v25;
    return v103;
  }
  s1 f45(const s1 &v0) {
    s1 v7 = v0;
    s1 v21 = v7;
    return v21;
  }
  __attribute__((noinline))
  double f0(const std::vector<s4> &v0, const std::vector<s2> &v1, const double &v2) {
    std::vector<s2> v7 = v1;
    const s2 v6 = v7[2];
    const s2 v15 = f60(v6);
    const std::vector<s1> v57 = v15.p1;
    const s1 v46 = v57[0];
    const s1 v67 = f45(v46);
    const s0 v147 = v67.p1;
    const std::vector<std::vector<double>> v102 = v147.p0;
    const std::vector<double> v41 = v102[0];
    std::vector<double> v314 = v41;
    const double v132 = v314[0];
    return v132;
  }
  int main() {
    std::vector<s4> v0({ { { { { { { { 0.0 } }, { { 1.0 } } } }, { { { { { 2.0 } }, { { 3.0 } } }, { { { 4.0 } }, { { 5.0 } } } }, { { { { 6.0 } }, { { 7.0 } } }, { { { 8.0 } }, { { 9.0 } } } }, { { { { 10.0 } }, { { 11.0 } } }, { { { 12.0 } }, { { 13.0 } } } } } }, { { { { { 14.0 } }, { { 15.0 } } } }, { { { { { 16.0 } }, { { 17.0 } } }, { { { 18.0 } }, { { 19.0 } } } }, { { { { 20.0 } }, { { 21.0 } } }, { { { 22.0 } }, { { 23.0 } } } }, { { { { 24.0 } }, { { 25.0 } } }, { { { 26.0 } }, { { 27.0 } } } } } } }, { { { { { { 28.0 } }, { { 29.0 } } } }, { { { { { 30.0 } }, { { 31.0 } } }, { { { 32.0 } }, { { 33.0 } } } }, { { { { 34.0 } }, { { 35.0 } } }, { { { 36.0 } }, { { 37.0 } } } }, { { { { 38.0 } }, { { 39.0 } } }, { { { 40.0 } }, { { 41.0 } } } } } }, { { { { { 42.0 } }, { { 43.0 } } } }, { { { { { 44.0 } }, { { 45.0 } } }, { { { 46.0 } }, { { 47.0 } } } }, { { { { 48.0 } }, { { 49.0 } } }, { { { 50.0 } }, { { 51.0 } } } }, { { { { 52.0 } }, { { 53.0 } } }, { { { 54.0 } }, { { 55.0 } } } } } }, { { { { { 56.0 } }, { { 57.0 } } } }, { { { { { 58.0 } }, { { 59.0 } } }, { { { 60.0 } }, { { 61.0 } } } }, { { { { 62.0 } }, { { 63.0 } } }, { { { 64.0 } }, { { 65.0 } } } }, { { { { 66.0 } }, { { 67.0 } } }, { { { 68.0 } }, { { 69.0 } } } } } } } }, { { { { { { { 70.0 } }, { { 71.0 } } } }, { { { { { 72.0 } }, { { 73.0 } } }, { { { 74.0 } }, { { 75.0 } } } }, { { { { 76.0 } }, { { 77.0 } } }, { { { 78.0 } }, { { 79.0 } } } }, { { { { 80.0 } }, { { 81.0 } } }, { { { 82.0 } }, { { 83.0 } } } } } }, { { { { { 84.0 } }, { { 85.0 } } } }, { { { { { 86.0 } }, { { 87.0 } } }, { { { 88.0 } }, { { 89.0 } } } }, { { { { 90.0 } }, { { 91.0 } } }, { { { 92.0 } }, { { 93.0 } } } }, { { { { 94.0 } }, { { 95.0 } } }, { { { 96.0 } }, { { 97.0 } } } } } } }, { { { { { { 98.0 } }, { { 99.0 } } } }, { { { { { 100.0 } }, { { 101.0 } } }, { { { 102.0 } }, { { 103.0 } } } }, { { { { 104.0 } }, { { 105.0 } } }, { { { 106.0 } }, { { 107.0 } } } }, { { { { 108.0 } }, { { 109.0 } } }, { { { 110.0 } }, { { 111.0 } } } } } }, { { { { { 112.0 } }, { { 113.0 } } } }, { { { { { 114.0 } }, { { 115.0 } } }, { { { 116.0 } }, { { 117.0 } } } }, { { { { 118.0 } }, { { 119.0 } } }, { { { 120.0 } }, { { 121.0 } } } }, { { { { 122.0 } }, { { 123.0 } } }, { { { 124.0 } }, { { 125.0 } } } } } }, { { { { { 126.0 } }, { { 127.0 } } } }, { { { { { 128.0 } }, { { 129.0 } } }, { { { 130.0 } }, { { 131.0 } } } }, { { { { 132.0 } }, { { 133.0 } } }, { { { 134.0 } }, { { 135.0 } } } }, { { { { 136.0 } }, { { 137.0 } } }, { { { 138.0 } }, { { 139.0 } } } } } } } } });
    std::vector<s2> v1({ { { { { { 140.0 } }, { { 141.0 } } } }, { { { { { 142.0 } }, { { 143.0 } } }, { { { 144.0 } }, { { 145.0 } } } }, { { { { 146.0 } }, { { 147.0 } } }, { { { 148.0 } }, { { 149.0 } } } }, { { { { 150.0 } }, { { 151.0 } } }, { { { 152.0 } }, { { 153.0 } } } } } }, { { { { { 154.0 } }, { { 155.0 } } } }, { { { { { 156.0 } }, { { 157.0 } } }, { { { 158.0 } }, { { 159.0 } } } }, { { { { 160.0 } }, { { 161.0 } } }, { { { 162.0 } }, { { 163.0 } } } }, { { { { 164.0 } }, { { 165.0 } } }, { { { 166.0 } }, { { 167.0 } } } } } }, { { { { { 168.0 } }, { { 169.0 } } } }, { { { { { 170.0 } }, { { 171.0 } } }, { { { 172.0 } }, { { 173.0 } } } }, { { { { 174.0 } }, { { 175.0 } } }, { { { 176.0 } }, { { 177.0 } } } }, { { { { 178.0 } }, { { 179.0 } } }, { { { 180.0 } }, { { 181.0 } } } } } } });
    double v2(182.0);
    auto start = std::chrono::high_resolution_clock::now();
    double result;
    for (int i = 0; i < 1000; i ++) {
      result = f0(v0, v1, v2);
    }
    auto end = std::chrono::high_resolution_clock::now();
    double value = *((double*) &result);
    std::cout << value << "\n";
    std::cout << std::chrono::duration_cast<std::chrono::nanoseconds>(end-start).count();
    std::cout << "\n";
    return 0;
  }
