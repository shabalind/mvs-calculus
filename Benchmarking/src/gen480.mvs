  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  let f38: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p1 in
    let v2: [[[Float]]] = [v1, v1, v1, v1] in
    var v4: [[[Float]]] = v2 in
    let v3: [[Float]] = v2[1] in
    let v13: [[Float]] = v0.p0 in
    var v9: [[[Float]]] = v2 in
    let v12: [[Float]] = v0.p0 in
    let v15: [[Float]] = v4[1] in
    v4 = v2 in
    let v16: s0 = s0(v15, v13) in
    var v81: [[[Float]]] = v2 in
    let v19: [[Float]] = v81[3] in
    v4[0] = v12 in
    let v35: [[Float]] = v16.p1 in
    var v27: s0 = v16 in
    v4[2] = v19 in
    var v29: s0 = v27 in
    let v51: [[Float]] = v27.p1 in
    let v36: [[Float]] = v9[0] in
    let v71: [[Float]] = v29.p1 in
    let v46: [[Float]] = v9[3] in
    v29.p1 = v3 in
    v27.p1 = v51 in
    v29.p0 = v46 in
    v29.p0 = v71 in
    v29.p1 = v35 in
    v27.p0 = v36 in
    v29.p1 = v46 in
    v4[2] = v19 in
    v29
  } in
  let f1: ([s0]) -> [s0] = (v0: [s0]) -> [s0] {
    var v2: [s0] = v0 in
    let v6: s0 = v2[2] in
    let v5: [[Float]] = v6.p0 in
    var v3: s0 = v6 in
    let v7: [Float] = v5[1] in
    let v1: [[Float]] = v3.p1 in
    var v8: [[Float]] = v5 in
    v3.p1 = v8 in
    let v19: s0 = f38(v6) in
    let v42: s0 = f38(v19) in
    let v4: [[Float]] = v3.p0 in
    let v9: s0 = f38(v6) in
    let v13: s0 = f38(v3) in
    let v10: [[Float]] = [v7] in
    var v11: [Float] = v7 in
    v8[1] = v11 in
    var v18: [[Float]] = v1 in
    var v14: [[Float]] = v10 in
    v8[1] = v11 in
    var v23: [[Float]] = v14 in
    let v17: [Float] = v23[0] in
    let v21: s0 = f38(v13) in
    let v22: s0 = f38(v6) in
    let v26: [[Float]] = v3.p1 in
    v3.p0 = v4 in
    v3.p0 = v18 in
    let v43: [[Float]] = v21.p1 in
    let v30: [[Float]] = v21.p0 in
    v3.p0 = v30 in
    v3.p0 = v4 in
    let v20: [[Float]] = v9.p0 in
    var v33: [[Float]] = v14 in
    v3.p1 = v20 in
    v2[2] = v42 in
    v3.p0 = v26 in
    v33 = v14 in
    v3.p0 = v5 in
    let v44: [[Float]] = v3.p1 in
    let v51: [[Float]] = v3.p1 in
    var v63: [s0] = v0 in
    v18[0] = v11 in
    let v49: [[Float]] = v3.p0 in
    let v52: [[Float]] = v42.p1 in
    let v85: s0 = f38(v22) in
    let v73: s0 = s0(v51, v49) in
    let v104: s0 = f38(v9) in
    var v75: [[Float]] = v30 in
    let v94: [[Float]] = v42.p0 in
    v3.p0 = v75 in
    v63[2] = v73 in
    v3.p1 = v51 in
    let v76: [Float] = v33[0] in
    let v74: s0 = f38(v85) in
    v33[0] = v17 in
    var v84: [[Float]] = v52 in
    let v45: [[Float]] = v19.p0 in
    let v71: [Float] = v26[1] in
    v3.p0 = v26 in
    v3.p0 = v45 in
    let v193: [[Float]] = v104.p0 in
    v3.p1 = v94 in
    v3.p0 = v43 in
    v3.p0 = v26 in
    v3.p1 = v44 in
    let v259: [[Float]] = v42.p1 in
    v3.p0 = v193 in
    v84[2] = v71 in
    let v120: [Float] = v259[2] in
    let v148: [[Float]] = v74.p1 in
    v3.p1 = v148 in
    v75[1] = v120 in
    var v126: [s0] = v63 in
    v3.p1 = v84 in
    v8[1] = v76 in
    v126
  } in
  let noinline_f0: (s1, Float) -> Float = (v0: s1, v1: Float) -> Float {
    var v3: s1 = v0 in
    var v5: s1 = v3 in
    let v13: [s0] = v3.p1 in
    let v4: s0 = v13[0] in
    let v10: s0 = f38(v4) in
    var v9: [s0] = v13 in
    v5.p1 = v13 in
    let v14: [s0] = v3.p1 in
    let v8: s0 = f38(v4) in
    let v11: [s0] = v0.p0 in
    let v12: [s0] = f1(v11) in
    let v15: s0 = v11[2] in
    v3.p1 = v9 in
    v5.p1 = v13 in
    v9[0] = v10 in
    let v30: s0 = v14[0] in
    var v22: s0 = v15 in
    var v45: [s0] = v12 in
    let v39: [s0] = v5.p1 in
    let v41: [s0] = v3.p0 in
    v3.p0 = v12 in
    let v40: s0 = f38(v22) in
    let v32: s0 = f38(v40) in
    let v33: s0 = v41[2] in
    let v28: [[Float]] = v30.p1 in
    let v54: s0 = v45[2] in
    let v42: [Float] = v28[0] in
    let v35: [[Float]] = v8.p0 in
    v3.p1 = v39 in
    v22.p0 = v28 in
    v45[0] = v8 in
    var v57: [Float] = v42 in
    v9[0] = v33 in
    let v96: s0 = f38(v22) in
    v57[0] = v1 in
    let v89: [[Float]] = v54.p1 in
    var v77: [[Float]] = v89 in
    let v46: [[Float]] = v32.p1 in
    let v47: [Float] = v46[2] in
    v3.p0 = v45 in
    var v212: [Float] = v57 in
    let v59: [Float] = v77[2] in
    v22.p1 = v35 in
    v77[0] = v47 in
    v77[2] = v212 in
    var v121: [[Float]] = v89 in
    v57[0] = v1 in
    let v151: Float = v59[0] in
    v22.p1 = v121 in
    v3.p1 = v14 in
    v9[0] = v96 in
    v77[0] = v47 in
    v151
  } in
  fun loop(i: Int, v0: s1, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s1 = s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], [s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]) in
    let v1: Float = 24.0 in
    let initialResult: Float = 24.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()