  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: s0
  } in
  struct s3 {
    var p0: [[Float]]
    var p1: [[s0]]
    var p2: [[s0]]
    var p3: [s1]
    var p4: [[s0]]
  } in
  let f117: (Float) -> Float = (v0: Float) -> Float {
    var v4: Float = v0 in
    var v6: Float = v0 in
    var v5: Float = v4 in
    let v8: Float = v4 * v5 in
    let v2: Float = v0 / v8 in
    var v1: Float = v4 in
    v6 = v1 in
    var v23: Float = v4 in
    let v14: [Float] = [v6, v4, v1, v4, v6] in
    var v18: Float = v23 in
    var v25: [Float] = v14 in
    let v21: Float = v14[4] in
    var v13: [Float] = v14 in
    var v20: Float = v18 in
    v13[4] = v1 in
    v25[4] = v8 in
    v13[1] = v21 in
    v13[4] = v2 in
    v13[2] = v2 in
    var v32: [Float] = v13 in
    var v35: Float = v0 in
    v5 = v1 in
    let v90: Float = v14[3] in
    var v39: Float = v20 in
    v32[3] = v18 in
    var v57: Float = v2 in
    v32[1] = v8 in
    v25[0] = v1 in
    v1 = v39 in
    var v45: Float = v90 in
    let v49: Float = v32[0] in
    v13[1] = v57 in
    var v44: [Float] = v25 in
    var v75: [Float] = v44 in
    v45 = v1 in
    v5 = v23 in
    v13[4] = v45 in
    v75[3] = v23 in
    let v109: [[Float]] = [v25] in
    let v97: Float = v75[3] in
    let v79: Float = v14[3] in
    var v58: [[Float]] = v109 in
    let v148: [Float] = v58[0] in
    v13[3] = v49 in
    v58[0] = v14 in
    v44[2] = v79 in
    v13 = v148 in
    v75[3] = v35 in
    v75[3] = v20 in
    v57 = v21 in
    v44[0] = v49 in
    v97
  } in
  let f104: (Float) -> Float = (v0: Float) -> Float {
    let v1: Float = f117(v0) in
    var v6: Float = v0 in
    let v5: Float = f117(v6) in
    let v3: Float = f117(v1) in
    let v8: Float = f117(v5) in
    var v2: Float = v8 in
    let v4: Float = f117(v2) in
    let v10: Float = f117(v0) in
    let v20: Float = f117(v10) in
    var v7: Float = v3 in
    let v13: [Float] = [v8, v7, v1, v3] in
    let v9: Float = f117(v20) in
    var v24: [Float] = v13 in
    let v45: Float = v24[1] in
    var v28: [Float] = v24 in
    v28[2] = v9 in
    v24[2] = v45 in
    let v12: Float = f117(v10) in
    var v22: Float = v3 in
    var v62: [Float] = v13 in
    v24[2] = v22 in
    let v27: Float = f117(v4) in
    v62 = v28 in
    v28[2] = v8 in
    v62[1] = v45 in
    let v56: Float = v62[2] in
    var v30: Float = v56 in
    v30 = v12 in
    v62[1] = v22 in
    v24[2] = v27 in
    v30
  } in
  let noinline_f0: ([[s3]], Float) -> Float = (v0: [[s3]], v1: Float) -> Float {
    var v4: Float = v1 in
    let v32: Float = f104(v4) in
    let v31: Float = f117(v32) in
    v31
  } in
  fun loop(i: Int, v0: [[s3]], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s3]] = [[s3([[0.0], [1.0]], [[s0([2.0], [[3.0]])], [s0([4.0], [[5.0]])], [s0([6.0], [[7.0]])]], [[s0([8.0], [[9.0]])]], [s1([[s0([10.0], [[11.0]])], [s0([12.0], [[13.0]])], [s0([14.0], [[15.0]])]], s0([16.0], [[17.0]]))], [[s0([18.0], [[19.0]])], [s0([20.0], [[21.0]])]])], [s3([[22.0], [23.0]], [[s0([24.0], [[25.0]])], [s0([26.0], [[27.0]])], [s0([28.0], [[29.0]])]], [[s0([30.0], [[31.0]])]], [s1([[s0([32.0], [[33.0]])], [s0([34.0], [[35.0]])], [s0([36.0], [[37.0]])]], s0([38.0], [[39.0]]))], [[s0([40.0], [[41.0]])], [s0([42.0], [[43.0]])]])], [s3([[44.0], [45.0]], [[s0([46.0], [[47.0]])], [s0([48.0], [[49.0]])], [s0([50.0], [[51.0]])]], [[s0([52.0], [[53.0]])]], [s1([[s0([54.0], [[55.0]])], [s0([56.0], [[57.0]])], [s0([58.0], [[59.0]])]], s0([60.0], [[61.0]]))], [[s0([62.0], [[63.0]])], [s0([64.0], [[65.0]])]])]] in
    let v1: Float = 66.0 in
    let initialResult: Float = 66.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()