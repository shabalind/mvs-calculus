  struct s0 {
    var p0: [[Float]]
    var p1: [Float]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s3 {
    var p0: s2
    var p1: s2
  } in
  struct s7 {
    var p0: s1
    var p1: [s3]
  } in
  let f70: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p0 in
    var v2: [[Float]] = v1 in
    let v4: [Float] = v1[0] in
    let v5: Float = v4[0] in
    let v6: [Float] = v2[1] in
    let v7: [Float] = v1[0] in
    v2[1] = v7 in
    var v15: Float = v5 in
    var v27: Float = v5 in
    var v17: [Float] = v6 in
    let v9: Float = v27 + v27 in
    let v10: Float = v9 / v15 in
    v2[0] = v7 in
    let v14: [Float] = v0.p1 in
    v2[1] = v14 in
    let v40: [[Float]] = v0.p0 in
    let v24: s0 = s0(v40, v17) in
    let v26: Float = v15 + v27 in
    var v23: Float = v26 in
    let v66: Float = v4[0] in
    v17[0] = v26 in
    let v32: s0 = s0(v2, v4) in
    v17[0] = v66 in
    let v57: [[Float]] = v32.p0 in
    var v63: s0 = v24 in
    v63.p0 = v2 in
    v17[0] = v23 in
    v15 = v10 in
    v63.p0 = v57 in
    v63
  } in
  let f68: (s0) -> s0 = (v0: s0) -> s0 {
    var v2: s0 = v0 in
    let v3: [[Float]] = v2.p0 in
    let v4: [Float] = v3[1] in
    let v5: s0 = f70(v0) in
    let v7: [Float] = v3[0] in
    let v1: [Float] = v5.p1 in
    let v9: [[Float]] = v5.p0 in
    var v8: [[Float]] = v3 in
    v2.p0 = v9 in
    let v6: [Float] = v3[1] in
    let v10: s0 = f70(v0) in
    let v17: [Float] = v10.p1 in
    v2.p1 = v1 in
    let v11: Float = v1[0] in
    let v15: [[Float]] = v0.p0 in
    var v13: [[Float]] = v3 in
    let v18: [Float] = v5.p1 in
    v2.p0 = v3 in
    let v14: s0 = f70(v0) in
    v2.p1 = v17 in
    v13[1] = v6 in
    let v22: s0 = s0(v8, v4) in
    v2.p1 = v17 in
    let v31: s0 = f70(v2) in
    let v23: s0 = f70(v0) in
    let v43: s0 = f70(v31) in
    var v24: [Float] = v1 in
    let v21: Float = v18[0] in
    v8[1] = v7 in
    let v25: [[Float]] = v22.p0 in
    var v27: s0 = v23 in
    let v39: s0 = f70(v2) in
    let v28: [Float] = v0.p1 in
    let v29: Float = v24[0] in
    let v35: [[Float]] = v39.p0 in
    v2.p1 = v4 in
    v27.p0 = v8 in
    let v46: s0 = f70(v43) in
    v13[0] = v28 in
    let v59: [Float] = v35[0] in
    v2.p0 = v13 in
    var v48: [[Float]] = v13 in
    let v52: [Float] = v48[0] in
    let v51: [[Float]] = v2.p0 in
    let v122: s0 = f70(v23) in
    v27.p1 = v28 in
    var v33: [[Float]] = v9 in
    v27.p0 = v25 in
    let v60: [Float] = v122.p1 in
    let v65: [[Float]] = v10.p0 in
    let v92: [Float] = v2.p1 in
    var v40: [Float] = v7 in
    let v133: [Float] = v46.p1 in
    let v78: s0 = f70(v27) in
    v13[0] = v133 in
    v33[0] = v40 in
    let v93: s0 = f70(v2) in
    var v90: [[Float]] = v8 in
    let v66: s0 = f70(v0) in
    v27.p1 = v28 in
    let v49: [Float] = v51[1] in
    var v71: [Float] = v18 in
    let v44: [[Float]] = [v52, v59, v71, v24] in
    let v72: [Float] = v93.p1 in
    let v85: [Float] = v44[0] in
    v90[1] = v85 in
    v2.p1 = v40 in
    v27.p0 = v15 in
    v48[0] = v40 in
    var v57: [Float] = v72 in
    let v83: [Float] = v65[1] in
    v48[0] = v57 in
    let v150: Float = v92[0] in
    let v63: s0 = f70(v14) in
    v2.p0 = v3 in
    v71[0] = v150 in
    var v117: Float = v11 in
    let v107: Float = v83[0] in
    v24[0] = v29 in
    v27.p1 = v7 in
    v27.p0 = v90 in
    v90 = v8 in
    v27.p1 = v60 in
    v27.p0 = v15 in
    var v219: [[Float]] = v35 in
    v27.p0 = v8 in
    var v165: [[Float]] = v33 in
    let v469: [[Float]] = v66.p0 in
    let v115: [Float] = v63.p1 in
    v57 = v49 in
    v27.p1 = v17 in
    v40[0] = v21 in
    v71[0] = v117 in
    v27.p0 = v219 in
    let v211: s0 = f70(v78) in
    v40[0] = v107 in
    v27.p0 = v469 in
    v27.p1 = v115 in
    v2.p0 = v165 in
    v2.p0 = v33 in
    v211
  } in
  let noinline_f0: (s3, s7, Float) -> Float = (v0: s3, v1: s7, v2: Float) -> Float {
    let v9: s1 = v1.p0 in
    let v5: [s1] = [v9] in
    let v12: s1 = v5[0] in
    let v14: [s0] = v12.p0 in
    let v35: s0 = v14[0] in
    let v52: s0 = f68(v35) in
    let v38: [[Float]] = v52.p0 in
    let v97: [Float] = v38[1] in
    var v155: [[Float]] = v38 in
    let v27: [Float] = v155[0] in
    v155[1] = v97 in
    let v71: Float = v27[0] in
    v71
  } in
  fun loop(i: Int, v0: s3, v1: s7, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s3 = s3(s2(s0([[0.0], [1.0]], [2.0]), [[s0([[3.0], [4.0]], [5.0])]]), s2(s0([[6.0], [7.0]], [8.0]), [[s0([[9.0], [10.0]], [11.0])]])) in
    let v1: s7 = s7(s1([s0([[12.0], [13.0]], [14.0])], s0([[15.0], [16.0]], [17.0])), [s3(s2(s0([[18.0], [19.0]], [20.0]), [[s0([[21.0], [22.0]], [23.0])]]), s2(s0([[24.0], [25.0]], [26.0]), [[s0([[27.0], [28.0]], [29.0])]])), s3(s2(s0([[30.0], [31.0]], [32.0]), [[s0([[33.0], [34.0]], [35.0])]]), s2(s0([[36.0], [37.0]], [38.0]), [[s0([[39.0], [40.0]], [41.0])]]))]) in
    let v2: Float = 42.0 in
    let initialResult: Float = 42.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()