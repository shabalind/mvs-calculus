  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s0
  } in
  struct s3 {
    var p0: [Float]
    var p1: s0
  } in
  struct s4 {
    var p0: s1
    var p1: s2
  } in
  struct s8 {
    var p0: [s2]
    var p1: [[s3]]
  } in
  let noinline_f0: (s8, [s2], s4, Float) -> Float = (v0: s8, v1: [s2], v2: s4, v3: Float) -> Float {
    let v8: s2 = v1[1] in
    let v11: [s1] = v8.p0 in
    var v18: [s1] = v11 in
    let v22: s1 = v18[1] in
    v18[0] = v22 in
    let v25: s0 = v22.p1 in
    v18[2] = v22 in
    v18[0] = v22 in
    let v59: [[Float]] = v25.p0 in
    let v81: [Float] = v59[1] in
    let v57: Float = v81[0] in
    v57
  } in
  fun loop(i: Int, v0: s8, v1: [s2], v2: s4, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s8 = s8([s2([s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])), s1(s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])), s1(s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]))], s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])), s2([s1(s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]]), s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])), s1(s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]]), s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]])), s1(s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]]))], s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]]))], [[s3([84.0, 85.0, 86.0], s0([[87.0], [88.0], [89.0]], [[90.0], [91.0], [92.0]]))]]) in
    let v1: [s2] = [s2([s1(s0([[93.0], [94.0], [95.0]], [[96.0], [97.0], [98.0]]), s0([[99.0], [100.0], [101.0]], [[102.0], [103.0], [104.0]])), s1(s0([[105.0], [106.0], [107.0]], [[108.0], [109.0], [110.0]]), s0([[111.0], [112.0], [113.0]], [[114.0], [115.0], [116.0]])), s1(s0([[117.0], [118.0], [119.0]], [[120.0], [121.0], [122.0]]), s0([[123.0], [124.0], [125.0]], [[126.0], [127.0], [128.0]]))], s0([[129.0], [130.0], [131.0]], [[132.0], [133.0], [134.0]])), s2([s1(s0([[135.0], [136.0], [137.0]], [[138.0], [139.0], [140.0]]), s0([[141.0], [142.0], [143.0]], [[144.0], [145.0], [146.0]])), s1(s0([[147.0], [148.0], [149.0]], [[150.0], [151.0], [152.0]]), s0([[153.0], [154.0], [155.0]], [[156.0], [157.0], [158.0]])), s1(s0([[159.0], [160.0], [161.0]], [[162.0], [163.0], [164.0]]), s0([[165.0], [166.0], [167.0]], [[168.0], [169.0], [170.0]]))], s0([[171.0], [172.0], [173.0]], [[174.0], [175.0], [176.0]]))] in
    let v2: s4 = s4(s1(s0([[177.0], [178.0], [179.0]], [[180.0], [181.0], [182.0]]), s0([[183.0], [184.0], [185.0]], [[186.0], [187.0], [188.0]])), s2([s1(s0([[189.0], [190.0], [191.0]], [[192.0], [193.0], [194.0]]), s0([[195.0], [196.0], [197.0]], [[198.0], [199.0], [200.0]])), s1(s0([[201.0], [202.0], [203.0]], [[204.0], [205.0], [206.0]]), s0([[207.0], [208.0], [209.0]], [[210.0], [211.0], [212.0]])), s1(s0([[213.0], [214.0], [215.0]], [[216.0], [217.0], [218.0]]), s0([[219.0], [220.0], [221.0]], [[222.0], [223.0], [224.0]]))], s0([[225.0], [226.0], [227.0]], [[228.0], [229.0], [230.0]]))) in
    let v3: Float = 231.0 in
    let initialResult: Float = 231.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()