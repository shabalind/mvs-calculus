  struct s0 {
    var p0: [Float]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: s1
    var p2: s0
  } in
  let f78: (s2) -> s2 = (v0: s2) -> s2 {
    var v7: s2 = v0 in
    var v2: s2 = v0 in
    var v8: s2 = v2 in
    var v1: s2 = v8 in
    let v6: s1 = v7.p1 in
    let v9: s0 = v6.p1 in
    var v3: s1 = v6 in
    v3.p0 = v9 in
    var v5: s0 = v9 in
    var v4: s0 = v9 in
    var v11: s0 = v4 in
    var v25: s1 = v3 in
    let v14: s0 = v8.p2 in
    v7.p2 = v14 in
    let v10: [Float] = v4.p0 in
    let v20: Float = v10[0] in
    let v12: Float = v10[1] in
    let v21: Float = v20 / v20 in
    v7.p2 = v11 in
    let v34: [[Float]] = v5.p1 in
    var v31: [Float] = v10 in
    var v15: s1 = v3 in
    let v26: [Float] = v9.p0 in
    let v19: [Float] = v34[0] in
    v1.p2 = v5 in
    var v27: Float = v21 in
    v5.p0 = v26 in
    v31[1] = v21 in
    let v56: Float = v19[0] in
    let v22: [[Float]] = v9.p1 in
    v31[1] = v20 in
    v31[1] = v12 in
    let v16: Float = v19[0] in
    v7.p1 = v15 in
    let v36: [Float] = v9.p0 in
    v27 = v56 in
    v31[0] = v12 in
    v31[1] = v16 in
    var v84: s1 = v3 in
    let v29: s0 = v25.p0 in
    var v30: [Float] = v31 in
    let v73: s0 = v15.p0 in
    v5.p1 = v34 in
    let v50: s0 = s0(v36, v34) in
    v25.p1 = v73 in
    let v94: s0 = v15.p1 in
    let v74: s0 = s0(v30, v22) in
    let v63: s0 = v1.p2 in
    v5.p1 = v34 in
    var v127: s0 = v4 in
    v4 = v50 in
    v8.p2 = v29 in
    v3.p0 = v11 in
    v3.p0 = v63 in
    v15.p0 = v73 in
    let v117: [s1] = v0.p0 in
    let v109: s1 = v117[1] in
    let v124: s2 = s2(v117, v84, v127) in
    v15.p0 = v94 in
    let v122: s0 = v109.p0 in
    let v79: [[Float]] = v29.p1 in
    v84.p0 = v74 in
    v11.p1 = v79 in
    v31[0] = v27 in
    v11 = v122 in
    v124
  } in
  let noinline_f0: (s2, Float) -> Float = (v0: s2, v1: Float) -> Float {
    var v2: s2 = v0 in
    let v6: s2 = f78(v2) in
    let v12: s1 = v6.p1 in
    var v8: s1 = v12 in
    let v10: s0 = v8.p1 in
    let v18: [Float] = v10.p0 in
    v8.p1 = v10 in
    v8.p1 = v10 in
    let v66: Float = v18[0] in
    v66
  } in
  fun loop(i: Int, v0: s2, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2([s1(s0([0.0, 1.0], [[2.0], [3.0]]), s0([4.0, 5.0], [[6.0], [7.0]])), s1(s0([8.0, 9.0], [[10.0], [11.0]]), s0([12.0, 13.0], [[14.0], [15.0]]))], s1(s0([16.0, 17.0], [[18.0], [19.0]]), s0([20.0, 21.0], [[22.0], [23.0]])), s0([24.0, 25.0], [[26.0], [27.0]])) in
    let v1: Float = 28.0 in
    let initialResult: Float = 28.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()