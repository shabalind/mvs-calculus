  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [s0]
  } in
  let f81: (s0, s0) -> s0 = (v0: s0, v1: s0) -> s0 {
    v0
  } in
  let f74: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: [[Float]] = v0.p1 in
    var v2: [[Float]] = v4 in
    let v1: [[Float]] = v0.p1 in
    let v3: s0 = f81(v0, v0) in
    let v6: s0 = f81(v3, v0) in
    var v5: [[Float]] = v2 in
    var v11: s0 = v3 in
    v11.p0 = v5 in
    let v8: [Float] = v4[2] in
    v11.p1 = v5 in
    v11.p0 = v5 in
    let v15: [Float] = v1[2] in
    let v18: [[Float]] = v3.p1 in
    let v19: [Float] = v5[2] in
    let v9: s0 = f81(v6, v6) in
    v5[1] = v15 in
    let v21: [[Float]] = v6.p0 in
    v11.p1 = v5 in
    v2[2] = v8 in
    var v14: s0 = v6 in
    v2[1] = v19 in
    let v22: s0 = f81(v14, v0) in
    v11.p1 = v5 in
    let v17: [Float] = v18[0] in
    var v29: s0 = v22 in
    v29.p0 = v5 in
    v11.p0 = v21 in
    v5[2] = v17 in
    let v26: s0 = f81(v0, v9) in
    let v33: s0 = f81(v9, v0) in
    let v103: [[Float]] = v26.p0 in
    let v78: s0 = f81(v22, v11) in
    v29.p1 = v1 in
    v14 = v33 in
    let v60: s0 = f81(v78, v26) in
    var v66: s0 = v22 in
    let v48: [[Float]] = v29.p0 in
    v29.p0 = v1 in
    let v129: [[Float]] = v60.p1 in
    var v67: s0 = v66 in
    var v79: [Float] = v8 in
    var v95: s0 = v60 in
    v11.p0 = v48 in
    v66.p1 = v103 in
    let v57: s0 = f81(v0, v6) in
    var v153: s0 = v6 in
    v67.p0 = v48 in
    let v115: s0 = f81(v153, v95) in
    var v137: [[Float]] = v129 in
    v66.p1 = v18 in
    let v91: [[Float]] = v57.p1 in
    v67.p1 = v21 in
    v95.p0 = v91 in
    let v121: s0 = f81(v67, v6) in
    let v139: s0 = f81(v121, v115) in
    v137[1] = v79 in
    v66.p0 = v137 in
    v139
  } in
  let f67: (s0) -> s0 = (v0: s0) -> s0 {
    var v3: s0 = v0 in
    let v6: [s0] = [v3] in
    var v1: s0 = v0 in
    let v4: s0 = f74(v1) in
    let v12: [[Float]] = v4.p0 in
    v3.p0 = v12 in
    var v5: [[Float]] = v12 in
    let v11: [Float] = v5[1] in
    var v10: s0 = v3 in
    v3.p0 = v5 in
    let v24: [[Float]] = v10.p0 in
    let v19: s0 = v6[0] in
    v5[1] = v11 in
    v3.p0 = v24 in
    v19
  } in
  let f56: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: s0 = f67(v0) in
    let v11: s0 = f67(v0) in
    let v26: s0 = f74(v4) in
    let v25: s0 = f74(v11) in
    let v20: s0 = f74(v11) in
    let v114: s0 = f74(v4) in
    let v79: s0 = f81(v25, v26) in
    let v140: [[Float]] = v114.p1 in
    let v93: s0 = f81(v79, v20) in
    let v249: [[Float]] = v93.p0 in
    let v175: s0 = s0(v140, v249) in
    v175
  } in
  let f50: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v3: s0 = f74(v0) in
    let v2: [[Float]] = v3.p0 in
    let v7: s0 = f56(v4) in
    let v8: s0 = f56(v0) in
    let v15: s0 = f81(v0, v8) in
    let v10: [s0] = [v3, v7] in
    let v20: [s0] = [v15, v4] in
    let v19: s0 = v20[0] in
    v4.p0 = v2 in
    let v50: s0 = v10[1] in
    let v64: s0 = f67(v50) in
    let v58: s0 = f81(v19, v64) in
    v58
  } in
  let f45: (s0) -> s0 = (v0: s0) -> s0 {
    let v8: s0 = f67(v0) in
    let v19: s0 = f50(v0) in
    let v15: s0 = f50(v19) in
    let v25: [s0] = [v19, v19, v15, v0, v8, v19] in
    var v30: [s0] = v25 in
    let v104: s0 = v30[5] in
    v104
  } in
  let f9: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p1 in
    let v3: s0 = f81(v0, v0) in
    var v2: s0 = v3 in
    let v4: [[Float]] = v2.p1 in
    let v11: [[Float]] = v2.p1 in
    let v10: [Float] = v4[2] in
    var v17: [[Float]] = v4 in
    let v21: [[Float]] = v3.p1 in
    v2.p0 = v6 in
    v17[0] = v10 in
    v2.p0 = v4 in
    var v18: s0 = v3 in
    v18.p0 = v11 in
    let v20: [Float] = v11[1] in
    v2.p0 = v17 in
    v17[1] = v10 in
    v17[1] = v20 in
    var v31: s0 = v18 in
    v31.p0 = v21 in
    v31
  } in
  let noinline_f0: (s0, [s1], Float) -> Float = (v0: s0, v1: [s1], v2: Float) -> Float {
    let v5: s0 = f9(v0) in
    let v8: s0 = f45(v0) in
    var v3: Float = v2 in
    let v17: [[Float]] = v8.p1 in
    let v15: [Float] = v17[2] in
    let v9: [[Float]] = v5.p0 in
    var v13: [Float] = v15 in
    let v20: [Float] = v9[1] in
    let v21: [[Float]] = v8.p0 in
    let v14: [Float] = v21[2] in
    let v26: Float = v13[0] in
    v13[0] = v3 in
    let v32: Float = v20[0] in
    v13[0] = v32 in
    let v23: Float = v14[0] in
    let v112: Float = v26 / v23 in
    v13[0] = v112 in
    v112
  } in
  fun loop(i: Int, v0: s0, v1: [s1], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]) in
    let v1: [s1] = [s1([s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]), s1([s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])], [s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])])] in
    let v2: Float = 42.0 in
    let initialResult: Float = 42.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()