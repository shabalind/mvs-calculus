  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: s0
    var p1: [[s1]]
  } in
  struct s3 {
    var p0: s2
    var p1: Float
  } in
  struct s4 {
    var p0: s2
    var p1: [s1]
  } in
  let noinline_f0: (s0, [s1], [s2], [s4], [s3], Float) -> Float = (v0: s0, v1: [s1], v2: [s2], v3: [s4], v4: [s3], v5: Float) -> Float {
    let v10: s1 = v1[0] in
    let v6: s0 = v10.p1 in
    let v11: s1 = v1[0] in
    let v15: s0 = v11.p1 in
    let v20: [[Float]] = v6.p1 in
    var v27: s0 = v15 in
    v27.p1 = v20 in
    let v72: [[Float]] = v27.p0 in
    let v110: [Float] = v72[0] in
    let v87: Float = v110[0] in
    v87
  } in
  fun loop(i: Int, v0: s0, v1: [s1], v2: [s2], v3: [s4], v4: [s3], v5: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], [[2.0], [3.0]]) in
    let v1: [s1] = [s1(s0([[4.0], [5.0]], [[6.0], [7.0]]), s0([[8.0], [9.0]], [[10.0], [11.0]]))] in
    let v2: [s2] = [s2(s0([[12.0], [13.0]], [[14.0], [15.0]]), [[s1(s0([[16.0], [17.0]], [[18.0], [19.0]]), s0([[20.0], [21.0]], [[22.0], [23.0]]))]])] in
    let v3: [s4] = [s4(s2(s0([[24.0], [25.0]], [[26.0], [27.0]]), [[s1(s0([[28.0], [29.0]], [[30.0], [31.0]]), s0([[32.0], [33.0]], [[34.0], [35.0]]))]]), [s1(s0([[36.0], [37.0]], [[38.0], [39.0]]), s0([[40.0], [41.0]], [[42.0], [43.0]]))]), s4(s2(s0([[44.0], [45.0]], [[46.0], [47.0]]), [[s1(s0([[48.0], [49.0]], [[50.0], [51.0]]), s0([[52.0], [53.0]], [[54.0], [55.0]]))]]), [s1(s0([[56.0], [57.0]], [[58.0], [59.0]]), s0([[60.0], [61.0]], [[62.0], [63.0]]))]), s4(s2(s0([[64.0], [65.0]], [[66.0], [67.0]]), [[s1(s0([[68.0], [69.0]], [[70.0], [71.0]]), s0([[72.0], [73.0]], [[74.0], [75.0]]))]]), [s1(s0([[76.0], [77.0]], [[78.0], [79.0]]), s0([[80.0], [81.0]], [[82.0], [83.0]]))])] in
    let v4: [s3] = [s3(s2(s0([[84.0], [85.0]], [[86.0], [87.0]]), [[s1(s0([[88.0], [89.0]], [[90.0], [91.0]]), s0([[92.0], [93.0]], [[94.0], [95.0]]))]]), 96.0), s3(s2(s0([[97.0], [98.0]], [[99.0], [100.0]]), [[s1(s0([[101.0], [102.0]], [[103.0], [104.0]]), s0([[105.0], [106.0]], [[107.0], [108.0]]))]]), 109.0)] in
    let v5: Float = 110.0 in
    let initialResult: Float = 110.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()