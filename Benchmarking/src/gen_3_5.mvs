  let f5: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    v0
  } in
  let f4: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v2: [Float] = v0[0] in
    var v1: [Float] = v2 in
    let v3: [Float] = v0[0] in
    var v28: [[Float]] = v0 in
    var v24: [[Float]] = v0 in
    var v21: [[Float]] = v24 in
    var v23: [[Float]] = v24 in
    v21[0] = v1 in
    var v32: [Float] = v3 in
    let v39: [[[Float]]] = [v23, v24, v21, v21, v28, v28] in
    v21[0] = v32 in
    let v57: [[Float]] = v39[3] in
    v57
  } in
  let f3: (Float, [[Float]], [[Float]]) -> Float = (v0: Float, v1: [[Float]], v2: [[Float]]) -> Float {
    let v4: [Float] = v2[0] in
    var v23: [Float] = v4 in
    v23[0] = v0 in
    let v16: Float = v4[0] in
    var v20: Float = v16 in
    let v46: Float = v0 + v20 in
    var v42: Float = v0 in
    let v24: Float = v4[0] in
    let v102: [Float] = [v20, v46, v42] in
    let v83: Float = v102[2] in
    let v107: Float = v23[0] in
    let v179: Float = v83 * v24 in
    v20 = v107 in
    v179
  } in
  let f2: ([[Float]]) -> [[Float]] = (v0: [[Float]]) -> [[Float]] {
    let v10: [[Float]] = f5(v0) in
    let v30: [[Float]] = f5(v10) in
    let v25: [[Float]] = f5(v30) in
    var v38: [[Float]] = v25 in
    let v43: [[Float]] = f5(v38) in
    let v114: [[[Float]]] = [v43] in
    var v45: [[[Float]]] = v114 in
    let v62: [[Float]] = v45[0] in
    let v145: [[Float]] = f5(v62) in
    v145
  } in
  let f1: ([[Float]], [[Float]], [[Float]]) -> [[Float]] = (v0: [[Float]], v1: [[Float]], v2: [[Float]]) -> [[Float]] {
    let v8: [[Float]] = f4(v2) in
    let v4: [Float] = v1[2] in
    let v7: [[Float]] = f5(v0) in
    var v5: [[Float]] = v1 in
    let v10: [[Float]] = f2(v7) in
    let v18: [Float] = v10[1] in
    let v13: [[Float]] = f5(v10) in
    let v30: [Float] = v8[0] in
    let v16: [Float] = v13[0] in
    v5[2] = v4 in
    var v21: [[Float]] = v1 in
    v21[0] = v16 in
    let v53: [Float] = v7[0] in
    v21[0] = v4 in
    v21[1] = v30 in
    let v28: [[[Float]]] = [v21, v5] in
    v21[2] = v53 in
    let v37: [[Float]] = v28[0] in
    let v79: [Float] = v37[0] in
    var v62: [[Float]] = v2 in
    v62[0] = v18 in
    var v111: [[Float]] = v62 in
    let v57: [[Float]] = v28[0] in
    let v76: [Float] = v57[1] in
    v62[0] = v79 in
    v5[1] = v76 in
    v111
  } in
  let noinline_f0: ([[Float]], [[Float]], [[Float]], Float) -> Float = (v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float) -> Float {
    let v7: Float = v3 / v3 in
    var v6: [[Float]] = v1 in
    let v9: [[Float]] = f1(v0, v2, v1) in
    let v10: Float = f3(v7, v0, v1) in
    let v15: [Float] = v9[0] in
    let v11: [[Float]] = f4(v6) in
    v6[0] = v15 in
    let v8: Float = f3(v10, v0, v6) in
    let v12: [[Float]] = f5(v0) in
    let v35: Float = v8 - v7 in
    let v38: Float = f3(v35, v12, v11) in
    v38
  } in
  fun loop(i: Int, v0: [[Float]], v1: [[Float]], v2: [[Float]], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[Float]] = [[0.0], [1.0]] in
    let v1: [[Float]] = [[2.0]] in
    let v2: [[Float]] = [[3.0], [4.0], [5.0]] in
    let v3: Float = 6.0 in
    let initialResult: Float = 6.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()