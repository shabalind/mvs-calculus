  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: s1
    var p1: s1
  } in
  let f18: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: [[Float]] = v0.p0 in
    let v6: [Float] = v1[2] in
    let v7: [[Float]] = v0.p0 in
    let v8: [[Float]] = v0.p1 in
    var v4: s0 = v0 in
    let v13: [[Float]] = v4.p1 in
    let v5: [[Float]] = v0.p1 in
    let v10: [[Float]] = v4.p0 in
    var v9: [[Float]] = v10 in
    var v18: [[Float]] = v1 in
    let v12: [[Float]] = v0.p1 in
    let v28: [Float] = v8[2] in
    let v16: [[Float]] = v4.p1 in
    let v34: [s0] = [v0, v0, v4] in
    let v35: [[[Float]]] = [v1, v16, v9, v16, v13, v5, v7] in
    v4.p0 = v8 in
    var v21: [[[Float]]] = v35 in
    v4.p1 = v7 in
    let v26: [Float] = v5[0] in
    v18[1] = v6 in
    let v17: s0 = v34[1] in
    var v30: [[Float]] = v13 in
    let v20: [[Float]] = v21[4] in
    let v25: [[Float]] = v35[1] in
    v4.p0 = v8 in
    let v23: s0 = s0(v9, v12) in
    v4.p0 = v30 in
    let v48: [Float] = v7[0] in
    v4.p1 = v25 in
    let v39: [[Float]] = v4.p1 in
    let v29: [[Float]] = v0.p0 in
    var v32: [[Float]] = v29 in
    let v94: s0 = s0(v25, v30) in
    v9[0] = v26 in
    var v54: [[Float]] = v39 in
    var v114: s0 = v0 in
    v114.p1 = v30 in
    let v103: [s0] = [v4, v94, v114, v4] in
    let v140: [[Float]] = v23.p1 in
    v21[1] = v140 in
    let v91: s0 = v103[3] in
    v114.p1 = v9 in
    let v47: [[Float]] = v35[2] in
    v30 = v54 in
    v114.p1 = v32 in
    let v100: [[Float]] = v17.p0 in
    var v176: [Float] = v28 in
    v4.p0 = v20 in
    let v76: [[Float]] = v91.p0 in
    v114.p1 = v10 in
    let v93: s0 = s0(v100, v140) in
    v4.p0 = v47 in
    let v195: [[Float]] = v93.p1 in
    v114.p1 = v18 in
    v4.p1 = v39 in
    v4.p1 = v195 in
    var v188: [s0] = v103 in
    v18[1] = v176 in
    v30[1] = v48 in
    v18[1] = v28 in
    v114.p0 = v76 in
    let v235: s0 = v188[1] in
    v114.p1 = v1 in
    v235
  } in
  let noinline_f0: ([s2], [[s2]], Float) -> Float = (v0: [s2], v1: [[s2]], v2: Float) -> Float {
    let v3: [s2] = v1[0] in
    let v7: s2 = v3[0] in
    let v10: s1 = v7.p1 in
    let v5: [[s0]] = v10.p1 in
    let v12: [s0] = v5[0] in
    let v16: s0 = v12[0] in
    let v41: s0 = f18(v16) in
    let v96: [[Float]] = v41.p0 in
    let v71: [Float] = v96[0] in
    let v155: Float = v71[0] in
    v155
  } in
  fun loop(i: Int, v0: [s2], v1: [[s2]], v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2(s1([s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]]), s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], [[s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])], [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])]]), s1([s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]]), s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])], [[s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])], [s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]])]])), s2(s1([s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]]), s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]]), s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])], [[s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])], [s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]])]]), s1([s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]]), s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]]), s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]])], [[s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]])], [s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]])]])), s2(s1([s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]]), s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]]), s0([[132.0], [133.0], [134.0]], [[135.0], [136.0], [137.0]])], [[s0([[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]])], [s0([[144.0], [145.0], [146.0]], [[147.0], [148.0], [149.0]])]]), s1([s0([[150.0], [151.0], [152.0]], [[153.0], [154.0], [155.0]]), s0([[156.0], [157.0], [158.0]], [[159.0], [160.0], [161.0]]), s0([[162.0], [163.0], [164.0]], [[165.0], [166.0], [167.0]])], [[s0([[168.0], [169.0], [170.0]], [[171.0], [172.0], [173.0]])], [s0([[174.0], [175.0], [176.0]], [[177.0], [178.0], [179.0]])]]))] in
    let v1: [[s2]] = [[s2(s1([s0([[180.0], [181.0], [182.0]], [[183.0], [184.0], [185.0]]), s0([[186.0], [187.0], [188.0]], [[189.0], [190.0], [191.0]]), s0([[192.0], [193.0], [194.0]], [[195.0], [196.0], [197.0]])], [[s0([[198.0], [199.0], [200.0]], [[201.0], [202.0], [203.0]])], [s0([[204.0], [205.0], [206.0]], [[207.0], [208.0], [209.0]])]]), s1([s0([[210.0], [211.0], [212.0]], [[213.0], [214.0], [215.0]]), s0([[216.0], [217.0], [218.0]], [[219.0], [220.0], [221.0]]), s0([[222.0], [223.0], [224.0]], [[225.0], [226.0], [227.0]])], [[s0([[228.0], [229.0], [230.0]], [[231.0], [232.0], [233.0]])], [s0([[234.0], [235.0], [236.0]], [[237.0], [238.0], [239.0]])]]))]] in
    let v2: Float = 240.0 in
    let initialResult: Float = 240.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()