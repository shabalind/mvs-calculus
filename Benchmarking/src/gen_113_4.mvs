  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [[s0]]
    var p1: [s0]
  } in
  struct s2 {
    var p0: [[s0]]
    var p1: s1
  } in
  struct s3 {
    var p0: s2
    var p1: s0
  } in
  struct s5 {
    var p0: s0
    var p1: [[s3]]
  } in
  struct s6 {
    var p0: s1
    var p1: s5
  } in
  let f7: (s0) -> s0 = (v0: s0) -> s0 {
    let v5: [[Float]] = v0.p1 in
    let v4: [[Float]] = v0.p0 in
    let v1: [[Float]] = v0.p1 in
    let v8: [[Float]] = v0.p0 in
    var v14: [[Float]] = v8 in
    let v15: [[Float]] = v0.p0 in
    let v35: s0 = s0(v4, v1) in
    var v53: [[Float]] = v1 in
    var v26: s0 = v35 in
    v26.p0 = v5 in
    v26.p0 = v53 in
    v26.p0 = v15 in
    v26.p1 = v14 in
    v26.p1 = v15 in
    v26
  } in
  let f6: (s3, s0) -> s0 = (v0: s3, v1: s0) -> s0 {
    var v6: s0 = v1 in
    var v7: s0 = v6 in
    let v9: [[Float]] = v6.p0 in
    let v8: [Float] = v9[1] in
    var v11: [[Float]] = v9 in
    let v13: [[Float]] = v6.p1 in
    v6.p0 = v9 in
    var v14: [Float] = v8 in
    v7.p0 = v9 in
    v11[2] = v14 in
    let v20: [[Float]] = v7.p0 in
    v11[0] = v8 in
    let v24: [[[Float]]] = [v13] in
    v11[0] = v8 in
    let v34: s0 = s0(v11, v11) in
    let v50: [Float] = v13[1] in
    let v29: Float = v50[0] in
    v6.p1 = v20 in
    var v38: [[[Float]]] = v24 in
    v11[2] = v14 in
    v14[0] = v29 in
    let v136: [[Float]] = v38[0] in
    v6.p0 = v9 in
    v6.p1 = v9 in
    let v94: [Float] = v136[2] in
    v11[2] = v94 in
    v34
  } in
  let f4: (s0) -> s0 = (v0: s0) -> s0 {
    let v4: s0 = f7(v0) in
    let v6: [[Float]] = v0.p0 in
    let v5: [[Float]] = v4.p1 in
    var v3: s0 = v0 in
    let v1: s0 = f7(v4) in
    let v11: [[Float]] = v0.p1 in
    let v8: [[Float]] = v0.p0 in
    var v13: s0 = v0 in
    let v15: s0 = f7(v3) in
    let v23: [Float] = v11[1] in
    let v9: s0 = f7(v15) in
    v13.p1 = v8 in
    v13.p0 = v8 in
    v13 = v1 in
    let v19: [[Float]] = v1.p1 in
    let v37: Float = v23[0] in
    var v25: Float = v37 in
    let v16: s0 = f7(v3) in
    var v35: [[Float]] = v5 in
    v13.p1 = v5 in
    var v26: [Float] = v23 in
    var v30: [Float] = v26 in
    let v24: s0 = f7(v3) in
    v13 = v9 in
    let v40: [[Float]] = v0.p1 in
    var v42: [[Float]] = v35 in
    let v56: [s0] = [v4] in
    let v31: s0 = v56[0] in
    let v38: s0 = f7(v15) in
    let v69: [[Float]] = v38.p0 in
    v3.p0 = v69 in
    v3.p1 = v8 in
    let v53: s0 = f7(v24) in
    v30[0] = v25 in
    let v54: [[Float]] = v53.p0 in
    var v58: s0 = v13 in
    var v50: [[Float]] = v40 in
    let v47: [[Float]] = v31.p1 in
    v13.p1 = v47 in
    v42 = v50 in
    let v73: s0 = f7(v58) in
    let v75: [[Float]] = v58.p0 in
    v3 = v16 in
    v26[0] = v37 in
    let v187: [Float] = v54[2] in
    v13.p0 = v6 in
    v3.p1 = v19 in
    v50[0] = v30 in
    v42[0] = v187 in
    v42 = v75 in
    v58.p1 = v42 in
    let v149: s0 = f7(v73) in
    v13.p0 = v8 in
    v3.p0 = v11 in
    v149
  } in
  let noinline_f0: ([[s6]], s5, s2, Float) -> Float = (v0: [[s6]], v1: s5, v2: s2, v3: Float) -> Float {
    let v8: [s6] = v0[0] in
    let v6: s6 = v8[0] in
    let v13: s5 = v6.p1 in
    let v12: [[s3]] = v13.p1 in
    let v33: [s3] = v12[0] in
    let v10: [[s3]] = v1.p1 in
    var v24: s6 = v6 in
    let v49: s1 = v24.p0 in
    var v79: s5 = v1 in
    let v19: [s0] = v49.p1 in
    let v23: s0 = v79.p0 in
    let v61: s3 = v33[0] in
    let v41: s0 = v19[0] in
    let v65: s0 = f6(v61, v23) in
    v79.p1 = v10 in
    v79.p1 = v10 in
    let v48: s0 = f4(v41) in
    v79.p0 = v48 in
    let v164: [[Float]] = v65.p0 in
    let v139: [Float] = v164[0] in
    let v103: Float = v139[0] in
    v103
  } in
  fun loop(i: Int, v0: [[s6]], v1: s5, v2: s2, v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [[s6]] = [[s6(s1([[s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]])], [s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])]], [s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]]), s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]), s5(s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]]), [[s3(s2([[s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]])]], s1([[s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])], [s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])]], [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]]), s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]])])), s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]]))], [s3(s2([[s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]])]], s1([[s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])], [s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]])]], [s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]]), s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]])])), s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]]))]]))], [s6(s1([[s0([[102.0], [103.0], [104.0]], [[105.0], [106.0], [107.0]])], [s0([[108.0], [109.0], [110.0]], [[111.0], [112.0], [113.0]])]], [s0([[114.0], [115.0], [116.0]], [[117.0], [118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0], [125.0]])]), s5(s0([[126.0], [127.0], [128.0]], [[129.0], [130.0], [131.0]]), [[s3(s2([[s0([[132.0], [133.0], [134.0]], [[135.0], [136.0], [137.0]])]], s1([[s0([[138.0], [139.0], [140.0]], [[141.0], [142.0], [143.0]])], [s0([[144.0], [145.0], [146.0]], [[147.0], [148.0], [149.0]])]], [s0([[150.0], [151.0], [152.0]], [[153.0], [154.0], [155.0]]), s0([[156.0], [157.0], [158.0]], [[159.0], [160.0], [161.0]])])), s0([[162.0], [163.0], [164.0]], [[165.0], [166.0], [167.0]]))], [s3(s2([[s0([[168.0], [169.0], [170.0]], [[171.0], [172.0], [173.0]])]], s1([[s0([[174.0], [175.0], [176.0]], [[177.0], [178.0], [179.0]])], [s0([[180.0], [181.0], [182.0]], [[183.0], [184.0], [185.0]])]], [s0([[186.0], [187.0], [188.0]], [[189.0], [190.0], [191.0]]), s0([[192.0], [193.0], [194.0]], [[195.0], [196.0], [197.0]])])), s0([[198.0], [199.0], [200.0]], [[201.0], [202.0], [203.0]]))]]))]] in
    let v1: s5 = s5(s0([[204.0], [205.0], [206.0]], [[207.0], [208.0], [209.0]]), [[s3(s2([[s0([[210.0], [211.0], [212.0]], [[213.0], [214.0], [215.0]])]], s1([[s0([[216.0], [217.0], [218.0]], [[219.0], [220.0], [221.0]])], [s0([[222.0], [223.0], [224.0]], [[225.0], [226.0], [227.0]])]], [s0([[228.0], [229.0], [230.0]], [[231.0], [232.0], [233.0]]), s0([[234.0], [235.0], [236.0]], [[237.0], [238.0], [239.0]])])), s0([[240.0], [241.0], [242.0]], [[243.0], [244.0], [245.0]]))], [s3(s2([[s0([[246.0], [247.0], [248.0]], [[249.0], [250.0], [251.0]])]], s1([[s0([[252.0], [253.0], [254.0]], [[255.0], [256.0], [257.0]])], [s0([[258.0], [259.0], [260.0]], [[261.0], [262.0], [263.0]])]], [s0([[264.0], [265.0], [266.0]], [[267.0], [268.0], [269.0]]), s0([[270.0], [271.0], [272.0]], [[273.0], [274.0], [275.0]])])), s0([[276.0], [277.0], [278.0]], [[279.0], [280.0], [281.0]]))]]) in
    let v2: s2 = s2([[s0([[282.0], [283.0], [284.0]], [[285.0], [286.0], [287.0]])]], s1([[s0([[288.0], [289.0], [290.0]], [[291.0], [292.0], [293.0]])], [s0([[294.0], [295.0], [296.0]], [[297.0], [298.0], [299.0]])]], [s0([[300.0], [301.0], [302.0]], [[303.0], [304.0], [305.0]]), s0([[306.0], [307.0], [308.0]], [[309.0], [310.0], [311.0]])])) in
    let v3: Float = 312.0 in
    let initialResult: Float = 312.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()