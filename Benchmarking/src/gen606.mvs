  struct s0 {
    var p0: [[Float]]
    var p1: Float
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  let f21: (s0) -> s0 = (v0: s0) -> s0 {
    v0
  } in
  let f16: (s0) -> s0 = (v0: s0) -> s0 {
    var v4: s0 = v0 in
    let v1: Float = v4.p1 in
    let v8: [[Float]] = v4.p0 in
    var v3: [[Float]] = v8 in
    var v6: [[Float]] = v3 in
    v4.p1 = v1 in
    let v7: [Float] = v6[0] in
    let v9: [[Float]] = v0.p0 in
    let v15: Float = v7[0] in
    var v5: [[Float]] = v9 in
    var v10: Float = v1 in
    let v23: [[Float]] = [v7, v7, v7, v7, v7] in
    let v16: s0 = f21(v4) in
    let v12: [Float] = v23[4] in
    let v25: s0 = f21(v16) in
    let v14: [Float] = v8[0] in
    let v17: [[Float]] = v4.p0 in
    let v20: s0 = f21(v25) in
    let v19: Float = v7[0] in
    v4.p1 = v15 in
    let v29: Float = v15 * v15 in
    v4.p1 = v10 in
    let v39: [Float] = v23[4] in
    let v38: [[Float]] = v16.p0 in
    var v37: [[Float]] = v23 in
    let v42: Float = v20.p1 in
    let v24: [[Float]] = v0.p0 in
    var v35: [[Float]] = v17 in
    v4.p1 = v29 in
    v4.p1 = v42 in
    var v34: [[Float]] = v37 in
    v4.p0 = v24 in
    var v32: Float = v15 in
    let v51: [Float] = v5[1] in
    v6[0] = v12 in
    var v49: [[Float]] = v38 in
    v4.p0 = v35 in
    let v43: [Float] = v34[4] in
    let v31: Float = v29 * v19 in
    v37[0] = v12 in
    v37[3] = v14 in
    let v55: [[Float]] = v4.p0 in
    let v99: s0 = s0(v3, v31) in
    v4.p1 = v32 in
    var v86: [Float] = v39 in
    v35[1] = v7 in
    let v101: s0 = f21(v99) in
    v4.p0 = v55 in
    v5[1] = v43 in
    v34[1] = v12 in
    v34[0] = v7 in
    v3[1] = v51 in
    v4.p0 = v49 in
    v5[0] = v86 in
    v101
  } in
  let noinline_f0: (s0, s1, Float) -> Float = (v0: s0, v1: s1, v2: Float) -> Float {
    var v5: s0 = v0 in
    let v3: s0 = f16(v5) in
    var v7: s1 = v1 in
    let v10: [[Float]] = v3.p0 in
    v7 = v1 in
    var v11: [[Float]] = v10 in
    v11 = v10 in
    let v8: [Float] = v11[1] in
    v5.p1 = v2 in
    v11[0] = v8 in
    let v30: [[s0]] = v7.p1 in
    let v32: [s0] = v30[0] in
    let v23: s0 = v32[0] in
    v5 = v23 in
    v11[0] = v8 in
    v7 = v1 in
    let v38: Float = v8[0] in
    v38
  } in
  fun loop(i: Int, v0: s0, v1: s1, v2: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2) in
      loop(i + 1, v0, v1, v2, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0], [1.0]], 2.0) in
    let v1: s1 = s1(s0([[3.0], [4.0]], 5.0), [[s0([[6.0], [7.0]], 8.0)], [s0([[9.0], [10.0]], 11.0)]]) in
    let v2: Float = 12.0 in
    let initialResult: Float = 12.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()