  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [s0]
  } in
  struct s6 {
    var p0: Float
    var p1: [s1]
  } in
  struct s9 {
    var p0: [[s6]]
    var p1: [s0]
  } in
  struct s11 {
    var p0: s0
    var p1: s9
  } in
  let noinline_f0: ([s11], Float) -> Float = (v0: [s11], v1: Float) -> Float {
    var v7: [s11] = v0 in
    let v6: s11 = v7[0] in
    var v8: s11 = v6 in
    let v10: s9 = v8.p1 in
    v7[0] = v6 in
    var v9: [s11] = v0 in
    var v2: s9 = v10 in
    let v12: s0 = v6.p0 in
    let v21: s11 = v0[0] in
    let v11: s0 = v6.p0 in
    v7[1] = v21 in
    let v16: [[Float]] = v12.p1 in
    var v33: [s11] = v0 in
    var v19: [s11] = v33 in
    var v25: [s11] = v0 in
    let v27: [[s6]] = v10.p0 in
    v2.p0 = v27 in
    let v20: [Float] = v16[1] in
    let v38: s11 = v33[1] in
    var v51: s0 = v12 in
    let v48: s11 = s11(v11, v10) in
    let v26: s9 = v6.p1 in
    var v36: s11 = v48 in
    v2.p0 = v27 in
    v36.p1 = v10 in
    v36.p0 = v12 in
    let v39: s11 = v19[1] in
    let v30: [[Float]] = v51.p1 in
    v8.p1 = v26 in
    v8.p1 = v10 in
    let v43: s9 = v48.p1 in
    var v32: s0 = v51 in
    v7[1] = v36 in
    let v42: [[Float]] = v51.p0 in
    v7[0] = v38 in
    let v65: [s0] = v26.p1 in
    let v35: s9 = s9(v27, v65) in
    var v34: s0 = v32 in
    var v61: s11 = v48 in
    v34.p0 = v42 in
    v34.p1 = v30 in
    v2.p0 = v27 in
    let v28: [[s6]] = v43.p0 in
    let v58: s0 = v6.p0 in
    v2.p1 = v65 in
    let v81: s11 = v33[0] in
    var v40: [[Float]] = v30 in
    var v73: s11 = v81 in
    var v70: s0 = v51 in
    v36.p0 = v70 in
    let v63: s0 = v65[1] in
    var v80: [[Float]] = v40 in
    let v93: s11 = v33[0] in
    v36.p1 = v2 in
    let v31: [s6] = v28[2] in
    v25 = v9 in
    v61.p1 = v35 in
    let v74: [[Float]] = v34.p1 in
    let v52: s0 = v73.p0 in
    let v62: [[Float]] = v58.p1 in
    v34.p1 = v80 in
    let v90: [s0] = [v63, v70, v12, v34, v52] in
    var v69: [s0] = v65 in
    let v86: s6 = v31[0] in
    v40[0] = v20 in
    let v99: s0 = v39.p0 in
    v51.p0 = v42 in
    v32.p1 = v74 in
    v9[0] = v61 in
    v19[1] = v93 in
    let v123: s0 = v90[1] in
    var v68: [s0] = v69 in
    v36.p0 = v99 in
    v8.p0 = v51 in
    v51.p1 = v74 in
    v70.p1 = v30 in
    let v180: s11 = v25[0] in
    v8.p0 = v123 in
    v2.p1 = v68 in
    let v157: Float = v86.p0 in
    v7[1] = v180 in
    v80 = v62 in
    v157
  } in
  fun loop(i: Int, v0: [s11], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s11] = [s11(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0]]), s9([[s6(5.0, [s1(s0([[6.0], [7.0], [8.0]], [[9.0], [10.0]]), [s0([[11.0], [12.0], [13.0]], [[14.0], [15.0]]), s0([[16.0], [17.0], [18.0]], [[19.0], [20.0]]), s0([[21.0], [22.0], [23.0]], [[24.0], [25.0]])])])], [s6(26.0, [s1(s0([[27.0], [28.0], [29.0]], [[30.0], [31.0]]), [s0([[32.0], [33.0], [34.0]], [[35.0], [36.0]]), s0([[37.0], [38.0], [39.0]], [[40.0], [41.0]]), s0([[42.0], [43.0], [44.0]], [[45.0], [46.0]])])])], [s6(47.0, [s1(s0([[48.0], [49.0], [50.0]], [[51.0], [52.0]]), [s0([[53.0], [54.0], [55.0]], [[56.0], [57.0]]), s0([[58.0], [59.0], [60.0]], [[61.0], [62.0]]), s0([[63.0], [64.0], [65.0]], [[66.0], [67.0]])])])]], [s0([[68.0], [69.0], [70.0]], [[71.0], [72.0]]), s0([[73.0], [74.0], [75.0]], [[76.0], [77.0]])])), s11(s0([[78.0], [79.0], [80.0]], [[81.0], [82.0]]), s9([[s6(83.0, [s1(s0([[84.0], [85.0], [86.0]], [[87.0], [88.0]]), [s0([[89.0], [90.0], [91.0]], [[92.0], [93.0]]), s0([[94.0], [95.0], [96.0]], [[97.0], [98.0]]), s0([[99.0], [100.0], [101.0]], [[102.0], [103.0]])])])], [s6(104.0, [s1(s0([[105.0], [106.0], [107.0]], [[108.0], [109.0]]), [s0([[110.0], [111.0], [112.0]], [[113.0], [114.0]]), s0([[115.0], [116.0], [117.0]], [[118.0], [119.0]]), s0([[120.0], [121.0], [122.0]], [[123.0], [124.0]])])])], [s6(125.0, [s1(s0([[126.0], [127.0], [128.0]], [[129.0], [130.0]]), [s0([[131.0], [132.0], [133.0]], [[134.0], [135.0]]), s0([[136.0], [137.0], [138.0]], [[139.0], [140.0]]), s0([[141.0], [142.0], [143.0]], [[144.0], [145.0]])])])]], [s0([[146.0], [147.0], [148.0]], [[149.0], [150.0]]), s0([[151.0], [152.0], [153.0]], [[154.0], [155.0]])]))] in
    let v1: Float = 156.0 in
    let initialResult: Float = 156.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()