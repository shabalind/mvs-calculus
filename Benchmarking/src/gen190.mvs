  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s2 {
    var p0: s0
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: s2
  } in
  struct s4 {
    var p0: [s3]
  } in
  let f52: (Float) -> Float = (v0: Float) -> Float {
    var v1: Float = v0 in
    var v6: Float = v0 in
    var v5: Float = v1 in
    let v7: Float = v5 / v0 in
    let v3: [Float] = [v1, v7, v6, v0, v1, v5, v0] in
    var v13: [Float] = v3 in
    var v15: [Float] = v13 in
    v13[1] = v6 in
    v13[0] = v6 in
    let v10: Float = v15[0] in
    var v18: [Float] = v3 in
    var v23: [Float] = v15 in
    v18[0] = v10 in
    var v17: [Float] = v23 in
    let v24: Float = v23[0] in
    let v16: [[Float]] = [v23, v18, v15, v13] in
    v13[5] = v10 in
    var v14: [Float] = v13 in
    let v45: [Float] = v16[1] in
    let v20: Float = v15[6] in
    let v33: Float = v14[0] in
    let v28: [Float] = v16[3] in
    v18[4] = v33 in
    var v40: [Float] = v28 in
    let v37: [Float] = v16[0] in
    v14[4] = v24 in
    var v70: [Float] = v28 in
    let v39: [[Float]] = [v70, v13, v40, v70, v45, v37, v17] in
    let v32: [Float] = v39[3] in
    let v31: Float = v32[0] in
    let v103: Float = v40[5] in
    v40[0] = v20 in
    let v77: Float = v3[2] in
    v15[5] = v77 in
    v15[5] = v103 in
    v31
  } in
  let noinline_f0: (s2, [s4], [s2], Float) -> Float = (v0: s2, v1: [s4], v2: [s2], v3: Float) -> Float {
    var v5: Float = v3 in
    var v10: Float = v5 in
    let v4: Float = f52(v10) in
    v4
  } in
  fun loop(i: Int, v0: s2, v1: [s4], v2: [s2], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s2 = s2(s0([[0.0]], [[1.0]]), [s0([[2.0]], [[3.0]]), s0([[4.0]], [[5.0]]), s0([[6.0]], [[7.0]])]) in
    let v1: [s4] = [s4([s3(s2(s0([[8.0]], [[9.0]]), [s0([[10.0]], [[11.0]]), s0([[12.0]], [[13.0]]), s0([[14.0]], [[15.0]])]), s2(s0([[16.0]], [[17.0]]), [s0([[18.0]], [[19.0]]), s0([[20.0]], [[21.0]]), s0([[22.0]], [[23.0]])])), s3(s2(s0([[24.0]], [[25.0]]), [s0([[26.0]], [[27.0]]), s0([[28.0]], [[29.0]]), s0([[30.0]], [[31.0]])]), s2(s0([[32.0]], [[33.0]]), [s0([[34.0]], [[35.0]]), s0([[36.0]], [[37.0]]), s0([[38.0]], [[39.0]])]))])] in
    let v2: [s2] = [s2(s0([[40.0]], [[41.0]]), [s0([[42.0]], [[43.0]]), s0([[44.0]], [[45.0]]), s0([[46.0]], [[47.0]])])] in
    let v3: Float = 48.0 in
    let initialResult: Float = 48.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()