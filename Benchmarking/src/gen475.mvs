  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  let f50: (s0) -> s0 = (v0: s0) -> s0 {
    let v6: [[Float]] = v0.p0 in
    let v1: [Float] = v6[0] in
    let v5: [[Float]] = v0.p0 in
    var v2: s0 = v0 in
    var v7: [Float] = v1 in
    var v3: [Float] = v7 in
    let v11: [[Float]] = v2.p1 in
    let v4: [s0] = [v0, v2, v0, v2] in
    var v10: [[Float]] = v5 in
    v7 = v1 in
    var v8: [s0] = v4 in
    var v12: [[Float]] = v11 in
    let v14: [[Float]] = v0.p1 in
    v8[1] = v2 in
    let v21: [Float] = v12[2] in
    v8[0] = v0 in
    v8 = v4 in
    let v24: [Float] = v12[0] in
    var v15: [s0] = v8 in
    var v31: [[Float]] = v14 in
    v2.p1 = v12 in
    v31[1] = v7 in
    let v17: s0 = v15[1] in
    var v18: s0 = v17 in
    v2.p0 = v10 in
    let v26: [[Float]] = v18.p1 in
    v12[2] = v21 in
    let v45: s0 = s0(v5, v31) in
    v31[0] = v7 in
    v18.p1 = v31 in
    let v59: [[Float]] = v17.p0 in
    v31[1] = v24 in
    let v69: [[Float]] = v17.p1 in
    var v42: [[Float]] = v59 in
    v18.p1 = v69 in
    v15[1] = v45 in
    let v33: [Float] = v26[0] in
    v2.p0 = v42 in
    v31[1] = v3 in
    let v36: [[Float]] = v45.p0 in
    let v43: [[Float]] = v17.p1 in
    v2.p1 = v43 in
    var v46: [Float] = v7 in
    let v67: Float = v46[0] in
    v12[0] = v33 in
    var v98: Float = v67 in
    v2.p1 = v11 in
    v3[0] = v98 in
    v2.p0 = v36 in
    v18
  } in
  let f32: (s0) -> s0 = (v0: s0) -> s0 {
    let v8: s0 = f50(v0) in
    let v3: [[Float]] = v0.p0 in
    let v7: s0 = f50(v0) in
    let v5: [[Float]] = v8.p0 in
    let v15: [[Float]] = v8.p1 in
    var v6: s0 = v8 in
    let v2: [[Float]] = v6.p1 in
    let v11: s0 = s0(v3, v2) in
    let v19: [[Float]] = v11.p0 in
    v6 = v11 in
    let v9: s0 = f50(v8) in
    let v20: s0 = f50(v7) in
    let v24: [[Float]] = v8.p0 in
    var v12: s0 = v7 in
    var v25: s0 = v0 in
    let v18: s0 = f50(v0) in
    var v10: [[Float]] = v15 in
    let v36: s0 = f50(v0) in
    let v23: [Float] = v3[1] in
    let v17: [[Float]] = v25.p0 in
    let v14: s0 = f50(v0) in
    let v22: s0 = f50(v7) in
    var v29: [[Float]] = v17 in
    v10[2] = v23 in
    v10[1] = v23 in
    v29[0] = v23 in
    v6.p1 = v2 in
    var v43: [Float] = v23 in
    let v87: s0 = f50(v20) in
    v6.p1 = v15 in
    v25.p0 = v24 in
    v25.p0 = v5 in
    let v57: [[Float]] = v22.p1 in
    var v34: s0 = v12 in
    v6 = v14 in
    v29[0] = v23 in
    v6.p0 = v29 in
    let v64: s0 = f50(v9) in
    var v35: [Float] = v43 in
    let v30: s0 = f50(v87) in
    let v82: [[Float]] = v36.p1 in
    var v56: s0 = v36 in
    let v98: [[Float]] = v14.p0 in
    v12.p0 = v3 in
    let v83: [[Float]] = v7.p1 in
    let v69: [[Float]] = v56.p1 in
    let v71: [[Float]] = v12.p0 in
    v12.p1 = v82 in
    let v54: [[Float]] = v6.p0 in
    v6.p1 = v10 in
    let v74: s0 = f50(v30) in
    v29[1] = v35 in
    let v99: s0 = f50(v74) in
    let v283: [Float] = v98[1] in
    let v79: s0 = f50(v99) in
    v6.p1 = v57 in
    let v61: [[Float]] = v64.p1 in
    v12.p1 = v69 in
    v34.p1 = v83 in
    let v140: s0 = f50(v99) in
    var v150: [[Float]] = v82 in
    let v182: [[Float]] = v140.p0 in
    v56.p0 = v71 in
    v34.p0 = v98 in
    v56.p1 = v150 in
    v34.p1 = v15 in
    let v218: [[Float]] = v79.p0 in
    v25.p0 = v54 in
    v34.p1 = v61 in
    v34.p0 = v19 in
    v56.p0 = v218 in
    v29[1] = v283 in
    v25.p1 = v61 in
    v56 = v18 in
    v34.p0 = v182 in
    v34
  } in
  let noinline_f0: (Float, [s0]) -> Float = (v0: Float, v1: [s0]) -> Float {
    var v6: [s0] = v1 in
    var v4: [s0] = v6 in
    let v9: s0 = v1[1] in
    var v12: [s0] = v4 in
    let v14: s0 = v12[0] in
    let v3: s0 = f50(v9) in
    let v10: [[Float]] = v14.p0 in
    v4[1] = v3 in
    var v11: [s0] = v6 in
    let v24: [[[Float]]] = [v10, v10, v10, v10, v10, v10] in
    let v34: [[Float]] = v24[3] in
    let v23: s0 = v4[0] in
    let v22: s0 = f32(v23) in
    v6[1] = v22 in
    var v136: [[Float]] = v34 in
    let v49: [Float] = v136[1] in
    let v307: Float = v49[0] in
    v6 = v11 in
    var v359: Float = v307 in
    v359
  } in
  fun loop(i: Int, v0: Float, v1: [s0], result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: Float = 0.0 in
    let v1: [s0] = [s0([[1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0]], [[8.0], [9.0], [10.0]])] in
    let initialResult: Float = [s0([[1.0], [2.0]], [[3.0], [4.0], [5.0]]), s0([[6.0], [7.0]], [[8.0], [9.0], [10.0]])] in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()