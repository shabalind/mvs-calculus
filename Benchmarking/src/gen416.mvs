  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s5 {
    var p0: s1
    var p1: [s0]
  } in
  struct s6 {
    var p0: s5
    var p1: [s1]
  } in
  let f98: (s0) -> s0 = (v0: s0) -> s0 {
    var v7: s0 = v0 in
    var v19: s0 = v7 in
    v7 = v0 in
    v19
  } in
  let f95: (s0) -> s0 = (v0: s0) -> s0 {
    var v5: s0 = v0 in
    let v7: [s0] = [v0, v5, v5, v0] in
    let v2: s0 = v7[0] in
    let v6: s0 = v7[2] in
    let v8: s0 = f98(v2) in
    var v15: [s0] = v7 in
    let v13: [[Float]] = v2.p1 in
    let v10: s0 = v7[0] in
    let v12: s0 = v7[3] in
    let v14: [[Float]] = v2.p1 in
    let v9: [[Float]] = v6.p1 in
    v5.p0 = v13 in
    v15[2] = v8 in
    v5.p0 = v9 in
    var v25: [s0] = v7 in
    v25[3] = v6 in
    let v34: [[Float]] = v10.p1 in
    var v21: [[Float]] = v14 in
    let v30: [[Float]] = v10.p1 in
    let v11: s0 = v15[3] in
    v5.p1 = v30 in
    let v26: s0 = f98(v12) in
    v5.p0 = v21 in
    v25[3] = v8 in
    v5.p0 = v14 in
    let v37: s0 = f98(v26) in
    v5 = v8 in
    let v29: [[Float]] = v37.p0 in
    let v55: [[Float]] = v11.p1 in
    v5.p1 = v29 in
    v5.p1 = v9 in
    v5.p0 = v30 in
    let v60: [[Float]] = v6.p0 in
    let v50: [[Float]] = v2.p1 in
    var v44: [[Float]] = v21 in
    v25[0] = v8 in
    v5.p0 = v44 in
    v5.p0 = v34 in
    v5.p1 = v60 in
    v5.p0 = v50 in
    let v135: [Float] = v55[1] in
    let v61: s0 = v25[2] in
    v44[0] = v135 in
    v61
  } in
  let f59: (s0) -> s0 = (v0: s0) -> s0 {
    let v1: s0 = f98(v0) in
    let v3: s0 = f98(v1) in
    let v5: [[Float]] = v1.p1 in
    let v6: [[Float]] = v1.p0 in
    let v7: s0 = f95(v1) in
    let v2: s0 = f95(v3) in
    var v13: s0 = v7 in
    var v10: s0 = v13 in
    v13 = v2 in
    v10.p0 = v6 in
    v10.p1 = v6 in
    v13.p0 = v5 in
    let v18: [[Float]] = v7.p0 in
    v13.p0 = v6 in
    let v47: s0 = f95(v2) in
    v10.p0 = v18 in
    let v88: [[Float]] = v47.p1 in
    let v48: s0 = f98(v10) in
    v13.p0 = v88 in
    v48
  } in
  let noinline_f0: ([s6], Float) -> Float = (v0: [s6], v1: Float) -> Float {
    let v2: s6 = v0[0] in
    let v10: [s1] = v2.p1 in
    let v26: s1 = v10[2] in
    let v20: s0 = v26.p0 in
    let v18: s0 = f59(v20) in
    let v79: [[Float]] = v18.p1 in
    let v146: [Float] = v79[1] in
    var v105: [Float] = v146 in
    v105[0] = v1 in
    let v96: Float = v105[0] in
    v96
  } in
  fun loop(i: Int, v0: [s6], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s6] = [s6(s5(s1(s0([[0.0], [1.0], [2.0]], [[3.0], [4.0], [5.0]]), [[s0([[6.0], [7.0], [8.0]], [[9.0], [10.0], [11.0]])], [s0([[12.0], [13.0], [14.0]], [[15.0], [16.0], [17.0]])], [s0([[18.0], [19.0], [20.0]], [[21.0], [22.0], [23.0]])]]), [s0([[24.0], [25.0], [26.0]], [[27.0], [28.0], [29.0]])]), [s1(s0([[30.0], [31.0], [32.0]], [[33.0], [34.0], [35.0]]), [[s0([[36.0], [37.0], [38.0]], [[39.0], [40.0], [41.0]])], [s0([[42.0], [43.0], [44.0]], [[45.0], [46.0], [47.0]])], [s0([[48.0], [49.0], [50.0]], [[51.0], [52.0], [53.0]])]]), s1(s0([[54.0], [55.0], [56.0]], [[57.0], [58.0], [59.0]]), [[s0([[60.0], [61.0], [62.0]], [[63.0], [64.0], [65.0]])], [s0([[66.0], [67.0], [68.0]], [[69.0], [70.0], [71.0]])], [s0([[72.0], [73.0], [74.0]], [[75.0], [76.0], [77.0]])]]), s1(s0([[78.0], [79.0], [80.0]], [[81.0], [82.0], [83.0]]), [[s0([[84.0], [85.0], [86.0]], [[87.0], [88.0], [89.0]])], [s0([[90.0], [91.0], [92.0]], [[93.0], [94.0], [95.0]])], [s0([[96.0], [97.0], [98.0]], [[99.0], [100.0], [101.0]])]])])] in
    let v1: Float = 102.0 in
    let initialResult: Float = 102.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()