  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: s0
  } in
  struct s2 {
    var p0: [s1]
    var p1: [s0]
  } in
  let f78: (Float) -> Float = (v0: Float) -> Float {
    var v4: Float = v0 in
    v4 = v0 in
    var v6: Float = v0 in
    var v1: Float = v4 in
    var v8: Float = v6 in
    v4 = v0 in
    let v5: Float = v8 * v6 in
    v1 = v4 in
    var v2: Float = v1 in
    var v3: Float = v4 in
    var v15: Float = v0 in
    var v12: Float = v0 in
    let v32: [Float] = [v6, v12] in
    let v14: Float = v32[0] in
    var v18: [Float] = v32 in
    let v11: Float = v18[0] in
    let v13: Float = v18[0] in
    var v20: [Float] = v18 in
    let v30: Float = v20[0] in
    v20[1] = v13 in
    var v16: Float = v5 in
    v18[0] = v30 in
    var v28: [Float] = v32 in
    v28[0] = v30 in
    let v27: Float = v18[0] in
    v4 = v27 in
    let v26: [Float] = [v5, v1, v2, v16, v4, v14, v8] in
    v18[0] = v14 in
    var v36: [Float] = v18 in
    v18[1] = v14 in
    var v42: [Float] = v26 in
    v42[2] = v2 in
    let v35: Float = v26[2] in
    var v51: [Float] = v42 in
    v42[3] = v1 in
    let v65: Float = v42[4] in
    let v31: Float = v36[0] in
    let v43: [[Float]] = [v28, v20, v32] in
    v18[1] = v1 in
    var v59: [Float] = v51 in
    let v50: [Float] = v43[2] in
    v42[2] = v31 in
    var v33: [Float] = v36 in
    var v94: [[Float]] = v43 in
    v15 = v35 in
    var v99: [[Float]] = v43 in
    let v45: [Float] = v94[0] in
    var v39: [Float] = v18 in
    v59[6] = v5 in
    var v103: [[Float]] = v99 in
    v99 = v103 in
    v51[0] = v30 in
    v103[2] = v18 in
    v59[1] = v3 in
    var v130: [Float] = v50 in
    v130[1] = v1 in
    let v56: Float = v45[0] in
    let v104: [Float] = v103[2] in
    v51[0] = v56 in
    v94[0] = v104 in
    var v86: [Float] = v59 in
    v42[6] = v30 in
    v103[0] = v45 in
    v28[1] = v11 in
    var v126: [Float] = v36 in
    v99[0] = v32 in
    v86[0] = v65 in
    let v174: Float = v86[0] in
    v28 = v126 in
    v18 = v130 in
    v103 = v43 in
    v18[1] = v15 in
    v94[2] = v33 in
    v103[1] = v39 in
    v174
  } in
  let noinline_f0: ([s2], Float) -> Float = (v0: [s2], v1: Float) -> Float {
    var v29: Float = v1 in
    let v27: Float = f78(v29) in
    let v33: Float = f78(v27) in
    var v43: Float = v33 in
    v43
  } in
  fun loop(i: Int, v0: [s2], v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s2] = [s2([s1(s0([[0.0], [1.0]], [[2.0], [3.0], [4.0]]), s0([[5.0], [6.0]], [[7.0], [8.0], [9.0]]))], [s0([[10.0], [11.0]], [[12.0], [13.0], [14.0]])])] in
    let v1: Float = 15.0 in
    let initialResult: Float = 15.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()