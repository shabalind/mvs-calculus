  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s3 {
    var p0: [s0]
  } in
  struct s4 {
    var p0: [s1]
    var p1: s0
  } in
  struct s6 {
    var p0: [[s1]]
    var p1: [[s1]]
  } in
  struct s7 {
    var p0: s3
    var p1: s6
  } in
  let f7: (Float) -> Float = (v0: Float) -> Float {
    let v1: [Float] = [v0, v0, v0, v0] in
    var v4: [Float] = v1 in
    var v3: Float = v0 in
    let v6: Float = v1[3] in
    var v8: [Float] = v4 in
    v3 = v0 in
    var v5: [Float] = v4 in
    let v2: Float = v3 / v6 in
    v4[2] = v0 in
    v8[1] = v2 in
    let v11: Float = v4[3] in
    var v14: Float = v11 in
    let v18: Float = v5[2] in
    v4[0] = v3 in
    let v9: Float = v1[2] in
    v4[2] = v18 in
    var v23: Float = v14 in
    v4[3] = v2 in
    v8 = v5 in
    var v35: [Float] = v5 in
    let v10: Float = v35[3] in
    var v16: Float = v23 in
    let v32: [Float] = [v23, v6] in
    let v21: Float = v16 * v23 in
    var v22: Float = v10 in
    v5[2] = v11 in
    v5[2] = v11 in
    var v36: [Float] = v32 in
    let v24: Float = v8[3] in
    var v31: [Float] = v36 in
    let v52: Float = v31[0] in
    v5[1] = v24 in
    var v45: [Float] = v36 in
    var v66: [Float] = v45 in
    let v44: [[Float]] = [v66, v36] in
    let v46: [Float] = v44[0] in
    v31[1] = v21 in
    var v41: [[Float]] = v44 in
    v4[1] = v52 in
    v4[3] = v9 in
    let v139: [[[Float]]] = [v41, v44, v41, v41, v41] in
    let v143: Float = v46[0] in
    v23 = v21 in
    v8[1] = v22 in
    var v132: [Float] = v1 in
    let v72: [[Float]] = v139[2] in
    let v85: [Float] = v72[1] in
    v4[2] = v18 in
    let v167: Float = v85[0] in
    v8 = v132 in
    var v150: Float = v167 in
    v31[1] = v143 in
    v150
  } in
  let noinline_f0: ([s7], s1, [s7], [s4], [[s0]], s3, Float) -> Float = (v0: [s7], v1: s1, v2: [s7], v3: [s4], v4: [[s0]], v5: s3, v6: Float) -> Float {
    let v20: [s0] = v5.p0 in
    let v17: Float = f7(v6) in
    var v50: Float = v17 in
    var v77: [s0] = v20 in
    let v56: s0 = v77[1] in
    let v99: [[Float]] = v56.p0 in
    let v71: [Float] = v99[1] in
    let v113: Float = v71[0] in
    let v64: Float = v113 + v50 in
    var v107: Float = v64 in
    v107
  } in
  fun loop(i: Int, v0: [s7], v1: s1, v2: [s7], v3: [s4], v4: [[s0]], v5: s3, v6: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3, v4, v5, v6) in
      loop(i + 1, v0, v1, v2, v3, v4, v5, v6, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: [s7] = [s7(s3([s0([[0.0], [1.0]], [[2.0], [3.0]]), s0([[4.0], [5.0]], [[6.0], [7.0]])]), s6([[s1([s0([[8.0], [9.0]], [[10.0], [11.0]])], s0([[12.0], [13.0]], [[14.0], [15.0]]))], [s1([s0([[16.0], [17.0]], [[18.0], [19.0]])], s0([[20.0], [21.0]], [[22.0], [23.0]]))], [s1([s0([[24.0], [25.0]], [[26.0], [27.0]])], s0([[28.0], [29.0]], [[30.0], [31.0]]))]], [[s1([s0([[32.0], [33.0]], [[34.0], [35.0]])], s0([[36.0], [37.0]], [[38.0], [39.0]]))]])), s7(s3([s0([[40.0], [41.0]], [[42.0], [43.0]]), s0([[44.0], [45.0]], [[46.0], [47.0]])]), s6([[s1([s0([[48.0], [49.0]], [[50.0], [51.0]])], s0([[52.0], [53.0]], [[54.0], [55.0]]))], [s1([s0([[56.0], [57.0]], [[58.0], [59.0]])], s0([[60.0], [61.0]], [[62.0], [63.0]]))], [s1([s0([[64.0], [65.0]], [[66.0], [67.0]])], s0([[68.0], [69.0]], [[70.0], [71.0]]))]], [[s1([s0([[72.0], [73.0]], [[74.0], [75.0]])], s0([[76.0], [77.0]], [[78.0], [79.0]]))]]))] in
    let v1: s1 = s1([s0([[80.0], [81.0]], [[82.0], [83.0]])], s0([[84.0], [85.0]], [[86.0], [87.0]])) in
    let v2: [s7] = [s7(s3([s0([[88.0], [89.0]], [[90.0], [91.0]]), s0([[92.0], [93.0]], [[94.0], [95.0]])]), s6([[s1([s0([[96.0], [97.0]], [[98.0], [99.0]])], s0([[100.0], [101.0]], [[102.0], [103.0]]))], [s1([s0([[104.0], [105.0]], [[106.0], [107.0]])], s0([[108.0], [109.0]], [[110.0], [111.0]]))], [s1([s0([[112.0], [113.0]], [[114.0], [115.0]])], s0([[116.0], [117.0]], [[118.0], [119.0]]))]], [[s1([s0([[120.0], [121.0]], [[122.0], [123.0]])], s0([[124.0], [125.0]], [[126.0], [127.0]]))]])), s7(s3([s0([[128.0], [129.0]], [[130.0], [131.0]]), s0([[132.0], [133.0]], [[134.0], [135.0]])]), s6([[s1([s0([[136.0], [137.0]], [[138.0], [139.0]])], s0([[140.0], [141.0]], [[142.0], [143.0]]))], [s1([s0([[144.0], [145.0]], [[146.0], [147.0]])], s0([[148.0], [149.0]], [[150.0], [151.0]]))], [s1([s0([[152.0], [153.0]], [[154.0], [155.0]])], s0([[156.0], [157.0]], [[158.0], [159.0]]))]], [[s1([s0([[160.0], [161.0]], [[162.0], [163.0]])], s0([[164.0], [165.0]], [[166.0], [167.0]]))]]))] in
    let v3: [s4] = [s4([s1([s0([[168.0], [169.0]], [[170.0], [171.0]])], s0([[172.0], [173.0]], [[174.0], [175.0]])), s1([s0([[176.0], [177.0]], [[178.0], [179.0]])], s0([[180.0], [181.0]], [[182.0], [183.0]]))], s0([[184.0], [185.0]], [[186.0], [187.0]])), s4([s1([s0([[188.0], [189.0]], [[190.0], [191.0]])], s0([[192.0], [193.0]], [[194.0], [195.0]])), s1([s0([[196.0], [197.0]], [[198.0], [199.0]])], s0([[200.0], [201.0]], [[202.0], [203.0]]))], s0([[204.0], [205.0]], [[206.0], [207.0]]))] in
    let v4: [[s0]] = [[s0([[208.0], [209.0]], [[210.0], [211.0]])], [s0([[212.0], [213.0]], [[214.0], [215.0]])], [s0([[216.0], [217.0]], [[218.0], [219.0]])]] in
    let v5: s3 = s3([s0([[220.0], [221.0]], [[222.0], [223.0]]), s0([[224.0], [225.0]], [[226.0], [227.0]])]) in
    let v6: Float = 228.0 in
    let initialResult: Float = 228.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, v4, v5, v6, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()