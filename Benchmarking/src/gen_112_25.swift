  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [[Double]]
    var p1: [[s0]]
  }
  struct s2 {
    var p0: s1
    var p1: [s0]
  }
  struct s3 {
    var p0: s1
    var p1: [s1]
    var p2: [s0]
  }
  struct s4 {
    var p0: [s2]
    var p1: s1
    var p2: s3
    var p3: s0
    var p4: [[s1]]
    var p5: [s1]
    var p6: [[s0]]
    var p7: [s0]
  }
  struct s5 {
    var p0: s3
    var p1: [s4]
    var p2: [s0]
    var p3: s3
    var p4: [s0]
    var p5: s3
    var p6: s2
  }
  struct s7 {
    var p0: [s5]
    var p1: [s0]
  }
  func f1(_ v0: s0) -> s0 {
    var v8: s0 = v0
    var v9: s0 = v8
    return v9
  }
  @inline(never)
  func f0(_ v0: s7, _ v1: Double) -> Double {
    let v10: [s0] = v0.p1
    let v6: s0 = v10[0]
    let v3: s0 = f1(v6)
    let v11: [[Double]] = v3.p0
    let v13: [Double] = v11[0]
    let v25: Double = v13[0]
    let v40: Double = v13[0]
    let v101: Double = v25 - v40
    return v101
  }
  func benchmark() {
    let v0: s7 = s7(p0: [s5(p0: s3(p0: s1(p0: [[0.0], [1.0]], p1: [[s0(p0: [[2.0]], p1: [[3.0]])]]), p1: [s1(p0: [[4.0], [5.0]], p1: [[s0(p0: [[6.0]], p1: [[7.0]])]]), s1(p0: [[8.0], [9.0]], p1: [[s0(p0: [[10.0]], p1: [[11.0]])]])], p2: [s0(p0: [[12.0]], p1: [[13.0]]), s0(p0: [[14.0]], p1: [[15.0]]), s0(p0: [[16.0]], p1: [[17.0]])]), p1: [s4(p0: [s2(p0: s1(p0: [[18.0], [19.0]], p1: [[s0(p0: [[20.0]], p1: [[21.0]])]]), p1: [s0(p0: [[22.0]], p1: [[23.0]])])], p1: s1(p0: [[24.0], [25.0]], p1: [[s0(p0: [[26.0]], p1: [[27.0]])]]), p2: s3(p0: s1(p0: [[28.0], [29.0]], p1: [[s0(p0: [[30.0]], p1: [[31.0]])]]), p1: [s1(p0: [[32.0], [33.0]], p1: [[s0(p0: [[34.0]], p1: [[35.0]])]]), s1(p0: [[36.0], [37.0]], p1: [[s0(p0: [[38.0]], p1: [[39.0]])]])], p2: [s0(p0: [[40.0]], p1: [[41.0]]), s0(p0: [[42.0]], p1: [[43.0]]), s0(p0: [[44.0]], p1: [[45.0]])]), p3: s0(p0: [[46.0]], p1: [[47.0]]), p4: [[s1(p0: [[48.0], [49.0]], p1: [[s0(p0: [[50.0]], p1: [[51.0]])]])], [s1(p0: [[52.0], [53.0]], p1: [[s0(p0: [[54.0]], p1: [[55.0]])]])]], p5: [s1(p0: [[56.0], [57.0]], p1: [[s0(p0: [[58.0]], p1: [[59.0]])]])], p6: [[s0(p0: [[60.0]], p1: [[61.0]])], [s0(p0: [[62.0]], p1: [[63.0]])]], p7: [s0(p0: [[64.0]], p1: [[65.0]])]), s4(p0: [s2(p0: s1(p0: [[66.0], [67.0]], p1: [[s0(p0: [[68.0]], p1: [[69.0]])]]), p1: [s0(p0: [[70.0]], p1: [[71.0]])])], p1: s1(p0: [[72.0], [73.0]], p1: [[s0(p0: [[74.0]], p1: [[75.0]])]]), p2: s3(p0: s1(p0: [[76.0], [77.0]], p1: [[s0(p0: [[78.0]], p1: [[79.0]])]]), p1: [s1(p0: [[80.0], [81.0]], p1: [[s0(p0: [[82.0]], p1: [[83.0]])]]), s1(p0: [[84.0], [85.0]], p1: [[s0(p0: [[86.0]], p1: [[87.0]])]])], p2: [s0(p0: [[88.0]], p1: [[89.0]]), s0(p0: [[90.0]], p1: [[91.0]]), s0(p0: [[92.0]], p1: [[93.0]])]), p3: s0(p0: [[94.0]], p1: [[95.0]]), p4: [[s1(p0: [[96.0], [97.0]], p1: [[s0(p0: [[98.0]], p1: [[99.0]])]])], [s1(p0: [[100.0], [101.0]], p1: [[s0(p0: [[102.0]], p1: [[103.0]])]])]], p5: [s1(p0: [[104.0], [105.0]], p1: [[s0(p0: [[106.0]], p1: [[107.0]])]])], p6: [[s0(p0: [[108.0]], p1: [[109.0]])], [s0(p0: [[110.0]], p1: [[111.0]])]], p7: [s0(p0: [[112.0]], p1: [[113.0]])]), s4(p0: [s2(p0: s1(p0: [[114.0], [115.0]], p1: [[s0(p0: [[116.0]], p1: [[117.0]])]]), p1: [s0(p0: [[118.0]], p1: [[119.0]])])], p1: s1(p0: [[120.0], [121.0]], p1: [[s0(p0: [[122.0]], p1: [[123.0]])]]), p2: s3(p0: s1(p0: [[124.0], [125.0]], p1: [[s0(p0: [[126.0]], p1: [[127.0]])]]), p1: [s1(p0: [[128.0], [129.0]], p1: [[s0(p0: [[130.0]], p1: [[131.0]])]]), s1(p0: [[132.0], [133.0]], p1: [[s0(p0: [[134.0]], p1: [[135.0]])]])], p2: [s0(p0: [[136.0]], p1: [[137.0]]), s0(p0: [[138.0]], p1: [[139.0]]), s0(p0: [[140.0]], p1: [[141.0]])]), p3: s0(p0: [[142.0]], p1: [[143.0]]), p4: [[s1(p0: [[144.0], [145.0]], p1: [[s0(p0: [[146.0]], p1: [[147.0]])]])], [s1(p0: [[148.0], [149.0]], p1: [[s0(p0: [[150.0]], p1: [[151.0]])]])]], p5: [s1(p0: [[152.0], [153.0]], p1: [[s0(p0: [[154.0]], p1: [[155.0]])]])], p6: [[s0(p0: [[156.0]], p1: [[157.0]])], [s0(p0: [[158.0]], p1: [[159.0]])]], p7: [s0(p0: [[160.0]], p1: [[161.0]])])], p2: [s0(p0: [[162.0]], p1: [[163.0]])], p3: s3(p0: s1(p0: [[164.0], [165.0]], p1: [[s0(p0: [[166.0]], p1: [[167.0]])]]), p1: [s1(p0: [[168.0], [169.0]], p1: [[s0(p0: [[170.0]], p1: [[171.0]])]]), s1(p0: [[172.0], [173.0]], p1: [[s0(p0: [[174.0]], p1: [[175.0]])]])], p2: [s0(p0: [[176.0]], p1: [[177.0]]), s0(p0: [[178.0]], p1: [[179.0]]), s0(p0: [[180.0]], p1: [[181.0]])]), p4: [s0(p0: [[182.0]], p1: [[183.0]]), s0(p0: [[184.0]], p1: [[185.0]]), s0(p0: [[186.0]], p1: [[187.0]])], p5: s3(p0: s1(p0: [[188.0], [189.0]], p1: [[s0(p0: [[190.0]], p1: [[191.0]])]]), p1: [s1(p0: [[192.0], [193.0]], p1: [[s0(p0: [[194.0]], p1: [[195.0]])]]), s1(p0: [[196.0], [197.0]], p1: [[s0(p0: [[198.0]], p1: [[199.0]])]])], p2: [s0(p0: [[200.0]], p1: [[201.0]]), s0(p0: [[202.0]], p1: [[203.0]]), s0(p0: [[204.0]], p1: [[205.0]])]), p6: s2(p0: s1(p0: [[206.0], [207.0]], p1: [[s0(p0: [[208.0]], p1: [[209.0]])]]), p1: [s0(p0: [[210.0]], p1: [[211.0]])])), s5(p0: s3(p0: s1(p0: [[212.0], [213.0]], p1: [[s0(p0: [[214.0]], p1: [[215.0]])]]), p1: [s1(p0: [[216.0], [217.0]], p1: [[s0(p0: [[218.0]], p1: [[219.0]])]]), s1(p0: [[220.0], [221.0]], p1: [[s0(p0: [[222.0]], p1: [[223.0]])]])], p2: [s0(p0: [[224.0]], p1: [[225.0]]), s0(p0: [[226.0]], p1: [[227.0]]), s0(p0: [[228.0]], p1: [[229.0]])]), p1: [s4(p0: [s2(p0: s1(p0: [[230.0], [231.0]], p1: [[s0(p0: [[232.0]], p1: [[233.0]])]]), p1: [s0(p0: [[234.0]], p1: [[235.0]])])], p1: s1(p0: [[236.0], [237.0]], p1: [[s0(p0: [[238.0]], p1: [[239.0]])]]), p2: s3(p0: s1(p0: [[240.0], [241.0]], p1: [[s0(p0: [[242.0]], p1: [[243.0]])]]), p1: [s1(p0: [[244.0], [245.0]], p1: [[s0(p0: [[246.0]], p1: [[247.0]])]]), s1(p0: [[248.0], [249.0]], p1: [[s0(p0: [[250.0]], p1: [[251.0]])]])], p2: [s0(p0: [[252.0]], p1: [[253.0]]), s0(p0: [[254.0]], p1: [[255.0]]), s0(p0: [[256.0]], p1: [[257.0]])]), p3: s0(p0: [[258.0]], p1: [[259.0]]), p4: [[s1(p0: [[260.0], [261.0]], p1: [[s0(p0: [[262.0]], p1: [[263.0]])]])], [s1(p0: [[264.0], [265.0]], p1: [[s0(p0: [[266.0]], p1: [[267.0]])]])]], p5: [s1(p0: [[268.0], [269.0]], p1: [[s0(p0: [[270.0]], p1: [[271.0]])]])], p6: [[s0(p0: [[272.0]], p1: [[273.0]])], [s0(p0: [[274.0]], p1: [[275.0]])]], p7: [s0(p0: [[276.0]], p1: [[277.0]])]), s4(p0: [s2(p0: s1(p0: [[278.0], [279.0]], p1: [[s0(p0: [[280.0]], p1: [[281.0]])]]), p1: [s0(p0: [[282.0]], p1: [[283.0]])])], p1: s1(p0: [[284.0], [285.0]], p1: [[s0(p0: [[286.0]], p1: [[287.0]])]]), p2: s3(p0: s1(p0: [[288.0], [289.0]], p1: [[s0(p0: [[290.0]], p1: [[291.0]])]]), p1: [s1(p0: [[292.0], [293.0]], p1: [[s0(p0: [[294.0]], p1: [[295.0]])]]), s1(p0: [[296.0], [297.0]], p1: [[s0(p0: [[298.0]], p1: [[299.0]])]])], p2: [s0(p0: [[300.0]], p1: [[301.0]]), s0(p0: [[302.0]], p1: [[303.0]]), s0(p0: [[304.0]], p1: [[305.0]])]), p3: s0(p0: [[306.0]], p1: [[307.0]]), p4: [[s1(p0: [[308.0], [309.0]], p1: [[s0(p0: [[310.0]], p1: [[311.0]])]])], [s1(p0: [[312.0], [313.0]], p1: [[s0(p0: [[314.0]], p1: [[315.0]])]])]], p5: [s1(p0: [[316.0], [317.0]], p1: [[s0(p0: [[318.0]], p1: [[319.0]])]])], p6: [[s0(p0: [[320.0]], p1: [[321.0]])], [s0(p0: [[322.0]], p1: [[323.0]])]], p7: [s0(p0: [[324.0]], p1: [[325.0]])]), s4(p0: [s2(p0: s1(p0: [[326.0], [327.0]], p1: [[s0(p0: [[328.0]], p1: [[329.0]])]]), p1: [s0(p0: [[330.0]], p1: [[331.0]])])], p1: s1(p0: [[332.0], [333.0]], p1: [[s0(p0: [[334.0]], p1: [[335.0]])]]), p2: s3(p0: s1(p0: [[336.0], [337.0]], p1: [[s0(p0: [[338.0]], p1: [[339.0]])]]), p1: [s1(p0: [[340.0], [341.0]], p1: [[s0(p0: [[342.0]], p1: [[343.0]])]]), s1(p0: [[344.0], [345.0]], p1: [[s0(p0: [[346.0]], p1: [[347.0]])]])], p2: [s0(p0: [[348.0]], p1: [[349.0]]), s0(p0: [[350.0]], p1: [[351.0]]), s0(p0: [[352.0]], p1: [[353.0]])]), p3: s0(p0: [[354.0]], p1: [[355.0]]), p4: [[s1(p0: [[356.0], [357.0]], p1: [[s0(p0: [[358.0]], p1: [[359.0]])]])], [s1(p0: [[360.0], [361.0]], p1: [[s0(p0: [[362.0]], p1: [[363.0]])]])]], p5: [s1(p0: [[364.0], [365.0]], p1: [[s0(p0: [[366.0]], p1: [[367.0]])]])], p6: [[s0(p0: [[368.0]], p1: [[369.0]])], [s0(p0: [[370.0]], p1: [[371.0]])]], p7: [s0(p0: [[372.0]], p1: [[373.0]])])], p2: [s0(p0: [[374.0]], p1: [[375.0]])], p3: s3(p0: s1(p0: [[376.0], [377.0]], p1: [[s0(p0: [[378.0]], p1: [[379.0]])]]), p1: [s1(p0: [[380.0], [381.0]], p1: [[s0(p0: [[382.0]], p1: [[383.0]])]]), s1(p0: [[384.0], [385.0]], p1: [[s0(p0: [[386.0]], p1: [[387.0]])]])], p2: [s0(p0: [[388.0]], p1: [[389.0]]), s0(p0: [[390.0]], p1: [[391.0]]), s0(p0: [[392.0]], p1: [[393.0]])]), p4: [s0(p0: [[394.0]], p1: [[395.0]]), s0(p0: [[396.0]], p1: [[397.0]]), s0(p0: [[398.0]], p1: [[399.0]])], p5: s3(p0: s1(p0: [[400.0], [401.0]], p1: [[s0(p0: [[402.0]], p1: [[403.0]])]]), p1: [s1(p0: [[404.0], [405.0]], p1: [[s0(p0: [[406.0]], p1: [[407.0]])]]), s1(p0: [[408.0], [409.0]], p1: [[s0(p0: [[410.0]], p1: [[411.0]])]])], p2: [s0(p0: [[412.0]], p1: [[413.0]]), s0(p0: [[414.0]], p1: [[415.0]]), s0(p0: [[416.0]], p1: [[417.0]])]), p6: s2(p0: s1(p0: [[418.0], [419.0]], p1: [[s0(p0: [[420.0]], p1: [[421.0]])]]), p1: [s0(p0: [[422.0]], p1: [[423.0]])])), s5(p0: s3(p0: s1(p0: [[424.0], [425.0]], p1: [[s0(p0: [[426.0]], p1: [[427.0]])]]), p1: [s1(p0: [[428.0], [429.0]], p1: [[s0(p0: [[430.0]], p1: [[431.0]])]]), s1(p0: [[432.0], [433.0]], p1: [[s0(p0: [[434.0]], p1: [[435.0]])]])], p2: [s0(p0: [[436.0]], p1: [[437.0]]), s0(p0: [[438.0]], p1: [[439.0]]), s0(p0: [[440.0]], p1: [[441.0]])]), p1: [s4(p0: [s2(p0: s1(p0: [[442.0], [443.0]], p1: [[s0(p0: [[444.0]], p1: [[445.0]])]]), p1: [s0(p0: [[446.0]], p1: [[447.0]])])], p1: s1(p0: [[448.0], [449.0]], p1: [[s0(p0: [[450.0]], p1: [[451.0]])]]), p2: s3(p0: s1(p0: [[452.0], [453.0]], p1: [[s0(p0: [[454.0]], p1: [[455.0]])]]), p1: [s1(p0: [[456.0], [457.0]], p1: [[s0(p0: [[458.0]], p1: [[459.0]])]]), s1(p0: [[460.0], [461.0]], p1: [[s0(p0: [[462.0]], p1: [[463.0]])]])], p2: [s0(p0: [[464.0]], p1: [[465.0]]), s0(p0: [[466.0]], p1: [[467.0]]), s0(p0: [[468.0]], p1: [[469.0]])]), p3: s0(p0: [[470.0]], p1: [[471.0]]), p4: [[s1(p0: [[472.0], [473.0]], p1: [[s0(p0: [[474.0]], p1: [[475.0]])]])], [s1(p0: [[476.0], [477.0]], p1: [[s0(p0: [[478.0]], p1: [[479.0]])]])]], p5: [s1(p0: [[480.0], [481.0]], p1: [[s0(p0: [[482.0]], p1: [[483.0]])]])], p6: [[s0(p0: [[484.0]], p1: [[485.0]])], [s0(p0: [[486.0]], p1: [[487.0]])]], p7: [s0(p0: [[488.0]], p1: [[489.0]])]), s4(p0: [s2(p0: s1(p0: [[490.0], [491.0]], p1: [[s0(p0: [[492.0]], p1: [[493.0]])]]), p1: [s0(p0: [[494.0]], p1: [[495.0]])])], p1: s1(p0: [[496.0], [497.0]], p1: [[s0(p0: [[498.0]], p1: [[499.0]])]]), p2: s3(p0: s1(p0: [[500.0], [501.0]], p1: [[s0(p0: [[502.0]], p1: [[503.0]])]]), p1: [s1(p0: [[504.0], [505.0]], p1: [[s0(p0: [[506.0]], p1: [[507.0]])]]), s1(p0: [[508.0], [509.0]], p1: [[s0(p0: [[510.0]], p1: [[511.0]])]])], p2: [s0(p0: [[512.0]], p1: [[513.0]]), s0(p0: [[514.0]], p1: [[515.0]]), s0(p0: [[516.0]], p1: [[517.0]])]), p3: s0(p0: [[518.0]], p1: [[519.0]]), p4: [[s1(p0: [[520.0], [521.0]], p1: [[s0(p0: [[522.0]], p1: [[523.0]])]])], [s1(p0: [[524.0], [525.0]], p1: [[s0(p0: [[526.0]], p1: [[527.0]])]])]], p5: [s1(p0: [[528.0], [529.0]], p1: [[s0(p0: [[530.0]], p1: [[531.0]])]])], p6: [[s0(p0: [[532.0]], p1: [[533.0]])], [s0(p0: [[534.0]], p1: [[535.0]])]], p7: [s0(p0: [[536.0]], p1: [[537.0]])]), s4(p0: [s2(p0: s1(p0: [[538.0], [539.0]], p1: [[s0(p0: [[540.0]], p1: [[541.0]])]]), p1: [s0(p0: [[542.0]], p1: [[543.0]])])], p1: s1(p0: [[544.0], [545.0]], p1: [[s0(p0: [[546.0]], p1: [[547.0]])]]), p2: s3(p0: s1(p0: [[548.0], [549.0]], p1: [[s0(p0: [[550.0]], p1: [[551.0]])]]), p1: [s1(p0: [[552.0], [553.0]], p1: [[s0(p0: [[554.0]], p1: [[555.0]])]]), s1(p0: [[556.0], [557.0]], p1: [[s0(p0: [[558.0]], p1: [[559.0]])]])], p2: [s0(p0: [[560.0]], p1: [[561.0]]), s0(p0: [[562.0]], p1: [[563.0]]), s0(p0: [[564.0]], p1: [[565.0]])]), p3: s0(p0: [[566.0]], p1: [[567.0]]), p4: [[s1(p0: [[568.0], [569.0]], p1: [[s0(p0: [[570.0]], p1: [[571.0]])]])], [s1(p0: [[572.0], [573.0]], p1: [[s0(p0: [[574.0]], p1: [[575.0]])]])]], p5: [s1(p0: [[576.0], [577.0]], p1: [[s0(p0: [[578.0]], p1: [[579.0]])]])], p6: [[s0(p0: [[580.0]], p1: [[581.0]])], [s0(p0: [[582.0]], p1: [[583.0]])]], p7: [s0(p0: [[584.0]], p1: [[585.0]])])], p2: [s0(p0: [[586.0]], p1: [[587.0]])], p3: s3(p0: s1(p0: [[588.0], [589.0]], p1: [[s0(p0: [[590.0]], p1: [[591.0]])]]), p1: [s1(p0: [[592.0], [593.0]], p1: [[s0(p0: [[594.0]], p1: [[595.0]])]]), s1(p0: [[596.0], [597.0]], p1: [[s0(p0: [[598.0]], p1: [[599.0]])]])], p2: [s0(p0: [[600.0]], p1: [[601.0]]), s0(p0: [[602.0]], p1: [[603.0]]), s0(p0: [[604.0]], p1: [[605.0]])]), p4: [s0(p0: [[606.0]], p1: [[607.0]]), s0(p0: [[608.0]], p1: [[609.0]]), s0(p0: [[610.0]], p1: [[611.0]])], p5: s3(p0: s1(p0: [[612.0], [613.0]], p1: [[s0(p0: [[614.0]], p1: [[615.0]])]]), p1: [s1(p0: [[616.0], [617.0]], p1: [[s0(p0: [[618.0]], p1: [[619.0]])]]), s1(p0: [[620.0], [621.0]], p1: [[s0(p0: [[622.0]], p1: [[623.0]])]])], p2: [s0(p0: [[624.0]], p1: [[625.0]]), s0(p0: [[626.0]], p1: [[627.0]]), s0(p0: [[628.0]], p1: [[629.0]])]), p6: s2(p0: s1(p0: [[630.0], [631.0]], p1: [[s0(p0: [[632.0]], p1: [[633.0]])]]), p1: [s0(p0: [[634.0]], p1: [[635.0]])]))], p1: [s0(p0: [[636.0]], p1: [[637.0]]), s0(p0: [[638.0]], p1: [[639.0]])])
    let v1: Double = 640.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 640.0
    for _ in 1...1000 {
      result = f0(v0, v1)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
