  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: [s0]
    var p1: s0
  } in
  struct s2 {
    var p0: s1
    var p1: [s0]
  } in
  struct s3 {
    var p0: s2
    var p1: [s2]
  } in
  struct s4 {
    var p0: [s3]
    var p1: [s1]
  } in
  struct s5 {
    var p0: s3
    var p1: [Float]
  } in
  struct s6 {
    var p0: s4
    var p1: [s5]
  } in
  let f59: (s6, s5) -> s5 = (v0: s6, v1: s5) -> s5 {
    let v3: [s5] = v0.p1 in
    var v2: s6 = v0 in
    let v5: [s5] = v2.p1 in
    v2.p1 = v5 in
    v2.p1 = v5 in
    v2.p1 = v3 in
    var v32: [s5] = v5 in
    v32 = v3 in
    let v36: s5 = v32[1] in
    v36
  } in
  let noinline_f0: (s6, Float) -> Float = (v0: s6, v1: Float) -> Float {
    let v4: [s5] = v0.p1 in
    let v3: s5 = v4[1] in
    let v2: s5 = f59(v0, v3) in
    let v9: s5 = f59(v0, v2) in
    let v67: [Float] = v9.p1 in
    var v71: [Float] = v67 in
    v71 = v67 in
    let v63: Float = v71[1] in
    let v115: Float = v63 + v63 in
    v115
  } in
  fun loop(i: Int, v0: s6, v1: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1) in
      loop(i + 1, v0, v1, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s6 = s6(s4([s3(s2(s1([s0([[0.0]], [[1.0], [2.0], [3.0]])], s0([[4.0]], [[5.0], [6.0], [7.0]])), [s0([[8.0]], [[9.0], [10.0], [11.0]])]), [s2(s1([s0([[12.0]], [[13.0], [14.0], [15.0]])], s0([[16.0]], [[17.0], [18.0], [19.0]])), [s0([[20.0]], [[21.0], [22.0], [23.0]])])])], [s1([s0([[24.0]], [[25.0], [26.0], [27.0]])], s0([[28.0]], [[29.0], [30.0], [31.0]])), s1([s0([[32.0]], [[33.0], [34.0], [35.0]])], s0([[36.0]], [[37.0], [38.0], [39.0]]))]), [s5(s3(s2(s1([s0([[40.0]], [[41.0], [42.0], [43.0]])], s0([[44.0]], [[45.0], [46.0], [47.0]])), [s0([[48.0]], [[49.0], [50.0], [51.0]])]), [s2(s1([s0([[52.0]], [[53.0], [54.0], [55.0]])], s0([[56.0]], [[57.0], [58.0], [59.0]])), [s0([[60.0]], [[61.0], [62.0], [63.0]])])]), [64.0, 65.0]), s5(s3(s2(s1([s0([[66.0]], [[67.0], [68.0], [69.0]])], s0([[70.0]], [[71.0], [72.0], [73.0]])), [s0([[74.0]], [[75.0], [76.0], [77.0]])]), [s2(s1([s0([[78.0]], [[79.0], [80.0], [81.0]])], s0([[82.0]], [[83.0], [84.0], [85.0]])), [s0([[86.0]], [[87.0], [88.0], [89.0]])])]), [90.0, 91.0])]) in
    let v1: Float = 92.0 in
    let initialResult: Float = 92.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()