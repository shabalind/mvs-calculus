  struct s0 {
    var p0: [[Float]]
    var p1: [[Float]]
  } in
  struct s1 {
    var p0: s0
    var p1: [[s0]]
  } in
  struct s2 {
    var p0: [s0]
    var p1: s1
  } in
  struct s4 {
    var p0: s2
    var p1: [s0]
    var p2: s2
    var p3: [s1]
  } in
  let f89: (s0) -> s0 = (v0: s0) -> s0 {
    let v3: [[Float]] = v0.p0 in
    let v4: [s0] = [v0, v0, v0, v0] in
    let v1: [[Float]] = v0.p0 in
    var v5: s0 = v0 in
    v5.p0 = v3 in
    let v2: [Float] = v1[0] in
    var v8: [s0] = v4 in
    v5.p0 = v3 in
    let v13: [[Float]] = v5.p1 in
    let v10: [[[Float]]] = [v3, v3, v1, v1, v1] in
    let v9: [[Float]] = v0.p1 in
    let v19: [[Float]] = v10[3] in
    v5.p1 = v13 in
    v5.p0 = v1 in
    var v21: [[Float]] = v19 in
    v5.p0 = v19 in
    let v31: [[Float]] = v5.p1 in
    let v15: [[Float]] = v5.p1 in
    var v28: [[Float]] = v31 in
    let v16: [[Float]] = v5.p0 in
    let v39: [[Float]] = v0.p0 in
    v5.p0 = v39 in
    let v50: [[Float]] = v0.p1 in
    let v29: s0 = v8[3] in
    let v27: [[[Float]]] = [v28, v50, v28, v9, v28, v28] in
    let v20: [Float] = v9[0] in
    v5.p0 = v21 in
    var v44: [[Float]] = v50 in
    let v17: [[Float]] = v29.p1 in
    var v49: s0 = v0 in
    let v71: s0 = v4[0] in
    var v83: s0 = v49 in
    let v37: [[Float]] = v27[1] in
    v21[0] = v2 in
    let v72: [[Float]] = v5.p0 in
    let v38: [Float] = v16[0] in
    let v74: [[Float]] = v49.p1 in
    var v119: s0 = v83 in
    v83.p0 = v19 in
    v83.p0 = v16 in
    v119.p1 = v15 in
    v83.p0 = v72 in
    v119.p1 = v17 in
    v83.p1 = v31 in
    var v56: [Float] = v20 in
    v49.p1 = v31 in
    v49.p1 = v74 in
    v21[0] = v38 in
    v28[0] = v56 in
    var v58: s0 = v119 in
    v119.p1 = v37 in
    v83.p1 = v31 in
    v28[0] = v56 in
    v119.p0 = v19 in
    v49.p1 = v44 in
    v49 = v71 in
    v8[3] = v71 in
    v58
  } in
  let f12: (s0) -> s0 = (v0: s0) -> s0 {
    var v6: s0 = v0 in
    let v4: s0 = f89(v6) in
    let v10: s0 = f89(v4) in
    var v12: s0 = v10 in
    v12
  } in
  let noinline_f0: (s0, [[s4]], [s1], Float) -> Float = (v0: s0, v1: [[s4]], v2: [s1], v3: Float) -> Float {
    var v8: s0 = v0 in
    v8 = v0 in
    let v11: [[Float]] = v8.p1 in
    let v12: [Float] = v11[0] in
    v8.p1 = v11 in
    let v19: [[Float]] = v8.p0 in
    let v20: s0 = f12(v8) in
    var v16: s0 = v20 in
    v8.p0 = v19 in
    let v29: [[Float]] = v20.p0 in
    v16.p1 = v11 in
    let v51: Float = v12[0] in
    let v50: s0 = f89(v16) in
    let v95: Float = v51 - v3 in
    let v99: [[Float]] = v50.p1 in
    var v192: Float = v95 in
    v16.p0 = v29 in
    v8.p1 = v99 in
    v16.p1 = v99 in
    v192
  } in
  fun loop(i: Int, v0: s0, v1: [[s4]], v2: [s1], v3: Float, result: Float) -> Float {
    if i >= 1000 ? result ! (
      let newResult: Float = noinline_f0(v0, v1, v2, v3) in
      loop(i + 1, v0, v1, v2, v3, newResult)
    )
  } in
  let main: () -> Float = () -> Float {
    let v0: s0 = s0([[0.0]], [[1.0], [2.0]]) in
    let v1: [[s4]] = [[s4(s2([s0([[3.0]], [[4.0], [5.0]]), s0([[6.0]], [[7.0], [8.0]])], s1(s0([[9.0]], [[10.0], [11.0]]), [[s0([[12.0]], [[13.0], [14.0]])], [s0([[15.0]], [[16.0], [17.0]])], [s0([[18.0]], [[19.0], [20.0]])]])), [s0([[21.0]], [[22.0], [23.0]])], s2([s0([[24.0]], [[25.0], [26.0]]), s0([[27.0]], [[28.0], [29.0]])], s1(s0([[30.0]], [[31.0], [32.0]]), [[s0([[33.0]], [[34.0], [35.0]])], [s0([[36.0]], [[37.0], [38.0]])], [s0([[39.0]], [[40.0], [41.0]])]])), [s1(s0([[42.0]], [[43.0], [44.0]]), [[s0([[45.0]], [[46.0], [47.0]])], [s0([[48.0]], [[49.0], [50.0]])], [s0([[51.0]], [[52.0], [53.0]])]])])], [s4(s2([s0([[54.0]], [[55.0], [56.0]]), s0([[57.0]], [[58.0], [59.0]])], s1(s0([[60.0]], [[61.0], [62.0]]), [[s0([[63.0]], [[64.0], [65.0]])], [s0([[66.0]], [[67.0], [68.0]])], [s0([[69.0]], [[70.0], [71.0]])]])), [s0([[72.0]], [[73.0], [74.0]])], s2([s0([[75.0]], [[76.0], [77.0]]), s0([[78.0]], [[79.0], [80.0]])], s1(s0([[81.0]], [[82.0], [83.0]]), [[s0([[84.0]], [[85.0], [86.0]])], [s0([[87.0]], [[88.0], [89.0]])], [s0([[90.0]], [[91.0], [92.0]])]])), [s1(s0([[93.0]], [[94.0], [95.0]]), [[s0([[96.0]], [[97.0], [98.0]])], [s0([[99.0]], [[100.0], [101.0]])], [s0([[102.0]], [[103.0], [104.0]])]])])]] in
    let v2: [s1] = [s1(s0([[105.0]], [[106.0], [107.0]]), [[s0([[108.0]], [[109.0], [110.0]])], [s0([[111.0]], [[112.0], [113.0]])], [s0([[114.0]], [[115.0], [116.0]])]])] in
    let v3: Float = 117.0 in
    let initialResult: Float = 117.0 in
    let start: Float = uptime() in
    let result: Float = loop(0, v0, v1, v2, v3, initialResult) in
    let end: Float = uptime() in
    end - start
  } in
main()