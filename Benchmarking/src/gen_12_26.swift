  import Dispatch
  struct s0 {
    var p0: [[Double]]
    var p1: [[Double]]
  }
  struct s1 {
    var p0: [s0]
    var p1: [[s0]]
  }
  struct s2 {
    var p0: s0
    var p1: [s0]
  }
  struct s3 {
    var p0: [s1]
    var p1: [s0]
  }
  struct s5 {
    var p0: s1
    var p1: s1
    var p2: Double
  }
  struct s6 {
    var p0: [s0]
    var p1: [s1]
  }
  struct s7 {
    var p0: [s3]
    var p1: [[s2]]
    var p2: [s1]
  }
  struct s8 {
    var p0: s0
    var p1: [[s0]]
    var p2: s6
    var p3: [[s5]]
    var p4: [[s5]]
    var p5: [Double]
    var p6: s3
    var p7: s0
  }
  struct s9 {
    var p0: [[s2]]
    var p1: [s7]
  }
  func f54(_ v0: s6) -> s6 {
    let v7: [s1] = v0.p1
    let v10: [s0] = v0.p0
    let v37: s6 = s6(p0: v10, p1: v7)
    return v37
  }
  @inline(never)
  func f0(_ v0: s8, _ v1: [s7], _ v2: s6, _ v3: [[s9]], _ v4: [s7], _ v5: Double) -> Double {
    let v9: s6 = f54(v2)
    let v16: [s1] = v9.p1
    let v12: s1 = v16[2]
    let v28: [s0] = v12.p0
    let v59: Double = v5 * v5
    let v52: Double = v5 * v59
    var v103: s1 = v12
    let v89: s5 = s5(p0: v103, p1: v12, p2: v52)
    var v98: s5 = v89
    let v80: Double = v98.p2
    v103.p0 = v28
    return v80
  }
  func benchmark() {
    let v0: s8 = s8(p0: s0(p0: [[0.0]], p1: [[1.0]]), p1: [[s0(p0: [[2.0]], p1: [[3.0]])], [s0(p0: [[4.0]], p1: [[5.0]])], [s0(p0: [[6.0]], p1: [[7.0]])]], p2: s6(p0: [s0(p0: [[8.0]], p1: [[9.0]])], p1: [s1(p0: [s0(p0: [[10.0]], p1: [[11.0]]), s0(p0: [[12.0]], p1: [[13.0]])], p1: [[s0(p0: [[14.0]], p1: [[15.0]])], [s0(p0: [[16.0]], p1: [[17.0]])]]), s1(p0: [s0(p0: [[18.0]], p1: [[19.0]]), s0(p0: [[20.0]], p1: [[21.0]])], p1: [[s0(p0: [[22.0]], p1: [[23.0]])], [s0(p0: [[24.0]], p1: [[25.0]])]]), s1(p0: [s0(p0: [[26.0]], p1: [[27.0]]), s0(p0: [[28.0]], p1: [[29.0]])], p1: [[s0(p0: [[30.0]], p1: [[31.0]])], [s0(p0: [[32.0]], p1: [[33.0]])]])]), p3: [[s5(p0: s1(p0: [s0(p0: [[34.0]], p1: [[35.0]]), s0(p0: [[36.0]], p1: [[37.0]])], p1: [[s0(p0: [[38.0]], p1: [[39.0]])], [s0(p0: [[40.0]], p1: [[41.0]])]]), p1: s1(p0: [s0(p0: [[42.0]], p1: [[43.0]]), s0(p0: [[44.0]], p1: [[45.0]])], p1: [[s0(p0: [[46.0]], p1: [[47.0]])], [s0(p0: [[48.0]], p1: [[49.0]])]]), p2: 50.0)]], p4: [[s5(p0: s1(p0: [s0(p0: [[51.0]], p1: [[52.0]]), s0(p0: [[53.0]], p1: [[54.0]])], p1: [[s0(p0: [[55.0]], p1: [[56.0]])], [s0(p0: [[57.0]], p1: [[58.0]])]]), p1: s1(p0: [s0(p0: [[59.0]], p1: [[60.0]]), s0(p0: [[61.0]], p1: [[62.0]])], p1: [[s0(p0: [[63.0]], p1: [[64.0]])], [s0(p0: [[65.0]], p1: [[66.0]])]]), p2: 67.0)], [s5(p0: s1(p0: [s0(p0: [[68.0]], p1: [[69.0]]), s0(p0: [[70.0]], p1: [[71.0]])], p1: [[s0(p0: [[72.0]], p1: [[73.0]])], [s0(p0: [[74.0]], p1: [[75.0]])]]), p1: s1(p0: [s0(p0: [[76.0]], p1: [[77.0]]), s0(p0: [[78.0]], p1: [[79.0]])], p1: [[s0(p0: [[80.0]], p1: [[81.0]])], [s0(p0: [[82.0]], p1: [[83.0]])]]), p2: 84.0)], [s5(p0: s1(p0: [s0(p0: [[85.0]], p1: [[86.0]]), s0(p0: [[87.0]], p1: [[88.0]])], p1: [[s0(p0: [[89.0]], p1: [[90.0]])], [s0(p0: [[91.0]], p1: [[92.0]])]]), p1: s1(p0: [s0(p0: [[93.0]], p1: [[94.0]]), s0(p0: [[95.0]], p1: [[96.0]])], p1: [[s0(p0: [[97.0]], p1: [[98.0]])], [s0(p0: [[99.0]], p1: [[100.0]])]]), p2: 101.0)]], p5: [102.0, 103.0], p6: s3(p0: [s1(p0: [s0(p0: [[104.0]], p1: [[105.0]]), s0(p0: [[106.0]], p1: [[107.0]])], p1: [[s0(p0: [[108.0]], p1: [[109.0]])], [s0(p0: [[110.0]], p1: [[111.0]])]]), s1(p0: [s0(p0: [[112.0]], p1: [[113.0]]), s0(p0: [[114.0]], p1: [[115.0]])], p1: [[s0(p0: [[116.0]], p1: [[117.0]])], [s0(p0: [[118.0]], p1: [[119.0]])]])], p1: [s0(p0: [[120.0]], p1: [[121.0]])]), p7: s0(p0: [[122.0]], p1: [[123.0]]))
    let v1: [s7] = [s7(p0: [s3(p0: [s1(p0: [s0(p0: [[124.0]], p1: [[125.0]]), s0(p0: [[126.0]], p1: [[127.0]])], p1: [[s0(p0: [[128.0]], p1: [[129.0]])], [s0(p0: [[130.0]], p1: [[131.0]])]]), s1(p0: [s0(p0: [[132.0]], p1: [[133.0]]), s0(p0: [[134.0]], p1: [[135.0]])], p1: [[s0(p0: [[136.0]], p1: [[137.0]])], [s0(p0: [[138.0]], p1: [[139.0]])]])], p1: [s0(p0: [[140.0]], p1: [[141.0]])]), s3(p0: [s1(p0: [s0(p0: [[142.0]], p1: [[143.0]]), s0(p0: [[144.0]], p1: [[145.0]])], p1: [[s0(p0: [[146.0]], p1: [[147.0]])], [s0(p0: [[148.0]], p1: [[149.0]])]]), s1(p0: [s0(p0: [[150.0]], p1: [[151.0]]), s0(p0: [[152.0]], p1: [[153.0]])], p1: [[s0(p0: [[154.0]], p1: [[155.0]])], [s0(p0: [[156.0]], p1: [[157.0]])]])], p1: [s0(p0: [[158.0]], p1: [[159.0]])])], p1: [[s2(p0: s0(p0: [[160.0]], p1: [[161.0]]), p1: [s0(p0: [[162.0]], p1: [[163.0]])])], [s2(p0: s0(p0: [[164.0]], p1: [[165.0]]), p1: [s0(p0: [[166.0]], p1: [[167.0]])])]], p2: [s1(p0: [s0(p0: [[168.0]], p1: [[169.0]]), s0(p0: [[170.0]], p1: [[171.0]])], p1: [[s0(p0: [[172.0]], p1: [[173.0]])], [s0(p0: [[174.0]], p1: [[175.0]])]]), s1(p0: [s0(p0: [[176.0]], p1: [[177.0]]), s0(p0: [[178.0]], p1: [[179.0]])], p1: [[s0(p0: [[180.0]], p1: [[181.0]])], [s0(p0: [[182.0]], p1: [[183.0]])]]), s1(p0: [s0(p0: [[184.0]], p1: [[185.0]]), s0(p0: [[186.0]], p1: [[187.0]])], p1: [[s0(p0: [[188.0]], p1: [[189.0]])], [s0(p0: [[190.0]], p1: [[191.0]])]])])]
    let v2: s6 = s6(p0: [s0(p0: [[192.0]], p1: [[193.0]])], p1: [s1(p0: [s0(p0: [[194.0]], p1: [[195.0]]), s0(p0: [[196.0]], p1: [[197.0]])], p1: [[s0(p0: [[198.0]], p1: [[199.0]])], [s0(p0: [[200.0]], p1: [[201.0]])]]), s1(p0: [s0(p0: [[202.0]], p1: [[203.0]]), s0(p0: [[204.0]], p1: [[205.0]])], p1: [[s0(p0: [[206.0]], p1: [[207.0]])], [s0(p0: [[208.0]], p1: [[209.0]])]]), s1(p0: [s0(p0: [[210.0]], p1: [[211.0]]), s0(p0: [[212.0]], p1: [[213.0]])], p1: [[s0(p0: [[214.0]], p1: [[215.0]])], [s0(p0: [[216.0]], p1: [[217.0]])]])])
    let v3: [[s9]] = [[s9(p0: [[s2(p0: s0(p0: [[218.0]], p1: [[219.0]]), p1: [s0(p0: [[220.0]], p1: [[221.0]])])], [s2(p0: s0(p0: [[222.0]], p1: [[223.0]]), p1: [s0(p0: [[224.0]], p1: [[225.0]])])]], p1: [s7(p0: [s3(p0: [s1(p0: [s0(p0: [[226.0]], p1: [[227.0]]), s0(p0: [[228.0]], p1: [[229.0]])], p1: [[s0(p0: [[230.0]], p1: [[231.0]])], [s0(p0: [[232.0]], p1: [[233.0]])]]), s1(p0: [s0(p0: [[234.0]], p1: [[235.0]]), s0(p0: [[236.0]], p1: [[237.0]])], p1: [[s0(p0: [[238.0]], p1: [[239.0]])], [s0(p0: [[240.0]], p1: [[241.0]])]])], p1: [s0(p0: [[242.0]], p1: [[243.0]])]), s3(p0: [s1(p0: [s0(p0: [[244.0]], p1: [[245.0]]), s0(p0: [[246.0]], p1: [[247.0]])], p1: [[s0(p0: [[248.0]], p1: [[249.0]])], [s0(p0: [[250.0]], p1: [[251.0]])]]), s1(p0: [s0(p0: [[252.0]], p1: [[253.0]]), s0(p0: [[254.0]], p1: [[255.0]])], p1: [[s0(p0: [[256.0]], p1: [[257.0]])], [s0(p0: [[258.0]], p1: [[259.0]])]])], p1: [s0(p0: [[260.0]], p1: [[261.0]])])], p1: [[s2(p0: s0(p0: [[262.0]], p1: [[263.0]]), p1: [s0(p0: [[264.0]], p1: [[265.0]])])], [s2(p0: s0(p0: [[266.0]], p1: [[267.0]]), p1: [s0(p0: [[268.0]], p1: [[269.0]])])]], p2: [s1(p0: [s0(p0: [[270.0]], p1: [[271.0]]), s0(p0: [[272.0]], p1: [[273.0]])], p1: [[s0(p0: [[274.0]], p1: [[275.0]])], [s0(p0: [[276.0]], p1: [[277.0]])]]), s1(p0: [s0(p0: [[278.0]], p1: [[279.0]]), s0(p0: [[280.0]], p1: [[281.0]])], p1: [[s0(p0: [[282.0]], p1: [[283.0]])], [s0(p0: [[284.0]], p1: [[285.0]])]]), s1(p0: [s0(p0: [[286.0]], p1: [[287.0]]), s0(p0: [[288.0]], p1: [[289.0]])], p1: [[s0(p0: [[290.0]], p1: [[291.0]])], [s0(p0: [[292.0]], p1: [[293.0]])]])])])]]
    let v4: [s7] = [s7(p0: [s3(p0: [s1(p0: [s0(p0: [[294.0]], p1: [[295.0]]), s0(p0: [[296.0]], p1: [[297.0]])], p1: [[s0(p0: [[298.0]], p1: [[299.0]])], [s0(p0: [[300.0]], p1: [[301.0]])]]), s1(p0: [s0(p0: [[302.0]], p1: [[303.0]]), s0(p0: [[304.0]], p1: [[305.0]])], p1: [[s0(p0: [[306.0]], p1: [[307.0]])], [s0(p0: [[308.0]], p1: [[309.0]])]])], p1: [s0(p0: [[310.0]], p1: [[311.0]])]), s3(p0: [s1(p0: [s0(p0: [[312.0]], p1: [[313.0]]), s0(p0: [[314.0]], p1: [[315.0]])], p1: [[s0(p0: [[316.0]], p1: [[317.0]])], [s0(p0: [[318.0]], p1: [[319.0]])]]), s1(p0: [s0(p0: [[320.0]], p1: [[321.0]]), s0(p0: [[322.0]], p1: [[323.0]])], p1: [[s0(p0: [[324.0]], p1: [[325.0]])], [s0(p0: [[326.0]], p1: [[327.0]])]])], p1: [s0(p0: [[328.0]], p1: [[329.0]])])], p1: [[s2(p0: s0(p0: [[330.0]], p1: [[331.0]]), p1: [s0(p0: [[332.0]], p1: [[333.0]])])], [s2(p0: s0(p0: [[334.0]], p1: [[335.0]]), p1: [s0(p0: [[336.0]], p1: [[337.0]])])]], p2: [s1(p0: [s0(p0: [[338.0]], p1: [[339.0]]), s0(p0: [[340.0]], p1: [[341.0]])], p1: [[s0(p0: [[342.0]], p1: [[343.0]])], [s0(p0: [[344.0]], p1: [[345.0]])]]), s1(p0: [s0(p0: [[346.0]], p1: [[347.0]]), s0(p0: [[348.0]], p1: [[349.0]])], p1: [[s0(p0: [[350.0]], p1: [[351.0]])], [s0(p0: [[352.0]], p1: [[353.0]])]]), s1(p0: [s0(p0: [[354.0]], p1: [[355.0]]), s0(p0: [[356.0]], p1: [[357.0]])], p1: [[s0(p0: [[358.0]], p1: [[359.0]])], [s0(p0: [[360.0]], p1: [[361.0]])]])]), s7(p0: [s3(p0: [s1(p0: [s0(p0: [[362.0]], p1: [[363.0]]), s0(p0: [[364.0]], p1: [[365.0]])], p1: [[s0(p0: [[366.0]], p1: [[367.0]])], [s0(p0: [[368.0]], p1: [[369.0]])]]), s1(p0: [s0(p0: [[370.0]], p1: [[371.0]]), s0(p0: [[372.0]], p1: [[373.0]])], p1: [[s0(p0: [[374.0]], p1: [[375.0]])], [s0(p0: [[376.0]], p1: [[377.0]])]])], p1: [s0(p0: [[378.0]], p1: [[379.0]])]), s3(p0: [s1(p0: [s0(p0: [[380.0]], p1: [[381.0]]), s0(p0: [[382.0]], p1: [[383.0]])], p1: [[s0(p0: [[384.0]], p1: [[385.0]])], [s0(p0: [[386.0]], p1: [[387.0]])]]), s1(p0: [s0(p0: [[388.0]], p1: [[389.0]]), s0(p0: [[390.0]], p1: [[391.0]])], p1: [[s0(p0: [[392.0]], p1: [[393.0]])], [s0(p0: [[394.0]], p1: [[395.0]])]])], p1: [s0(p0: [[396.0]], p1: [[397.0]])])], p1: [[s2(p0: s0(p0: [[398.0]], p1: [[399.0]]), p1: [s0(p0: [[400.0]], p1: [[401.0]])])], [s2(p0: s0(p0: [[402.0]], p1: [[403.0]]), p1: [s0(p0: [[404.0]], p1: [[405.0]])])]], p2: [s1(p0: [s0(p0: [[406.0]], p1: [[407.0]]), s0(p0: [[408.0]], p1: [[409.0]])], p1: [[s0(p0: [[410.0]], p1: [[411.0]])], [s0(p0: [[412.0]], p1: [[413.0]])]]), s1(p0: [s0(p0: [[414.0]], p1: [[415.0]]), s0(p0: [[416.0]], p1: [[417.0]])], p1: [[s0(p0: [[418.0]], p1: [[419.0]])], [s0(p0: [[420.0]], p1: [[421.0]])]]), s1(p0: [s0(p0: [[422.0]], p1: [[423.0]]), s0(p0: [[424.0]], p1: [[425.0]])], p1: [[s0(p0: [[426.0]], p1: [[427.0]])], [s0(p0: [[428.0]], p1: [[429.0]])]])]), s7(p0: [s3(p0: [s1(p0: [s0(p0: [[430.0]], p1: [[431.0]]), s0(p0: [[432.0]], p1: [[433.0]])], p1: [[s0(p0: [[434.0]], p1: [[435.0]])], [s0(p0: [[436.0]], p1: [[437.0]])]]), s1(p0: [s0(p0: [[438.0]], p1: [[439.0]]), s0(p0: [[440.0]], p1: [[441.0]])], p1: [[s0(p0: [[442.0]], p1: [[443.0]])], [s0(p0: [[444.0]], p1: [[445.0]])]])], p1: [s0(p0: [[446.0]], p1: [[447.0]])]), s3(p0: [s1(p0: [s0(p0: [[448.0]], p1: [[449.0]]), s0(p0: [[450.0]], p1: [[451.0]])], p1: [[s0(p0: [[452.0]], p1: [[453.0]])], [s0(p0: [[454.0]], p1: [[455.0]])]]), s1(p0: [s0(p0: [[456.0]], p1: [[457.0]]), s0(p0: [[458.0]], p1: [[459.0]])], p1: [[s0(p0: [[460.0]], p1: [[461.0]])], [s0(p0: [[462.0]], p1: [[463.0]])]])], p1: [s0(p0: [[464.0]], p1: [[465.0]])])], p1: [[s2(p0: s0(p0: [[466.0]], p1: [[467.0]]), p1: [s0(p0: [[468.0]], p1: [[469.0]])])], [s2(p0: s0(p0: [[470.0]], p1: [[471.0]]), p1: [s0(p0: [[472.0]], p1: [[473.0]])])]], p2: [s1(p0: [s0(p0: [[474.0]], p1: [[475.0]]), s0(p0: [[476.0]], p1: [[477.0]])], p1: [[s0(p0: [[478.0]], p1: [[479.0]])], [s0(p0: [[480.0]], p1: [[481.0]])]]), s1(p0: [s0(p0: [[482.0]], p1: [[483.0]]), s0(p0: [[484.0]], p1: [[485.0]])], p1: [[s0(p0: [[486.0]], p1: [[487.0]])], [s0(p0: [[488.0]], p1: [[489.0]])]]), s1(p0: [s0(p0: [[490.0]], p1: [[491.0]]), s0(p0: [[492.0]], p1: [[493.0]])], p1: [[s0(p0: [[494.0]], p1: [[495.0]])], [s0(p0: [[496.0]], p1: [[497.0]])]])])]
    let v5: Double = 498.0
    let start = DispatchTime.now().uptimeNanoseconds
    var result: Double = 498.0
    for _ in 1...1000 {
      result = f0(v0, v1, v2, v3, v4, v5)
    }
    let end = DispatchTime.now().uptimeNanoseconds
    print(result)
    print(end - start)
  }
  benchmark()
