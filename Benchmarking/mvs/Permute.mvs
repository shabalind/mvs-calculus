fun swap(arr: inout [Int], i: Int, j: Int) -> Int {
  let tmp = arr[i] in
  arr[i] = arr[j] in
  arr[j] = tmp in
  0
} in 

fun permute(count: inout Int, arr: inout [Int], n: Int) -> Int {
  count = count + 1 in
  if n != 0 ? (
    let n1 = n - 1 in
    let dummy1: Int = permute(&count, &arr, n1) in
    fun loop(count: inout Int, arr: inout [Int], n1: Int, i: Int) -> Int {
      if i >= 0 ? (
        let dummy2: Int = swap(&arr, n1, i) in
        let dummy3: Int = permute(&count, &arr, n1) in
        let dummy4: Int = swap(&arr, n1, i) in

        loop(&count, &arr, n1, i - 1)
      ) ! 0
    } in
    loop(&count, &arr, n1, n1)
  ) ! 0
} in

fun run() -> Int {
  let n: Int = 6 in
  var arr: [Int] = [0, 0, 0, 0, 0, 0] in
  var count: Int = 0 in
  let dummy: Int = permute(&count, &arr, n) in
  count
} in

run()
